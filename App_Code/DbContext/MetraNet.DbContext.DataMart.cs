#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetraNet.DbContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Subscriptiondatamart")]
	public partial class DataMart : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSubscriptionTable(SubscriptionTable instance);
    partial void UpdateSubscriptionTable(SubscriptionTable instance);
    partial void DeleteSubscriptionTable(SubscriptionTable instance);
    #endregion
		
		public DataMart(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMart(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMart(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataMart(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Churn> Churn
		{
			get
			{
				return this.GetTable<Churn>();
			}
		}
		
		public System.Data.Linq.Table<Counters> Counters
		{
			get
			{
				return this.GetTable<Counters>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<RevenueRecognitionReport> RevenueRecognitionReport
		{
			get
			{
				return this.GetTable<RevenueRecognitionReport>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionPrice> SubscriptionPrice
		{
			get
			{
				return this.GetTable<SubscriptionPrice>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionRevRecDetails> SubscriptionRevRecDetails
		{
			get
			{
				return this.GetTable<SubscriptionRevRecDetails>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionsByMonth> SubscriptionsByMonth
		{
			get
			{
				return this.GetTable<SubscriptionsByMonth>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionSummary> SubscriptionSummary
		{
			get
			{
				return this.GetTable<SubscriptionSummary>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionTable> SubscriptionTable
		{
			get
			{
				return this.GetTable<SubscriptionTable>();
			}
		}
		
		public System.Data.Linq.Table<TerritorryCodeCSRMap> TerritorryCodeCSRMap
		{
			get
			{
				return this.GetTable<TerritorryCodeCSRMap>();
			}
		}
	}
	
	[Table(Name="dbo.Churn")]
	public partial class Churn
	{
		
		private System.Nullable<int> _SubscriptionId;
		
		private System.Nullable<System.DateTime> _ChurnDate;
		
		public Churn()
		{
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int")]
		public System.Nullable<int> SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this._SubscriptionId = value;
				}
			}
		}
		
		[Column(Storage="_ChurnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChurnDate
		{
			get
			{
				return this._ChurnDate;
			}
			set
			{
				if ((this._ChurnDate != value))
				{
					this._ChurnDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Counters")]
	public partial class Counters
	{
		
		private string _InstanceID;
		
		private System.Nullable<int> _SubscriptionID;
		
		private int _PayeeID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<int> _CycleDays;
		
		private System.Nullable<int> _UnitOfMeasure;
		
		private System.Nullable<int> _NumberOfBlocks;
		
		private decimal _UnitsConsumed;
		
		private System.Nullable<int> _DaysConsumed;
		
		private System.Nullable<decimal> _SubscriptionCharge;
		
		private System.Nullable<double> _ProrationFactor;
		
		private System.Nullable<double> _ProratedSubscriptionCharge;
		
		private decimal _BundledUnits;
		
		private System.Nullable<double> _ProratedBundledUnits;
		
		private System.Nullable<double> _ProratedBundledPricePerUnit;
		
		private System.Nullable<int> _IntervalID;
		
		private System.Nullable<double> _OveragePricePerUnit;
		
		private System.Nullable<double> _PricePerUnit;
		
		public Counters()
		{
		}
		
		[Column(Storage="_InstanceID", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this._InstanceID = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionID", DbType="Int")]
		public System.Nullable<int> SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this._SubscriptionID = value;
				}
			}
		}
		
		[Column(Storage="_PayeeID", DbType="Int NOT NULL")]
		public int PayeeID
		{
			get
			{
				return this._PayeeID;
			}
			set
			{
				if ((this._PayeeID != value))
				{
					this._PayeeID = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_CycleDays", DbType="Int")]
		public System.Nullable<int> CycleDays
		{
			get
			{
				return this._CycleDays;
			}
			set
			{
				if ((this._CycleDays != value))
				{
					this._CycleDays = value;
				}
			}
		}
		
		[Column(Storage="_UnitOfMeasure", DbType="Int")]
		public System.Nullable<int> UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure;
			}
			set
			{
				if ((this._UnitOfMeasure != value))
				{
					this._UnitOfMeasure = value;
				}
			}
		}
		
		[Column(Storage="_NumberOfBlocks", DbType="Int")]
		public System.Nullable<int> NumberOfBlocks
		{
			get
			{
				return this._NumberOfBlocks;
			}
			set
			{
				if ((this._NumberOfBlocks != value))
				{
					this._NumberOfBlocks = value;
				}
			}
		}
		
		[Column(Storage="_UnitsConsumed", DbType="Decimal(18,6) NOT NULL")]
		public decimal UnitsConsumed
		{
			get
			{
				return this._UnitsConsumed;
			}
			set
			{
				if ((this._UnitsConsumed != value))
				{
					this._UnitsConsumed = value;
				}
			}
		}
		
		[Column(Storage="_DaysConsumed", DbType="Int")]
		public System.Nullable<int> DaysConsumed
		{
			get
			{
				return this._DaysConsumed;
			}
			set
			{
				if ((this._DaysConsumed != value))
				{
					this._DaysConsumed = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionCharge", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> SubscriptionCharge
		{
			get
			{
				return this._SubscriptionCharge;
			}
			set
			{
				if ((this._SubscriptionCharge != value))
				{
					this._SubscriptionCharge = value;
				}
			}
		}
		
		[Column(Storage="_ProrationFactor", DbType="Float")]
		public System.Nullable<double> ProrationFactor
		{
			get
			{
				return this._ProrationFactor;
			}
			set
			{
				if ((this._ProrationFactor != value))
				{
					this._ProrationFactor = value;
				}
			}
		}
		
		[Column(Storage="_ProratedSubscriptionCharge", DbType="Float")]
		public System.Nullable<double> ProratedSubscriptionCharge
		{
			get
			{
				return this._ProratedSubscriptionCharge;
			}
			set
			{
				if ((this._ProratedSubscriptionCharge != value))
				{
					this._ProratedSubscriptionCharge = value;
				}
			}
		}
		
		[Column(Storage="_BundledUnits", DbType="Decimal(18,6) NOT NULL")]
		public decimal BundledUnits
		{
			get
			{
				return this._BundledUnits;
			}
			set
			{
				if ((this._BundledUnits != value))
				{
					this._BundledUnits = value;
				}
			}
		}
		
		[Column(Storage="_ProratedBundledUnits", DbType="Float")]
		public System.Nullable<double> ProratedBundledUnits
		{
			get
			{
				return this._ProratedBundledUnits;
			}
			set
			{
				if ((this._ProratedBundledUnits != value))
				{
					this._ProratedBundledUnits = value;
				}
			}
		}
		
		[Column(Storage="_ProratedBundledPricePerUnit", DbType="Float")]
		public System.Nullable<double> ProratedBundledPricePerUnit
		{
			get
			{
				return this._ProratedBundledPricePerUnit;
			}
			set
			{
				if ((this._ProratedBundledPricePerUnit != value))
				{
					this._ProratedBundledPricePerUnit = value;
				}
			}
		}
		
		[Column(Storage="_IntervalID", DbType="Int")]
		public System.Nullable<int> IntervalID
		{
			get
			{
				return this._IntervalID;
			}
			set
			{
				if ((this._IntervalID != value))
				{
					this._IntervalID = value;
				}
			}
		}
		
		[Column(Storage="_OveragePricePerUnit", DbType="Float")]
		public System.Nullable<double> OveragePricePerUnit
		{
			get
			{
				return this._OveragePricePerUnit;
			}
			set
			{
				if ((this._OveragePricePerUnit != value))
				{
					this._OveragePricePerUnit = value;
				}
			}
		}
		
		[Column(Storage="_PricePerUnit", DbType="Float")]
		public System.Nullable<double> PricePerUnit
		{
			get
			{
				return this._PricePerUnit;
			}
			set
			{
				if ((this._PricePerUnit != value))
				{
					this._PricePerUnit = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Customer")]
	public partial class Customer
	{
		
		private string _Instanceid;
		
		private int _AccountId;
		
		private string _ExternalId;
		
		private string _Name;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Territorycode;
		
		private string _ExternalCompanyId;
		
		private string _CompanyName;
		
		public Customer()
		{
		}
		
		[Column(Name="instanceid", Storage="_Instanceid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Instanceid
		{
			get
			{
				return this._Instanceid;
			}
			set
			{
				if ((this._Instanceid != value))
				{
					this._Instanceid = value;
				}
			}
		}
		
		[Column(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[Column(Storage="_ExternalId", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this._ExternalId = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[Column(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Storage="_ZipCode", DbType="NVarChar(40)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[Column(Storage="_Territorycode", DbType="NVarChar(8)")]
		public string Territorycode
		{
			get
			{
				return this._Territorycode;
			}
			set
			{
				if ((this._Territorycode != value))
				{
					this._Territorycode = value;
				}
			}
		}
		
		[Column(Storage="_ExternalCompanyId", DbType="NVarChar(255)")]
		public string ExternalCompanyId
		{
			get
			{
				return this._ExternalCompanyId;
			}
			set
			{
				if ((this._ExternalCompanyId != value))
				{
					this._ExternalCompanyId = value;
				}
			}
		}
		
		[Column(Storage="_CompanyName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RevenueRecognitionReport")]
	public partial class RevenueRecognitionReport
	{
		
		private System.Nullable<long> _Period;
		
		private System.Nullable<System.DateTime> _RecognitionDate;
		
		private System.Nullable<decimal> _DRAmount;
		
		private int _SubscriptionId;
		
		private System.Nullable<decimal> _Totalrevenue;
		
		private System.Nullable<int> _NumberOfContractMonths;
		
		private System.Nullable<int> _DaysInPeriod;
		
		public RevenueRecognitionReport()
		{
		}
		
		[Column(Storage="_Period", DbType="BigInt")]
		public System.Nullable<long> Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[Column(Storage="_RecognitionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecognitionDate
		{
			get
			{
				return this._RecognitionDate;
			}
			set
			{
				if ((this._RecognitionDate != value))
				{
					this._RecognitionDate = value;
				}
			}
		}
		
		[Column(Storage="_DRAmount", DbType="Decimal(38,14)")]
		public System.Nullable<decimal> DRAmount
		{
			get
			{
				return this._DRAmount;
			}
			set
			{
				if ((this._DRAmount != value))
				{
					this._DRAmount = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int NOT NULL")]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this._SubscriptionId = value;
				}
			}
		}
		
		[Column(Storage="_Totalrevenue", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> Totalrevenue
		{
			get
			{
				return this._Totalrevenue;
			}
			set
			{
				if ((this._Totalrevenue != value))
				{
					this._Totalrevenue = value;
				}
			}
		}
		
		[Column(Storage="_NumberOfContractMonths", DbType="Int")]
		public System.Nullable<int> NumberOfContractMonths
		{
			get
			{
				return this._NumberOfContractMonths;
			}
			set
			{
				if ((this._NumberOfContractMonths != value))
				{
					this._NumberOfContractMonths = value;
				}
			}
		}
		
		[Column(Storage="_DaysInPeriod", DbType="Int")]
		public System.Nullable<int> DaysInPeriod
		{
			get
			{
				return this._DaysInPeriod;
			}
			set
			{
				if ((this._DaysInPeriod != value))
				{
					this._DaysInPeriod = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SubscriptionPrice")]
	public partial class SubscriptionPrice
	{
		
		private string _InstanceId;
		
		private System.Nullable<int> _SubscriptionId;
		
		private System.Nullable<int> _AccountID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _Fee;
		
		private System.Nullable<decimal> _TotalContractValue;
		
		private System.Nullable<bool> _ProrateOnActivate;
		
		private System.Nullable<bool> _ProrateOnDeactivate;
		
		private System.Nullable<bool> _ProrateOnRateChange;
		
		private System.Nullable<System.DateTime> _New;
		
		private System.Nullable<System.DateTime> _RateChange;
		
		private System.Nullable<System.DateTime> _Cancelled;
		
		private System.Nullable<System.DateTime> _Churned;
		
		private System.Nullable<System.DateTime> _ReNew;
		
		private System.Nullable<decimal> _PriceChange;
		
		public SubscriptionPrice()
		{
		}
		
		[Column(Storage="_InstanceId", DbType="VarChar(50)")]
		public string InstanceId
		{
			get
			{
				return this._InstanceId;
			}
			set
			{
				if ((this._InstanceId != value))
				{
					this._InstanceId = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int")]
		public System.Nullable<int> SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this._SubscriptionId = value;
				}
			}
		}
		
		[Column(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[Column(Storage="_Fee", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this._Fee = value;
				}
			}
		}
		
		[Column(Storage="_TotalContractValue", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> TotalContractValue
		{
			get
			{
				return this._TotalContractValue;
			}
			set
			{
				if ((this._TotalContractValue != value))
				{
					this._TotalContractValue = value;
				}
			}
		}
		
		[Column(Storage="_ProrateOnActivate", DbType="Bit")]
		public System.Nullable<bool> ProrateOnActivate
		{
			get
			{
				return this._ProrateOnActivate;
			}
			set
			{
				if ((this._ProrateOnActivate != value))
				{
					this._ProrateOnActivate = value;
				}
			}
		}
		
		[Column(Storage="_ProrateOnDeactivate", DbType="Bit")]
		public System.Nullable<bool> ProrateOnDeactivate
		{
			get
			{
				return this._ProrateOnDeactivate;
			}
			set
			{
				if ((this._ProrateOnDeactivate != value))
				{
					this._ProrateOnDeactivate = value;
				}
			}
		}
		
		[Column(Storage="_ProrateOnRateChange", DbType="Bit")]
		public System.Nullable<bool> ProrateOnRateChange
		{
			get
			{
				return this._ProrateOnRateChange;
			}
			set
			{
				if ((this._ProrateOnRateChange != value))
				{
					this._ProrateOnRateChange = value;
				}
			}
		}
		
		[Column(Storage="_New", DbType="DateTime")]
		public System.Nullable<System.DateTime> New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this._New = value;
				}
			}
		}
		
		[Column(Storage="_RateChange", DbType="DateTime")]
		public System.Nullable<System.DateTime> RateChange
		{
			get
			{
				return this._RateChange;
			}
			set
			{
				if ((this._RateChange != value))
				{
					this._RateChange = value;
				}
			}
		}
		
		[Column(Storage="_Cancelled", DbType="DateTime")]
		public System.Nullable<System.DateTime> Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this._Cancelled = value;
				}
			}
		}
		
		[Column(Storage="_Churned", DbType="DateTime")]
		public System.Nullable<System.DateTime> Churned
		{
			get
			{
				return this._Churned;
			}
			set
			{
				if ((this._Churned != value))
				{
					this._Churned = value;
				}
			}
		}
		
		[Column(Storage="_ReNew", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReNew
		{
			get
			{
				return this._ReNew;
			}
			set
			{
				if ((this._ReNew != value))
				{
					this._ReNew = value;
				}
			}
		}
		
		[Column(Storage="_PriceChange", DbType="Decimal(19,0)")]
		public System.Nullable<decimal> PriceChange
		{
			get
			{
				return this._PriceChange;
			}
			set
			{
				if ((this._PriceChange != value))
				{
					this._PriceChange = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SubscriptionRevRecDetails")]
	public partial class SubscriptionRevRecDetails
	{
		
		private int _SubscriptionId;
		
		private int _RevenueCalculationPeriod;
		
		private int _RevenueRecognitionPeriod;
		
		private int _RevenueRecognitionDay;
		
		public SubscriptionRevRecDetails()
		{
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int NOT NULL")]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this._SubscriptionId = value;
				}
			}
		}
		
		[Column(Storage="_RevenueCalculationPeriod", DbType="Int NOT NULL")]
		public int RevenueCalculationPeriod
		{
			get
			{
				return this._RevenueCalculationPeriod;
			}
			set
			{
				if ((this._RevenueCalculationPeriod != value))
				{
					this._RevenueCalculationPeriod = value;
				}
			}
		}
		
		[Column(Storage="_RevenueRecognitionPeriod", DbType="Int NOT NULL")]
		public int RevenueRecognitionPeriod
		{
			get
			{
				return this._RevenueRecognitionPeriod;
			}
			set
			{
				if ((this._RevenueRecognitionPeriod != value))
				{
					this._RevenueRecognitionPeriod = value;
				}
			}
		}
		
		[Column(Storage="_RevenueRecognitionDay", DbType="Int NOT NULL")]
		public int RevenueRecognitionDay
		{
			get
			{
				return this._RevenueRecognitionDay;
			}
			set
			{
				if ((this._RevenueRecognitionDay != value))
				{
					this._RevenueRecognitionDay = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SubscriptionsByMonth")]
	public partial class SubscriptionsByMonth
	{
		
		private string _InstanceId;
		
		private System.Nullable<int> _SubscriptionId;
		
		private System.Nullable<System.DateTime> _Month;
		
		private System.Nullable<decimal> _MRR;
		
		private System.Nullable<decimal> _MRRNew;
		
		private System.Nullable<decimal> _MRRBase;
		
		private System.Nullable<decimal> _MRRRenewal;
		
		private System.Nullable<decimal> _MRRPriceChange;
		
		private System.Nullable<decimal> _MRRChurn;
		
		private System.Nullable<decimal> _MRRCancellation;
		
		private System.Nullable<decimal> _SubscriptionRevenue;
		
		private System.Nullable<int> _DaysInMonth;
		
		private System.Nullable<int> _DaysActiveInMonth;
		
		public SubscriptionsByMonth()
		{
		}
		
		[Column(Storage="_InstanceId", DbType="VarChar(50)")]
		public string InstanceId
		{
			get
			{
				return this._InstanceId;
			}
			set
			{
				if ((this._InstanceId != value))
				{
					this._InstanceId = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int")]
		public System.Nullable<int> SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this._SubscriptionId = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="DateTime")]
		public System.Nullable<System.DateTime> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[Column(Storage="_MRR", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRR
		{
			get
			{
				return this._MRR;
			}
			set
			{
				if ((this._MRR != value))
				{
					this._MRR = value;
				}
			}
		}
		
		[Column(Storage="_MRRNew", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRNew
		{
			get
			{
				return this._MRRNew;
			}
			set
			{
				if ((this._MRRNew != value))
				{
					this._MRRNew = value;
				}
			}
		}
		
		[Column(Storage="_MRRBase", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRBase
		{
			get
			{
				return this._MRRBase;
			}
			set
			{
				if ((this._MRRBase != value))
				{
					this._MRRBase = value;
				}
			}
		}
		
		[Column(Storage="_MRRRenewal", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRRenewal
		{
			get
			{
				return this._MRRRenewal;
			}
			set
			{
				if ((this._MRRRenewal != value))
				{
					this._MRRRenewal = value;
				}
			}
		}
		
		[Column(Storage="_MRRPriceChange", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRPriceChange
		{
			get
			{
				return this._MRRPriceChange;
			}
			set
			{
				if ((this._MRRPriceChange != value))
				{
					this._MRRPriceChange = value;
				}
			}
		}
		
		[Column(Storage="_MRRChurn", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRChurn
		{
			get
			{
				return this._MRRChurn;
			}
			set
			{
				if ((this._MRRChurn != value))
				{
					this._MRRChurn = value;
				}
			}
		}
		
		[Column(Storage="_MRRCancellation", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> MRRCancellation
		{
			get
			{
				return this._MRRCancellation;
			}
			set
			{
				if ((this._MRRCancellation != value))
				{
					this._MRRCancellation = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionRevenue", DbType="Decimal(19,6)")]
		public System.Nullable<decimal> SubscriptionRevenue
		{
			get
			{
				return this._SubscriptionRevenue;
			}
			set
			{
				if ((this._SubscriptionRevenue != value))
				{
					this._SubscriptionRevenue = value;
				}
			}
		}
		
		[Column(Storage="_DaysInMonth", DbType="Int")]
		public System.Nullable<int> DaysInMonth
		{
			get
			{
				return this._DaysInMonth;
			}
			set
			{
				if ((this._DaysInMonth != value))
				{
					this._DaysInMonth = value;
				}
			}
		}
		
		[Column(Storage="_DaysActiveInMonth", DbType="Int")]
		public System.Nullable<int> DaysActiveInMonth
		{
			get
			{
				return this._DaysActiveInMonth;
			}
			set
			{
				if ((this._DaysActiveInMonth != value))
				{
					this._DaysActiveInMonth = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SubscriptionSummary")]
	public partial class SubscriptionSummary
	{
		
		private string _InstanceId;
		
		private string _ProductCode;
		
		private System.Nullable<System.DateTime> _Month;
		
		private System.Nullable<int> _Subscriptions;
		
		private System.Nullable<int> _UniqueCustomers;
		
		private System.Nullable<int> _NewCustomers;
		
		private System.Nullable<decimal> _MRR;
		
		private System.Nullable<decimal> _MRRNew;
		
		private System.Nullable<decimal> _MRRNewPrimaryCurrency;
		
		private System.Nullable<decimal> _MRRBase;
		
		private System.Nullable<decimal> _MRRBasePrimaryCurrency;
		
		private System.Nullable<decimal> _MRRRenewal;
		
		private System.Nullable<decimal> _MRRRenewalPrimaryCurrency;
		
		private System.Nullable<decimal> _MRRPriceChange;
		
		private System.Nullable<decimal> _MRRPriceChangePrimaryCurrency;
		
		private System.Nullable<decimal> _MRRChurn;
		
		private System.Nullable<decimal> _MRRChurnPrimaryCurrency;
		
		private System.Nullable<decimal> _MRRCancellation;
		
		private System.Nullable<decimal> _MRRCancellationPrimaryCurrency;
		
		private System.Nullable<decimal> _SubscriptionRevenue;
		
		private System.Nullable<int> _DaysInMonth;
		
		public SubscriptionSummary()
		{
		}
		
		[Column(Storage="_InstanceId", DbType="VarChar(50)")]
		public string InstanceId
		{
			get
			{
				return this._InstanceId;
			}
			set
			{
				if ((this._InstanceId != value))
				{
					this._InstanceId = value;
				}
			}
		}
		
		[Column(Storage="_ProductCode", DbType="VarChar(50)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[Column(Storage="_Month", DbType="DateTime")]
		public System.Nullable<System.DateTime> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[Column(Storage="_Subscriptions", DbType="Int")]
		public System.Nullable<int> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				if ((this._Subscriptions != value))
				{
					this._Subscriptions = value;
				}
			}
		}
		
		[Column(Storage="_UniqueCustomers", DbType="Int")]
		public System.Nullable<int> UniqueCustomers
		{
			get
			{
				return this._UniqueCustomers;
			}
			set
			{
				if ((this._UniqueCustomers != value))
				{
					this._UniqueCustomers = value;
				}
			}
		}
		
		[Column(Storage="_NewCustomers", DbType="Int")]
		public System.Nullable<int> NewCustomers
		{
			get
			{
				return this._NewCustomers;
			}
			set
			{
				if ((this._NewCustomers != value))
				{
					this._NewCustomers = value;
				}
			}
		}
		
		[Column(Storage="_MRR", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRR
		{
			get
			{
				return this._MRR;
			}
			set
			{
				if ((this._MRR != value))
				{
					this._MRR = value;
				}
			}
		}
		
		[Column(Storage="_MRRNew", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRNew
		{
			get
			{
				return this._MRRNew;
			}
			set
			{
				if ((this._MRRNew != value))
				{
					this._MRRNew = value;
				}
			}
		}
		
		[Column(Storage="_MRRNewPrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRNewPrimaryCurrency
		{
			get
			{
				return this._MRRNewPrimaryCurrency;
			}
			set
			{
				if ((this._MRRNewPrimaryCurrency != value))
				{
					this._MRRNewPrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_MRRBase", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRBase
		{
			get
			{
				return this._MRRBase;
			}
			set
			{
				if ((this._MRRBase != value))
				{
					this._MRRBase = value;
				}
			}
		}
		
		[Column(Storage="_MRRBasePrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRBasePrimaryCurrency
		{
			get
			{
				return this._MRRBasePrimaryCurrency;
			}
			set
			{
				if ((this._MRRBasePrimaryCurrency != value))
				{
					this._MRRBasePrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_MRRRenewal", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRRenewal
		{
			get
			{
				return this._MRRRenewal;
			}
			set
			{
				if ((this._MRRRenewal != value))
				{
					this._MRRRenewal = value;
				}
			}
		}
		
		[Column(Storage="_MRRRenewalPrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRRenewalPrimaryCurrency
		{
			get
			{
				return this._MRRRenewalPrimaryCurrency;
			}
			set
			{
				if ((this._MRRRenewalPrimaryCurrency != value))
				{
					this._MRRRenewalPrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_MRRPriceChange", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRPriceChange
		{
			get
			{
				return this._MRRPriceChange;
			}
			set
			{
				if ((this._MRRPriceChange != value))
				{
					this._MRRPriceChange = value;
				}
			}
		}
		
		[Column(Storage="_MRRPriceChangePrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRPriceChangePrimaryCurrency
		{
			get
			{
				return this._MRRPriceChangePrimaryCurrency;
			}
			set
			{
				if ((this._MRRPriceChangePrimaryCurrency != value))
				{
					this._MRRPriceChangePrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_MRRChurn", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRChurn
		{
			get
			{
				return this._MRRChurn;
			}
			set
			{
				if ((this._MRRChurn != value))
				{
					this._MRRChurn = value;
				}
			}
		}
		
		[Column(Storage="_MRRChurnPrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRChurnPrimaryCurrency
		{
			get
			{
				return this._MRRChurnPrimaryCurrency;
			}
			set
			{
				if ((this._MRRChurnPrimaryCurrency != value))
				{
					this._MRRChurnPrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_MRRCancellation", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRCancellation
		{
			get
			{
				return this._MRRCancellation;
			}
			set
			{
				if ((this._MRRCancellation != value))
				{
					this._MRRCancellation = value;
				}
			}
		}
		
		[Column(Storage="_MRRCancellationPrimaryCurrency", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> MRRCancellationPrimaryCurrency
		{
			get
			{
				return this._MRRCancellationPrimaryCurrency;
			}
			set
			{
				if ((this._MRRCancellationPrimaryCurrency != value))
				{
					this._MRRCancellationPrimaryCurrency = value;
				}
			}
		}
		
		[Column(Storage="_SubscriptionRevenue", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> SubscriptionRevenue
		{
			get
			{
				return this._SubscriptionRevenue;
			}
			set
			{
				if ((this._SubscriptionRevenue != value))
				{
					this._SubscriptionRevenue = value;
				}
			}
		}
		
		[Column(Storage="_DaysInMonth", DbType="Int")]
		public System.Nullable<int> DaysInMonth
		{
			get
			{
				return this._DaysInMonth;
			}
			set
			{
				if ((this._DaysInMonth != value))
				{
					this._DaysInMonth = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.SubscriptionTable")]
	public partial class SubscriptionTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Instanceid;
		
		private int _SubscriptionId;
		
		private int _AgreementId;
		
		private int _AccountId;
		
		private int _CustomerId;
		
		private string _FeeCurrency;
		
		private System.Nullable<int> _CycleDuration;
		
		private System.Nullable<bool> _BilledInAdvance;
		
		private string _ProductCode;
		
		private System.Nullable<int> _SubscriptionStatus;
		
		private System.Nullable<System.DateTime> _SignedDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _CancellationDate;
		
		private System.Nullable<int> _PartitionId;
		
		private System.Nullable<int> _SalesRepId;
		
		private System.Nullable<int> _LifeDays;
		
		private System.Nullable<int> _LifeWeekDays;
		
		private int _NumberOfCounters;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstanceidChanging(string value);
    partial void OnInstanceidChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    partial void OnAgreementIdChanging(int value);
    partial void OnAgreementIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnFeeCurrencyChanging(string value);
    partial void OnFeeCurrencyChanged();
    partial void OnCycleDurationChanging(System.Nullable<int> value);
    partial void OnCycleDurationChanged();
    partial void OnBilledInAdvanceChanging(System.Nullable<bool> value);
    partial void OnBilledInAdvanceChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnSubscriptionStatusChanging(System.Nullable<int> value);
    partial void OnSubscriptionStatusChanged();
    partial void OnSignedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCancellationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancellationDateChanged();
    partial void OnPartitionIdChanging(System.Nullable<int> value);
    partial void OnPartitionIdChanged();
    partial void OnSalesRepIdChanging(System.Nullable<int> value);
    partial void OnSalesRepIdChanged();
    partial void OnLifeDaysChanging(System.Nullable<int> value);
    partial void OnLifeDaysChanged();
    partial void OnLifeWeekDaysChanging(System.Nullable<int> value);
    partial void OnLifeWeekDaysChanged();
    partial void OnNumberOfCountersChanging(int value);
    partial void OnNumberOfCountersChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SubscriptionTable()
		{
			OnCreated();
		}
		
		[Column(Name="instanceid", Storage="_Instanceid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Instanceid
		{
			get
			{
				return this._Instanceid;
			}
			set
			{
				if ((this._Instanceid != value))
				{
					this.OnInstanceidChanging(value);
					this.SendPropertyChanging();
					this._Instanceid = value;
					this.SendPropertyChanged("Instanceid");
					this.OnInstanceidChanged();
				}
			}
		}
		
		[Column(Storage="_SubscriptionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[Column(Storage="_AgreementId", DbType="Int NOT NULL")]
		public int AgreementId
		{
			get
			{
				return this._AgreementId;
			}
			set
			{
				if ((this._AgreementId != value))
				{
					this.OnAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._AgreementId = value;
					this.SendPropertyChanged("AgreementId");
					this.OnAgreementIdChanged();
				}
			}
		}
		
		[Column(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_FeeCurrency", DbType="Char(3)")]
		public string FeeCurrency
		{
			get
			{
				return this._FeeCurrency;
			}
			set
			{
				if ((this._FeeCurrency != value))
				{
					this.OnFeeCurrencyChanging(value);
					this.SendPropertyChanging();
					this._FeeCurrency = value;
					this.SendPropertyChanged("FeeCurrency");
					this.OnFeeCurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_CycleDuration", DbType="Int")]
		public System.Nullable<int> CycleDuration
		{
			get
			{
				return this._CycleDuration;
			}
			set
			{
				if ((this._CycleDuration != value))
				{
					this.OnCycleDurationChanging(value);
					this.SendPropertyChanging();
					this._CycleDuration = value;
					this.SendPropertyChanged("CycleDuration");
					this.OnCycleDurationChanged();
				}
			}
		}
		
		[Column(Storage="_BilledInAdvance", DbType="Bit")]
		public System.Nullable<bool> BilledInAdvance
		{
			get
			{
				return this._BilledInAdvance;
			}
			set
			{
				if ((this._BilledInAdvance != value))
				{
					this.OnBilledInAdvanceChanging(value);
					this.SendPropertyChanging();
					this._BilledInAdvance = value;
					this.SendPropertyChanged("BilledInAdvance");
					this.OnBilledInAdvanceChanged();
				}
			}
		}
		
		[Column(Storage="_ProductCode", DbType="VarChar(50)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SubscriptionStatus", DbType="Int")]
		public System.Nullable<int> SubscriptionStatus
		{
			get
			{
				return this._SubscriptionStatus;
			}
			set
			{
				if ((this._SubscriptionStatus != value))
				{
					this.OnSubscriptionStatusChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionStatus = value;
					this.SendPropertyChanged("SubscriptionStatus");
					this.OnSubscriptionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_SignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedDate
		{
			get
			{
				return this._SignedDate;
			}
			set
			{
				if ((this._SignedDate != value))
				{
					this.OnSignedDateChanging(value);
					this.SendPropertyChanging();
					this._SignedDate = value;
					this.SendPropertyChanged("SignedDate");
					this.OnSignedDateChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_CancellationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancellationDate
		{
			get
			{
				return this._CancellationDate;
			}
			set
			{
				if ((this._CancellationDate != value))
				{
					this.OnCancellationDateChanging(value);
					this.SendPropertyChanging();
					this._CancellationDate = value;
					this.SendPropertyChanged("CancellationDate");
					this.OnCancellationDateChanged();
				}
			}
		}
		
		[Column(Storage="_PartitionId", DbType="Int")]
		public System.Nullable<int> PartitionId
		{
			get
			{
				return this._PartitionId;
			}
			set
			{
				if ((this._PartitionId != value))
				{
					this.OnPartitionIdChanging(value);
					this.SendPropertyChanging();
					this._PartitionId = value;
					this.SendPropertyChanged("PartitionId");
					this.OnPartitionIdChanged();
				}
			}
		}
		
		[Column(Storage="_SalesRepId", DbType="Int")]
		public System.Nullable<int> SalesRepId
		{
			get
			{
				return this._SalesRepId;
			}
			set
			{
				if ((this._SalesRepId != value))
				{
					this.OnSalesRepIdChanging(value);
					this.SendPropertyChanging();
					this._SalesRepId = value;
					this.SendPropertyChanged("SalesRepId");
					this.OnSalesRepIdChanged();
				}
			}
		}
		
		[Column(Storage="_LifeDays", DbType="Int")]
		public System.Nullable<int> LifeDays
		{
			get
			{
				return this._LifeDays;
			}
			set
			{
				if ((this._LifeDays != value))
				{
					this.OnLifeDaysChanging(value);
					this.SendPropertyChanging();
					this._LifeDays = value;
					this.SendPropertyChanged("LifeDays");
					this.OnLifeDaysChanged();
				}
			}
		}
		
		[Column(Storage="_LifeWeekDays", DbType="Int")]
		public System.Nullable<int> LifeWeekDays
		{
			get
			{
				return this._LifeWeekDays;
			}
			set
			{
				if ((this._LifeWeekDays != value))
				{
					this.OnLifeWeekDaysChanging(value);
					this.SendPropertyChanging();
					this._LifeWeekDays = value;
					this.SendPropertyChanged("LifeWeekDays");
					this.OnLifeWeekDaysChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfCounters", DbType="Int NOT NULL")]
		public int NumberOfCounters
		{
			get
			{
				return this._NumberOfCounters;
			}
			set
			{
				if ((this._NumberOfCounters != value))
				{
					this.OnNumberOfCountersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfCounters = value;
					this.SendPropertyChanged("NumberOfCounters");
					this.OnNumberOfCountersChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(6)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TerritorryCodeCSRMap")]
	public partial class TerritorryCodeCSRMap
	{
		
		private string _C_firstname;
		
		private string _C_lastname;
		
		private string _C_email;
		
		private string _Territorycode;
		
		private System.Nullable<int> _Id_acc;
		
		public TerritorryCodeCSRMap()
		{
		}
		
		[Column(Name="c_firstname", Storage="_C_firstname", DbType="NVarChar(50)")]
		public string C_firstname
		{
			get
			{
				return this._C_firstname;
			}
			set
			{
				if ((this._C_firstname != value))
				{
					this._C_firstname = value;
				}
			}
		}
		
		[Column(Name="c_lastname", Storage="_C_lastname", DbType="NVarChar(50)")]
		public string C_lastname
		{
			get
			{
				return this._C_lastname;
			}
			set
			{
				if ((this._C_lastname != value))
				{
					this._C_lastname = value;
				}
			}
		}
		
		[Column(Name="c_email", Storage="_C_email", DbType="NVarChar(100)")]
		public string C_email
		{
			get
			{
				return this._C_email;
			}
			set
			{
				if ((this._C_email != value))
				{
					this._C_email = value;
				}
			}
		}
		
		[Column(Name="territorycode", Storage="_Territorycode", DbType="NVarChar(4000)")]
		public string Territorycode
		{
			get
			{
				return this._Territorycode;
			}
			set
			{
				if ((this._Territorycode != value))
				{
					this._Territorycode = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
