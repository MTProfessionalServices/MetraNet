#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetraNet.DbContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class NetMeter : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgg_aqg_map(Agg_aqg_map instance);
    partial void UpdateAgg_aqg_map(Agg_aqg_map instance);
    partial void DeleteAgg_aqg_map(Agg_aqg_map instance);
    partial void InsertAgg_boundary_group_acc_map(Agg_boundary_group_acc_map instance);
    partial void UpdateAgg_boundary_group_acc_map(Agg_boundary_group_acc_map instance);
    partial void DeleteAgg_boundary_group_acc_map(Agg_boundary_group_acc_map instance);
    partial void InsertAgg_boundary_group_aqg_map(Agg_boundary_group_aqg_map instance);
    partial void UpdateAgg_boundary_group_aqg_map(Agg_boundary_group_aqg_map instance);
    partial void DeleteAgg_boundary_group_aqg_map(Agg_boundary_group_aqg_map instance);
    partial void InsertAgg_boundary_groups(Agg_boundary_groups instance);
    partial void UpdateAgg_boundary_groups(Agg_boundary_groups instance);
    partial void DeleteAgg_boundary_groups(Agg_boundary_groups instance);
    partial void InsertAgg_charge_audit_trail(Agg_charge_audit_trail instance);
    partial void UpdateAgg_charge_audit_trail(Agg_charge_audit_trail instance);
    partial void DeleteAgg_charge_audit_trail(Agg_charge_audit_trail instance);
    partial void InsertAgg_decision_audit_trail(Agg_decision_audit_trail instance);
    partial void UpdateAgg_decision_audit_trail(Agg_decision_audit_trail instance);
    partial void DeleteAgg_decision_audit_trail(Agg_decision_audit_trail instance);
    partial void InsertAgg_decision_info(Agg_decision_info instance);
    partial void UpdateAgg_decision_info(Agg_decision_info instance);
    partial void DeleteAgg_decision_info(Agg_decision_info instance);
    partial void InsertAgg_decision_rollover(Agg_decision_rollover instance);
    partial void UpdateAgg_decision_rollover(Agg_decision_rollover instance);
    partial void DeleteAgg_decision_rollover(Agg_decision_rollover instance);
    partial void InsertAgg_field_formats(Agg_field_formats instance);
    partial void UpdateAgg_field_formats(Agg_field_formats instance);
    partial void DeleteAgg_field_formats(Agg_field_formats instance);
    partial void InsertAgg_param_name_map(Agg_param_name_map instance);
    partial void UpdateAgg_param_name_map(Agg_param_name_map instance);
    partial void DeleteAgg_param_name_map(Agg_param_name_map instance);
    partial void InsertAgg_pushed_usage(Agg_pushed_usage instance);
    partial void UpdateAgg_pushed_usage(Agg_pushed_usage instance);
    partial void DeleteAgg_pushed_usage(Agg_pushed_usage instance);
    partial void InsertAgg_usage_audit_trail(Agg_usage_audit_trail instance);
    partial void UpdateAgg_usage_audit_trail(Agg_usage_audit_trail instance);
    partial void DeleteAgg_usage_audit_trail(Agg_usage_audit_trail instance);
    partial void InsertCdc_Captured_columns(Cdc_Captured_columns instance);
    partial void UpdateCdc_Captured_columns(Cdc_Captured_columns instance);
    partial void DeleteCdc_Captured_columns(Cdc_Captured_columns instance);
    partial void InsertCdc_Change_tables(Cdc_Change_tables instance);
    partial void UpdateCdc_Change_tables(Cdc_Change_tables instance);
    partial void DeleteCdc_Change_tables(Cdc_Change_tables instance);
    partial void InsertCdc_Ddl_history(Cdc_Ddl_history instance);
    partial void UpdateCdc_Ddl_history(Cdc_Ddl_history instance);
    partial void DeleteCdc_Ddl_history(Cdc_Ddl_history instance);
    partial void InsertCdc_Index_columns(Cdc_Index_columns instance);
    partial void UpdateCdc_Index_columns(Cdc_Index_columns instance);
    partial void DeleteCdc_Index_columns(Cdc_Index_columns instance);
    partial void InsertCdc_Lsn_time_mapping(Cdc_Lsn_time_mapping instance);
    partial void UpdateCdc_Lsn_time_mapping(Cdc_Lsn_time_mapping instance);
    partial void DeleteCdc_Lsn_time_mapping(Cdc_Lsn_time_mapping instance);
    partial void InsertMetadata(Metadata instance);
    partial void UpdateMetadata(Metadata instance);
    partial void DeleteMetadata(Metadata instance);
    partial void InsertMvm_change_tracking_persistent(Mvm_change_tracking_persistent instance);
    partial void UpdateMvm_change_tracking_persistent(Mvm_change_tracking_persistent instance);
    partial void DeleteMvm_change_tracking_persistent(Mvm_change_tracking_persistent instance);
    partial void InsertMvm_change_tracking_status(Mvm_change_tracking_status instance);
    partial void UpdateMvm_change_tracking_status(Mvm_change_tracking_status instance);
    partial void DeleteMvm_change_tracking_status(Mvm_change_tracking_status instance);
    partial void InsertMvm_cluster_run_history(Mvm_cluster_run_history instance);
    partial void UpdateMvm_cluster_run_history(Mvm_cluster_run_history instance);
    partial void DeleteMvm_cluster_run_history(Mvm_cluster_run_history instance);
    partial void InsertMvm_logging(Mvm_logging instance);
    partial void UpdateMvm_logging(Mvm_logging instance);
    partial void DeleteMvm_logging(Mvm_logging instance);
    partial void InsertMvm_logical_cluster_def(Mvm_logical_cluster_def instance);
    partial void UpdateMvm_logical_cluster_def(Mvm_logical_cluster_def instance);
    partial void DeleteMvm_logical_cluster_def(Mvm_logical_cluster_def instance);
    partial void InsertMvm_physical_cluster_def(Mvm_physical_cluster_def instance);
    partial void UpdateMvm_physical_cluster_def(Mvm_physical_cluster_def instance);
    partial void DeleteMvm_physical_cluster_def(Mvm_physical_cluster_def instance);
    partial void InsertMvm_rabbitmq_map(Mvm_rabbitmq_map instance);
    partial void UpdateMvm_rabbitmq_map(Mvm_rabbitmq_map instance);
    partial void DeleteMvm_rabbitmq_map(Mvm_rabbitmq_map instance);
    partial void InsertMvm_resource_def(Mvm_resource_def instance);
    partial void UpdateMvm_resource_def(Mvm_resource_def instance);
    partial void DeleteMvm_resource_def(Mvm_resource_def instance);
    partial void InsertMvm_resource_nodes(Mvm_resource_nodes instance);
    partial void UpdateMvm_resource_nodes(Mvm_resource_nodes instance);
    partial void DeleteMvm_resource_nodes(Mvm_resource_nodes instance);
    partial void InsertMvm_scheduled_tasks(Mvm_scheduled_tasks instance);
    partial void UpdateMvm_scheduled_tasks(Mvm_scheduled_tasks instance);
    partial void DeleteMvm_scheduled_tasks(Mvm_scheduled_tasks instance);
    partial void InsertMvm_server_credentials(Mvm_server_credentials instance);
    partial void UpdateMvm_server_credentials(Mvm_server_credentials instance);
    partial void DeleteMvm_server_credentials(Mvm_server_credentials instance);
    partial void InsertMvm_temp_field_formats(Mvm_temp_field_formats instance);
    partial void UpdateMvm_temp_field_formats(Mvm_temp_field_formats instance);
    partial void DeleteMvm_temp_field_formats(Mvm_temp_field_formats instance);
    partial void InsertMvm_temp_field_numbers(Mvm_temp_field_numbers instance);
    partial void UpdateMvm_temp_field_numbers(Mvm_temp_field_numbers instance);
    partial void DeleteMvm_temp_field_numbers(Mvm_temp_field_numbers instance);
    partial void InsertMvm_temp_rcn(Mvm_temp_rcn instance);
    partial void UpdateMvm_temp_rcn(Mvm_temp_rcn instance);
    partial void DeleteMvm_temp_rcn(Mvm_temp_rcn instance);
    partial void InsertNotificationConfiguration(NotificationConfiguration instance);
    partial void UpdateNotificationConfiguration(NotificationConfiguration instance);
    partial void DeleteNotificationConfiguration(NotificationConfiguration instance);
    partial void InsertNotificationEndpoint(NotificationEndpoint instance);
    partial void UpdateNotificationEndpoint(NotificationEndpoint instance);
    partial void DeleteNotificationEndpoint(NotificationEndpoint instance);
    partial void InsertQuoteIndividualPrice(QuoteIndividualPrice instance);
    partial void UpdateQuoteIndividualPrice(QuoteIndividualPrice instance);
    partial void DeleteQuoteIndividualPrice(QuoteIndividualPrice instance);
    partial void InsertT_acc_ownership(T_acc_ownership instance);
    partial void UpdateT_acc_ownership(T_acc_ownership instance);
    partial void DeleteT_acc_ownership(T_acc_ownership instance);
    partial void InsertT_acc_template(T_acc_template instance);
    partial void UpdateT_acc_template(T_acc_template instance);
    partial void DeleteT_acc_template(T_acc_template instance);
    partial void InsertT_acc_template_props(T_acc_template_props instance);
    partial void UpdateT_acc_template_props(T_acc_template_props instance);
    partial void DeleteT_acc_template_props(T_acc_template_props instance);
    partial void InsertT_acc_template_props_pub(T_acc_template_props_pub instance);
    partial void UpdateT_acc_template_props_pub(T_acc_template_props_pub instance);
    partial void DeleteT_acc_template_props_pub(T_acc_template_props_pub instance);
    partial void InsertT_acc_template_session(T_acc_template_session instance);
    partial void UpdateT_acc_template_session(T_acc_template_session instance);
    partial void DeleteT_acc_template_session(T_acc_template_session instance);
    partial void InsertT_acc_template_session_detail(T_acc_template_session_detail instance);
    partial void UpdateT_acc_template_session_detail(T_acc_template_session_detail instance);
    partial void DeleteT_acc_template_session_detail(T_acc_template_session_detail instance);
    partial void InsertT_acc_tmpl_types(T_acc_tmpl_types instance);
    partial void UpdateT_acc_tmpl_types(T_acc_tmpl_types instance);
    partial void DeleteT_acc_tmpl_types(T_acc_tmpl_types instance);
    partial void InsertT_acc_usage(T_acc_usage instance);
    partial void UpdateT_acc_usage(T_acc_usage instance);
    partial void DeleteT_acc_usage(T_acc_usage instance);
    partial void InsertT_acc_usage_cycle(T_acc_usage_cycle instance);
    partial void UpdateT_acc_usage_cycle(T_acc_usage_cycle instance);
    partial void DeleteT_acc_usage_cycle(T_acc_usage_cycle instance);
    partial void InsertT_acc_usage_interval(T_acc_usage_interval instance);
    partial void UpdateT_acc_usage_interval(T_acc_usage_interval instance);
    partial void DeleteT_acc_usage_interval(T_acc_usage_interval instance);
    partial void InsertT_account(T_account instance);
    partial void UpdateT_account(T_account instance);
    partial void DeleteT_account(T_account instance);
    partial void InsertT_account_mapper(T_account_mapper instance);
    partial void UpdateT_account_mapper(T_account_mapper instance);
    partial void DeleteT_account_mapper(T_account_mapper instance);
    partial void InsertT_account_type(T_account_type instance);
    partial void UpdateT_account_type(T_account_type instance);
    partial void DeleteT_account_type(T_account_type instance);
    partial void InsertT_account_type_servicedef_map(T_account_type_servicedef_map instance);
    partial void UpdateT_account_type_servicedef_map(T_account_type_servicedef_map instance);
    partial void DeleteT_account_type_servicedef_map(T_account_type_servicedef_map instance);
    partial void InsertT_account_type_view_map(T_account_type_view_map instance);
    partial void UpdateT_account_type_view_map(T_account_type_view_map instance);
    partial void DeleteT_account_type_view_map(T_account_type_view_map instance);
    partial void InsertT_account_view_log(T_account_view_log instance);
    partial void UpdateT_account_view_log(T_account_view_log instance);
    partial void DeleteT_account_view_log(T_account_view_log instance);
    partial void InsertT_account_view_prop(T_account_view_prop instance);
    partial void UpdateT_account_view_prop(T_account_view_prop instance);
    partial void DeleteT_account_view_prop(T_account_view_prop instance);
    partial void InsertT_acctype_descendenttype_map(T_acctype_descendenttype_map instance);
    partial void UpdateT_acctype_descendenttype_map(T_acctype_descendenttype_map instance);
    partial void DeleteT_acctype_descendenttype_map(T_acctype_descendenttype_map instance);
    partial void InsertT_active_tickets(T_active_tickets instance);
    partial void UpdateT_active_tickets(T_active_tickets instance);
    partial void DeleteT_active_tickets(T_active_tickets instance);
    partial void InsertT_adjustment(T_adjustment instance);
    partial void UpdateT_adjustment(T_adjustment instance);
    partial void DeleteT_adjustment(T_adjustment instance);
    partial void InsertT_adjustment_transaction(T_adjustment_transaction instance);
    partial void UpdateT_adjustment_transaction(T_adjustment_transaction instance);
    partial void DeleteT_adjustment_transaction(T_adjustment_transaction instance);
    partial void InsertT_adjustment_type(T_adjustment_type instance);
    partial void UpdateT_adjustment_type(T_adjustment_type instance);
    partial void DeleteT_adjustment_type(T_adjustment_type instance);
    partial void InsertT_adjustment_type_prop(T_adjustment_type_prop instance);
    partial void UpdateT_adjustment_type_prop(T_adjustment_type_prop instance);
    partial void DeleteT_adjustment_type_prop(T_adjustment_type_prop instance);
    partial void InsertT_aggregate(T_aggregate instance);
    partial void UpdateT_aggregate(T_aggregate instance);
    partial void DeleteT_aggregate(T_aggregate instance);
    partial void InsertT_agr_template(T_agr_template instance);
    partial void UpdateT_agr_template(T_agr_template instance);
    partial void DeleteT_agr_template(T_agr_template instance);
    partial void InsertT_amp_accountqualgro(T_amp_accountqualgro instance);
    partial void UpdateT_amp_accountqualgro(T_amp_accountqualgro instance);
    partial void DeleteT_amp_accountqualgro(T_amp_accountqualgro instance);
    partial void InsertT_amp_accountqualifi(T_amp_accountqualifi instance);
    partial void UpdateT_amp_accountqualifi(T_amp_accountqualifi instance);
    partial void DeleteT_amp_accountqualifi(T_amp_accountqualifi instance);
    partial void InsertT_amp_amountchain(T_amp_amountchain instance);
    partial void UpdateT_amp_amountchain(T_amp_amountchain instance);
    partial void DeleteT_amp_amountchain(T_amp_amountchain instance);
    partial void InsertT_amp_amountchainfield(T_amp_amountchainfield instance);
    partial void UpdateT_amp_amountchainfield(T_amp_amountchainfield instance);
    partial void DeleteT_amp_amountchainfield(T_amp_amountchainfield instance);
    partial void InsertT_amp_chargeattribut(T_amp_chargeattribut instance);
    partial void UpdateT_amp_chargeattribut(T_amp_chargeattribut instance);
    partial void DeleteT_amp_chargeattribut(T_amp_chargeattribut instance);
    partial void InsertT_amp_chargedefiniti(T_amp_chargedefiniti instance);
    partial void UpdateT_amp_chargedefiniti(T_amp_chargedefiniti instance);
    partial void DeleteT_amp_chargedefiniti(T_amp_chargedefiniti instance);
    partial void InsertT_amp_chargequalgroup(T_amp_chargequalgroup instance);
    partial void UpdateT_amp_chargequalgroup(T_amp_chargequalgroup instance);
    partial void DeleteT_amp_chargequalgroup(T_amp_chargequalgroup instance);
    partial void InsertT_amp_chargequalific(T_amp_chargequalific instance);
    partial void UpdateT_amp_chargequalific(T_amp_chargequalific instance);
    partial void DeleteT_amp_chargequalific(T_amp_chargequalific instance);
    partial void InsertT_amp_decisionattrib(T_amp_decisionattrib instance);
    partial void UpdateT_amp_decisionattrib(T_amp_decisionattrib instance);
    partial void DeleteT_amp_decisionattrib(T_amp_decisionattrib instance);
    partial void InsertT_amp_decisionglobal(T_amp_decisionglobal instance);
    partial void UpdateT_amp_decisionglobal(T_amp_decisionglobal instance);
    partial void DeleteT_amp_decisionglobal(T_amp_decisionglobal instance);
    partial void InsertT_amp_decisiontype(T_amp_decisiontype instance);
    partial void UpdateT_amp_decisiontype(T_amp_decisiontype instance);
    partial void DeleteT_amp_decisiontype(T_amp_decisiontype instance);
    partial void InsertT_amp_genchargedirective(T_amp_genchargedirective instance);
    partial void UpdateT_amp_genchargedirective(T_amp_genchargedirective instance);
    partial void DeleteT_amp_genchargedirective(T_amp_genchargedirective instance);
    partial void InsertT_amp_generatedcharge(T_amp_generatedcharge instance);
    partial void UpdateT_amp_generatedcharge(T_amp_generatedcharge instance);
    partial void DeleteT_amp_generatedcharge(T_amp_generatedcharge instance);
    partial void InsertT_amp_pvtoamountchain(T_amp_pvtoamountchain instance);
    partial void UpdateT_amp_pvtoamountchain(T_amp_pvtoamountchain instance);
    partial void DeleteT_amp_pvtoamountchain(T_amp_pvtoamountchain instance);
    partial void InsertT_amp_usagechargefie(T_amp_usagechargefie instance);
    partial void UpdateT_amp_usagechargefie(T_amp_usagechargefie instance);
    partial void DeleteT_amp_usagechargefie(T_amp_usagechargefie instance);
    partial void InsertT_amp_usagequalgroup(T_amp_usagequalgroup instance);
    partial void UpdateT_amp_usagequalgroup(T_amp_usagequalgroup instance);
    partial void DeleteT_amp_usagequalgroup(T_amp_usagequalgroup instance);
    partial void InsertT_amp_usagequalifica(T_amp_usagequalifica instance);
    partial void UpdateT_amp_usagequalifica(T_amp_usagequalifica instance);
    partial void DeleteT_amp_usagequalifica(T_amp_usagequalifica instance);
    partial void InsertT_applicability_rule(T_applicability_rule instance);
    partial void UpdateT_applicability_rule(T_applicability_rule instance);
    partial void DeleteT_applicability_rule(T_applicability_rule instance);
    partial void InsertT_approvals(T_approvals instance);
    partial void UpdateT_approvals(T_approvals instance);
    partial void DeleteT_approvals(T_approvals instance);
    partial void InsertT_ar_gl_batch(T_ar_gl_batch instance);
    partial void UpdateT_ar_gl_batch(T_ar_gl_batch instance);
    partial void DeleteT_ar_gl_batch(T_ar_gl_batch instance);
    partial void InsertT_archive_queue_partition(T_archive_queue_partition instance);
    partial void UpdateT_archive_queue_partition(T_archive_queue_partition instance);
    partial void DeleteT_archive_queue_partition(T_archive_queue_partition instance);
    partial void InsertT_atomic_capability_type(T_atomic_capability_type instance);
    partial void UpdateT_atomic_capability_type(T_atomic_capability_type instance);
    partial void DeleteT_atomic_capability_type(T_atomic_capability_type instance);
    partial void InsertT_audit(T_audit instance);
    partial void UpdateT_audit(T_audit instance);
    partial void DeleteT_audit(T_audit instance);
    partial void InsertT_audit_details(T_audit_details instance);
    partial void UpdateT_audit_details(T_audit_details instance);
    partial void DeleteT_audit_details(T_audit_details instance);
    partial void InsertT_audit_events(T_audit_events instance);
    partial void UpdateT_audit_events(T_audit_events instance);
    partial void DeleteT_audit_events(T_audit_events instance);
    partial void InsertT_av_Contact(T_av_Contact instance);
    partial void UpdateT_av_Contact(T_av_Contact instance);
    partial void DeleteT_av_Contact(T_av_Contact instance);
    partial void InsertT_av_GSM(T_av_GSM instance);
    partial void UpdateT_av_GSM(T_av_GSM instance);
    partial void DeleteT_av_GSM(T_av_GSM instance);
    partial void InsertT_av_Internal(T_av_Internal instance);
    partial void UpdateT_av_Internal(T_av_Internal instance);
    partial void DeleteT_av_Internal(T_av_Internal instance);
    partial void InsertT_base_props(T_base_props instance);
    partial void UpdateT_base_props(T_base_props instance);
    partial void DeleteT_base_props(T_base_props instance);
    partial void InsertT_batch(T_batch instance);
    partial void UpdateT_batch(T_batch instance);
    partial void DeleteT_batch(T_batch instance);
    partial void InsertT_batch_history(T_batch_history instance);
    partial void UpdateT_batch_history(T_batch_history instance);
    partial void DeleteT_batch_history(T_batch_history instance);
    partial void InsertT_be_2090305_alldatatypebm_h(T_be_2090305_alldatatypebm_h instance);
    partial void UpdateT_be_2090305_alldatatypebm_h(T_be_2090305_alldatatypebm_h instance);
    partial void DeleteT_be_2090305_alldatatypebm_h(T_be_2090305_alldatatypebm_h instance);
    partial void InsertT_be_2090305_alldatatypebme(T_be_2090305_alldatatypebme instance);
    partial void UpdateT_be_2090305_alldatatypebme(T_be_2090305_alldatatypebme instance);
    partial void DeleteT_be_2090305_alldatatypebme(T_be_2090305_alldatatypebme instance);
    partial void InsertT_be_cor_bil_billmessage(T_be_cor_bil_billmessage instance);
    partial void UpdateT_be_cor_bil_billmessage(T_be_cor_bil_billmessage instance);
    partial void DeleteT_be_cor_bil_billmessage(T_be_cor_bil_billmessage instance);
    partial void InsertT_be_cor_bil_billmessage_h(T_be_cor_bil_billmessage_h instance);
    partial void UpdateT_be_cor_bil_billmessage_h(T_be_cor_bil_billmessage_h instance);
    partial void DeleteT_be_cor_bil_billmessage_h(T_be_cor_bil_billmessage_h instance);
    partial void InsertT_be_cor_bil_billmessageac_h(T_be_cor_bil_billmessageac_h instance);
    partial void UpdateT_be_cor_bil_billmessageac_h(T_be_cor_bil_billmessageac_h instance);
    partial void DeleteT_be_cor_bil_billmessageac_h(T_be_cor_bil_billmessageac_h instance);
    partial void InsertT_be_cor_bil_billmessageacc(T_be_cor_bil_billmessageacc instance);
    partial void UpdateT_be_cor_bil_billmessageacc(T_be_cor_bil_billmessageacc instance);
    partial void DeleteT_be_cor_bil_billmessageacc(T_be_cor_bil_billmessageacc instance);
    partial void InsertT_be_cor_cor_chargeadj735343(T_be_cor_cor_chargeadj735343 instance);
    partial void UpdateT_be_cor_cor_chargeadj735343(T_be_cor_cor_chargeadj735343 instance);
    partial void DeleteT_be_cor_cor_chargeadj735343(T_be_cor_cor_chargeadj735343 instance);
    partial void InsertT_be_cor_cor_chargeadjustme(T_be_cor_cor_chargeadjustme instance);
    partial void UpdateT_be_cor_cor_chargeadjustme(T_be_cor_cor_chargeadjustme instance);
    partial void DeleteT_be_cor_cor_chargeadjustme(T_be_cor_cor_chargeadjustme instance);
    partial void InsertT_be_cor_cor_dispute(T_be_cor_cor_dispute instance);
    partial void UpdateT_be_cor_cor_dispute(T_be_cor_cor_dispute instance);
    partial void DeleteT_be_cor_cor_dispute(T_be_cor_cor_dispute instance);
    partial void InsertT_be_cor_cor_dispute_h(T_be_cor_cor_dispute_h instance);
    partial void UpdateT_be_cor_cor_dispute_h(T_be_cor_cor_dispute_h instance);
    partial void DeleteT_be_cor_cor_dispute_h(T_be_cor_cor_dispute_h instance);
    partial void InsertT_be_cor_cor_division(T_be_cor_cor_division instance);
    partial void UpdateT_be_cor_cor_division(T_be_cor_cor_division instance);
    partial void DeleteT_be_cor_cor_division(T_be_cor_cor_division instance);
    partial void InsertT_be_cor_cor_invoiceadjustm(T_be_cor_cor_invoiceadjustm instance);
    partial void UpdateT_be_cor_cor_invoiceadjustm(T_be_cor_cor_invoiceadjustm instance);
    partial void DeleteT_be_cor_cor_invoiceadjustm(T_be_cor_cor_invoiceadjustm instance);
    partial void InsertT_be_cor_fil_argumentbe(T_be_cor_fil_argumentbe instance);
    partial void UpdateT_be_cor_fil_argumentbe(T_be_cor_fil_argumentbe instance);
    partial void DeleteT_be_cor_fil_argumentbe(T_be_cor_fil_argumentbe instance);
    partial void InsertT_be_cor_fil_assemblyrefere(T_be_cor_fil_assemblyrefere instance);
    partial void UpdateT_be_cor_fil_assemblyrefere(T_be_cor_fil_assemblyrefere instance);
    partial void DeleteT_be_cor_fil_assemblyrefere(T_be_cor_fil_assemblyrefere instance);
    partial void InsertT_be_cor_fil_configurationbe(T_be_cor_fil_configurationbe instance);
    partial void UpdateT_be_cor_fil_configurationbe(T_be_cor_fil_configurationbe instance);
    partial void DeleteT_be_cor_fil_configurationbe(T_be_cor_fil_configurationbe instance);
    partial void InsertT_be_cor_fil_filebe(T_be_cor_fil_filebe instance);
    partial void UpdateT_be_cor_fil_filebe(T_be_cor_fil_filebe instance);
    partial void DeleteT_be_cor_fil_filebe(T_be_cor_fil_filebe instance);
    partial void InsertT_be_cor_fil_invocationrec_h(T_be_cor_fil_invocationrec_h instance);
    partial void UpdateT_be_cor_fil_invocationrec_h(T_be_cor_fil_invocationrec_h instance);
    partial void DeleteT_be_cor_fil_invocationrec_h(T_be_cor_fil_invocationrec_h instance);
    partial void InsertT_be_cor_fil_invocationreco(T_be_cor_fil_invocationreco instance);
    partial void UpdateT_be_cor_fil_invocationreco(T_be_cor_fil_invocationreco instance);
    partial void DeleteT_be_cor_fil_invocationreco(T_be_cor_fil_invocationreco instance);
    partial void InsertT_be_cor_fil_programcodebe(T_be_cor_fil_programcodebe instance);
    partial void UpdateT_be_cor_fil_programcodebe(T_be_cor_fil_programcodebe instance);
    partial void DeleteT_be_cor_fil_programcodebe(T_be_cor_fil_programcodebe instance);
    partial void InsertT_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe instance);
    partial void UpdateT_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe instance);
    partial void DeleteT_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe instance);
    partial void InsertT_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb instance);
    partial void UpdateT_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb instance);
    partial void DeleteT_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb instance);
    partial void InsertT_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume instance);
    partial void UpdateT_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume instance);
    partial void DeleteT_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume instance);
    partial void InsertT_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca instance);
    partial void UpdateT_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca instance);
    partial void DeleteT_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca instance);
    partial void InsertT_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra instance);
    partial void UpdateT_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra instance);
    partial void DeleteT_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra instance);
    partial void InsertT_be_cor_fil_servicehostbe(T_be_cor_fil_servicehostbe instance);
    partial void UpdateT_be_cor_fil_servicehostbe(T_be_cor_fil_servicehostbe instance);
    partial void DeleteT_be_cor_fil_servicehostbe(T_be_cor_fil_servicehostbe instance);
    partial void InsertT_be_cor_fil_targetbe(T_be_cor_fil_targetbe instance);
    partial void UpdateT_be_cor_fil_targetbe(T_be_cor_fil_targetbe instance);
    partial void DeleteT_be_cor_fil_targetbe(T_be_cor_fil_targetbe instance);
    partial void InsertT_be_cor_mr_machine(T_be_cor_mr_machine instance);
    partial void UpdateT_be_cor_mr_machine(T_be_cor_mr_machine instance);
    partial void DeleteT_be_cor_mr_machine(T_be_cor_mr_machine instance);
    partial void InsertT_be_cor_mr_machinerole(T_be_cor_mr_machinerole instance);
    partial void UpdateT_be_cor_mr_machinerole(T_be_cor_mr_machinerole instance);
    partial void DeleteT_be_cor_mr_machinerole(T_be_cor_mr_machinerole instance);
    partial void InsertT_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin instance);
    partial void UpdateT_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin instance);
    partial void DeleteT_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin instance);
    partial void InsertT_be_cor_qu_accountforquote(T_be_cor_qu_accountforquote instance);
    partial void UpdateT_be_cor_qu_accountforquote(T_be_cor_qu_accountforquote instance);
    partial void DeleteT_be_cor_qu_accountforquote(T_be_cor_qu_accountforquote instance);
    partial void InsertT_be_cor_qu_poforquote(T_be_cor_qu_poforquote instance);
    partial void UpdateT_be_cor_qu_poforquote(T_be_cor_qu_poforquote instance);
    partial void DeleteT_be_cor_qu_poforquote(T_be_cor_qu_poforquote instance);
    partial void InsertT_be_cor_qu_quotecontent(T_be_cor_qu_quotecontent instance);
    partial void UpdateT_be_cor_qu_quotecontent(T_be_cor_qu_quotecontent instance);
    partial void DeleteT_be_cor_qu_quotecontent(T_be_cor_qu_quotecontent instance);
    partial void InsertT_be_cor_qu_quoteheader(T_be_cor_qu_quoteheader instance);
    partial void UpdateT_be_cor_qu_quoteheader(T_be_cor_qu_quoteheader instance);
    partial void DeleteT_be_cor_qu_quoteheader(T_be_cor_qu_quoteheader instance);
    partial void InsertT_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb instance);
    partial void UpdateT_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb instance);
    partial void DeleteT_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb instance);
    partial void InsertT_be_cor_qu_quotelog(T_be_cor_qu_quotelog instance);
    partial void UpdateT_be_cor_qu_quotelog(T_be_cor_qu_quotelog instance);
    partial void DeleteT_be_cor_qu_quotelog(T_be_cor_qu_quotelog instance);
    partial void InsertT_be_cor_qu_udrcforquoting(T_be_cor_qu_udrcforquoting instance);
    partial void UpdateT_be_cor_qu_udrcforquoting(T_be_cor_qu_udrcforquoting instance);
    partial void DeleteT_be_cor_qu_udrcforquoting(T_be_cor_qu_udrcforquoting instance);
    partial void InsertT_be_cor_ui_BillSetting(T_be_cor_ui_BillSetting instance);
    partial void UpdateT_be_cor_ui_BillSetting(T_be_cor_ui_BillSetting instance);
    partial void DeleteT_be_cor_ui_BillSetting(T_be_cor_ui_BillSetting instance);
    partial void InsertT_be_cor_ui_Column(T_be_cor_ui_Column instance);
    partial void UpdateT_be_cor_ui_Column(T_be_cor_ui_Column instance);
    partial void DeleteT_be_cor_ui_Column(T_be_cor_ui_Column instance);
    partial void InsertT_be_cor_ui_Dashboard(T_be_cor_ui_Dashboard instance);
    partial void UpdateT_be_cor_ui_Dashboard(T_be_cor_ui_Dashboard instance);
    partial void DeleteT_be_cor_ui_Dashboard(T_be_cor_ui_Dashboard instance);
    partial void InsertT_be_cor_ui_EntryPoint(T_be_cor_ui_EntryPoint instance);
    partial void UpdateT_be_cor_ui_EntryPoint(T_be_cor_ui_EntryPoint instance);
    partial void DeleteT_be_cor_ui_EntryPoint(T_be_cor_ui_EntryPoint instance);
    partial void InsertT_be_cor_ui_Parameter(T_be_cor_ui_Parameter instance);
    partial void UpdateT_be_cor_ui_Parameter(T_be_cor_ui_Parameter instance);
    partial void DeleteT_be_cor_ui_Parameter(T_be_cor_ui_Parameter instance);
    partial void InsertT_be_cor_ui_ProductViewMap(T_be_cor_ui_ProductViewMap instance);
    partial void UpdateT_be_cor_ui_ProductViewMap(T_be_cor_ui_ProductViewMap instance);
    partial void DeleteT_be_cor_ui_ProductViewMap(T_be_cor_ui_ProductViewMap instance);
    partial void InsertT_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget instance);
    partial void UpdateT_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget instance);
    partial void DeleteT_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget instance);
    partial void InsertT_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column instance);
    partial void UpdateT_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column instance);
    partial void DeleteT_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column instance);
    partial void InsertT_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc instance);
    partial void UpdateT_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc instance);
    partial void DeleteT_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc instance);
    partial void InsertT_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS instance);
    partial void UpdateT_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS instance);
    partial void DeleteT_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS instance);
    partial void InsertT_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb instance);
    partial void UpdateT_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb instance);
    partial void DeleteT_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb instance);
    partial void InsertT_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry instance);
    partial void UpdateT_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry instance);
    partial void DeleteT_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry instance);
    partial void InsertT_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ instance);
    partial void UpdateT_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ instance);
    partial void DeleteT_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ instance);
    partial void InsertT_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor instance);
    partial void UpdateT_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor instance);
    partial void DeleteT_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor instance);
    partial void InsertT_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param instance);
    partial void UpdateT_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param instance);
    partial void DeleteT_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param instance);
    partial void InsertT_be_cor_ui_ReportInventory(T_be_cor_ui_ReportInventory instance);
    partial void UpdateT_be_cor_ui_ReportInventory(T_be_cor_ui_ReportInventory instance);
    partial void DeleteT_be_cor_ui_ReportInventory(T_be_cor_ui_ReportInventory instance);
    partial void InsertT_be_cor_ui_SavedSearch(T_be_cor_ui_SavedSearch instance);
    partial void UpdateT_be_cor_ui_SavedSearch(T_be_cor_ui_SavedSearch instance);
    partial void DeleteT_be_cor_ui_SavedSearch(T_be_cor_ui_SavedSearch instance);
    partial void InsertT_be_cor_ui_SearchFilter(T_be_cor_ui_SearchFilter instance);
    partial void UpdateT_be_cor_ui_SearchFilter(T_be_cor_ui_SearchFilter instance);
    partial void DeleteT_be_cor_ui_SearchFilter(T_be_cor_ui_SearchFilter instance);
    partial void InsertT_be_cor_ui_Site(T_be_cor_ui_Site instance);
    partial void UpdateT_be_cor_ui_Site(T_be_cor_ui_Site instance);
    partial void DeleteT_be_cor_ui_Site(T_be_cor_ui_Site instance);
    partial void InsertT_be_cor_ui_UserProfile(T_be_cor_ui_UserProfile instance);
    partial void UpdateT_be_cor_ui_UserProfile(T_be_cor_ui_UserProfile instance);
    partial void DeleteT_be_cor_ui_UserProfile(T_be_cor_ui_UserProfile instance);
    partial void InsertT_be_cor_ui_Widget(T_be_cor_ui_Widget instance);
    partial void UpdateT_be_cor_ui_Widget(T_be_cor_ui_Widget instance);
    partial void DeleteT_be_cor_ui_Widget(T_be_cor_ui_Widget instance);
    partial void InsertT_be_cor_ui_WidgetInventory(T_be_cor_ui_WidgetInventory instance);
    partial void UpdateT_be_cor_ui_WidgetInventory(T_be_cor_ui_WidgetInventory instance);
    partial void DeleteT_be_cor_ui_WidgetInventory(T_be_cor_ui_WidgetInventory instance);
    partial void InsertT_be_entity_sync_data(T_be_entity_sync_data instance);
    partial void UpdateT_be_entity_sync_data(T_be_entity_sync_data instance);
    partial void DeleteT_be_entity_sync_data(T_be_entity_sync_data instance);
    partial void InsertT_be_smo_tes_testbmeperfoma(T_be_smo_tes_testbmeperfoma instance);
    partial void UpdateT_be_smo_tes_testbmeperfoma(T_be_smo_tes_testbmeperfoma instance);
    partial void DeleteT_be_smo_tes_testbmeperfoma(T_be_smo_tes_testbmeperfoma instance);
    partial void InsertT_be_smo_thi_a(T_be_smo_thi_a instance);
    partial void UpdateT_be_smo_thi_a(T_be_smo_thi_a instance);
    partial void DeleteT_be_smo_thi_a(T_be_smo_thi_a instance);
    partial void InsertT_be_smo_thi_b(T_be_smo_thi_b instance);
    partial void UpdateT_be_smo_thi_b(T_be_smo_thi_b instance);
    partial void DeleteT_be_smo_thi_b(T_be_smo_thi_b instance);
    partial void InsertT_be_smo_thi_c(T_be_smo_thi_c instance);
    partial void UpdateT_be_smo_thi_c(T_be_smo_thi_c instance);
    partial void DeleteT_be_smo_thi_c(T_be_smo_thi_c instance);
    partial void InsertT_be_smo_thi_d(T_be_smo_thi_d instance);
    partial void UpdateT_be_smo_thi_d(T_be_smo_thi_d instance);
    partial void DeleteT_be_smo_thi_d(T_be_smo_thi_d instance);
    partial void InsertT_be_smo_thi_e(T_be_smo_thi_e instance);
    partial void UpdateT_be_smo_thi_e(T_be_smo_thi_e instance);
    partial void DeleteT_be_smo_thi_e(T_be_smo_thi_e instance);
    partial void InsertT_billgroup(T_billgroup instance);
    partial void UpdateT_billgroup(T_billgroup instance);
    partial void DeleteT_billgroup(T_billgroup instance);
    partial void InsertT_billgroup_materialization(T_billgroup_materialization instance);
    partial void UpdateT_billgroup_materialization(T_billgroup_materialization instance);
    partial void DeleteT_billgroup_materialization(T_billgroup_materialization instance);
    partial void InsertT_billingserver_service(T_billingserver_service instance);
    partial void UpdateT_billingserver_service(T_billingserver_service instance);
    partial void DeleteT_billingserver_service(T_billingserver_service instance);
    partial void InsertT_calc_engine(T_calc_engine instance);
    partial void UpdateT_calc_engine(T_calc_engine instance);
    partial void DeleteT_calc_engine(T_calc_engine instance);
    partial void InsertT_calc_formula(T_calc_formula instance);
    partial void UpdateT_calc_formula(T_calc_formula instance);
    partial void DeleteT_calc_formula(T_calc_formula instance);
    partial void InsertT_calendar(T_calendar instance);
    partial void UpdateT_calendar(T_calendar instance);
    partial void DeleteT_calendar(T_calendar instance);
    partial void InsertT_calendar_day(T_calendar_day instance);
    partial void UpdateT_calendar_day(T_calendar_day instance);
    partial void DeleteT_calendar_day(T_calendar_day instance);
    partial void InsertT_calendar_holiday(T_calendar_holiday instance);
    partial void UpdateT_calendar_holiday(T_calendar_holiday instance);
    partial void DeleteT_calendar_holiday(T_calendar_holiday instance);
    partial void InsertT_calendar_periods(T_calendar_periods instance);
    partial void UpdateT_calendar_periods(T_calendar_periods instance);
    partial void DeleteT_calendar_periods(T_calendar_periods instance);
    partial void InsertT_capability_instance(T_capability_instance instance);
    partial void UpdateT_capability_instance(T_capability_instance instance);
    partial void DeleteT_capability_instance(T_capability_instance instance);
    partial void InsertT_char_values(T_char_values instance);
    partial void UpdateT_char_values(T_char_values instance);
    partial void DeleteT_char_values(T_char_values instance);
    partial void InsertT_charge(T_charge instance);
    partial void UpdateT_charge(T_charge instance);
    partial void DeleteT_charge(T_charge instance);
    partial void InsertT_charge_prop(T_charge_prop instance);
    partial void UpdateT_charge_prop(T_charge_prop instance);
    partial void DeleteT_charge_prop(T_charge_prop instance);
    partial void InsertT_composite_capability_type(T_composite_capability_type instance);
    partial void UpdateT_composite_capability_type(T_composite_capability_type instance);
    partial void DeleteT_composite_capability_type(T_composite_capability_type instance);
    partial void InsertT_compositor(T_compositor instance);
    partial void UpdateT_compositor(T_compositor instance);
    partial void DeleteT_compositor(T_compositor instance);
    partial void InsertT_counter(T_counter instance);
    partial void UpdateT_counter(T_counter instance);
    partial void DeleteT_counter(T_counter instance);
    partial void InsertT_counter_map(T_counter_map instance);
    partial void UpdateT_counter_map(T_counter_map instance);
    partial void DeleteT_counter_map(T_counter_map instance);
    partial void InsertT_counter_metadata(T_counter_metadata instance);
    partial void UpdateT_counter_metadata(T_counter_metadata instance);
    partial void DeleteT_counter_metadata(T_counter_metadata instance);
    partial void InsertT_counter_param_map(T_counter_param_map instance);
    partial void UpdateT_counter_param_map(T_counter_param_map instance);
    partial void DeleteT_counter_param_map(T_counter_param_map instance);
    partial void InsertT_counter_param_predicate(T_counter_param_predicate instance);
    partial void UpdateT_counter_param_predicate(T_counter_param_predicate instance);
    partial void DeleteT_counter_param_predicate(T_counter_param_predicate instance);
    partial void InsertT_counter_params(T_counter_params instance);
    partial void UpdateT_counter_params(T_counter_params instance);
    partial void DeleteT_counter_params(T_counter_params instance);
    partial void InsertT_counter_params_metadata(T_counter_params_metadata instance);
    partial void UpdateT_counter_params_metadata(T_counter_params_metadata instance);
    partial void DeleteT_counter_params_metadata(T_counter_params_metadata instance);
    partial void InsertT_counterpropdef(T_counterpropdef instance);
    partial void UpdateT_counterpropdef(T_counterpropdef instance);
    partial void DeleteT_counterpropdef(T_counterpropdef instance);
    partial void InsertT_current_id(T_current_id instance);
    partial void UpdateT_current_id(T_current_id instance);
    partial void DeleteT_current_id(T_current_id instance);
    partial void InsertT_current_long_id(T_current_long_id instance);
    partial void UpdateT_current_long_id(T_current_long_id instance);
    partial void DeleteT_current_long_id(T_current_long_id instance);
    partial void InsertT_decimal_capability(T_decimal_capability instance);
    partial void UpdateT_decimal_capability(T_decimal_capability instance);
    partial void DeleteT_decimal_capability(T_decimal_capability instance);
    partial void InsertT_description(T_description instance);
    partial void UpdateT_description(T_description instance);
    partial void DeleteT_description(T_description instance);
    partial void InsertT_discount(T_discount instance);
    partial void UpdateT_discount(T_discount instance);
    partial void DeleteT_discount(T_discount instance);
    partial void InsertT_effectivedate(T_effectivedate instance);
    partial void UpdateT_effectivedate(T_effectivedate instance);
    partial void DeleteT_effectivedate(T_effectivedate instance);
    partial void InsertT_email_adapter_tracking(T_email_adapter_tracking instance);
    partial void UpdateT_email_adapter_tracking(T_email_adapter_tracking instance);
    partial void DeleteT_email_adapter_tracking(T_email_adapter_tracking instance);
    partial void InsertT_enum_capability(T_enum_capability instance);
    partial void UpdateT_enum_capability(T_enum_capability instance);
    partial void DeleteT_enum_capability(T_enum_capability instance);
    partial void InsertT_enum_data(T_enum_data instance);
    partial void UpdateT_enum_data(T_enum_data instance);
    partial void DeleteT_enum_data(T_enum_data instance);
    partial void InsertT_ep_aggregate(T_ep_aggregate instance);
    partial void UpdateT_ep_aggregate(T_ep_aggregate instance);
    partial void DeleteT_ep_aggregate(T_ep_aggregate instance);
    partial void InsertT_ep_discount(T_ep_discount instance);
    partial void UpdateT_ep_discount(T_ep_discount instance);
    partial void DeleteT_ep_discount(T_ep_discount instance);
    partial void InsertT_ep_map(T_ep_map instance);
    partial void UpdateT_ep_map(T_ep_map instance);
    partial void DeleteT_ep_map(T_ep_map instance);
    partial void InsertT_ep_nonrecurring(T_ep_nonrecurring instance);
    partial void UpdateT_ep_nonrecurring(T_ep_nonrecurring instance);
    partial void DeleteT_ep_nonrecurring(T_ep_nonrecurring instance);
    partial void InsertT_ep_po(T_ep_po instance);
    partial void UpdateT_ep_po(T_ep_po instance);
    partial void DeleteT_ep_po(T_ep_po instance);
    partial void InsertT_ep_pricelist(T_ep_pricelist instance);
    partial void UpdateT_ep_pricelist(T_ep_pricelist instance);
    partial void DeleteT_ep_pricelist(T_ep_pricelist instance);
    partial void InsertT_ep_recurring(T_ep_recurring instance);
    partial void UpdateT_ep_recurring(T_ep_recurring instance);
    partial void DeleteT_ep_recurring(T_ep_recurring instance);
    partial void InsertT_ep_unit_dependent_recurring(T_ep_unit_dependent_recurring instance);
    partial void UpdateT_ep_unit_dependent_recurring(T_ep_unit_dependent_recurring instance);
    partial void DeleteT_ep_unit_dependent_recurring(T_ep_unit_dependent_recurring instance);
    partial void InsertT_ep_usage(T_ep_usage instance);
    partial void UpdateT_ep_usage(T_ep_usage instance);
    partial void DeleteT_ep_usage(T_ep_usage instance);
    partial void InsertT_export_default_param_values(T_export_default_param_values instance);
    partial void UpdateT_export_default_param_values(T_export_default_param_values instance);
    partial void DeleteT_export_default_param_values(T_export_default_param_values instance);
    partial void InsertT_export_execute_audit(T_export_execute_audit instance);
    partial void UpdateT_export_execute_audit(T_export_execute_audit instance);
    partial void DeleteT_export_execute_audit(T_export_execute_audit instance);
    partial void InsertT_export_param_names(T_export_param_names instance);
    partial void UpdateT_export_param_names(T_export_param_names instance);
    partial void DeleteT_export_param_names(T_export_param_names instance);
    partial void InsertT_export_report_instance(T_export_report_instance instance);
    partial void UpdateT_export_report_instance(T_export_report_instance instance);
    partial void DeleteT_export_report_instance(T_export_report_instance instance);
    partial void InsertT_export_reports(T_export_reports instance);
    partial void UpdateT_export_reports(T_export_reports instance);
    partial void DeleteT_export_reports(T_export_reports instance);
    partial void InsertT_export_schedule(T_export_schedule instance);
    partial void UpdateT_export_schedule(T_export_schedule instance);
    partial void DeleteT_export_schedule(T_export_schedule instance);
    partial void InsertT_export_system_parms(T_export_system_parms instance);
    partial void UpdateT_export_system_parms(T_export_system_parms instance);
    partial void DeleteT_export_system_parms(T_export_system_parms instance);
    partial void InsertT_export_workqueue(T_export_workqueue instance);
    partial void UpdateT_export_workqueue(T_export_workqueue instance);
    partial void DeleteT_export_workqueue(T_export_workqueue instance);
    partial void InsertT_failed_payment(T_failed_payment instance);
    partial void UpdateT_failed_payment(T_failed_payment instance);
    partial void DeleteT_failed_payment(T_failed_payment instance);
    partial void InsertT_failed_payment_details(T_failed_payment_details instance);
    partial void UpdateT_failed_payment_details(T_failed_payment_details instance);
    partial void DeleteT_failed_payment_details(T_failed_payment_details instance);
    partial void InsertT_failed_transaction(T_failed_transaction instance);
    partial void UpdateT_failed_transaction(T_failed_transaction instance);
    partial void DeleteT_failed_transaction(T_failed_transaction instance);
    partial void InsertT_foreignexchange_rates(T_foreignexchange_rates instance);
    partial void UpdateT_foreignexchange_rates(T_foreignexchange_rates instance);
    partial void DeleteT_foreignexchange_rates(T_foreignexchange_rates instance);
    partial void InsertT_group_sub(T_group_sub instance);
    partial void UpdateT_group_sub(T_group_sub instance);
    partial void DeleteT_group_sub(T_group_sub instance);
    partial void InsertT_gsub_recur_map(T_gsub_recur_map instance);
    partial void UpdateT_gsub_recur_map(T_gsub_recur_map instance);
    partial void DeleteT_gsub_recur_map(T_gsub_recur_map instance);
    partial void InsertT_invoice(T_invoice instance);
    partial void UpdateT_invoice(T_invoice instance);
    partial void DeleteT_invoice(T_invoice instance);
    partial void InsertT_invoice_namespace(T_invoice_namespace instance);
    partial void UpdateT_invoice_namespace(T_invoice_namespace instance);
    partial void DeleteT_invoice_namespace(T_invoice_namespace instance);
    partial void InsertT_language(T_language instance);
    partial void UpdateT_language(T_language instance);
    partial void DeleteT_language(T_language instance);
    partial void InsertT_listener(T_listener instance);
    partial void UpdateT_listener(T_listener instance);
    partial void DeleteT_listener(T_listener instance);
    partial void InsertT_localized_site(T_localized_site instance);
    partial void UpdateT_localized_site(T_localized_site instance);
    partial void DeleteT_localized_site(T_localized_site instance);
    partial void InsertT_message(T_message instance);
    partial void UpdateT_message(T_message instance);
    partial void DeleteT_message(T_message instance);
    partial void InsertT_mf_tracking_env(T_mf_tracking_env instance);
    partial void UpdateT_mf_tracking_env(T_mf_tracking_env instance);
    partial void DeleteT_mf_tracking_env(T_mf_tracking_env instance);
    partial void InsertT_mf_tracking_instructions(T_mf_tracking_instructions instance);
    partial void UpdateT_mf_tracking_instructions(T_mf_tracking_instructions instance);
    partial void DeleteT_mf_tracking_instructions(T_mf_tracking_instructions instance);
    partial void InsertT_mf_tracking_scripts(T_mf_tracking_scripts instance);
    partial void UpdateT_mf_tracking_scripts(T_mf_tracking_scripts instance);
    partial void DeleteT_mf_tracking_scripts(T_mf_tracking_scripts instance);
    partial void InsertT_MT_ID(T_MT_ID instance);
    partial void UpdateT_MT_ID(T_MT_ID instance);
    partial void DeleteT_MT_ID(T_MT_ID instance);
    partial void InsertT_mt_sys_analyze_all_tables(T_mt_sys_analyze_all_tables instance);
    partial void UpdateT_mt_sys_analyze_all_tables(T_mt_sys_analyze_all_tables instance);
    partial void DeleteT_mt_sys_analyze_all_tables(T_mt_sys_analyze_all_tables instance);
    partial void InsertT_mview_catalog(T_mview_catalog instance);
    partial void UpdateT_mview_catalog(T_mview_catalog instance);
    partial void DeleteT_mview_catalog(T_mview_catalog instance);
    partial void InsertT_mview_event(T_mview_event instance);
    partial void UpdateT_mview_event(T_mview_event instance);
    partial void DeleteT_mview_event(T_mview_event instance);
    partial void InsertT_namespace(T_namespace instance);
    partial void UpdateT_namespace(T_namespace instance);
    partial void DeleteT_namespace(T_namespace instance);
    partial void InsertT_nonrecur(T_nonrecur instance);
    partial void UpdateT_nonrecur(T_nonrecur instance);
    partial void DeleteT_nonrecur(T_nonrecur instance);
    partial void InsertT_nonrecurring_event_run(T_nonrecurring_event_run instance);
    partial void UpdateT_nonrecurring_event_run(T_nonrecurring_event_run instance);
    partial void DeleteT_nonrecurring_event_run(T_nonrecurring_event_run instance);
    partial void InsertT_open_transactions(T_open_transactions instance);
    partial void UpdateT_open_transactions(T_open_transactions instance);
    partial void DeleteT_open_transactions(T_open_transactions instance);
    partial void InsertT_param_table_prop(T_param_table_prop instance);
    partial void UpdateT_param_table_prop(T_param_table_prop instance);
    partial void DeleteT_param_table_prop(T_param_table_prop instance);
    partial void InsertT_partition(T_partition instance);
    partial void UpdateT_partition(T_partition instance);
    partial void DeleteT_partition(T_partition instance);
    partial void InsertT_partition_storage(T_partition_storage instance);
    partial void UpdateT_partition_storage(T_partition_storage instance);
    partial void DeleteT_partition_storage(T_partition_storage instance);
    partial void InsertT_path_capability(T_path_capability instance);
    partial void UpdateT_path_capability(T_path_capability instance);
    partial void DeleteT_path_capability(T_path_capability instance);
    partial void InsertT_payment_audit(T_payment_audit instance);
    partial void UpdateT_payment_audit(T_payment_audit instance);
    partial void DeleteT_payment_audit(T_payment_audit instance);
    partial void InsertT_payment_history(T_payment_history instance);
    partial void UpdateT_payment_history(T_payment_history instance);
    partial void DeleteT_payment_history(T_payment_history instance);
    partial void InsertT_payment_history_details(T_payment_history_details instance);
    partial void UpdateT_payment_history_details(T_payment_history_details instance);
    partial void DeleteT_payment_history_details(T_payment_history_details instance);
    partial void InsertT_payment_instrument(T_payment_instrument instance);
    partial void UpdateT_payment_instrument(T_payment_instrument instance);
    partial void DeleteT_payment_instrument(T_payment_instrument instance);
    partial void InsertT_payment_instrument_xref(T_payment_instrument_xref instance);
    partial void UpdateT_payment_instrument_xref(T_payment_instrument_xref instance);
    partial void DeleteT_payment_instrument_xref(T_payment_instrument_xref instance);
    partial void InsertT_payment_method(T_payment_method instance);
    partial void UpdateT_payment_method(T_payment_method instance);
    partial void DeleteT_payment_method(T_payment_method instance);
    partial void InsertT_pc_interval(T_pc_interval instance);
    partial void UpdateT_pc_interval(T_pc_interval instance);
    partial void DeleteT_pc_interval(T_pc_interval instance);
    partial void InsertT_pending_ACH_trans(T_pending_ACH_trans instance);
    partial void UpdateT_pending_ACH_trans(T_pending_ACH_trans instance);
    partial void DeleteT_pending_ACH_trans(T_pending_ACH_trans instance);
    partial void InsertT_pending_ACH_trans_details(T_pending_ACH_trans_details instance);
    partial void UpdateT_pending_ACH_trans_details(T_pending_ACH_trans_details instance);
    partial void DeleteT_pending_ACH_trans_details(T_pending_ACH_trans_details instance);
    partial void InsertT_pending_payment_trans(T_pending_payment_trans instance);
    partial void UpdateT_pending_payment_trans(T_pending_payment_trans instance);
    partial void DeleteT_pending_payment_trans(T_pending_payment_trans instance);
    partial void InsertT_pending_payment_trans_dtl(T_pending_payment_trans_dtl instance);
    partial void UpdateT_pending_payment_trans_dtl(T_pending_payment_trans_dtl instance);
    partial void DeleteT_pending_payment_trans_dtl(T_pending_payment_trans_dtl instance);
    partial void InsertT_pi(T_pi instance);
    partial void UpdateT_pi(T_pi instance);
    partial void DeleteT_pi(T_pi instance);
    partial void InsertT_pi_rulesetdef_map(T_pi_rulesetdef_map instance);
    partial void UpdateT_pi_rulesetdef_map(T_pi_rulesetdef_map instance);
    partial void DeleteT_pi_rulesetdef_map(T_pi_rulesetdef_map instance);
    partial void InsertT_pi_template(T_pi_template instance);
    partial void UpdateT_pi_template(T_pi_template instance);
    partial void DeleteT_pi_template(T_pi_template instance);
    partial void InsertT_pipeline(T_pipeline instance);
    partial void UpdateT_pipeline(T_pipeline instance);
    partial void DeleteT_pipeline(T_pipeline instance);
    partial void InsertT_pipeline_service(T_pipeline_service instance);
    partial void UpdateT_pipeline_service(T_pipeline_service instance);
    partial void DeleteT_pipeline_service(T_pipeline_service instance);
    partial void InsertT_po(T_po instance);
    partial void UpdateT_po(T_po instance);
    partial void DeleteT_po(T_po instance);
    partial void InsertT_po_account_type_map(T_po_account_type_map instance);
    partial void UpdateT_po_account_type_map(T_po_account_type_map instance);
    partial void DeleteT_po_account_type_map(T_po_account_type_map instance);
    partial void InsertT_policy_role(T_policy_role instance);
    partial void UpdateT_policy_role(T_policy_role instance);
    partial void DeleteT_policy_role(T_policy_role instance);
    partial void InsertT_pricelist(T_pricelist instance);
    partial void UpdateT_pricelist(T_pricelist instance);
    partial void DeleteT_pricelist(T_pricelist instance);
    partial void InsertT_principal_policy(T_principal_policy instance);
    partial void UpdateT_principal_policy(T_principal_policy instance);
    partial void DeleteT_principal_policy(T_principal_policy instance);
    partial void InsertT_principals(T_principals instance);
    partial void UpdateT_principals(T_principals instance);
    partial void DeleteT_principals(T_principals instance);
    partial void InsertT_prod_view(T_prod_view instance);
    partial void UpdateT_prod_view(T_prod_view instance);
    partial void DeleteT_prod_view(T_prod_view instance);
    partial void InsertT_prod_view_prop(T_prod_view_prop instance);
    partial void UpdateT_prod_view_prop(T_prod_view_prop instance);
    partial void DeleteT_prod_view_prop(T_prod_view_prop instance);
    partial void InsertT_product_view_log(T_product_view_log instance);
    partial void UpdateT_product_view_log(T_product_view_log instance);
    partial void DeleteT_product_view_log(T_product_view_log instance);
    partial void InsertT_profile(T_profile instance);
    partial void UpdateT_profile(T_profile instance);
    partial void DeleteT_profile(T_profile instance);
    partial void InsertT_ps_ach(T_ps_ach instance);
    partial void UpdateT_ps_ach(T_ps_ach instance);
    partial void DeleteT_ps_ach(T_ps_ach instance);
    partial void InsertT_ps_audit(T_ps_audit instance);
    partial void UpdateT_ps_audit(T_ps_audit instance);
    partial void DeleteT_ps_audit(T_ps_audit instance);
    partial void InsertT_ps_audit_details(T_ps_audit_details instance);
    partial void UpdateT_ps_audit_details(T_ps_audit_details instance);
    partial void DeleteT_ps_audit_details(T_ps_audit_details instance);
    partial void InsertT_ps_credit_card(T_ps_credit_card instance);
    partial void UpdateT_ps_credit_card(T_ps_credit_card instance);
    partial void DeleteT_ps_credit_card(T_ps_credit_card instance);
    partial void InsertT_ps_payment_instrument(T_ps_payment_instrument instance);
    partial void UpdateT_ps_payment_instrument(T_ps_payment_instrument instance);
    partial void DeleteT_ps_payment_instrument(T_ps_payment_instrument instance);
    partial void InsertT_ps_pcard(T_ps_pcard instance);
    partial void UpdateT_ps_pcard(T_ps_pcard instance);
    partial void DeleteT_ps_pcard(T_ps_pcard instance);
    partial void InsertT_ps_preauth(T_ps_preauth instance);
    partial void UpdateT_ps_preauth(T_ps_preauth instance);
    partial void DeleteT_ps_preauth(T_ps_preauth instance);
    partial void InsertT_ps_preauth_details(T_ps_preauth_details instance);
    partial void UpdateT_ps_preauth_details(T_ps_preauth_details instance);
    partial void DeleteT_ps_preauth_details(T_ps_preauth_details instance);
    partial void InsertT_pt_aggrate(T_pt_aggrate instance);
    partial void UpdateT_pt_aggrate(T_pt_aggrate instance);
    partial void DeleteT_pt_aggrate(T_pt_aggrate instance);
    partial void InsertT_pt_basetransportrate(T_pt_basetransportrate instance);
    partial void UpdateT_pt_basetransportrate(T_pt_basetransportrate instance);
    partial void DeleteT_pt_basetransportrate(T_pt_basetransportrate instance);
    partial void InsertT_pt_bridgerate(T_pt_bridgerate instance);
    partial void UpdateT_pt_bridgerate(T_pt_bridgerate instance);
    partial void DeleteT_pt_bridgerate(T_pt_bridgerate instance);
    partial void InsertT_pt_BulkDiscountPT(T_pt_BulkDiscountPT instance);
    partial void UpdateT_pt_BulkDiscountPT(T_pt_BulkDiscountPT instance);
    partial void DeleteT_pt_BulkDiscountPT(T_pt_BulkDiscountPT instance);
    partial void InsertT_pt_BulkEventRatesPT(T_pt_BulkEventRatesPT instance);
    partial void UpdateT_pt_BulkEventRatesPT(T_pt_BulkEventRatesPT instance);
    partial void DeleteT_pt_BulkEventRatesPT(T_pt_BulkEventRatesPT instance);
    partial void InsertT_pt_BulkUnitRatesPT(T_pt_BulkUnitRatesPT instance);
    partial void UpdateT_pt_BulkUnitRatesPT(T_pt_BulkUnitRatesPT instance);
    partial void DeleteT_pt_BulkUnitRatesPT(T_pt_BulkUnitRatesPT instance);
    partial void InsertT_pt_Calendar(T_pt_Calendar instance);
    partial void UpdateT_pt_Calendar(T_pt_Calendar instance);
    partial void DeleteT_pt_Calendar(T_pt_Calendar instance);
    partial void InsertT_pt_cancelapplic(T_pt_cancelapplic instance);
    partial void UpdateT_pt_cancelapplic(T_pt_cancelapplic instance);
    partial void DeleteT_pt_cancelapplic(T_pt_cancelapplic instance);
    partial void InsertT_pt_cancelrate(T_pt_cancelrate instance);
    partial void UpdateT_pt_cancelrate(T_pt_cancelrate instance);
    partial void DeleteT_pt_cancelrate(T_pt_cancelrate instance);
    partial void InsertT_pt_CommitmentPT(T_pt_CommitmentPT instance);
    partial void UpdateT_pt_CommitmentPT(T_pt_CommitmentPT instance);
    partial void DeleteT_pt_CommitmentPT(T_pt_CommitmentPT instance);
    partial void InsertT_pt_confcalldiscount(T_pt_confcalldiscount instance);
    partial void UpdateT_pt_confcalldiscount(T_pt_confcalldiscount instance);
    partial void DeleteT_pt_confcalldiscount(T_pt_confcalldiscount instance);
    partial void InsertT_pt_CurrencyExchangeRates(T_pt_CurrencyExchangeRates instance);
    partial void UpdateT_pt_CurrencyExchangeRates(T_pt_CurrencyExchangeRates instance);
    partial void DeleteT_pt_CurrencyExchangeRates(T_pt_CurrencyExchangeRates instance);
    partial void InsertT_pt_decimalcalc(T_pt_decimalcalc instance);
    partial void UpdateT_pt_decimalcalc(T_pt_decimalcalc instance);
    partial void DeleteT_pt_decimalcalc(T_pt_decimalcalc instance);
    partial void InsertT_pt_featuresetupcharge(T_pt_featuresetupcharge instance);
    partial void UpdateT_pt_featuresetupcharge(T_pt_featuresetupcharge instance);
    partial void DeleteT_pt_featuresetupcharge(T_pt_featuresetupcharge instance);
    partial void InsertT_pt_FlatDiscount(T_pt_FlatDiscount instance);
    partial void UpdateT_pt_FlatDiscount(T_pt_FlatDiscount instance);
    partial void DeleteT_pt_FlatDiscount(T_pt_FlatDiscount instance);
    partial void InsertT_pt_FlatDiscount_NoCond(T_pt_FlatDiscount_NoCond instance);
    partial void UpdateT_pt_FlatDiscount_NoCond(T_pt_FlatDiscount_NoCond instance);
    partial void DeleteT_pt_FlatDiscount_NoCond(T_pt_FlatDiscount_NoCond instance);
    partial void InsertT_pt_FlatRecurringCharge(T_pt_FlatRecurringCharge instance);
    partial void UpdateT_pt_FlatRecurringCharge(T_pt_FlatRecurringCharge instance);
    partial void DeleteT_pt_FlatRecurringCharge(T_pt_FlatRecurringCharge instance);
    partial void InsertT_pt_FreeUsagePT(T_pt_FreeUsagePT instance);
    partial void UpdateT_pt_FreeUsagePT(T_pt_FreeUsagePT instance);
    partial void DeleteT_pt_FreeUsagePT(T_pt_FreeUsagePT instance);
    partial void InsertT_pt_globalactions(T_pt_globalactions instance);
    partial void UpdateT_pt_globalactions(T_pt_globalactions instance);
    partial void DeleteT_pt_globalactions(T_pt_globalactions instance);
    partial void InsertT_pt_includedrole(T_pt_includedrole instance);
    partial void UpdateT_pt_includedrole(T_pt_includedrole instance);
    partial void DeleteT_pt_includedrole(T_pt_includedrole instance);
    partial void InsertT_pt_IncrementalDiscountPT(T_pt_IncrementalDiscountPT instance);
    partial void UpdateT_pt_IncrementalDiscountPT(T_pt_IncrementalDiscountPT instance);
    partial void DeleteT_pt_IncrementalDiscountPT(T_pt_IncrementalDiscountPT instance);
    partial void InsertT_pt_intlrate(T_pt_intlrate instance);
    partial void UpdateT_pt_intlrate(T_pt_intlrate instance);
    partial void DeleteT_pt_intlrate(T_pt_intlrate instance);
    partial void InsertT_pt_ldrate(T_pt_ldrate instance);
    partial void UpdateT_pt_ldrate(T_pt_ldrate instance);
    partial void DeleteT_pt_ldrate(T_pt_ldrate instance);
    partial void InsertT_pt_metricfeaturerate(T_pt_metricfeaturerate instance);
    partial void UpdateT_pt_metricfeaturerate(T_pt_metricfeaturerate instance);
    partial void DeleteT_pt_metricfeaturerate(T_pt_metricfeaturerate instance);
    partial void InsertT_pt_minapplic(T_pt_minapplic instance);
    partial void UpdateT_pt_minapplic(T_pt_minapplic instance);
    partial void DeleteT_pt_minapplic(T_pt_minapplic instance);
    partial void InsertT_pt_mincharge(T_pt_mincharge instance);
    partial void UpdateT_pt_mincharge(T_pt_mincharge instance);
    partial void DeleteT_pt_mincharge(T_pt_mincharge instance);
    partial void InsertT_pt_NonRecurringCharge(T_pt_NonRecurringCharge instance);
    partial void UpdateT_pt_NonRecurringCharge(T_pt_NonRecurringCharge instance);
    partial void DeleteT_pt_NonRecurringCharge(T_pt_NonRecurringCharge instance);
    partial void InsertT_pt_overusedportapplic(T_pt_overusedportapplic instance);
    partial void UpdateT_pt_overusedportapplic(T_pt_overusedportapplic instance);
    partial void DeleteT_pt_overusedportapplic(T_pt_overusedportapplic instance);
    partial void InsertT_pt_overusedportdef(T_pt_overusedportdef instance);
    partial void UpdateT_pt_overusedportdef(T_pt_overusedportdef instance);
    partial void DeleteT_pt_overusedportdef(T_pt_overusedportdef instance);
    partial void InsertT_pt_overusedportrate(T_pt_overusedportrate instance);
    partial void UpdateT_pt_overusedportrate(T_pt_overusedportrate instance);
    partial void DeleteT_pt_overusedportrate(T_pt_overusedportrate instance);
    partial void InsertT_pt_PercentDiscount(T_pt_PercentDiscount instance);
    partial void UpdateT_pt_PercentDiscount(T_pt_PercentDiscount instance);
    partial void DeleteT_pt_PercentDiscount(T_pt_PercentDiscount instance);
    partial void InsertT_pt_PercentDiscount_NoCond(T_pt_PercentDiscount_NoCond instance);
    partial void UpdateT_pt_PercentDiscount_NoCond(T_pt_PercentDiscount_NoCond instance);
    partial void DeleteT_pt_PercentDiscount_NoCond(T_pt_PercentDiscount_NoCond instance);
    partial void InsertT_pt_PopcornPrices(T_pt_PopcornPrices instance);
    partial void UpdateT_pt_PopcornPrices(T_pt_PopcornPrices instance);
    partial void DeleteT_pt_PopcornPrices(T_pt_PopcornPrices instance);
    partial void InsertT_pt_rateconn(T_pt_rateconn instance);
    partial void UpdateT_pt_rateconn(T_pt_rateconn instance);
    partial void DeleteT_pt_rateconn(T_pt_rateconn instance);
    partial void InsertT_pt_rateSMS(T_pt_rateSMS instance);
    partial void UpdateT_pt_rateSMS(T_pt_rateSMS instance);
    partial void DeleteT_pt_rateSMS(T_pt_rateSMS instance);
    partial void InsertT_pt_reservationapplic(T_pt_reservationapplic instance);
    partial void UpdateT_pt_reservationapplic(T_pt_reservationapplic instance);
    partial void DeleteT_pt_reservationapplic(T_pt_reservationapplic instance);
    partial void InsertT_pt_reserverate(T_pt_reserverate instance);
    partial void UpdateT_pt_reserverate(T_pt_reserverate instance);
    partial void DeleteT_pt_reserverate(T_pt_reserverate instance);
    partial void InsertT_pt_songdownloads(T_pt_songdownloads instance);
    partial void UpdateT_pt_songdownloads(T_pt_songdownloads instance);
    partial void DeleteT_pt_songdownloads(T_pt_songdownloads instance);
    partial void InsertT_pt_songsession(T_pt_songsession instance);
    partial void UpdateT_pt_songsession(T_pt_songsession instance);
    partial void DeleteT_pt_songsession(T_pt_songsession instance);
    partial void InsertT_pt_songsessionchild(T_pt_songsessionchild instance);
    partial void UpdateT_pt_songsessionchild(T_pt_songsessionchild instance);
    partial void DeleteT_pt_songsessionchild(T_pt_songsessionchild instance);
    partial void InsertT_pt_SpecialCharacters(T_pt_SpecialCharacters instance);
    partial void UpdateT_pt_SpecialCharacters(T_pt_SpecialCharacters instance);
    partial void DeleteT_pt_SpecialCharacters(T_pt_SpecialCharacters instance);
    partial void InsertT_pt_taxBand(T_pt_taxBand instance);
    partial void UpdateT_pt_taxBand(T_pt_taxBand instance);
    partial void DeleteT_pt_taxBand(T_pt_taxBand instance);
    partial void InsertT_pt_taxRate(T_pt_taxRate instance);
    partial void UpdateT_pt_taxRate(T_pt_taxRate instance);
    partial void DeleteT_pt_taxRate(T_pt_taxRate instance);
    partial void InsertT_pt_test(T_pt_test instance);
    partial void UpdateT_pt_test(T_pt_test instance);
    partial void DeleteT_pt_test(T_pt_test instance);
    partial void InsertT_pt_TestAggregate(T_pt_TestAggregate instance);
    partial void UpdateT_pt_TestAggregate(T_pt_TestAggregate instance);
    partial void DeleteT_pt_TestAggregate(T_pt_TestAggregate instance);
    partial void InsertT_pt_TestNonAggregate(T_pt_TestNonAggregate instance);
    partial void UpdateT_pt_TestNonAggregate(T_pt_TestNonAggregate instance);
    partial void DeleteT_pt_TestNonAggregate(T_pt_TestNonAggregate instance);
    partial void InsertT_pt_TicketPrices(T_pt_TicketPrices instance);
    partial void UpdateT_pt_TicketPrices(T_pt_TicketPrices instance);
    partial void DeleteT_pt_TicketPrices(T_pt_TicketPrices instance);
    partial void InsertT_pt_TieredEventRatesPT(T_pt_TieredEventRatesPT instance);
    partial void UpdateT_pt_TieredEventRatesPT(T_pt_TieredEventRatesPT instance);
    partial void DeleteT_pt_TieredEventRatesPT(T_pt_TieredEventRatesPT instance);
    partial void InsertT_pt_TieredUnitRatesPT(T_pt_TieredUnitRatesPT instance);
    partial void UpdateT_pt_TieredUnitRatesPT(T_pt_TieredUnitRatesPT instance);
    partial void DeleteT_pt_TieredUnitRatesPT(T_pt_TieredUnitRatesPT instance);
    partial void InsertT_pt_timefeaturerate(T_pt_timefeaturerate instance);
    partial void UpdateT_pt_timefeaturerate(T_pt_timefeaturerate instance);
    partial void DeleteT_pt_timefeaturerate(T_pt_timefeaturerate instance);
    partial void InsertT_pt_tollfreerate(T_pt_tollfreerate instance);
    partial void UpdateT_pt_tollfreerate(T_pt_tollfreerate instance);
    partial void DeleteT_pt_tollfreerate(T_pt_tollfreerate instance);
    partial void InsertT_pt_UDRCTapered(T_pt_UDRCTapered instance);
    partial void UpdateT_pt_UDRCTapered(T_pt_UDRCTapered instance);
    partial void DeleteT_pt_UDRCTapered(T_pt_UDRCTapered instance);
    partial void InsertT_pt_UDRCTiered(T_pt_UDRCTiered instance);
    partial void UpdateT_pt_UDRCTiered(T_pt_UDRCTiered instance);
    partial void DeleteT_pt_UDRCTiered(T_pt_UDRCTiered instance);
    partial void InsertT_pt_unusedportapplic(T_pt_unusedportapplic instance);
    partial void UpdateT_pt_unusedportapplic(T_pt_unusedportapplic instance);
    partial void DeleteT_pt_unusedportapplic(T_pt_unusedportapplic instance);
    partial void InsertT_pt_unusedportdef(T_pt_unusedportdef instance);
    partial void UpdateT_pt_unusedportdef(T_pt_unusedportdef instance);
    partial void DeleteT_pt_unusedportdef(T_pt_unusedportdef instance);
    partial void InsertT_pt_unusedportrate(T_pt_unusedportrate instance);
    partial void UpdateT_pt_unusedportrate(T_pt_unusedportrate instance);
    partial void DeleteT_pt_unusedportrate(T_pt_unusedportrate instance);
    partial void InsertT_pv_AccountCredit(T_pv_AccountCredit instance);
    partial void UpdateT_pv_AccountCredit(T_pv_AccountCredit instance);
    partial void DeleteT_pv_AccountCredit(T_pv_AccountCredit instance);
    partial void InsertT_pv_AccountCreditRequest(T_pv_AccountCreditRequest instance);
    partial void UpdateT_pv_AccountCreditRequest(T_pv_AccountCreditRequest instance);
    partial void DeleteT_pv_AccountCreditRequest(T_pv_AccountCreditRequest instance);
    partial void InsertT_pv_AddCharge(T_pv_AddCharge instance);
    partial void UpdateT_pv_AddCharge(T_pv_AddCharge instance);
    partial void DeleteT_pv_AddCharge(T_pv_AddCharge instance);
    partial void InsertT_pv_ARAdjustment(T_pv_ARAdjustment instance);
    partial void UpdateT_pv_ARAdjustment(T_pv_ARAdjustment instance);
    partial void DeleteT_pv_ARAdjustment(T_pv_ARAdjustment instance);
    partial void InsertT_pv_audioconfcall(T_pv_audioconfcall instance);
    partial void UpdateT_pv_audioconfcall(T_pv_audioconfcall instance);
    partial void DeleteT_pv_audioconfcall(T_pv_audioconfcall instance);
    partial void InsertT_pv_audioconfconnection(T_pv_audioconfconnection instance);
    partial void UpdateT_pv_audioconfconnection(T_pv_audioconfconnection instance);
    partial void DeleteT_pv_audioconfconnection(T_pv_audioconfconnection instance);
    partial void InsertT_pv_audioconffeature(T_pv_audioconffeature instance);
    partial void UpdateT_pv_audioconffeature(T_pv_audioconffeature instance);
    partial void DeleteT_pv_audioconffeature(T_pv_audioconffeature instance);
    partial void InsertT_pv_Audit(T_pv_Audit instance);
    partial void UpdateT_pv_Audit(T_pv_Audit instance);
    partial void DeleteT_pv_Audit(T_pv_Audit instance);
    partial void InsertT_pv_BillSoftPCode(T_pv_BillSoftPCode instance);
    partial void UpdateT_pv_BillSoftPCode(T_pv_BillSoftPCode instance);
    partial void DeleteT_pv_BillSoftPCode(T_pv_BillSoftPCode instance);
    partial void InsertT_pv_Commitment(T_pv_Commitment instance);
    partial void UpdateT_pv_Commitment(T_pv_Commitment instance);
    partial void DeleteT_pv_Commitment(T_pv_Commitment instance);
    partial void InsertT_pv_FlatDiscount(T_pv_FlatDiscount instance);
    partial void UpdateT_pv_FlatDiscount(T_pv_FlatDiscount instance);
    partial void DeleteT_pv_FlatDiscount(T_pv_FlatDiscount instance);
    partial void InsertT_pv_FlatDiscount_NoCond(T_pv_FlatDiscount_NoCond instance);
    partial void UpdateT_pv_FlatDiscount_NoCond(T_pv_FlatDiscount_NoCond instance);
    partial void DeleteT_pv_FlatDiscount_NoCond(T_pv_FlatDiscount_NoCond instance);
    partial void InsertT_pv_FlatRecurringCharge(T_pv_FlatRecurringCharge instance);
    partial void UpdateT_pv_FlatRecurringCharge(T_pv_FlatRecurringCharge instance);
    partial void DeleteT_pv_FlatRecurringCharge(T_pv_FlatRecurringCharge instance);
    partial void InsertT_pv_FreeUsage(T_pv_FreeUsage instance);
    partial void UpdateT_pv_FreeUsage(T_pv_FreeUsage instance);
    partial void DeleteT_pv_FreeUsage(T_pv_FreeUsage instance);
    partial void InsertT_pv_GroupDiscount_Temp(T_pv_GroupDiscount_Temp instance);
    partial void UpdateT_pv_GroupDiscount_Temp(T_pv_GroupDiscount_Temp instance);
    partial void DeleteT_pv_GroupDiscount_Temp(T_pv_GroupDiscount_Temp instance);
    partial void InsertT_pv_MetraTax(T_pv_MetraTax instance);
    partial void UpdateT_pv_MetraTax(T_pv_MetraTax instance);
    partial void DeleteT_pv_MetraTax(T_pv_MetraTax instance);
    partial void InsertT_pv_movietickets(T_pv_movietickets instance);
    partial void UpdateT_pv_movietickets(T_pv_movietickets instance);
    partial void DeleteT_pv_movietickets(T_pv_movietickets instance);
    partial void InsertT_pv_movietickets_temp(T_pv_movietickets_temp instance);
    partial void UpdateT_pv_movietickets_temp(T_pv_movietickets_temp instance);
    partial void DeleteT_pv_movietickets_temp(T_pv_movietickets_temp instance);
    partial void InsertT_pv_MultiBucketDiscount(T_pv_MultiBucketDiscount instance);
    partial void UpdateT_pv_MultiBucketDiscount(T_pv_MultiBucketDiscount instance);
    partial void DeleteT_pv_MultiBucketDiscount(T_pv_MultiBucketDiscount instance);
    partial void InsertT_pv_MultiBucketPricing(T_pv_MultiBucketPricing instance);
    partial void UpdateT_pv_MultiBucketPricing(T_pv_MultiBucketPricing instance);
    partial void DeleteT_pv_MultiBucketPricing(T_pv_MultiBucketPricing instance);
    partial void InsertT_pv_NonRecurringCharge(T_pv_NonRecurringCharge instance);
    partial void UpdateT_pv_NonRecurringCharge(T_pv_NonRecurringCharge instance);
    partial void DeleteT_pv_NonRecurringCharge(T_pv_NonRecurringCharge instance);
    partial void InsertT_pv_NonStandardCharge(T_pv_NonStandardCharge instance);
    partial void UpdateT_pv_NonStandardCharge(T_pv_NonStandardCharge instance);
    partial void DeleteT_pv_NonStandardCharge(T_pv_NonStandardCharge instance);
    partial void InsertT_pv_NonStandardChargeRequest(T_pv_NonStandardChargeRequest instance);
    partial void UpdateT_pv_NonStandardChargeRequest(T_pv_NonStandardChargeRequest instance);
    partial void DeleteT_pv_NonStandardChargeRequest(T_pv_NonStandardChargeRequest instance);
    partial void InsertT_pv_Payment(T_pv_Payment instance);
    partial void UpdateT_pv_Payment(T_pv_Payment instance);
    partial void DeleteT_pv_Payment(T_pv_Payment instance);
    partial void InsertT_pv_PaymentDetails(T_pv_PaymentDetails instance);
    partial void UpdateT_pv_PaymentDetails(T_pv_PaymentDetails instance);
    partial void DeleteT_pv_PaymentDetails(T_pv_PaymentDetails instance);
    partial void InsertT_pv_PercentDiscount(T_pv_PercentDiscount instance);
    partial void UpdateT_pv_PercentDiscount(T_pv_PercentDiscount instance);
    partial void DeleteT_pv_PercentDiscount(T_pv_PercentDiscount instance);
    partial void InsertT_pv_PercentDiscount_NoCond(T_pv_PercentDiscount_NoCond instance);
    partial void UpdateT_pv_PercentDiscount_NoCond(T_pv_PercentDiscount_NoCond instance);
    partial void DeleteT_pv_PercentDiscount_NoCond(T_pv_PercentDiscount_NoCond instance);
    partial void InsertT_pv_SingleBucketPricing(T_pv_SingleBucketPricing instance);
    partial void UpdateT_pv_SingleBucketPricing(T_pv_SingleBucketPricing instance);
    partial void DeleteT_pv_SingleBucketPricing(T_pv_SingleBucketPricing instance);
    partial void InsertT_pv_smokeaggrcnt(T_pv_smokeaggrcnt instance);
    partial void UpdateT_pv_smokeaggrcnt(T_pv_smokeaggrcnt instance);
    partial void DeleteT_pv_smokeaggrcnt(T_pv_smokeaggrcnt instance);
    partial void InsertT_pv_smokeaggrcnt_temp(T_pv_smokeaggrcnt_temp instance);
    partial void UpdateT_pv_smokeaggrcnt_temp(T_pv_smokeaggrcnt_temp instance);
    partial void DeleteT_pv_smokeaggrcnt_temp(T_pv_smokeaggrcnt_temp instance);
    partial void InsertT_pv_smokeaggrdec(T_pv_smokeaggrdec instance);
    partial void UpdateT_pv_smokeaggrdec(T_pv_smokeaggrdec instance);
    partial void DeleteT_pv_smokeaggrdec(T_pv_smokeaggrdec instance);
    partial void InsertT_pv_smokeaggrdec_temp(T_pv_smokeaggrdec_temp instance);
    partial void UpdateT_pv_smokeaggrdec_temp(T_pv_smokeaggrdec_temp instance);
    partial void DeleteT_pv_smokeaggrdec_temp(T_pv_smokeaggrdec_temp instance);
    partial void InsertT_pv_smoketestpriceableitem(T_pv_smoketestpriceableitem instance);
    partial void UpdateT_pv_smoketestpriceableitem(T_pv_smoketestpriceableitem instance);
    partial void DeleteT_pv_smoketestpriceableitem(T_pv_smoketestpriceableitem instance);
    partial void InsertT_pv_SMSService(T_pv_SMSService instance);
    partial void UpdateT_pv_SMSService(T_pv_SMSService instance);
    partial void DeleteT_pv_SMSService(T_pv_SMSService instance);
    partial void InsertT_pv_songdownloads(T_pv_songdownloads instance);
    partial void UpdateT_pv_songdownloads(T_pv_songdownloads instance);
    partial void DeleteT_pv_songdownloads(T_pv_songdownloads instance);
    partial void InsertT_pv_songdownloads_temp(T_pv_songdownloads_temp instance);
    partial void UpdateT_pv_songdownloads_temp(T_pv_songdownloads_temp instance);
    partial void DeleteT_pv_songdownloads_temp(T_pv_songdownloads_temp instance);
    partial void InsertT_pv_songsession(T_pv_songsession instance);
    partial void UpdateT_pv_songsession(T_pv_songsession instance);
    partial void DeleteT_pv_songsession(T_pv_songsession instance);
    partial void InsertT_pv_songsession_temp(T_pv_songsession_temp instance);
    partial void UpdateT_pv_songsession_temp(T_pv_songsession_temp instance);
    partial void DeleteT_pv_songsession_temp(T_pv_songsession_temp instance);
    partial void InsertT_pv_songsessionchild(T_pv_songsessionchild instance);
    partial void UpdateT_pv_songsessionchild(T_pv_songsessionchild instance);
    partial void DeleteT_pv_songsessionchild(T_pv_songsessionchild instance);
    partial void InsertT_pv_songsessionchild_temp(T_pv_songsessionchild_temp instance);
    partial void UpdateT_pv_songsessionchild_temp(T_pv_songsessionchild_temp instance);
    partial void DeleteT_pv_songsessionchild_temp(T_pv_songsessionchild_temp instance);
    partial void InsertT_pv_stocks(T_pv_stocks instance);
    partial void UpdateT_pv_stocks(T_pv_stocks instance);
    partial void DeleteT_pv_stocks(T_pv_stocks instance);
    partial void InsertT_pv_TestParent(T_pv_TestParent instance);
    partial void UpdateT_pv_TestParent(T_pv_TestParent instance);
    partial void DeleteT_pv_TestParent(T_pv_TestParent instance);
    partial void InsertT_pv_testpi(T_pv_testpi instance);
    partial void UpdateT_pv_testpi(T_pv_testpi instance);
    partial void DeleteT_pv_testpi(T_pv_testpi instance);
    partial void InsertT_pv_testpi2(T_pv_testpi2 instance);
    partial void UpdateT_pv_testpi2(T_pv_testpi2 instance);
    partial void DeleteT_pv_testpi2(T_pv_testpi2 instance);
    partial void InsertT_pv_TestService(T_pv_TestService instance);
    partial void UpdateT_pv_TestService(T_pv_TestService instance);
    partial void DeleteT_pv_TestService(T_pv_TestService instance);
    partial void InsertT_pv_UDRecurringCharge(T_pv_UDRecurringCharge instance);
    partial void UpdateT_pv_UDRecurringCharge(T_pv_UDRecurringCharge instance);
    partial void DeleteT_pv_UDRecurringCharge(T_pv_UDRecurringCharge instance);
    partial void InsertT_rabbitmq_nodes(T_rabbitmq_nodes instance);
    partial void UpdateT_rabbitmq_nodes(T_rabbitmq_nodes instance);
    partial void DeleteT_rabbitmq_nodes(T_rabbitmq_nodes instance);
    partial void InsertT_rabbitmq_queues(T_rabbitmq_queues instance);
    partial void UpdateT_rabbitmq_queues(T_rabbitmq_queues instance);
    partial void DeleteT_rabbitmq_queues(T_rabbitmq_queues instance);
    partial void InsertT_reason_code(T_reason_code instance);
    partial void UpdateT_reason_code(T_reason_code instance);
    partial void DeleteT_reason_code(T_reason_code instance);
    partial void InsertT_recevent(T_recevent instance);
    partial void UpdateT_recevent(T_recevent instance);
    partial void DeleteT_recevent(T_recevent instance);
    partial void InsertT_recevent_eop(T_recevent_eop instance);
    partial void UpdateT_recevent_eop(T_recevent_eop instance);
    partial void DeleteT_recevent_eop(T_recevent_eop instance);
    partial void InsertT_recevent_inst(T_recevent_inst instance);
    partial void UpdateT_recevent_inst(T_recevent_inst instance);
    partial void DeleteT_recevent_inst(T_recevent_inst instance);
    partial void InsertT_recevent_inst_audit(T_recevent_inst_audit instance);
    partial void UpdateT_recevent_inst_audit(T_recevent_inst_audit instance);
    partial void DeleteT_recevent_inst_audit(T_recevent_inst_audit instance);
    partial void InsertT_recevent_run(T_recevent_run instance);
    partial void UpdateT_recevent_run(T_recevent_run instance);
    partial void DeleteT_recevent_run(T_recevent_run instance);
    partial void InsertT_recevent_run_details(T_recevent_run_details instance);
    partial void UpdateT_recevent_run_details(T_recevent_run_details instance);
    partial void DeleteT_recevent_run_details(T_recevent_run_details instance);
    partial void InsertT_recevent_scheduled(T_recevent_scheduled instance);
    partial void UpdateT_recevent_scheduled(T_recevent_scheduled instance);
    partial void DeleteT_recevent_scheduled(T_recevent_scheduled instance);
    partial void InsertT_recur(T_recur instance);
    partial void UpdateT_recur(T_recur instance);
    partial void DeleteT_recur(T_recur instance);
    partial void InsertT_recur_enum(T_recur_enum instance);
    partial void UpdateT_recur_enum(T_recur_enum instance);
    partial void DeleteT_recur_enum(T_recur_enum instance);
    partial void InsertT_recur_value(T_recur_value instance);
    partial void UpdateT_recur_value(T_recur_value instance);
    partial void DeleteT_recur_value(T_recur_value instance);
    partial void InsertT_recurring_event_acct_log(T_recurring_event_acct_log instance);
    partial void UpdateT_recurring_event_acct_log(T_recurring_event_acct_log instance);
    partial void DeleteT_recurring_event_acct_log(T_recurring_event_acct_log instance);
    partial void InsertT_ReportingDBLog(T_ReportingDBLog instance);
    partial void UpdateT_ReportingDBLog(T_ReportingDBLog instance);
    partial void DeleteT_ReportingDBLog(T_ReportingDBLog instance);
    partial void InsertT_rerun(T_rerun instance);
    partial void UpdateT_rerun(T_rerun instance);
    partial void DeleteT_rerun(T_rerun instance);
    partial void InsertT_role(T_role instance);
    partial void UpdateT_role(T_role instance);
    partial void DeleteT_role(T_role instance);
    partial void InsertT_rsched(T_rsched instance);
    partial void UpdateT_rsched(T_rsched instance);
    partial void DeleteT_rsched(T_rsched instance);
    partial void InsertT_rsched_pub(T_rsched_pub instance);
    partial void UpdateT_rsched_pub(T_rsched_pub instance);
    partial void DeleteT_rsched_pub(T_rsched_pub instance);
    partial void InsertT_rulesetdefinition(T_rulesetdefinition instance);
    partial void UpdateT_rulesetdefinition(T_rulesetdefinition instance);
    partial void DeleteT_rulesetdefinition(T_rulesetdefinition instance);
    partial void InsertT_sch_daily(T_sch_daily instance);
    partial void UpdateT_sch_daily(T_sch_daily instance);
    partial void DeleteT_sch_daily(T_sch_daily instance);
    partial void InsertT_sch_monthly(T_sch_monthly instance);
    partial void UpdateT_sch_monthly(T_sch_monthly instance);
    partial void DeleteT_sch_monthly(T_sch_monthly instance);
    partial void InsertT_sch_weekly(T_sch_weekly instance);
    partial void UpdateT_sch_weekly(T_sch_weekly instance);
    partial void DeleteT_sch_weekly(T_sch_weekly instance);
    partial void InsertT_securitem(T_securitem instance);
    partial void UpdateT_securitem(T_securitem instance);
    partial void DeleteT_securitem(T_securitem instance);
    partial void InsertT_service_def_log(T_service_def_log instance);
    partial void UpdateT_service_def_log(T_service_def_log instance);
    partial void DeleteT_service_def_log(T_service_def_log instance);
    partial void InsertT_service_def_prop(T_service_def_prop instance);
    partial void UpdateT_service_def_prop(T_service_def_prop instance);
    partial void DeleteT_service_def_prop(T_service_def_prop instance);
    partial void InsertT_session(T_session instance);
    partial void UpdateT_session(T_session instance);
    partial void DeleteT_session(T_session instance);
    partial void InsertT_session_set(T_session_set instance);
    partial void UpdateT_session_set(T_session_set instance);
    partial void DeleteT_session_set(T_session_set instance);
    partial void InsertT_session_state(T_session_state instance);
    partial void UpdateT_session_state(T_session_state instance);
    partial void DeleteT_session_state(T_session_state instance);
    partial void InsertT_site_user(T_site_user instance);
    partial void UpdateT_site_user(T_site_user instance);
    partial void DeleteT_site_user(T_site_user instance);
    partial void InsertT_spec_char_values(T_spec_char_values instance);
    partial void UpdateT_spec_char_values(T_spec_char_values instance);
    partial void DeleteT_spec_char_values(T_spec_char_values instance);
    partial void InsertT_spec_characteristics(T_spec_characteristics instance);
    partial void UpdateT_spec_characteristics(T_spec_characteristics instance);
    partial void DeleteT_spec_characteristics(T_spec_characteristics instance);
    partial void InsertT_spec_val_map(T_spec_val_map instance);
    partial void UpdateT_spec_val_map(T_spec_val_map instance);
    partial void DeleteT_spec_val_map(T_spec_val_map instance);
    partial void InsertT_stored_procedure_table_lock(T_stored_procedure_table_lock instance);
    partial void UpdateT_stored_procedure_table_lock(T_stored_procedure_table_lock instance);
    partial void DeleteT_stored_procedure_table_lock(T_stored_procedure_table_lock instance);
    partial void InsertT_str_col_capability(T_str_col_capability instance);
    partial void UpdateT_str_col_capability(T_str_col_capability instance);
    partial void DeleteT_str_col_capability(T_str_col_capability instance);
    partial void InsertT_svc_AccountCreateAndSubscribe(T_svc_AccountCreateAndSubscribe instance);
    partial void UpdateT_svc_AccountCreateAndSubscribe(T_svc_AccountCreateAndSubscribe instance);
    partial void DeleteT_svc_AccountCreateAndSubscribe(T_svc_AccountCreateAndSubscribe instance);
    partial void InsertT_svc_AccountCreation(T_svc_AccountCreation instance);
    partial void UpdateT_svc_AccountCreation(T_svc_AccountCreation instance);
    partial void DeleteT_svc_AccountCreation(T_svc_AccountCreation instance);
    partial void InsertT_svc_AccountCredit(T_svc_AccountCredit instance);
    partial void UpdateT_svc_AccountCredit(T_svc_AccountCredit instance);
    partial void DeleteT_svc_AccountCredit(T_svc_AccountCredit instance);
    partial void InsertT_svc_AccountCreditRequest(T_svc_AccountCreditRequest instance);
    partial void UpdateT_svc_AccountCreditRequest(T_svc_AccountCreditRequest instance);
    partial void DeleteT_svc_AccountCreditRequest(T_svc_AccountCreditRequest instance);
    partial void InsertT_svc_AccountMapping(T_svc_AccountMapping instance);
    partial void UpdateT_svc_AccountMapping(T_svc_AccountMapping instance);
    partial void DeleteT_svc_AccountMapping(T_svc_AccountMapping instance);
    partial void InsertT_svc_AddCharge(T_svc_AddCharge instance);
    partial void UpdateT_svc_AddCharge(T_svc_AddCharge instance);
    partial void DeleteT_svc_AddCharge(T_svc_AddCharge instance);
    partial void InsertT_svc_ARAccountCreation(T_svc_ARAccountCreation instance);
    partial void UpdateT_svc_ARAccountCreation(T_svc_ARAccountCreation instance);
    partial void DeleteT_svc_ARAccountCreation(T_svc_ARAccountCreation instance);
    partial void InsertT_svc_ARAdjustment(T_svc_ARAdjustment instance);
    partial void UpdateT_svc_ARAdjustment(T_svc_ARAdjustment instance);
    partial void DeleteT_svc_ARAdjustment(T_svc_ARAdjustment instance);
    partial void InsertT_svc_ARSalesPersonCreation(T_svc_ARSalesPersonCreation instance);
    partial void UpdateT_svc_ARSalesPersonCreation(T_svc_ARSalesPersonCreation instance);
    partial void DeleteT_svc_ARSalesPersonCreation(T_svc_ARSalesPersonCreation instance);
    partial void InsertT_svc_ARTerritoryUpdate(T_svc_ARTerritoryUpdate instance);
    partial void UpdateT_svc_ARTerritoryUpdate(T_svc_ARTerritoryUpdate instance);
    partial void DeleteT_svc_ARTerritoryUpdate(T_svc_ARTerritoryUpdate instance);
    partial void InsertT_svc_audioconfcall(T_svc_audioconfcall instance);
    partial void UpdateT_svc_audioconfcall(T_svc_audioconfcall instance);
    partial void DeleteT_svc_audioconfcall(T_svc_audioconfcall instance);
    partial void InsertT_svc_audioconfconnection(T_svc_audioconfconnection instance);
    partial void UpdateT_svc_audioconfconnection(T_svc_audioconfconnection instance);
    partial void DeleteT_svc_audioconfconnection(T_svc_audioconfconnection instance);
    partial void InsertT_svc_audioconffeature(T_svc_audioconffeature instance);
    partial void UpdateT_svc_audioconffeature(T_svc_audioconffeature instance);
    partial void DeleteT_svc_audioconffeature(T_svc_audioconffeature instance);
    partial void InsertT_svc_BillSoftPCode(T_svc_BillSoftPCode instance);
    partial void UpdateT_svc_BillSoftPCode(T_svc_BillSoftPCode instance);
    partial void DeleteT_svc_BillSoftPCode(T_svc_BillSoftPCode instance);
    partial void InsertT_svc_Commitment(T_svc_Commitment instance);
    partial void UpdateT_svc_Commitment(T_svc_Commitment instance);
    partial void DeleteT_svc_Commitment(T_svc_Commitment instance);
    partial void InsertT_svc_DTCGetWhereAbouts(T_svc_DTCGetWhereAbouts instance);
    partial void UpdateT_svc_DTCGetWhereAbouts(T_svc_DTCGetWhereAbouts instance);
    partial void DeleteT_svc_DTCGetWhereAbouts(T_svc_DTCGetWhereAbouts instance);
    partial void InsertT_svc_FlatDiscount(T_svc_FlatDiscount instance);
    partial void UpdateT_svc_FlatDiscount(T_svc_FlatDiscount instance);
    partial void DeleteT_svc_FlatDiscount(T_svc_FlatDiscount instance);
    partial void InsertT_svc_FlatDiscount_NoCond(T_svc_FlatDiscount_NoCond instance);
    partial void UpdateT_svc_FlatDiscount_NoCond(T_svc_FlatDiscount_NoCond instance);
    partial void DeleteT_svc_FlatDiscount_NoCond(T_svc_FlatDiscount_NoCond instance);
    partial void InsertT_svc_FlatRecurringCharge(T_svc_FlatRecurringCharge instance);
    partial void UpdateT_svc_FlatRecurringCharge(T_svc_FlatRecurringCharge instance);
    partial void DeleteT_svc_FlatRecurringCharge(T_svc_FlatRecurringCharge instance);
    partial void InsertT_svc_FreeUsage(T_svc_FreeUsage instance);
    partial void UpdateT_svc_FreeUsage(T_svc_FreeUsage instance);
    partial void DeleteT_svc_FreeUsage(T_svc_FreeUsage instance);
    partial void InsertT_svc_GSMConnect(T_svc_GSMConnect instance);
    partial void UpdateT_svc_GSMConnect(T_svc_GSMConnect instance);
    partial void DeleteT_svc_GSMConnect(T_svc_GSMConnect instance);
    partial void InsertT_svc_GSMCreate(T_svc_GSMCreate instance);
    partial void UpdateT_svc_GSMCreate(T_svc_GSMCreate instance);
    partial void DeleteT_svc_GSMCreate(T_svc_GSMCreate instance);
    partial void InsertT_svc_GSMCreateAndConnect(T_svc_GSMCreateAndConnect instance);
    partial void UpdateT_svc_GSMCreateAndConnect(T_svc_GSMCreateAndConnect instance);
    partial void DeleteT_svc_GSMCreateAndConnect(T_svc_GSMCreateAndConnect instance);
    partial void InsertT_svc_GSMDisconnect(T_svc_GSMDisconnect instance);
    partial void UpdateT_svc_GSMDisconnect(T_svc_GSMDisconnect instance);
    partial void DeleteT_svc_GSMDisconnect(T_svc_GSMDisconnect instance);
    partial void InsertT_svc_GSMUpdate(T_svc_GSMUpdate instance);
    partial void UpdateT_svc_GSMUpdate(T_svc_GSMUpdate instance);
    partial void DeleteT_svc_GSMUpdate(T_svc_GSMUpdate instance);
    partial void InsertT_svc_Login(T_svc_Login instance);
    partial void UpdateT_svc_Login(T_svc_Login instance);
    partial void DeleteT_svc_Login(T_svc_Login instance);
    partial void InsertT_svc_MetraTax(T_svc_MetraTax instance);
    partial void UpdateT_svc_MetraTax(T_svc_MetraTax instance);
    partial void DeleteT_svc_MetraTax(T_svc_MetraTax instance);
    partial void InsertT_svc_movietickets(T_svc_movietickets instance);
    partial void UpdateT_svc_movietickets(T_svc_movietickets instance);
    partial void DeleteT_svc_movietickets(T_svc_movietickets instance);
    partial void InsertT_svc_movietickets_temp(T_svc_movietickets_temp instance);
    partial void UpdateT_svc_movietickets_temp(T_svc_movietickets_temp instance);
    partial void DeleteT_svc_movietickets_temp(T_svc_movietickets_temp instance);
    partial void InsertT_svc_MultiBucketDiscount(T_svc_MultiBucketDiscount instance);
    partial void UpdateT_svc_MultiBucketDiscount(T_svc_MultiBucketDiscount instance);
    partial void DeleteT_svc_MultiBucketDiscount(T_svc_MultiBucketDiscount instance);
    partial void InsertT_svc_MultiBucketPricing(T_svc_MultiBucketPricing instance);
    partial void UpdateT_svc_MultiBucketPricing(T_svc_MultiBucketPricing instance);
    partial void DeleteT_svc_MultiBucketPricing(T_svc_MultiBucketPricing instance);
    partial void InsertT_svc_NonRecurringCharge(T_svc_NonRecurringCharge instance);
    partial void UpdateT_svc_NonRecurringCharge(T_svc_NonRecurringCharge instance);
    partial void DeleteT_svc_NonRecurringCharge(T_svc_NonRecurringCharge instance);
    partial void InsertT_svc_NonStandardCharge(T_svc_NonStandardCharge instance);
    partial void UpdateT_svc_NonStandardCharge(T_svc_NonStandardCharge instance);
    partial void DeleteT_svc_NonStandardCharge(T_svc_NonStandardCharge instance);
    partial void InsertT_svc_NonStandardChargeRequest(T_svc_NonStandardChargeRequest instance);
    partial void UpdateT_svc_NonStandardChargeRequest(T_svc_NonStandardChargeRequest instance);
    partial void DeleteT_svc_NonStandardChargeRequest(T_svc_NonStandardChargeRequest instance);
    partial void InsertT_svc_Payment(T_svc_Payment instance);
    partial void UpdateT_svc_Payment(T_svc_Payment instance);
    partial void DeleteT_svc_Payment(T_svc_Payment instance);
    partial void InsertT_svc_PaymentDetails(T_svc_PaymentDetails instance);
    partial void UpdateT_svc_PaymentDetails(T_svc_PaymentDetails instance);
    partial void DeleteT_svc_PaymentDetails(T_svc_PaymentDetails instance);
    partial void InsertT_svc_PercentDiscount(T_svc_PercentDiscount instance);
    partial void UpdateT_svc_PercentDiscount(T_svc_PercentDiscount instance);
    partial void DeleteT_svc_PercentDiscount(T_svc_PercentDiscount instance);
    partial void InsertT_svc_PercentDiscount_NoCond(T_svc_PercentDiscount_NoCond instance);
    partial void UpdateT_svc_PercentDiscount_NoCond(T_svc_PercentDiscount_NoCond instance);
    partial void DeleteT_svc_PercentDiscount_NoCond(T_svc_PercentDiscount_NoCond instance);
    partial void InsertT_svc_SingleBucketPricing(T_svc_SingleBucketPricing instance);
    partial void UpdateT_svc_SingleBucketPricing(T_svc_SingleBucketPricing instance);
    partial void DeleteT_svc_SingleBucketPricing(T_svc_SingleBucketPricing instance);
    partial void InsertT_svc_smokeaggrcnt(T_svc_smokeaggrcnt instance);
    partial void UpdateT_svc_smokeaggrcnt(T_svc_smokeaggrcnt instance);
    partial void DeleteT_svc_smokeaggrcnt(T_svc_smokeaggrcnt instance);
    partial void InsertT_svc_smokeaggrcnt_temp(T_svc_smokeaggrcnt_temp instance);
    partial void UpdateT_svc_smokeaggrcnt_temp(T_svc_smokeaggrcnt_temp instance);
    partial void DeleteT_svc_smokeaggrcnt_temp(T_svc_smokeaggrcnt_temp instance);
    partial void InsertT_svc_smokeaggrdec(T_svc_smokeaggrdec instance);
    partial void UpdateT_svc_smokeaggrdec(T_svc_smokeaggrdec instance);
    partial void DeleteT_svc_smokeaggrdec(T_svc_smokeaggrdec instance);
    partial void InsertT_svc_smokeaggrdec_temp(T_svc_smokeaggrdec_temp instance);
    partial void UpdateT_svc_smokeaggrdec_temp(T_svc_smokeaggrdec_temp instance);
    partial void DeleteT_svc_smokeaggrdec_temp(T_svc_smokeaggrdec_temp instance);
    partial void InsertT_svc_SMSService(T_svc_SMSService instance);
    partial void UpdateT_svc_SMSService(T_svc_SMSService instance);
    partial void DeleteT_svc_SMSService(T_svc_SMSService instance);
    partial void InsertT_svc_songdownloads(T_svc_songdownloads instance);
    partial void UpdateT_svc_songdownloads(T_svc_songdownloads instance);
    partial void DeleteT_svc_songdownloads(T_svc_songdownloads instance);
    partial void InsertT_svc_songdownloads_temp(T_svc_songdownloads_temp instance);
    partial void UpdateT_svc_songdownloads_temp(T_svc_songdownloads_temp instance);
    partial void DeleteT_svc_songdownloads_temp(T_svc_songdownloads_temp instance);
    partial void InsertT_svc_songsession(T_svc_songsession instance);
    partial void UpdateT_svc_songsession(T_svc_songsession instance);
    partial void DeleteT_svc_songsession(T_svc_songsession instance);
    partial void InsertT_svc_songsession_temp(T_svc_songsession_temp instance);
    partial void UpdateT_svc_songsession_temp(T_svc_songsession_temp instance);
    partial void DeleteT_svc_songsession_temp(T_svc_songsession_temp instance);
    partial void InsertT_svc_songsessionchild(T_svc_songsessionchild instance);
    partial void UpdateT_svc_songsessionchild(T_svc_songsessionchild instance);
    partial void DeleteT_svc_songsessionchild(T_svc_songsessionchild instance);
    partial void InsertT_svc_songsessionchild_temp(T_svc_songsessionchild_temp instance);
    partial void UpdateT_svc_songsessionchild_temp(T_svc_songsessionchild_temp instance);
    partial void DeleteT_svc_songsessionchild_temp(T_svc_songsessionchild_temp instance);
    partial void InsertT_svc_stocks(T_svc_stocks instance);
    partial void UpdateT_svc_stocks(T_svc_stocks instance);
    partial void DeleteT_svc_stocks(T_svc_stocks instance);
    partial void InsertT_svc_SystemAccountCreation(T_svc_SystemAccountCreation instance);
    partial void UpdateT_svc_SystemAccountCreation(T_svc_SystemAccountCreation instance);
    partial void DeleteT_svc_SystemAccountCreation(T_svc_SystemAccountCreation instance);
    partial void InsertT_svc_TestParent(T_svc_TestParent instance);
    partial void UpdateT_svc_TestParent(T_svc_TestParent instance);
    partial void DeleteT_svc_TestParent(T_svc_TestParent instance);
    partial void InsertT_svc_testpi(T_svc_testpi instance);
    partial void UpdateT_svc_testpi(T_svc_testpi instance);
    partial void DeleteT_svc_testpi(T_svc_testpi instance);
    partial void InsertT_svc_testpi2(T_svc_testpi2 instance);
    partial void UpdateT_svc_testpi2(T_svc_testpi2 instance);
    partial void DeleteT_svc_testpi2(T_svc_testpi2 instance);
    partial void InsertT_svc_TestService(T_svc_TestService instance);
    partial void UpdateT_svc_TestService(T_svc_TestService instance);
    partial void DeleteT_svc_TestService(T_svc_TestService instance);
    partial void InsertT_svc_testservice2(T_svc_testservice2 instance);
    partial void UpdateT_svc_testservice2(T_svc_testservice2 instance);
    partial void DeleteT_svc_testservice2(T_svc_testservice2 instance);
    partial void InsertT_svc_UDRecurringCharge(T_svc_UDRecurringCharge instance);
    partial void UpdateT_svc_UDRecurringCharge(T_svc_UDRecurringCharge instance);
    partial void DeleteT_svc_UDRecurringCharge(T_svc_UDRecurringCharge instance);
    partial void InsertT_sys_upgrade(T_sys_upgrade instance);
    partial void UpdateT_sys_upgrade(T_sys_upgrade instance);
    partial void DeleteT_sys_upgrade(T_sys_upgrade instance);
    partial void InsertT_tariff(T_tariff instance);
    partial void UpdateT_tariff(T_tariff instance);
    partial void DeleteT_tariff(T_tariff instance);
    partial void InsertT_tax_billsoft_exemptions(T_tax_billsoft_exemptions instance);
    partial void UpdateT_tax_billsoft_exemptions(T_tax_billsoft_exemptions instance);
    partial void DeleteT_tax_billsoft_exemptions(T_tax_billsoft_exemptions instance);
    partial void InsertT_tax_billsoft_override(T_tax_billsoft_override instance);
    partial void UpdateT_tax_billsoft_override(T_tax_billsoft_override instance);
    partial void DeleteT_tax_billsoft_override(T_tax_billsoft_override instance);
    partial void InsertT_tax_billsoft_pc_map(T_tax_billsoft_pc_map instance);
    partial void UpdateT_tax_billsoft_pc_map(T_tax_billsoft_pc_map instance);
    partial void DeleteT_tax_billsoft_pc_map(T_tax_billsoft_pc_map instance);
    partial void InsertT_tax_run(T_tax_run instance);
    partial void UpdateT_tax_run(T_tax_run instance);
    partial void DeleteT_tax_run(T_tax_run instance);
    partial void InsertT_tax_vendor_params(T_tax_vendor_params instance);
    partial void UpdateT_tax_vendor_params(T_tax_vendor_params instance);
    partial void DeleteT_tax_vendor_params(T_tax_vendor_params instance);
    partial void InsertT_unique_cons(T_unique_cons instance);
    partial void UpdateT_unique_cons(T_unique_cons instance);
    partial void DeleteT_unique_cons(T_unique_cons instance);
    partial void InsertT_unique_cons_columns(T_unique_cons_columns instance);
    partial void UpdateT_unique_cons_columns(T_unique_cons_columns instance);
    partial void DeleteT_unique_cons_columns(T_unique_cons_columns instance);
    partial void InsertT_updatestatsinfo(T_updatestatsinfo instance);
    partial void UpdateT_updatestatsinfo(T_updatestatsinfo instance);
    partial void DeleteT_updatestatsinfo(T_updatestatsinfo instance);
    partial void InsertT_usage_cycle(T_usage_cycle instance);
    partial void UpdateT_usage_cycle(T_usage_cycle instance);
    partial void DeleteT_usage_cycle(T_usage_cycle instance);
    partial void InsertT_usage_cycle_type(T_usage_cycle_type instance);
    partial void UpdateT_usage_cycle_type(T_usage_cycle_type instance);
    partial void DeleteT_usage_cycle_type(T_usage_cycle_type instance);
    partial void InsertT_usage_interval(T_usage_interval instance);
    partial void UpdateT_usage_interval(T_usage_interval instance);
    partial void DeleteT_usage_interval(T_usage_interval instance);
    partial void InsertT_user_credentials(T_user_credentials instance);
    partial void UpdateT_user_credentials(T_user_credentials instance);
    partial void DeleteT_user_credentials(T_user_credentials instance);
    partial void InsertT_user_credentials_history(T_user_credentials_history instance);
    partial void UpdateT_user_credentials_history(T_user_credentials_history instance);
    partial void DeleteT_user_credentials_history(T_user_credentials_history instance);
    partial void InsertT_view_hierarchy(T_view_hierarchy instance);
    partial void UpdateT_view_hierarchy(T_view_hierarchy instance);
    partial void DeleteT_view_hierarchy(T_view_hierarchy instance);
    partial void InsertT_wf_acc_inst_map(T_wf_acc_inst_map instance);
    partial void UpdateT_wf_acc_inst_map(T_wf_acc_inst_map instance);
    partial void DeleteT_wf_acc_inst_map(T_wf_acc_inst_map instance);
    partial void InsertT_wf_be_inst_map(T_wf_be_inst_map instance);
    partial void UpdateT_wf_be_inst_map(T_wf_be_inst_map instance);
    partial void DeleteT_wf_be_inst_map(T_wf_be_inst_map instance);
    partial void InsertTier_domain_mapping(Tier_domain_mapping instance);
    partial void UpdateTier_domain_mapping(Tier_domain_mapping instance);
    partial void DeleteTier_domain_mapping(Tier_domain_mapping instance);
    partial void InsertTmp_billing_rerun_accounts(Tmp_billing_rerun_accounts instance);
    partial void UpdateTmp_billing_rerun_accounts(Tmp_billing_rerun_accounts instance);
    partial void DeleteTmp_billing_rerun_accounts(Tmp_billing_rerun_accounts instance);
    #endregion
		
		public NetMeter(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetMeter(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetMeter(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetMeter(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agg_aqg_map> Agg_aqg_map
		{
			get
			{
				return this.GetTable<Agg_aqg_map>();
			}
		}
		
		public System.Data.Linq.Table<Agg_boundary_group_acc_map> Agg_boundary_group_acc_map
		{
			get
			{
				return this.GetTable<Agg_boundary_group_acc_map>();
			}
		}
		
		public System.Data.Linq.Table<Agg_boundary_group_aqg_map> Agg_boundary_group_aqg_map
		{
			get
			{
				return this.GetTable<Agg_boundary_group_aqg_map>();
			}
		}
		
		public System.Data.Linq.Table<Agg_boundary_groups> Agg_boundary_groups
		{
			get
			{
				return this.GetTable<Agg_boundary_groups>();
			}
		}
		
		public System.Data.Linq.Table<Agg_bundle_new_pos> Agg_bundle_new_pos
		{
			get
			{
				return this.GetTable<Agg_bundle_new_pos>();
			}
		}
		
		public System.Data.Linq.Table<Agg_bundle_old_pos> Agg_bundle_old_pos
		{
			get
			{
				return this.GetTable<Agg_bundle_old_pos>();
			}
		}
		
		public System.Data.Linq.Table<Agg_bundle_pos> Agg_bundle_pos
		{
			get
			{
				return this.GetTable<Agg_bundle_pos>();
			}
		}
		
		public System.Data.Linq.Table<Agg_bundle_pts> Agg_bundle_pts
		{
			get
			{
				return this.GetTable<Agg_bundle_pts>();
			}
		}
		
		public System.Data.Linq.Table<Agg_charge_audit_trail> Agg_charge_audit_trail
		{
			get
			{
				return this.GetTable<Agg_charge_audit_trail>();
			}
		}
		
		public System.Data.Linq.Table<Agg_charge_definition> Agg_charge_definition
		{
			get
			{
				return this.GetTable<Agg_charge_definition>();
			}
		}
		
		public System.Data.Linq.Table<Agg_custom_enums> Agg_custom_enums
		{
			get
			{
				return this.GetTable<Agg_custom_enums>();
			}
		}
		
		public System.Data.Linq.Table<Agg_decision_audit_trail> Agg_decision_audit_trail
		{
			get
			{
				return this.GetTable<Agg_decision_audit_trail>();
			}
		}
		
		public System.Data.Linq.Table<Agg_decision_info> Agg_decision_info
		{
			get
			{
				return this.GetTable<Agg_decision_info>();
			}
		}
		
		public System.Data.Linq.Table<Agg_decision_rollover> Agg_decision_rollover
		{
			get
			{
				return this.GetTable<Agg_decision_rollover>();
			}
		}
		
		public System.Data.Linq.Table<Agg_field_formats> Agg_field_formats
		{
			get
			{
				return this.GetTable<Agg_field_formats>();
			}
		}
		
		public System.Data.Linq.Table<Agg_mapping_chain_members> Agg_mapping_chain_members
		{
			get
			{
				return this.GetTable<Agg_mapping_chain_members>();
			}
		}
		
		public System.Data.Linq.Table<Agg_mapping_chains> Agg_mapping_chains
		{
			get
			{
				return this.GetTable<Agg_mapping_chains>();
			}
		}
		
		public System.Data.Linq.Table<Agg_mapping_table_rules> Agg_mapping_table_rules
		{
			get
			{
				return this.GetTable<Agg_mapping_table_rules>();
			}
		}
		
		public System.Data.Linq.Table<Agg_mapping_tables> Agg_mapping_tables
		{
			get
			{
				return this.GetTable<Agg_mapping_tables>();
			}
		}
		
		public System.Data.Linq.Table<Agg_orig_field_map> Agg_orig_field_map
		{
			get
			{
				return this.GetTable<Agg_orig_field_map>();
			}
		}
		
		public System.Data.Linq.Table<Agg_param_name_map> Agg_param_name_map
		{
			get
			{
				return this.GetTable<Agg_param_name_map>();
			}
		}
		
		public System.Data.Linq.Table<Agg_pushed_usage> Agg_pushed_usage
		{
			get
			{
				return this.GetTable<Agg_pushed_usage>();
			}
		}
		
		public System.Data.Linq.Table<Agg_pv_sortkeys> Agg_pv_sortkeys
		{
			get
			{
				return this.GetTable<Agg_pv_sortkeys>();
			}
		}
		
		public System.Data.Linq.Table<Agg_usage_audit_trail> Agg_usage_audit_trail
		{
			get
			{
				return this.GetTable<Agg_usage_audit_trail>();
			}
		}
		
		public System.Data.Linq.Table<Agg_usage_hook_id_accs> Agg_usage_hook_id_accs
		{
			get
			{
				return this.GetTable<Agg_usage_hook_id_accs>();
			}
		}
		
		public System.Data.Linq.Table<Amp_staging_tables> Amp_staging_tables
		{
			get
			{
				return this.GetTable<Amp_staging_tables>();
			}
		}
		
		public System.Data.Linq.Table<Cdc_Captured_columns> Cdc_Captured_columns
		{
			get
			{
				return this.GetTable<Cdc_Captured_columns>();
			}
		}
		
		public System.Data.Linq.Table<Cdc_Change_tables> Cdc_Change_tables
		{
			get
			{
				return this.GetTable<Cdc_Change_tables>();
			}
		}
		
		public System.Data.Linq.Table<Cdc_Ddl_history> Cdc_Ddl_history
		{
			get
			{
				return this.GetTable<Cdc_Ddl_history>();
			}
		}
		
		public System.Data.Linq.Table<Decision_qualification_groups> Decision_qualification_groups
		{
			get
			{
				return this.GetTable<Decision_qualification_groups>();
			}
		}
		
		public System.Data.Linq.Table<Cdc_Index_columns> Cdc_Index_columns
		{
			get
			{
				return this.GetTable<Cdc_Index_columns>();
			}
		}
		
		public System.Data.Linq.Table<Cdc_Lsn_time_mapping> Cdc_Lsn_time_mapping
		{
			get
			{
				return this.GetTable<Cdc_Lsn_time_mapping>();
			}
		}
		
		public System.Data.Linq.Table<Metadata> Metadata
		{
			get
			{
				return this.GetTable<Metadata>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_change_tracking_nodes> Mvm_change_tracking_nodes
		{
			get
			{
				return this.GetTable<Mvm_change_tracking_nodes>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_change_tracking_persistent> Mvm_change_tracking_persistent
		{
			get
			{
				return this.GetTable<Mvm_change_tracking_persistent>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_change_tracking_status> Mvm_change_tracking_status
		{
			get
			{
				return this.GetTable<Mvm_change_tracking_status>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_cluster_history> Mvm_cluster_history
		{
			get
			{
				return this.GetTable<Mvm_cluster_history>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_cluster_run_history> Mvm_cluster_run_history
		{
			get
			{
				return this.GetTable<Mvm_cluster_run_history>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_clusters> Mvm_clusters
		{
			get
			{
				return this.GetTable<Mvm_clusters>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_counters> Mvm_counters
		{
			get
			{
				return this.GetTable<Mvm_counters>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_global_params> Mvm_global_params
		{
			get
			{
				return this.GetTable<Mvm_global_params>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_logging> Mvm_logging
		{
			get
			{
				return this.GetTable<Mvm_logging>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_logical_cluster_def> Mvm_logical_cluster_def
		{
			get
			{
				return this.GetTable<Mvm_logical_cluster_def>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_logical_cluster_nodes> Mvm_logical_cluster_nodes
		{
			get
			{
				return this.GetTable<Mvm_logical_cluster_nodes>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_param_table_props> Mvm_param_table_props
		{
			get
			{
				return this.GetTable<Mvm_param_table_props>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_physical_cluster_def> Mvm_physical_cluster_def
		{
			get
			{
				return this.GetTable<Mvm_physical_cluster_def>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_physical_cluster_nodes> Mvm_physical_cluster_nodes
		{
			get
			{
				return this.GetTable<Mvm_physical_cluster_nodes>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_rabbitmq_map> Mvm_rabbitmq_map
		{
			get
			{
				return this.GetTable<Mvm_rabbitmq_map>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_resource_def> Mvm_resource_def
		{
			get
			{
				return this.GetTable<Mvm_resource_def>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_resource_nodes> Mvm_resource_nodes
		{
			get
			{
				return this.GetTable<Mvm_resource_nodes>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_resubmit_runs> Mvm_resubmit_runs
		{
			get
			{
				return this.GetTable<Mvm_resubmit_runs>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_run_history> Mvm_run_history
		{
			get
			{
				return this.GetTable<Mvm_run_history>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_scheduled_tasks> Mvm_scheduled_tasks
		{
			get
			{
				return this.GetTable<Mvm_scheduled_tasks>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_semaphores> Mvm_semaphores
		{
			get
			{
				return this.GetTable<Mvm_semaphores>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_server_credentials> Mvm_server_credentials
		{
			get
			{
				return this.GetTable<Mvm_server_credentials>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_temp_field_formats> Mvm_temp_field_formats
		{
			get
			{
				return this.GetTable<Mvm_temp_field_formats>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_temp_field_numbers> Mvm_temp_field_numbers
		{
			get
			{
				return this.GetTable<Mvm_temp_field_numbers>();
			}
		}
		
		public System.Data.Linq.Table<Mvm_temp_rcn> Mvm_temp_rcn
		{
			get
			{
				return this.GetTable<Mvm_temp_rcn>();
			}
		}
		
		public System.Data.Linq.Table<NotificationConfiguration> NotificationConfiguration
		{
			get
			{
				return this.GetTable<NotificationConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<NotificationEndpoint> NotificationEndpoint
		{
			get
			{
				return this.GetTable<NotificationEndpoint>();
			}
		}
		
		public System.Data.Linq.Table<QuoteIndividualPrice> QuoteIndividualPrice
		{
			get
			{
				return this.GetTable<QuoteIndividualPrice>();
			}
		}
		
		public System.Data.Linq.Table<Recon_compressed_fields> Recon_compressed_fields
		{
			get
			{
				return this.GetTable<Recon_compressed_fields>();
			}
		}
		
		public System.Data.Linq.Table<Recon_ignored_fields> Recon_ignored_fields
		{
			get
			{
				return this.GetTable<Recon_ignored_fields>();
			}
		}
		
		public System.Data.Linq.Table<Recon_join_rules> Recon_join_rules
		{
			get
			{
				return this.GetTable<Recon_join_rules>();
			}
		}
		
		public System.Data.Linq.Table<Recon_tables> Recon_tables
		{
			get
			{
				return this.GetTable<Recon_tables>();
			}
		}
		
		public System.Data.Linq.Table<Recon_worklist> Recon_worklist
		{
			get
			{
				return this.GetTable<Recon_worklist>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_bucket_map> T_acc_bucket_map
		{
			get
			{
				return this.GetTable<T_acc_bucket_map>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_ownership> T_acc_ownership
		{
			get
			{
				return this.GetTable<T_acc_ownership>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template> T_acc_template
		{
			get
			{
				return this.GetTable<T_acc_template>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_props> T_acc_template_props
		{
			get
			{
				return this.GetTable<T_acc_template_props>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_props_pub> T_acc_template_props_pub
		{
			get
			{
				return this.GetTable<T_acc_template_props_pub>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_session> T_acc_template_session
		{
			get
			{
				return this.GetTable<T_acc_template_session>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_session_detail> T_acc_template_session_detail
		{
			get
			{
				return this.GetTable<T_acc_template_session_detail>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_subs> T_acc_template_subs
		{
			get
			{
				return this.GetTable<T_acc_template_subs>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_template_subs_pub> T_acc_template_subs_pub
		{
			get
			{
				return this.GetTable<T_acc_template_subs_pub>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_tmpl_types> T_acc_tmpl_types
		{
			get
			{
				return this.GetTable<T_acc_tmpl_types>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_usage> T_acc_usage
		{
			get
			{
				return this.GetTable<T_acc_usage>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_usage_cycle> T_acc_usage_cycle
		{
			get
			{
				return this.GetTable<T_acc_usage_cycle>();
			}
		}
		
		public System.Data.Linq.Table<T_acc_usage_interval> T_acc_usage_interval
		{
			get
			{
				return this.GetTable<T_acc_usage_interval>();
			}
		}
		
		public System.Data.Linq.Table<T_account> T_account
		{
			get
			{
				return this.GetTable<T_account>();
			}
		}
		
		public System.Data.Linq.Table<T_account_ancestor> T_account_ancestor
		{
			get
			{
				return this.GetTable<T_account_ancestor>();
			}
		}
		
		public System.Data.Linq.Table<T_account_mapper> T_account_mapper
		{
			get
			{
				return this.GetTable<T_account_mapper>();
			}
		}
		
		public System.Data.Linq.Table<T_account_state> T_account_state
		{
			get
			{
				return this.GetTable<T_account_state>();
			}
		}
		
		public System.Data.Linq.Table<T_account_state_history> T_account_state_history
		{
			get
			{
				return this.GetTable<T_account_state_history>();
			}
		}
		
		public System.Data.Linq.Table<T_account_type> T_account_type
		{
			get
			{
				return this.GetTable<T_account_type>();
			}
		}
		
		public System.Data.Linq.Table<T_account_type_servicedef_map> T_account_type_servicedef_map
		{
			get
			{
				return this.GetTable<T_account_type_servicedef_map>();
			}
		}
		
		public System.Data.Linq.Table<T_account_type_view_map> T_account_type_view_map
		{
			get
			{
				return this.GetTable<T_account_type_view_map>();
			}
		}
		
		public System.Data.Linq.Table<T_account_view_log> T_account_view_log
		{
			get
			{
				return this.GetTable<T_account_view_log>();
			}
		}
		
		public System.Data.Linq.Table<T_account_view_prop> T_account_view_prop
		{
			get
			{
				return this.GetTable<T_account_view_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_acctype_descendenttype_map> T_acctype_descendenttype_map
		{
			get
			{
				return this.GetTable<T_acctype_descendenttype_map>();
			}
		}
		
		public System.Data.Linq.Table<T_active_tickets> T_active_tickets
		{
			get
			{
				return this.GetTable<T_active_tickets>();
			}
		}
		
		public System.Data.Linq.Table<T_adjustment> T_adjustment
		{
			get
			{
				return this.GetTable<T_adjustment>();
			}
		}
		
		public System.Data.Linq.Table<T_adjustment_transaction> T_adjustment_transaction
		{
			get
			{
				return this.GetTable<T_adjustment_transaction>();
			}
		}
		
		public System.Data.Linq.Table<T_adjustment_type> T_adjustment_type
		{
			get
			{
				return this.GetTable<T_adjustment_type>();
			}
		}
		
		public System.Data.Linq.Table<T_adjustment_type_prop> T_adjustment_type_prop
		{
			get
			{
				return this.GetTable<T_adjustment_type_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_aggregate> T_aggregate
		{
			get
			{
				return this.GetTable<T_aggregate>();
			}
		}
		
		public System.Data.Linq.Table<T_agr_properties> T_agr_properties
		{
			get
			{
				return this.GetTable<T_agr_properties>();
			}
		}
		
		public System.Data.Linq.Table<T_agr_template> T_agr_template
		{
			get
			{
				return this.GetTable<T_agr_template>();
			}
		}
		
		public System.Data.Linq.Table<T_agr_template_entity_map> T_agr_template_entity_map
		{
			get
			{
				return this.GetTable<T_agr_template_entity_map>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_audioconfcall> T_aj_audioconfcall
		{
			get
			{
				return this.GetTable<T_aj_audioconfcall>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_audioconfconnection> T_aj_audioconfconnection
		{
			get
			{
				return this.GetTable<T_aj_audioconfconnection>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_audioconffeature> T_aj_audioconffeature
		{
			get
			{
				return this.GetTable<T_aj_audioconffeature>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_BillSoftPCode> T_aj_BillSoftPCode
		{
			get
			{
				return this.GetTable<T_aj_BillSoftPCode>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_Commitment> T_aj_Commitment
		{
			get
			{
				return this.GetTable<T_aj_Commitment>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_FlatDiscount> T_aj_FlatDiscount
		{
			get
			{
				return this.GetTable<T_aj_FlatDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_FlatDiscount_NoCond> T_aj_FlatDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_aj_FlatDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_FlatRecurringCharge> T_aj_FlatRecurringCharge
		{
			get
			{
				return this.GetTable<T_aj_FlatRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_FreeUsage> T_aj_FreeUsage
		{
			get
			{
				return this.GetTable<T_aj_FreeUsage>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_MetraTax> T_aj_MetraTax
		{
			get
			{
				return this.GetTable<T_aj_MetraTax>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_movietickets> T_aj_movietickets
		{
			get
			{
				return this.GetTable<T_aj_movietickets>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_MultiBucketDiscount> T_aj_MultiBucketDiscount
		{
			get
			{
				return this.GetTable<T_aj_MultiBucketDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_MultiBucketPricing> T_aj_MultiBucketPricing
		{
			get
			{
				return this.GetTable<T_aj_MultiBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_NonRecurringCharge> T_aj_NonRecurringCharge
		{
			get
			{
				return this.GetTable<T_aj_NonRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_PercentDiscount> T_aj_PercentDiscount
		{
			get
			{
				return this.GetTable<T_aj_PercentDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_PercentDiscount_NoCond> T_aj_PercentDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_aj_PercentDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_SingleBucketPricing> T_aj_SingleBucketPricing
		{
			get
			{
				return this.GetTable<T_aj_SingleBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_smokeaggrcnt> T_aj_smokeaggrcnt
		{
			get
			{
				return this.GetTable<T_aj_smokeaggrcnt>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_smokeaggrdec> T_aj_smokeaggrdec
		{
			get
			{
				return this.GetTable<T_aj_smokeaggrdec>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_smoketestpriceableitem> T_aj_smoketestpriceableitem
		{
			get
			{
				return this.GetTable<T_aj_smoketestpriceableitem>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_SMSService> T_aj_SMSService
		{
			get
			{
				return this.GetTable<T_aj_SMSService>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_songdownloads> T_aj_songdownloads
		{
			get
			{
				return this.GetTable<T_aj_songdownloads>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_songsession> T_aj_songsession
		{
			get
			{
				return this.GetTable<T_aj_songsession>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_songsessionchild> T_aj_songsessionchild
		{
			get
			{
				return this.GetTable<T_aj_songsessionchild>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_template_reason_code_map> T_aj_template_reason_code_map
		{
			get
			{
				return this.GetTable<T_aj_template_reason_code_map>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_testpi> T_aj_testpi
		{
			get
			{
				return this.GetTable<T_aj_testpi>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_type_applic_map> T_aj_type_applic_map
		{
			get
			{
				return this.GetTable<T_aj_type_applic_map>();
			}
		}
		
		public System.Data.Linq.Table<T_aj_UDRecurringCharge> T_aj_UDRecurringCharge
		{
			get
			{
				return this.GetTable<T_aj_UDRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_accountqualgro> T_amp_accountqualgro
		{
			get
			{
				return this.GetTable<T_amp_accountqualgro>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_accountqualifi> T_amp_accountqualifi
		{
			get
			{
				return this.GetTable<T_amp_accountqualifi>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_amountchain> T_amp_amountchain
		{
			get
			{
				return this.GetTable<T_amp_amountchain>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_amountchainfield> T_amp_amountchainfield
		{
			get
			{
				return this.GetTable<T_amp_amountchainfield>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_chargeattribut> T_amp_chargeattribut
		{
			get
			{
				return this.GetTable<T_amp_chargeattribut>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_chargedefiniti> T_amp_chargedefiniti
		{
			get
			{
				return this.GetTable<T_amp_chargedefiniti>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_chargequalgroup> T_amp_chargequalgroup
		{
			get
			{
				return this.GetTable<T_amp_chargequalgroup>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_chargequalific> T_amp_chargequalific
		{
			get
			{
				return this.GetTable<T_amp_chargequalific>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_decisionattrib> T_amp_decisionattrib
		{
			get
			{
				return this.GetTable<T_amp_decisionattrib>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_decisionglobal> T_amp_decisionglobal
		{
			get
			{
				return this.GetTable<T_amp_decisionglobal>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_decisiontype> T_amp_decisiontype
		{
			get
			{
				return this.GetTable<T_amp_decisiontype>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_genchargedirective> T_amp_genchargedirective
		{
			get
			{
				return this.GetTable<T_amp_genchargedirective>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_generatedcharge> T_amp_generatedcharge
		{
			get
			{
				return this.GetTable<T_amp_generatedcharge>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_pvtoamountchain> T_amp_pvtoamountchain
		{
			get
			{
				return this.GetTable<T_amp_pvtoamountchain>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_usagechargefie> T_amp_usagechargefie
		{
			get
			{
				return this.GetTable<T_amp_usagechargefie>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_usagequalgroup> T_amp_usagequalgroup
		{
			get
			{
				return this.GetTable<T_amp_usagequalgroup>();
			}
		}
		
		public System.Data.Linq.Table<T_amp_usagequalifica> T_amp_usagequalifica
		{
			get
			{
				return this.GetTable<T_amp_usagequalifica>();
			}
		}
		
		public System.Data.Linq.Table<T_applicability_rule> T_applicability_rule
		{
			get
			{
				return this.GetTable<T_applicability_rule>();
			}
		}
		
		public System.Data.Linq.Table<T_approvals> T_approvals
		{
			get
			{
				return this.GetTable<T_approvals>();
			}
		}
		
		public System.Data.Linq.Table<T_ar_bucket_def> T_ar_bucket_def
		{
			get
			{
				return this.GetTable<T_ar_bucket_def>();
			}
		}
		
		public System.Data.Linq.Table<T_ar_buckets> T_ar_buckets
		{
			get
			{
				return this.GetTable<T_ar_buckets>();
			}
		}
		
		public System.Data.Linq.Table<T_ar_gl_batch> T_ar_gl_batch
		{
			get
			{
				return this.GetTable<T_ar_gl_batch>();
			}
		}
		
		public System.Data.Linq.Table<T_archive> T_archive
		{
			get
			{
				return this.GetTable<T_archive>();
			}
		}
		
		public System.Data.Linq.Table<T_archive_partition> T_archive_partition
		{
			get
			{
				return this.GetTable<T_archive_partition>();
			}
		}
		
		public System.Data.Linq.Table<T_archive_queue> T_archive_queue
		{
			get
			{
				return this.GetTable<T_archive_queue>();
			}
		}
		
		public System.Data.Linq.Table<T_archive_queue_partition> T_archive_queue_partition
		{
			get
			{
				return this.GetTable<T_archive_queue_partition>();
			}
		}
		
		public System.Data.Linq.Table<T_atomic_capability_type> T_atomic_capability_type
		{
			get
			{
				return this.GetTable<T_atomic_capability_type>();
			}
		}
		
		public System.Data.Linq.Table<T_audit> T_audit
		{
			get
			{
				return this.GetTable<T_audit>();
			}
		}
		
		public System.Data.Linq.Table<T_audit_details> T_audit_details
		{
			get
			{
				return this.GetTable<T_audit_details>();
			}
		}
		
		public System.Data.Linq.Table<T_audit_events> T_audit_events
		{
			get
			{
				return this.GetTable<T_audit_events>();
			}
		}
		
		public System.Data.Linq.Table<T_av_Contact> T_av_Contact
		{
			get
			{
				return this.GetTable<T_av_Contact>();
			}
		}
		
		public System.Data.Linq.Table<T_av_GSM> T_av_GSM
		{
			get
			{
				return this.GetTable<T_av_GSM>();
			}
		}
		
		public System.Data.Linq.Table<T_av_Internal> T_av_Internal
		{
			get
			{
				return this.GetTable<T_av_Internal>();
			}
		}
		
		public System.Data.Linq.Table<T_base_props> T_base_props
		{
			get
			{
				return this.GetTable<T_base_props>();
			}
		}
		
		public System.Data.Linq.Table<T_batch> T_batch
		{
			get
			{
				return this.GetTable<T_batch>();
			}
		}
		
		public System.Data.Linq.Table<T_batch_history> T_batch_history
		{
			get
			{
				return this.GetTable<T_batch_history>();
			}
		}
		
		public System.Data.Linq.Table<T_be_2090305_alldatatypebm_h> T_be_2090305_alldatatypebm_h
		{
			get
			{
				return this.GetTable<T_be_2090305_alldatatypebm_h>();
			}
		}
		
		public System.Data.Linq.Table<T_be_2090305_alldatatypebme> T_be_2090305_alldatatypebme
		{
			get
			{
				return this.GetTable<T_be_2090305_alldatatypebme>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_bil_billmessage> T_be_cor_bil_billmessage
		{
			get
			{
				return this.GetTable<T_be_cor_bil_billmessage>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_bil_billmessage_h> T_be_cor_bil_billmessage_h
		{
			get
			{
				return this.GetTable<T_be_cor_bil_billmessage_h>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_bil_billmessageac_h> T_be_cor_bil_billmessageac_h
		{
			get
			{
				return this.GetTable<T_be_cor_bil_billmessageac_h>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_bil_billmessageacc> T_be_cor_bil_billmessageacc
		{
			get
			{
				return this.GetTable<T_be_cor_bil_billmessageacc>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_chargeadj735343> T_be_cor_cor_chargeadj735343
		{
			get
			{
				return this.GetTable<T_be_cor_cor_chargeadj735343>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_chargeadjustme> T_be_cor_cor_chargeadjustme
		{
			get
			{
				return this.GetTable<T_be_cor_cor_chargeadjustme>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_dispute> T_be_cor_cor_dispute
		{
			get
			{
				return this.GetTable<T_be_cor_cor_dispute>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_dispute_h> T_be_cor_cor_dispute_h
		{
			get
			{
				return this.GetTable<T_be_cor_cor_dispute_h>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_division> T_be_cor_cor_division
		{
			get
			{
				return this.GetTable<T_be_cor_cor_division>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_cor_invoiceadjustm> T_be_cor_cor_invoiceadjustm
		{
			get
			{
				return this.GetTable<T_be_cor_cor_invoiceadjustm>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_argumentbe> T_be_cor_fil_argumentbe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_argumentbe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_assemblyrefere> T_be_cor_fil_assemblyrefere
		{
			get
			{
				return this.GetTable<T_be_cor_fil_assemblyrefere>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_configurationbe> T_be_cor_fil_configurationbe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_configurationbe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_filebe> T_be_cor_fil_filebe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_filebe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_invocationrec_h> T_be_cor_fil_invocationrec_h
		{
			get
			{
				return this.GetTable<T_be_cor_fil_invocationrec_h>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_invocationreco> T_be_cor_fil_invocationreco
		{
			get
			{
				return this.GetTable<T_be_cor_fil_invocationreco>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_programcodebe> T_be_cor_fil_programcodebe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_programcodebe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_r_invoca_filebe> T_be_cor_fil_r_invoca_filebe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_r_invoca_filebe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_r_progra_assemb> T_be_cor_fil_r_progra_assemb
		{
			get
			{
				return this.GetTable<T_be_cor_fil_r_progra_assemb>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_r_target_argume> T_be_cor_fil_r_target_argume
		{
			get
			{
				return this.GetTable<T_be_cor_fil_r_target_argume>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_r_target_invoca> T_be_cor_fil_r_target_invoca
		{
			get
			{
				return this.GetTable<T_be_cor_fil_r_target_invoca>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_r_target_progra> T_be_cor_fil_r_target_progra
		{
			get
			{
				return this.GetTable<T_be_cor_fil_r_target_progra>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_servicehostbe> T_be_cor_fil_servicehostbe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_servicehostbe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_fil_targetbe> T_be_cor_fil_targetbe
		{
			get
			{
				return this.GetTable<T_be_cor_fil_targetbe>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_mr_machine> T_be_cor_mr_machine
		{
			get
			{
				return this.GetTable<T_be_cor_mr_machine>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_mr_machinerole> T_be_cor_mr_machinerole
		{
			get
			{
				return this.GetTable<T_be_cor_mr_machinerole>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_mr_r_machin_machin> T_be_cor_mr_r_machin_machin
		{
			get
			{
				return this.GetTable<T_be_cor_mr_r_machin_machin>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_accountforquote> T_be_cor_qu_accountforquote
		{
			get
			{
				return this.GetTable<T_be_cor_qu_accountforquote>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_poforquote> T_be_cor_qu_poforquote
		{
			get
			{
				return this.GetTable<T_be_cor_qu_poforquote>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_quotecontent> T_be_cor_qu_quotecontent
		{
			get
			{
				return this.GetTable<T_be_cor_qu_quotecontent>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_quoteheader> T_be_cor_qu_quoteheader
		{
			get
			{
				return this.GetTable<T_be_cor_qu_quoteheader>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_quoteicb> T_be_cor_qu_quoteicb
		{
			get
			{
				return this.GetTable<T_be_cor_qu_quoteicb>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_quotelog> T_be_cor_qu_quotelog
		{
			get
			{
				return this.GetTable<T_be_cor_qu_quotelog>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_qu_udrcforquoting> T_be_cor_qu_udrcforquoting
		{
			get
			{
				return this.GetTable<T_be_cor_qu_udrcforquoting>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_BillSetting> T_be_cor_ui_BillSetting
		{
			get
			{
				return this.GetTable<T_be_cor_ui_BillSetting>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_Column> T_be_cor_ui_Column
		{
			get
			{
				return this.GetTable<T_be_cor_ui_Column>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_Dashboard> T_be_cor_ui_Dashboard
		{
			get
			{
				return this.GetTable<T_be_cor_ui_Dashboard>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_EntryPoint> T_be_cor_ui_EntryPoint
		{
			get
			{
				return this.GetTable<T_be_cor_ui_EntryPoint>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_Parameter> T_be_cor_ui_Parameter
		{
			get
			{
				return this.GetTable<T_be_cor_ui_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_ProductViewMap> T_be_cor_ui_ProductViewMap
		{
			get
			{
				return this.GetTable<T_be_cor_ui_ProductViewMap>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Column_Widget> T_be_cor_ui_r_Column_Widget
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Column_Widget>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Dashbo_Column> T_be_cor_ui_r_Dashbo_Column
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Dashbo_Column>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_SavedS_Searc> T_be_cor_ui_r_SavedS_Searc
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_SavedS_Searc>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Site_BillS> T_be_cor_ui_r_Site_BillS
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Site_BillS>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Site_Dashb> T_be_cor_ui_r_Site_Dashb
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Site_Dashb>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Site_Entry> T_be_cor_ui_r_Site_Entry
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Site_Entry>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Site_Produ> T_be_cor_ui_r_Site_Produ
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Site_Produ>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Site_Repor> T_be_cor_ui_r_Site_Repor
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Site_Repor>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_r_Widget_Param> T_be_cor_ui_r_Widget_Param
		{
			get
			{
				return this.GetTable<T_be_cor_ui_r_Widget_Param>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_ReportInventory> T_be_cor_ui_ReportInventory
		{
			get
			{
				return this.GetTable<T_be_cor_ui_ReportInventory>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_SavedSearch> T_be_cor_ui_SavedSearch
		{
			get
			{
				return this.GetTable<T_be_cor_ui_SavedSearch>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_SearchFilter> T_be_cor_ui_SearchFilter
		{
			get
			{
				return this.GetTable<T_be_cor_ui_SearchFilter>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_Site> T_be_cor_ui_Site
		{
			get
			{
				return this.GetTable<T_be_cor_ui_Site>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_UserProfile> T_be_cor_ui_UserProfile
		{
			get
			{
				return this.GetTable<T_be_cor_ui_UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_Widget> T_be_cor_ui_Widget
		{
			get
			{
				return this.GetTable<T_be_cor_ui_Widget>();
			}
		}
		
		public System.Data.Linq.Table<T_be_cor_ui_WidgetInventory> T_be_cor_ui_WidgetInventory
		{
			get
			{
				return this.GetTable<T_be_cor_ui_WidgetInventory>();
			}
		}
		
		public System.Data.Linq.Table<T_be_entity_sync_data> T_be_entity_sync_data
		{
			get
			{
				return this.GetTable<T_be_entity_sync_data>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_tes_testbmeperfoma> T_be_smo_tes_testbmeperfoma
		{
			get
			{
				return this.GetTable<T_be_smo_tes_testbmeperfoma>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_thi_a> T_be_smo_thi_a
		{
			get
			{
				return this.GetTable<T_be_smo_thi_a>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_thi_b> T_be_smo_thi_b
		{
			get
			{
				return this.GetTable<T_be_smo_thi_b>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_thi_c> T_be_smo_thi_c
		{
			get
			{
				return this.GetTable<T_be_smo_thi_c>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_thi_d> T_be_smo_thi_d
		{
			get
			{
				return this.GetTable<T_be_smo_thi_d>();
			}
		}
		
		public System.Data.Linq.Table<T_be_smo_thi_e> T_be_smo_thi_e
		{
			get
			{
				return this.GetTable<T_be_smo_thi_e>();
			}
		}
		
		public System.Data.Linq.Table<T_bill_manager> T_bill_manager
		{
			get
			{
				return this.GetTable<T_bill_manager>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup> T_billgroup
		{
			get
			{
				return this.GetTable<T_billgroup>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_constraint> T_billgroup_constraint
		{
			get
			{
				return this.GetTable<T_billgroup_constraint>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_constraint_tmp> T_billgroup_constraint_tmp
		{
			get
			{
				return this.GetTable<T_billgroup_constraint_tmp>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_materialization> T_billgroup_materialization
		{
			get
			{
				return this.GetTable<T_billgroup_materialization>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_member> T_billgroup_member
		{
			get
			{
				return this.GetTable<T_billgroup_member>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_member_history> T_billgroup_member_history
		{
			get
			{
				return this.GetTable<T_billgroup_member_history>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_member_tmp> T_billgroup_member_tmp
		{
			get
			{
				return this.GetTable<T_billgroup_member_tmp>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_source_acc> T_billgroup_source_acc
		{
			get
			{
				return this.GetTable<T_billgroup_source_acc>();
			}
		}
		
		public System.Data.Linq.Table<T_billgroup_tmp> T_billgroup_tmp
		{
			get
			{
				return this.GetTable<T_billgroup_tmp>();
			}
		}
		
		public System.Data.Linq.Table<T_billing_server_settings> T_billing_server_settings
		{
			get
			{
				return this.GetTable<T_billing_server_settings>();
			}
		}
		
		public System.Data.Linq.Table<T_billingserver> T_billingserver
		{
			get
			{
				return this.GetTable<T_billingserver>();
			}
		}
		
		public System.Data.Linq.Table<T_billingserver_service> T_billingserver_service
		{
			get
			{
				return this.GetTable<T_billingserver_service>();
			}
		}
		
		public System.Data.Linq.Table<T_calc_engine> T_calc_engine
		{
			get
			{
				return this.GetTable<T_calc_engine>();
			}
		}
		
		public System.Data.Linq.Table<T_calc_formula> T_calc_formula
		{
			get
			{
				return this.GetTable<T_calc_formula>();
			}
		}
		
		public System.Data.Linq.Table<T_calendar> T_calendar
		{
			get
			{
				return this.GetTable<T_calendar>();
			}
		}
		
		public System.Data.Linq.Table<T_calendar_day> T_calendar_day
		{
			get
			{
				return this.GetTable<T_calendar_day>();
			}
		}
		
		public System.Data.Linq.Table<T_calendar_holiday> T_calendar_holiday
		{
			get
			{
				return this.GetTable<T_calendar_holiday>();
			}
		}
		
		public System.Data.Linq.Table<T_calendar_periods> T_calendar_periods
		{
			get
			{
				return this.GetTable<T_calendar_periods>();
			}
		}
		
		public System.Data.Linq.Table<T_capability_instance> T_capability_instance
		{
			get
			{
				return this.GetTable<T_capability_instance>();
			}
		}
		
		public System.Data.Linq.Table<T_char_values> T_char_values
		{
			get
			{
				return this.GetTable<T_char_values>();
			}
		}
		
		public System.Data.Linq.Table<T_char_values_history> T_char_values_history
		{
			get
			{
				return this.GetTable<T_char_values_history>();
			}
		}
		
		public System.Data.Linq.Table<T_charge> T_charge
		{
			get
			{
				return this.GetTable<T_charge>();
			}
		}
		
		public System.Data.Linq.Table<T_charge_prop> T_charge_prop
		{
			get
			{
				return this.GetTable<T_charge_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_composite_adjustment> T_composite_adjustment
		{
			get
			{
				return this.GetTable<T_composite_adjustment>();
			}
		}
		
		public System.Data.Linq.Table<T_composite_capability_type> T_composite_capability_type
		{
			get
			{
				return this.GetTable<T_composite_capability_type>();
			}
		}
		
		public System.Data.Linq.Table<T_compositor> T_compositor
		{
			get
			{
				return this.GetTable<T_compositor>();
			}
		}
		
		public System.Data.Linq.Table<T_counter> T_counter
		{
			get
			{
				return this.GetTable<T_counter>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_map> T_counter_map
		{
			get
			{
				return this.GetTable<T_counter_map>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_metadata> T_counter_metadata
		{
			get
			{
				return this.GetTable<T_counter_metadata>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_param_map> T_counter_param_map
		{
			get
			{
				return this.GetTable<T_counter_param_map>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_param_predicate> T_counter_param_predicate
		{
			get
			{
				return this.GetTable<T_counter_param_predicate>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_params> T_counter_params
		{
			get
			{
				return this.GetTable<T_counter_params>();
			}
		}
		
		public System.Data.Linq.Table<T_counter_params_metadata> T_counter_params_metadata
		{
			get
			{
				return this.GetTable<T_counter_params_metadata>();
			}
		}
		
		public System.Data.Linq.Table<T_counterpropdef> T_counterpropdef
		{
			get
			{
				return this.GetTable<T_counterpropdef>();
			}
		}
		
		public System.Data.Linq.Table<T_current_id> T_current_id
		{
			get
			{
				return this.GetTable<T_current_id>();
			}
		}
		
		public System.Data.Linq.Table<T_current_long_id> T_current_long_id
		{
			get
			{
				return this.GetTable<T_current_long_id>();
			}
		}
		
		public System.Data.Linq.Table<T_db_values> T_db_values
		{
			get
			{
				return this.GetTable<T_db_values>();
			}
		}
		
		public System.Data.Linq.Table<T_decimal_capability> T_decimal_capability
		{
			get
			{
				return this.GetTable<T_decimal_capability>();
			}
		}
		
		public System.Data.Linq.Table<T_description> T_description
		{
			get
			{
				return this.GetTable<T_description>();
			}
		}
		
		public System.Data.Linq.Table<T_discount> T_discount
		{
			get
			{
				return this.GetTable<T_discount>();
			}
		}
		
		public System.Data.Linq.Table<T_dm_account> T_dm_account
		{
			get
			{
				return this.GetTable<T_dm_account>();
			}
		}
		
		public System.Data.Linq.Table<T_dm_account_ancestor> T_dm_account_ancestor
		{
			get
			{
				return this.GetTable<T_dm_account_ancestor>();
			}
		}
		
		public System.Data.Linq.Table<T_effectivedate> T_effectivedate
		{
			get
			{
				return this.GetTable<T_effectivedate>();
			}
		}
		
		public System.Data.Linq.Table<T_email_adapter_tracking> T_email_adapter_tracking
		{
			get
			{
				return this.GetTable<T_email_adapter_tracking>();
			}
		}
		
		public System.Data.Linq.Table<T_entity_specs> T_entity_specs
		{
			get
			{
				return this.GetTable<T_entity_specs>();
			}
		}
		
		public System.Data.Linq.Table<T_enum_capability> T_enum_capability
		{
			get
			{
				return this.GetTable<T_enum_capability>();
			}
		}
		
		public System.Data.Linq.Table<T_enum_data> T_enum_data
		{
			get
			{
				return this.GetTable<T_enum_data>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_aggregate> T_ep_aggregate
		{
			get
			{
				return this.GetTable<T_ep_aggregate>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_discount> T_ep_discount
		{
			get
			{
				return this.GetTable<T_ep_discount>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_map> T_ep_map
		{
			get
			{
				return this.GetTable<T_ep_map>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_nonrecurring> T_ep_nonrecurring
		{
			get
			{
				return this.GetTable<T_ep_nonrecurring>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_po> T_ep_po
		{
			get
			{
				return this.GetTable<T_ep_po>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_pricelist> T_ep_pricelist
		{
			get
			{
				return this.GetTable<T_ep_pricelist>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_recurring> T_ep_recurring
		{
			get
			{
				return this.GetTable<T_ep_recurring>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_unit_dependent_recurring> T_ep_unit_dependent_recurring
		{
			get
			{
				return this.GetTable<T_ep_unit_dependent_recurring>();
			}
		}
		
		public System.Data.Linq.Table<T_ep_usage> T_ep_usage
		{
			get
			{
				return this.GetTable<T_ep_usage>();
			}
		}
		
		public System.Data.Linq.Table<T_export_default_param_values> T_export_default_param_values
		{
			get
			{
				return this.GetTable<T_export_default_param_values>();
			}
		}
		
		public System.Data.Linq.Table<T_export_execute_audit> T_export_execute_audit
		{
			get
			{
				return this.GetTable<T_export_execute_audit>();
			}
		}
		
		public System.Data.Linq.Table<T_export_log> T_export_log
		{
			get
			{
				return this.GetTable<T_export_log>();
			}
		}
		
		public System.Data.Linq.Table<T_export_param_names> T_export_param_names
		{
			get
			{
				return this.GetTable<T_export_param_names>();
			}
		}
		
		public System.Data.Linq.Table<T_export_queue_report_checks> T_export_queue_report_checks
		{
			get
			{
				return this.GetTable<T_export_queue_report_checks>();
			}
		}
		
		public System.Data.Linq.Table<T_export_queue_report_queries> T_export_queue_report_queries
		{
			get
			{
				return this.GetTable<T_export_queue_report_queries>();
			}
		}
		
		public System.Data.Linq.Table<T_export_report_instance> T_export_report_instance
		{
			get
			{
				return this.GetTable<T_export_report_instance>();
			}
		}
		
		public System.Data.Linq.Table<T_export_report_params> T_export_report_params
		{
			get
			{
				return this.GetTable<T_export_report_params>();
			}
		}
		
		public System.Data.Linq.Table<T_export_reports> T_export_reports
		{
			get
			{
				return this.GetTable<T_export_reports>();
			}
		}
		
		public System.Data.Linq.Table<T_export_schedule> T_export_schedule
		{
			get
			{
				return this.GetTable<T_export_schedule>();
			}
		}
		
		public System.Data.Linq.Table<T_export_system_parms> T_export_system_parms
		{
			get
			{
				return this.GetTable<T_export_system_parms>();
			}
		}
		
		public System.Data.Linq.Table<T_export_workqueue> T_export_workqueue
		{
			get
			{
				return this.GetTable<T_export_workqueue>();
			}
		}
		
		public System.Data.Linq.Table<T_export_workqueue_temp> T_export_workqueue_temp
		{
			get
			{
				return this.GetTable<T_export_workqueue_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_failed_payment> T_failed_payment
		{
			get
			{
				return this.GetTable<T_failed_payment>();
			}
		}
		
		public System.Data.Linq.Table<T_failed_payment_details> T_failed_payment_details
		{
			get
			{
				return this.GetTable<T_failed_payment_details>();
			}
		}
		
		public System.Data.Linq.Table<T_failed_transaction> T_failed_transaction
		{
			get
			{
				return this.GetTable<T_failed_transaction>();
			}
		}
		
		public System.Data.Linq.Table<T_failed_transaction_msix> T_failed_transaction_msix
		{
			get
			{
				return this.GetTable<T_failed_transaction_msix>();
			}
		}
		
		public System.Data.Linq.Table<T_foreignexchange_rates> T_foreignexchange_rates
		{
			get
			{
				return this.GetTable<T_foreignexchange_rates>();
			}
		}
		
		public System.Data.Linq.Table<T_group_sub> T_group_sub
		{
			get
			{
				return this.GetTable<T_group_sub>();
			}
		}
		
		public System.Data.Linq.Table<T_gsub_recur_map> T_gsub_recur_map
		{
			get
			{
				return this.GetTable<T_gsub_recur_map>();
			}
		}
		
		public System.Data.Linq.Table<T_gsubmember> T_gsubmember
		{
			get
			{
				return this.GetTable<T_gsubmember>();
			}
		}
		
		public System.Data.Linq.Table<T_gsubmember_historical> T_gsubmember_historical
		{
			get
			{
				return this.GetTable<T_gsubmember_historical>();
			}
		}
		
		public System.Data.Linq.Table<T_impersonate> T_impersonate
		{
			get
			{
				return this.GetTable<T_impersonate>();
			}
		}
		
		public System.Data.Linq.Table<T_invoice> T_invoice
		{
			get
			{
				return this.GetTable<T_invoice>();
			}
		}
		
		public System.Data.Linq.Table<T_invoice_namespace> T_invoice_namespace
		{
			get
			{
				return this.GetTable<T_invoice_namespace>();
			}
		}
		
		public System.Data.Linq.Table<T_invoice_range> T_invoice_range
		{
			get
			{
				return this.GetTable<T_invoice_range>();
			}
		}
		
		public System.Data.Linq.Table<T_language> T_language
		{
			get
			{
				return this.GetTable<T_language>();
			}
		}
		
		public System.Data.Linq.Table<T_listener> T_listener
		{
			get
			{
				return this.GetTable<T_listener>();
			}
		}
		
		public System.Data.Linq.Table<T_localized_site> T_localized_site
		{
			get
			{
				return this.GetTable<T_localized_site>();
			}
		}
		
		public System.Data.Linq.Table<T_message> T_message
		{
			get
			{
				return this.GetTable<T_message>();
			}
		}
		
		public System.Data.Linq.Table<T_metratime> T_metratime
		{
			get
			{
				return this.GetTable<T_metratime>();
			}
		}
		
		public System.Data.Linq.Table<T_mf_tracking_env> T_mf_tracking_env
		{
			get
			{
				return this.GetTable<T_mf_tracking_env>();
			}
		}
		
		public System.Data.Linq.Table<T_mf_tracking_instructions> T_mf_tracking_instructions
		{
			get
			{
				return this.GetTable<T_mf_tracking_instructions>();
			}
		}
		
		public System.Data.Linq.Table<T_mf_tracking_scripts> T_mf_tracking_scripts
		{
			get
			{
				return this.GetTable<T_mf_tracking_scripts>();
			}
		}
		
		public System.Data.Linq.Table<T_MT_ID> T_MT_ID
		{
			get
			{
				return this.GetTable<T_MT_ID>();
			}
		}
		
		public System.Data.Linq.Table<T_mt_sys_analyze_all_tables> T_mt_sys_analyze_all_tables
		{
			get
			{
				return this.GetTable<T_mt_sys_analyze_all_tables>();
			}
		}
		
		public System.Data.Linq.Table<T_mview_base_tables> T_mview_base_tables
		{
			get
			{
				return this.GetTable<T_mview_base_tables>();
			}
		}
		
		public System.Data.Linq.Table<T_mview_catalog> T_mview_catalog
		{
			get
			{
				return this.GetTable<T_mview_catalog>();
			}
		}
		
		public System.Data.Linq.Table<T_mview_event> T_mview_event
		{
			get
			{
				return this.GetTable<T_mview_event>();
			}
		}
		
		public System.Data.Linq.Table<T_mview_map> T_mview_map
		{
			get
			{
				return this.GetTable<T_mview_map>();
			}
		}
		
		public System.Data.Linq.Table<T_mview_queries> T_mview_queries
		{
			get
			{
				return this.GetTable<T_mview_queries>();
			}
		}
		
		public System.Data.Linq.Table<T_mvm_procedures> T_mvm_procedures
		{
			get
			{
				return this.GetTable<T_mvm_procedures>();
			}
		}
		
		public System.Data.Linq.Table<T_namespace> T_namespace
		{
			get
			{
				return this.GetTable<T_namespace>();
			}
		}
		
		public System.Data.Linq.Table<T_nonrecur> T_nonrecur
		{
			get
			{
				return this.GetTable<T_nonrecur>();
			}
		}
		
		public System.Data.Linq.Table<T_nonrecurring_event_run> T_nonrecurring_event_run
		{
			get
			{
				return this.GetTable<T_nonrecurring_event_run>();
			}
		}
		
		public System.Data.Linq.Table<T_object_history> T_object_history
		{
			get
			{
				return this.GetTable<T_object_history>();
			}
		}
		
		public System.Data.Linq.Table<T_open_transactions> T_open_transactions
		{
			get
			{
				return this.GetTable<T_open_transactions>();
			}
		}
		
		public System.Data.Linq.Table<T_param_table_prop> T_param_table_prop
		{
			get
			{
				return this.GetTable<T_param_table_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_partition> T_partition
		{
			get
			{
				return this.GetTable<T_partition>();
			}
		}
		
		public System.Data.Linq.Table<T_partition_storage> T_partition_storage
		{
			get
			{
				return this.GetTable<T_partition_storage>();
			}
		}
		
		public System.Data.Linq.Table<T_path_capability> T_path_capability
		{
			get
			{
				return this.GetTable<T_path_capability>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_audit> T_payment_audit
		{
			get
			{
				return this.GetTable<T_payment_audit>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_history> T_payment_history
		{
			get
			{
				return this.GetTable<T_payment_history>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_history_details> T_payment_history_details
		{
			get
			{
				return this.GetTable<T_payment_history_details>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_instrument> T_payment_instrument
		{
			get
			{
				return this.GetTable<T_payment_instrument>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_instrument_xref> T_payment_instrument_xref
		{
			get
			{
				return this.GetTable<T_payment_instrument_xref>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_method> T_payment_method
		{
			get
			{
				return this.GetTable<T_payment_method>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_redir_history> T_payment_redir_history
		{
			get
			{
				return this.GetTable<T_payment_redir_history>();
			}
		}
		
		public System.Data.Linq.Table<T_payment_redirection> T_payment_redirection
		{
			get
			{
				return this.GetTable<T_payment_redirection>();
			}
		}
		
		public System.Data.Linq.Table<T_pc_interval> T_pc_interval
		{
			get
			{
				return this.GetTable<T_pc_interval>();
			}
		}
		
		public System.Data.Linq.Table<T_pending_ACH_trans> T_pending_ACH_trans
		{
			get
			{
				return this.GetTable<T_pending_ACH_trans>();
			}
		}
		
		public System.Data.Linq.Table<T_pending_ACH_trans_details> T_pending_ACH_trans_details
		{
			get
			{
				return this.GetTable<T_pending_ACH_trans_details>();
			}
		}
		
		public System.Data.Linq.Table<T_pending_payment_trans> T_pending_payment_trans
		{
			get
			{
				return this.GetTable<T_pending_payment_trans>();
			}
		}
		
		public System.Data.Linq.Table<T_pending_payment_trans_dtl> T_pending_payment_trans_dtl
		{
			get
			{
				return this.GetTable<T_pending_payment_trans_dtl>();
			}
		}
		
		public System.Data.Linq.Table<T_pi> T_pi
		{
			get
			{
				return this.GetTable<T_pi>();
			}
		}
		
		public System.Data.Linq.Table<T_pi_rulesetdef_map> T_pi_rulesetdef_map
		{
			get
			{
				return this.GetTable<T_pi_rulesetdef_map>();
			}
		}
		
		public System.Data.Linq.Table<T_pi_template> T_pi_template
		{
			get
			{
				return this.GetTable<T_pi_template>();
			}
		}
		
		public System.Data.Linq.Table<T_pipeline> T_pipeline
		{
			get
			{
				return this.GetTable<T_pipeline>();
			}
		}
		
		public System.Data.Linq.Table<T_pipeline_service> T_pipeline_service
		{
			get
			{
				return this.GetTable<T_pipeline_service>();
			}
		}
		
		public System.Data.Linq.Table<T_pl_map> T_pl_map
		{
			get
			{
				return this.GetTable<T_pl_map>();
			}
		}
		
		public System.Data.Linq.Table<T_po> T_po
		{
			get
			{
				return this.GetTable<T_po>();
			}
		}
		
		public System.Data.Linq.Table<T_po_account_type_map> T_po_account_type_map
		{
			get
			{
				return this.GetTable<T_po_account_type_map>();
			}
		}
		
		public System.Data.Linq.Table<T_policy_role> T_policy_role
		{
			get
			{
				return this.GetTable<T_policy_role>();
			}
		}
		
		public System.Data.Linq.Table<T_pricelist> T_pricelist
		{
			get
			{
				return this.GetTable<T_pricelist>();
			}
		}
		
		public System.Data.Linq.Table<T_principal_policy> T_principal_policy
		{
			get
			{
				return this.GetTable<T_principal_policy>();
			}
		}
		
		public System.Data.Linq.Table<T_principals> T_principals
		{
			get
			{
				return this.GetTable<T_principals>();
			}
		}
		
		public System.Data.Linq.Table<T_prod_view> T_prod_view
		{
			get
			{
				return this.GetTable<T_prod_view>();
			}
		}
		
		public System.Data.Linq.Table<T_prod_view_prop> T_prod_view_prop
		{
			get
			{
				return this.GetTable<T_prod_view_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_product_view_log> T_product_view_log
		{
			get
			{
				return this.GetTable<T_product_view_log>();
			}
		}
		
		public System.Data.Linq.Table<T_profile> T_profile
		{
			get
			{
				return this.GetTable<T_profile>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_ach> T_ps_ach
		{
			get
			{
				return this.GetTable<T_ps_ach>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_audit> T_ps_audit
		{
			get
			{
				return this.GetTable<T_ps_audit>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_audit_details> T_ps_audit_details
		{
			get
			{
				return this.GetTable<T_ps_audit_details>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_credit_card> T_ps_credit_card
		{
			get
			{
				return this.GetTable<T_ps_credit_card>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_payment_instrument> T_ps_payment_instrument
		{
			get
			{
				return this.GetTable<T_ps_payment_instrument>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_pcard> T_ps_pcard
		{
			get
			{
				return this.GetTable<T_ps_pcard>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_preauth> T_ps_preauth
		{
			get
			{
				return this.GetTable<T_ps_preauth>();
			}
		}
		
		public System.Data.Linq.Table<T_ps_preauth_details> T_ps_preauth_details
		{
			get
			{
				return this.GetTable<T_ps_preauth_details>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_aggrate> T_pt_aggrate
		{
			get
			{
				return this.GetTable<T_pt_aggrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_basetransportrate> T_pt_basetransportrate
		{
			get
			{
				return this.GetTable<T_pt_basetransportrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_bridgerate> T_pt_bridgerate
		{
			get
			{
				return this.GetTable<T_pt_bridgerate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_BulkDiscountPT> T_pt_BulkDiscountPT
		{
			get
			{
				return this.GetTable<T_pt_BulkDiscountPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_BulkEventRatesPT> T_pt_BulkEventRatesPT
		{
			get
			{
				return this.GetTable<T_pt_BulkEventRatesPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_BulkUnitRatesPT> T_pt_BulkUnitRatesPT
		{
			get
			{
				return this.GetTable<T_pt_BulkUnitRatesPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_Calendar> T_pt_Calendar
		{
			get
			{
				return this.GetTable<T_pt_Calendar>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_cancelapplic> T_pt_cancelapplic
		{
			get
			{
				return this.GetTable<T_pt_cancelapplic>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_cancelrate> T_pt_cancelrate
		{
			get
			{
				return this.GetTable<T_pt_cancelrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_CommitmentPT> T_pt_CommitmentPT
		{
			get
			{
				return this.GetTable<T_pt_CommitmentPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_confcalldiscount> T_pt_confcalldiscount
		{
			get
			{
				return this.GetTable<T_pt_confcalldiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_CurrencyExchangeRates> T_pt_CurrencyExchangeRates
		{
			get
			{
				return this.GetTable<T_pt_CurrencyExchangeRates>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_decimalcalc> T_pt_decimalcalc
		{
			get
			{
				return this.GetTable<T_pt_decimalcalc>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_featuresetupcharge> T_pt_featuresetupcharge
		{
			get
			{
				return this.GetTable<T_pt_featuresetupcharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_FlatDiscount> T_pt_FlatDiscount
		{
			get
			{
				return this.GetTable<T_pt_FlatDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_FlatDiscount_NoCond> T_pt_FlatDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_pt_FlatDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_FlatRecurringCharge> T_pt_FlatRecurringCharge
		{
			get
			{
				return this.GetTable<T_pt_FlatRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_FreeUsagePT> T_pt_FreeUsagePT
		{
			get
			{
				return this.GetTable<T_pt_FreeUsagePT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_globalactions> T_pt_globalactions
		{
			get
			{
				return this.GetTable<T_pt_globalactions>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_includedrole> T_pt_includedrole
		{
			get
			{
				return this.GetTable<T_pt_includedrole>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_IncrementalDiscountPT> T_pt_IncrementalDiscountPT
		{
			get
			{
				return this.GetTable<T_pt_IncrementalDiscountPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_intlrate> T_pt_intlrate
		{
			get
			{
				return this.GetTable<T_pt_intlrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_ldrate> T_pt_ldrate
		{
			get
			{
				return this.GetTable<T_pt_ldrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_metricfeaturerate> T_pt_metricfeaturerate
		{
			get
			{
				return this.GetTable<T_pt_metricfeaturerate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_minapplic> T_pt_minapplic
		{
			get
			{
				return this.GetTable<T_pt_minapplic>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_mincharge> T_pt_mincharge
		{
			get
			{
				return this.GetTable<T_pt_mincharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_NonRecurringCharge> T_pt_NonRecurringCharge
		{
			get
			{
				return this.GetTable<T_pt_NonRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_overusedportapplic> T_pt_overusedportapplic
		{
			get
			{
				return this.GetTable<T_pt_overusedportapplic>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_overusedportdef> T_pt_overusedportdef
		{
			get
			{
				return this.GetTable<T_pt_overusedportdef>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_overusedportrate> T_pt_overusedportrate
		{
			get
			{
				return this.GetTable<T_pt_overusedportrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_PercentDiscount> T_pt_PercentDiscount
		{
			get
			{
				return this.GetTable<T_pt_PercentDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_PercentDiscount_NoCond> T_pt_PercentDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_pt_PercentDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_PopcornPrices> T_pt_PopcornPrices
		{
			get
			{
				return this.GetTable<T_pt_PopcornPrices>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_rateconn> T_pt_rateconn
		{
			get
			{
				return this.GetTable<T_pt_rateconn>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_rateSMS> T_pt_rateSMS
		{
			get
			{
				return this.GetTable<T_pt_rateSMS>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_reservationapplic> T_pt_reservationapplic
		{
			get
			{
				return this.GetTable<T_pt_reservationapplic>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_reserverate> T_pt_reserverate
		{
			get
			{
				return this.GetTable<T_pt_reserverate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_songdownloads> T_pt_songdownloads
		{
			get
			{
				return this.GetTable<T_pt_songdownloads>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_songsession> T_pt_songsession
		{
			get
			{
				return this.GetTable<T_pt_songsession>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_songsessionchild> T_pt_songsessionchild
		{
			get
			{
				return this.GetTable<T_pt_songsessionchild>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_SpecialCharacters> T_pt_SpecialCharacters
		{
			get
			{
				return this.GetTable<T_pt_SpecialCharacters>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_taxBand> T_pt_taxBand
		{
			get
			{
				return this.GetTable<T_pt_taxBand>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_taxRate> T_pt_taxRate
		{
			get
			{
				return this.GetTable<T_pt_taxRate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_test> T_pt_test
		{
			get
			{
				return this.GetTable<T_pt_test>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_TestAggregate> T_pt_TestAggregate
		{
			get
			{
				return this.GetTable<T_pt_TestAggregate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_TestNonAggregate> T_pt_TestNonAggregate
		{
			get
			{
				return this.GetTable<T_pt_TestNonAggregate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_TicketPrices> T_pt_TicketPrices
		{
			get
			{
				return this.GetTable<T_pt_TicketPrices>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_TieredEventRatesPT> T_pt_TieredEventRatesPT
		{
			get
			{
				return this.GetTable<T_pt_TieredEventRatesPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_TieredUnitRatesPT> T_pt_TieredUnitRatesPT
		{
			get
			{
				return this.GetTable<T_pt_TieredUnitRatesPT>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_timefeaturerate> T_pt_timefeaturerate
		{
			get
			{
				return this.GetTable<T_pt_timefeaturerate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_tollfreerate> T_pt_tollfreerate
		{
			get
			{
				return this.GetTable<T_pt_tollfreerate>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_UDRCTapered> T_pt_UDRCTapered
		{
			get
			{
				return this.GetTable<T_pt_UDRCTapered>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_UDRCTiered> T_pt_UDRCTiered
		{
			get
			{
				return this.GetTable<T_pt_UDRCTiered>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_unusedportapplic> T_pt_unusedportapplic
		{
			get
			{
				return this.GetTable<T_pt_unusedportapplic>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_unusedportdef> T_pt_unusedportdef
		{
			get
			{
				return this.GetTable<T_pt_unusedportdef>();
			}
		}
		
		public System.Data.Linq.Table<T_pt_unusedportrate> T_pt_unusedportrate
		{
			get
			{
				return this.GetTable<T_pt_unusedportrate>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_AccountCredit> T_pv_AccountCredit
		{
			get
			{
				return this.GetTable<T_pv_AccountCredit>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_AccountCreditRequest> T_pv_AccountCreditRequest
		{
			get
			{
				return this.GetTable<T_pv_AccountCreditRequest>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_AddCharge> T_pv_AddCharge
		{
			get
			{
				return this.GetTable<T_pv_AddCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_ARAdjustment> T_pv_ARAdjustment
		{
			get
			{
				return this.GetTable<T_pv_ARAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_audioconfcall> T_pv_audioconfcall
		{
			get
			{
				return this.GetTable<T_pv_audioconfcall>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_audioconfconnection> T_pv_audioconfconnection
		{
			get
			{
				return this.GetTable<T_pv_audioconfconnection>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_audioconffeature> T_pv_audioconffeature
		{
			get
			{
				return this.GetTable<T_pv_audioconffeature>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_Audit> T_pv_Audit
		{
			get
			{
				return this.GetTable<T_pv_Audit>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_BillSoftPCode> T_pv_BillSoftPCode
		{
			get
			{
				return this.GetTable<T_pv_BillSoftPCode>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_Commitment> T_pv_Commitment
		{
			get
			{
				return this.GetTable<T_pv_Commitment>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_FlatDiscount> T_pv_FlatDiscount
		{
			get
			{
				return this.GetTable<T_pv_FlatDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_FlatDiscount_NoCond> T_pv_FlatDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_pv_FlatDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_FlatRecurringCharge> T_pv_FlatRecurringCharge
		{
			get
			{
				return this.GetTable<T_pv_FlatRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_FreeUsage> T_pv_FreeUsage
		{
			get
			{
				return this.GetTable<T_pv_FreeUsage>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_GroupDiscount_Temp> T_pv_GroupDiscount_Temp
		{
			get
			{
				return this.GetTable<T_pv_GroupDiscount_Temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_MetraTax> T_pv_MetraTax
		{
			get
			{
				return this.GetTable<T_pv_MetraTax>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_movietickets> T_pv_movietickets
		{
			get
			{
				return this.GetTable<T_pv_movietickets>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_movietickets_temp> T_pv_movietickets_temp
		{
			get
			{
				return this.GetTable<T_pv_movietickets_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_MultiBucketDiscount> T_pv_MultiBucketDiscount
		{
			get
			{
				return this.GetTable<T_pv_MultiBucketDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_MultiBucketPricing> T_pv_MultiBucketPricing
		{
			get
			{
				return this.GetTable<T_pv_MultiBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_NonRecurringCharge> T_pv_NonRecurringCharge
		{
			get
			{
				return this.GetTable<T_pv_NonRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_NonStandardCharge> T_pv_NonStandardCharge
		{
			get
			{
				return this.GetTable<T_pv_NonStandardCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_NonStandardChargeRequest> T_pv_NonStandardChargeRequest
		{
			get
			{
				return this.GetTable<T_pv_NonStandardChargeRequest>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_Payment> T_pv_Payment
		{
			get
			{
				return this.GetTable<T_pv_Payment>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_PaymentDetails> T_pv_PaymentDetails
		{
			get
			{
				return this.GetTable<T_pv_PaymentDetails>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_PercentDiscount> T_pv_PercentDiscount
		{
			get
			{
				return this.GetTable<T_pv_PercentDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_PercentDiscount_NoCond> T_pv_PercentDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_pv_PercentDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_SingleBucketPricing> T_pv_SingleBucketPricing
		{
			get
			{
				return this.GetTable<T_pv_SingleBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_smokeaggrcnt> T_pv_smokeaggrcnt
		{
			get
			{
				return this.GetTable<T_pv_smokeaggrcnt>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_smokeaggrcnt_temp> T_pv_smokeaggrcnt_temp
		{
			get
			{
				return this.GetTable<T_pv_smokeaggrcnt_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_smokeaggrdec> T_pv_smokeaggrdec
		{
			get
			{
				return this.GetTable<T_pv_smokeaggrdec>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_smokeaggrdec_temp> T_pv_smokeaggrdec_temp
		{
			get
			{
				return this.GetTable<T_pv_smokeaggrdec_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_smoketestpriceableitem> T_pv_smoketestpriceableitem
		{
			get
			{
				return this.GetTable<T_pv_smoketestpriceableitem>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_SMSService> T_pv_SMSService
		{
			get
			{
				return this.GetTable<T_pv_SMSService>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songdownloads> T_pv_songdownloads
		{
			get
			{
				return this.GetTable<T_pv_songdownloads>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songdownloads_temp> T_pv_songdownloads_temp
		{
			get
			{
				return this.GetTable<T_pv_songdownloads_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songsession> T_pv_songsession
		{
			get
			{
				return this.GetTable<T_pv_songsession>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songsession_temp> T_pv_songsession_temp
		{
			get
			{
				return this.GetTable<T_pv_songsession_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songsessionchild> T_pv_songsessionchild
		{
			get
			{
				return this.GetTable<T_pv_songsessionchild>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_songsessionchild_temp> T_pv_songsessionchild_temp
		{
			get
			{
				return this.GetTable<T_pv_songsessionchild_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_stocks> T_pv_stocks
		{
			get
			{
				return this.GetTable<T_pv_stocks>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_TestParent> T_pv_TestParent
		{
			get
			{
				return this.GetTable<T_pv_TestParent>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_testpi> T_pv_testpi
		{
			get
			{
				return this.GetTable<T_pv_testpi>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_testpi2> T_pv_testpi2
		{
			get
			{
				return this.GetTable<T_pv_testpi2>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_TestService> T_pv_TestService
		{
			get
			{
				return this.GetTable<T_pv_TestService>();
			}
		}
		
		public System.Data.Linq.Table<T_pv_UDRecurringCharge> T_pv_UDRecurringCharge
		{
			get
			{
				return this.GetTable<T_pv_UDRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_query_log> T_query_log
		{
			get
			{
				return this.GetTable<T_query_log>();
			}
		}
		
		public System.Data.Linq.Table<T_rabbitmq_nodes> T_rabbitmq_nodes
		{
			get
			{
				return this.GetTable<T_rabbitmq_nodes>();
			}
		}
		
		public System.Data.Linq.Table<T_rabbitmq_queues> T_rabbitmq_queues
		{
			get
			{
				return this.GetTable<T_rabbitmq_queues>();
			}
		}
		
		public System.Data.Linq.Table<T_reason_code> T_reason_code
		{
			get
			{
				return this.GetTable<T_reason_code>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent> T_recevent
		{
			get
			{
				return this.GetTable<T_recevent>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_concurrent> T_recevent_concurrent
		{
			get
			{
				return this.GetTable<T_recevent_concurrent>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_dep> T_recevent_dep
		{
			get
			{
				return this.GetTable<T_recevent_dep>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_eop> T_recevent_eop
		{
			get
			{
				return this.GetTable<T_recevent_eop>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_inst> T_recevent_inst
		{
			get
			{
				return this.GetTable<T_recevent_inst>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_inst_audit> T_recevent_inst_audit
		{
			get
			{
				return this.GetTable<T_recevent_inst_audit>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_machine> T_recevent_machine
		{
			get
			{
				return this.GetTable<T_recevent_machine>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_run> T_recevent_run
		{
			get
			{
				return this.GetTable<T_recevent_run>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_run_batch> T_recevent_run_batch
		{
			get
			{
				return this.GetTable<T_recevent_run_batch>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_run_details> T_recevent_run_details
		{
			get
			{
				return this.GetTable<T_recevent_run_details>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_run_failure_acc> T_recevent_run_failure_acc
		{
			get
			{
				return this.GetTable<T_recevent_run_failure_acc>();
			}
		}
		
		public System.Data.Linq.Table<T_recevent_scheduled> T_recevent_scheduled
		{
			get
			{
				return this.GetTable<T_recevent_scheduled>();
			}
		}
		
		public System.Data.Linq.Table<T_recur> T_recur
		{
			get
			{
				return this.GetTable<T_recur>();
			}
		}
		
		public System.Data.Linq.Table<T_recur_enum> T_recur_enum
		{
			get
			{
				return this.GetTable<T_recur_enum>();
			}
		}
		
		public System.Data.Linq.Table<T_recur_value> T_recur_value
		{
			get
			{
				return this.GetTable<T_recur_value>();
			}
		}
		
		public System.Data.Linq.Table<T_recur_value_temp> T_recur_value_temp
		{
			get
			{
				return this.GetTable<T_recur_value_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_recur_window> T_recur_window
		{
			get
			{
				return this.GetTable<T_recur_window>();
			}
		}
		
		public System.Data.Linq.Table<T_recurring_event_acct_log> T_recurring_event_acct_log
		{
			get
			{
				return this.GetTable<T_recurring_event_acct_log>();
			}
		}
		
		public System.Data.Linq.Table<T_ReportingDBLog> T_ReportingDBLog
		{
			get
			{
				return this.GetTable<T_ReportingDBLog>();
			}
		}
		
		public System.Data.Linq.Table<T_rerun> T_rerun
		{
			get
			{
				return this.GetTable<T_rerun>();
			}
		}
		
		public System.Data.Linq.Table<T_rerun_history> T_rerun_history
		{
			get
			{
				return this.GetTable<T_rerun_history>();
			}
		}
		
		public System.Data.Linq.Table<T_role> T_role
		{
			get
			{
				return this.GetTable<T_role>();
			}
		}
		
		public System.Data.Linq.Table<T_rsched> T_rsched
		{
			get
			{
				return this.GetTable<T_rsched>();
			}
		}
		
		public System.Data.Linq.Table<T_rsched_pub> T_rsched_pub
		{
			get
			{
				return this.GetTable<T_rsched_pub>();
			}
		}
		
		public System.Data.Linq.Table<T_rulesetdefinition> T_rulesetdefinition
		{
			get
			{
				return this.GetTable<T_rulesetdefinition>();
			}
		}
		
		public System.Data.Linq.Table<T_sch_daily> T_sch_daily
		{
			get
			{
				return this.GetTable<T_sch_daily>();
			}
		}
		
		public System.Data.Linq.Table<T_sch_monthly> T_sch_monthly
		{
			get
			{
				return this.GetTable<T_sch_monthly>();
			}
		}
		
		public System.Data.Linq.Table<T_sch_weekly> T_sch_weekly
		{
			get
			{
				return this.GetTable<T_sch_weekly>();
			}
		}
		
		public System.Data.Linq.Table<T_securitem> T_securitem
		{
			get
			{
				return this.GetTable<T_securitem>();
			}
		}
		
		public System.Data.Linq.Table<T_service_def_log> T_service_def_log
		{
			get
			{
				return this.GetTable<T_service_def_log>();
			}
		}
		
		public System.Data.Linq.Table<T_service_def_prop> T_service_def_prop
		{
			get
			{
				return this.GetTable<T_service_def_prop>();
			}
		}
		
		public System.Data.Linq.Table<T_session> T_session
		{
			get
			{
				return this.GetTable<T_session>();
			}
		}
		
		public System.Data.Linq.Table<T_session_set> T_session_set
		{
			get
			{
				return this.GetTable<T_session_set>();
			}
		}
		
		public System.Data.Linq.Table<T_session_state> T_session_state
		{
			get
			{
				return this.GetTable<T_session_state>();
			}
		}
		
		public System.Data.Linq.Table<T_site_user> T_site_user
		{
			get
			{
				return this.GetTable<T_site_user>();
			}
		}
		
		public System.Data.Linq.Table<T_spec_char_values> T_spec_char_values
		{
			get
			{
				return this.GetTable<T_spec_char_values>();
			}
		}
		
		public System.Data.Linq.Table<T_spec_characteristics> T_spec_characteristics
		{
			get
			{
				return this.GetTable<T_spec_characteristics>();
			}
		}
		
		public System.Data.Linq.Table<T_spec_val_map> T_spec_val_map
		{
			get
			{
				return this.GetTable<T_spec_val_map>();
			}
		}
		
		public System.Data.Linq.Table<T_stored_procedure_table_lock> T_stored_procedure_table_lock
		{
			get
			{
				return this.GetTable<T_stored_procedure_table_lock>();
			}
		}
		
		public System.Data.Linq.Table<T_str_col_capability> T_str_col_capability
		{
			get
			{
				return this.GetTable<T_str_col_capability>();
			}
		}
		
		public System.Data.Linq.Table<T_sub> T_sub
		{
			get
			{
				return this.GetTable<T_sub>();
			}
		}
		
		public System.Data.Linq.Table<T_sub_history> T_sub_history
		{
			get
			{
				return this.GetTable<T_sub_history>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AccountCreateAndSubscribe> T_svc_AccountCreateAndSubscribe
		{
			get
			{
				return this.GetTable<T_svc_AccountCreateAndSubscribe>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AccountCreation> T_svc_AccountCreation
		{
			get
			{
				return this.GetTable<T_svc_AccountCreation>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AccountCredit> T_svc_AccountCredit
		{
			get
			{
				return this.GetTable<T_svc_AccountCredit>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AccountCreditRequest> T_svc_AccountCreditRequest
		{
			get
			{
				return this.GetTable<T_svc_AccountCreditRequest>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AccountMapping> T_svc_AccountMapping
		{
			get
			{
				return this.GetTable<T_svc_AccountMapping>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_AddCharge> T_svc_AddCharge
		{
			get
			{
				return this.GetTable<T_svc_AddCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_ARAccountCreation> T_svc_ARAccountCreation
		{
			get
			{
				return this.GetTable<T_svc_ARAccountCreation>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_ARAdjustment> T_svc_ARAdjustment
		{
			get
			{
				return this.GetTable<T_svc_ARAdjustment>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_ARSalesPersonCreation> T_svc_ARSalesPersonCreation
		{
			get
			{
				return this.GetTable<T_svc_ARSalesPersonCreation>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_ARTerritoryUpdate> T_svc_ARTerritoryUpdate
		{
			get
			{
				return this.GetTable<T_svc_ARTerritoryUpdate>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_audioconfcall> T_svc_audioconfcall
		{
			get
			{
				return this.GetTable<T_svc_audioconfcall>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_audioconfconnection> T_svc_audioconfconnection
		{
			get
			{
				return this.GetTable<T_svc_audioconfconnection>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_audioconffeature> T_svc_audioconffeature
		{
			get
			{
				return this.GetTable<T_svc_audioconffeature>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_BillSoftPCode> T_svc_BillSoftPCode
		{
			get
			{
				return this.GetTable<T_svc_BillSoftPCode>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_Commitment> T_svc_Commitment
		{
			get
			{
				return this.GetTable<T_svc_Commitment>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_DTCGetWhereAbouts> T_svc_DTCGetWhereAbouts
		{
			get
			{
				return this.GetTable<T_svc_DTCGetWhereAbouts>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_FlatDiscount> T_svc_FlatDiscount
		{
			get
			{
				return this.GetTable<T_svc_FlatDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_FlatDiscount_NoCond> T_svc_FlatDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_svc_FlatDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_FlatRecurringCharge> T_svc_FlatRecurringCharge
		{
			get
			{
				return this.GetTable<T_svc_FlatRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_FreeUsage> T_svc_FreeUsage
		{
			get
			{
				return this.GetTable<T_svc_FreeUsage>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_GSMConnect> T_svc_GSMConnect
		{
			get
			{
				return this.GetTable<T_svc_GSMConnect>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_GSMCreate> T_svc_GSMCreate
		{
			get
			{
				return this.GetTable<T_svc_GSMCreate>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_GSMCreateAndConnect> T_svc_GSMCreateAndConnect
		{
			get
			{
				return this.GetTable<T_svc_GSMCreateAndConnect>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_GSMDisconnect> T_svc_GSMDisconnect
		{
			get
			{
				return this.GetTable<T_svc_GSMDisconnect>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_GSMUpdate> T_svc_GSMUpdate
		{
			get
			{
				return this.GetTable<T_svc_GSMUpdate>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_Login> T_svc_Login
		{
			get
			{
				return this.GetTable<T_svc_Login>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_MetraTax> T_svc_MetraTax
		{
			get
			{
				return this.GetTable<T_svc_MetraTax>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_movietickets> T_svc_movietickets
		{
			get
			{
				return this.GetTable<T_svc_movietickets>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_movietickets_temp> T_svc_movietickets_temp
		{
			get
			{
				return this.GetTable<T_svc_movietickets_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_MultiBucketDiscount> T_svc_MultiBucketDiscount
		{
			get
			{
				return this.GetTable<T_svc_MultiBucketDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_MultiBucketPricing> T_svc_MultiBucketPricing
		{
			get
			{
				return this.GetTable<T_svc_MultiBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_NonRecurringCharge> T_svc_NonRecurringCharge
		{
			get
			{
				return this.GetTable<T_svc_NonRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_NonStandardCharge> T_svc_NonStandardCharge
		{
			get
			{
				return this.GetTable<T_svc_NonStandardCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_NonStandardChargeRequest> T_svc_NonStandardChargeRequest
		{
			get
			{
				return this.GetTable<T_svc_NonStandardChargeRequest>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_Payment> T_svc_Payment
		{
			get
			{
				return this.GetTable<T_svc_Payment>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_PaymentDetails> T_svc_PaymentDetails
		{
			get
			{
				return this.GetTable<T_svc_PaymentDetails>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_PercentDiscount> T_svc_PercentDiscount
		{
			get
			{
				return this.GetTable<T_svc_PercentDiscount>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_PercentDiscount_NoCond> T_svc_PercentDiscount_NoCond
		{
			get
			{
				return this.GetTable<T_svc_PercentDiscount_NoCond>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_SingleBucketPricing> T_svc_SingleBucketPricing
		{
			get
			{
				return this.GetTable<T_svc_SingleBucketPricing>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_smokeaggrcnt> T_svc_smokeaggrcnt
		{
			get
			{
				return this.GetTable<T_svc_smokeaggrcnt>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_smokeaggrcnt_temp> T_svc_smokeaggrcnt_temp
		{
			get
			{
				return this.GetTable<T_svc_smokeaggrcnt_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_smokeaggrdec> T_svc_smokeaggrdec
		{
			get
			{
				return this.GetTable<T_svc_smokeaggrdec>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_smokeaggrdec_temp> T_svc_smokeaggrdec_temp
		{
			get
			{
				return this.GetTable<T_svc_smokeaggrdec_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_SMSService> T_svc_SMSService
		{
			get
			{
				return this.GetTable<T_svc_SMSService>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songdownloads> T_svc_songdownloads
		{
			get
			{
				return this.GetTable<T_svc_songdownloads>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songdownloads_temp> T_svc_songdownloads_temp
		{
			get
			{
				return this.GetTable<T_svc_songdownloads_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songsession> T_svc_songsession
		{
			get
			{
				return this.GetTable<T_svc_songsession>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songsession_temp> T_svc_songsession_temp
		{
			get
			{
				return this.GetTable<T_svc_songsession_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songsessionchild> T_svc_songsessionchild
		{
			get
			{
				return this.GetTable<T_svc_songsessionchild>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_songsessionchild_temp> T_svc_songsessionchild_temp
		{
			get
			{
				return this.GetTable<T_svc_songsessionchild_temp>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_stocks> T_svc_stocks
		{
			get
			{
				return this.GetTable<T_svc_stocks>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_SystemAccountCreation> T_svc_SystemAccountCreation
		{
			get
			{
				return this.GetTable<T_svc_SystemAccountCreation>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_TestParent> T_svc_TestParent
		{
			get
			{
				return this.GetTable<T_svc_TestParent>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_testpi> T_svc_testpi
		{
			get
			{
				return this.GetTable<T_svc_testpi>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_testpi2> T_svc_testpi2
		{
			get
			{
				return this.GetTable<T_svc_testpi2>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_TestService> T_svc_TestService
		{
			get
			{
				return this.GetTable<T_svc_TestService>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_testservice2> T_svc_testservice2
		{
			get
			{
				return this.GetTable<T_svc_testservice2>();
			}
		}
		
		public System.Data.Linq.Table<T_svc_UDRecurringCharge> T_svc_UDRecurringCharge
		{
			get
			{
				return this.GetTable<T_svc_UDRecurringCharge>();
			}
		}
		
		public System.Data.Linq.Table<T_sys_track_adapter_run> T_sys_track_adapter_run
		{
			get
			{
				return this.GetTable<T_sys_track_adapter_run>();
			}
		}
		
		public System.Data.Linq.Table<T_sys_upgrade> T_sys_upgrade
		{
			get
			{
				return this.GetTable<T_sys_upgrade>();
			}
		}
		
		public System.Data.Linq.Table<T_tariff> T_tariff
		{
			get
			{
				return this.GetTable<T_tariff>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_billsoft_exemptions> T_tax_billsoft_exemptions
		{
			get
			{
				return this.GetTable<T_tax_billsoft_exemptions>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_billsoft_override> T_tax_billsoft_override
		{
			get
			{
				return this.GetTable<T_tax_billsoft_override>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_billsoft_pc_map> T_tax_billsoft_pc_map
		{
			get
			{
				return this.GetTable<T_tax_billsoft_pc_map>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_details> T_tax_details
		{
			get
			{
				return this.GetTable<T_tax_details>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_run> T_tax_run
		{
			get
			{
				return this.GetTable<T_tax_run>();
			}
		}
		
		public System.Data.Linq.Table<T_tax_vendor_params> T_tax_vendor_params
		{
			get
			{
				return this.GetTable<T_tax_vendor_params>();
			}
		}
		
		public System.Data.Linq.Table<T_unique_cons> T_unique_cons
		{
			get
			{
				return this.GetTable<T_unique_cons>();
			}
		}
		
		public System.Data.Linq.Table<T_unique_cons_columns> T_unique_cons_columns
		{
			get
			{
				return this.GetTable<T_unique_cons_columns>();
			}
		}
		
		public System.Data.Linq.Table<T_updatestatsinfo> T_updatestatsinfo
		{
			get
			{
				return this.GetTable<T_updatestatsinfo>();
			}
		}
		
		public System.Data.Linq.Table<T_usage_cycle> T_usage_cycle
		{
			get
			{
				return this.GetTable<T_usage_cycle>();
			}
		}
		
		public System.Data.Linq.Table<T_usage_cycle_type> T_usage_cycle_type
		{
			get
			{
				return this.GetTable<T_usage_cycle_type>();
			}
		}
		
		public System.Data.Linq.Table<T_usage_interval> T_usage_interval
		{
			get
			{
				return this.GetTable<T_usage_interval>();
			}
		}
		
		public System.Data.Linq.Table<T_usage_server> T_usage_server
		{
			get
			{
				return this.GetTable<T_usage_server>();
			}
		}
		
		public System.Data.Linq.Table<T_user_credentials> T_user_credentials
		{
			get
			{
				return this.GetTable<T_user_credentials>();
			}
		}
		
		public System.Data.Linq.Table<T_user_credentials_history> T_user_credentials_history
		{
			get
			{
				return this.GetTable<T_user_credentials_history>();
			}
		}
		
		public System.Data.Linq.Table<T_view_hierarchy> T_view_hierarchy
		{
			get
			{
				return this.GetTable<T_view_hierarchy>();
			}
		}
		
		public System.Data.Linq.Table<T_wf_acc_inst_map> T_wf_acc_inst_map
		{
			get
			{
				return this.GetTable<T_wf_acc_inst_map>();
			}
		}
		
		public System.Data.Linq.Table<T_wf_be_inst_map> T_wf_be_inst_map
		{
			get
			{
				return this.GetTable<T_wf_be_inst_map>();
			}
		}
		
		public System.Data.Linq.Table<T_wf_completedscope> T_wf_completedscope
		{
			get
			{
				return this.GetTable<T_wf_completedscope>();
			}
		}
		
		public System.Data.Linq.Table<T_wf_instancestate> T_wf_instancestate
		{
			get
			{
				return this.GetTable<T_wf_instancestate>();
			}
		}
		
		public System.Data.Linq.Table<Tier_domain_mapping> Tier_domain_mapping
		{
			get
			{
				return this.GetTable<Tier_domain_mapping>();
			}
		}
		
		public System.Data.Linq.Table<Tmp_billing_rerun_accounts> Tmp_billing_rerun_accounts
		{
			get
			{
				return this.GetTable<Tmp_billing_rerun_accounts>();
			}
		}
	}
	
	[Table(Name="dbo.agg_aqg_map")]
	public partial class Agg_aqg_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private string _Account_qualification_group;
		
		private int _Child_id_acc;
		
		private System.DateTime _Start_date;
		
		private System.Nullable<System.DateTime> _End_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnAccount_qualification_groupChanging(string value);
    partial void OnAccount_qualification_groupChanged();
    partial void OnChild_id_accChanging(int value);
    partial void OnChild_id_accChanged();
    partial void OnStart_dateChanging(System.DateTime value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_dateChanged();
    #endregion
		
		public Agg_aqg_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="account_qualification_group", Storage="_Account_qualification_group", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account_qualification_group
		{
			get
			{
				return this._Account_qualification_group;
			}
			set
			{
				if ((this._Account_qualification_group != value))
				{
					this.OnAccount_qualification_groupChanging(value);
					this.SendPropertyChanging();
					this._Account_qualification_group = value;
					this.SendPropertyChanged("Account_qualification_group");
					this.OnAccount_qualification_groupChanged();
				}
			}
		}
		
		[Column(Name="child_id_acc", Storage="_Child_id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Child_id_acc
		{
			get
			{
				return this._Child_id_acc;
			}
			set
			{
				if ((this._Child_id_acc != value))
				{
					this.OnChild_id_accChanging(value);
					this.SendPropertyChanging();
					this._Child_id_acc = value;
					this.SendPropertyChanged("Child_id_acc");
					this.OnChild_id_accChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_End_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_boundary_group_acc_map")]
	public partial class Agg_boundary_group_acc_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Boundary_group_id;
		
		private int _Id_acc;
		
		private System.Nullable<int> _Group_counter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoundary_group_idChanging(int value);
    partial void OnBoundary_group_idChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnGroup_counterChanging(System.Nullable<int> value);
    partial void OnGroup_counterChanged();
    #endregion
		
		public Agg_boundary_group_acc_map()
		{
			OnCreated();
		}
		
		[Column(Name="boundary_group_id", Storage="_Boundary_group_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Boundary_group_id
		{
			get
			{
				return this._Boundary_group_id;
			}
			set
			{
				if ((this._Boundary_group_id != value))
				{
					this.OnBoundary_group_idChanging(value);
					this.SendPropertyChanging();
					this._Boundary_group_id = value;
					this.SendPropertyChanged("Boundary_group_id");
					this.OnBoundary_group_idChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="group_counter", Storage="_Group_counter", DbType="Int")]
		public System.Nullable<int> Group_counter
		{
			get
			{
				return this._Group_counter;
			}
			set
			{
				if ((this._Group_counter != value))
				{
					this.OnGroup_counterChanging(value);
					this.SendPropertyChanging();
					this._Group_counter = value;
					this.SendPropertyChanged("Group_counter");
					this.OnGroup_counterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_boundary_group_aqg_map")]
	public partial class Agg_boundary_group_aqg_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Boundary_group_id;
		
		private int _Id_acc;
		
		private string _Account_qualification_group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoundary_group_idChanging(int value);
    partial void OnBoundary_group_idChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnAccount_qualification_groupChanging(string value);
    partial void OnAccount_qualification_groupChanged();
    #endregion
		
		public Agg_boundary_group_aqg_map()
		{
			OnCreated();
		}
		
		[Column(Name="boundary_group_id", Storage="_Boundary_group_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Boundary_group_id
		{
			get
			{
				return this._Boundary_group_id;
			}
			set
			{
				if ((this._Boundary_group_id != value))
				{
					this.OnBoundary_group_idChanging(value);
					this.SendPropertyChanging();
					this._Boundary_group_id = value;
					this.SendPropertyChanged("Boundary_group_id");
					this.OnBoundary_group_idChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="account_qualification_group", Storage="_Account_qualification_group", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account_qualification_group
		{
			get
			{
				return this._Account_qualification_group;
			}
			set
			{
				if ((this._Account_qualification_group != value))
				{
					this.OnAccount_qualification_groupChanging(value);
					this.SendPropertyChanging();
					this._Account_qualification_group = value;
					this.SendPropertyChanged("Account_qualification_group");
					this.OnAccount_qualification_groupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_boundary_groups")]
	public partial class Agg_boundary_groups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Boundary_group_id;
		
		private System.Nullable<System.DateTime> _Lock_date;
		
		private string _Lock_guid;
		
		private int _Logical_instance_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoundary_group_idChanging(int value);
    partial void OnBoundary_group_idChanged();
    partial void OnLock_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnLock_dateChanged();
    partial void OnLock_guidChanging(string value);
    partial void OnLock_guidChanged();
    partial void OnLogical_instance_idChanging(int value);
    partial void OnLogical_instance_idChanged();
    #endregion
		
		public Agg_boundary_groups()
		{
			OnCreated();
		}
		
		[Column(Name="boundary_group_id", Storage="_Boundary_group_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Boundary_group_id
		{
			get
			{
				return this._Boundary_group_id;
			}
			set
			{
				if ((this._Boundary_group_id != value))
				{
					this.OnBoundary_group_idChanging(value);
					this.SendPropertyChanging();
					this._Boundary_group_id = value;
					this.SendPropertyChanged("Boundary_group_id");
					this.OnBoundary_group_idChanged();
				}
			}
		}
		
		[Column(Name="lock_date", Storage="_Lock_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Lock_date
		{
			get
			{
				return this._Lock_date;
			}
			set
			{
				if ((this._Lock_date != value))
				{
					this.OnLock_dateChanging(value);
					this.SendPropertyChanging();
					this._Lock_date = value;
					this.SendPropertyChanged("Lock_date");
					this.OnLock_dateChanged();
				}
			}
		}
		
		[Column(Name="lock_guid", Storage="_Lock_guid", DbType="VarChar(100)")]
		public string Lock_guid
		{
			get
			{
				return this._Lock_guid;
			}
			set
			{
				if ((this._Lock_guid != value))
				{
					this.OnLock_guidChanging(value);
					this.SendPropertyChanging();
					this._Lock_guid = value;
					this.SendPropertyChanged("Lock_guid");
					this.OnLock_guidChanged();
				}
			}
		}
		
		[Column(Name="logical_instance_id", Storage="_Logical_instance_id", DbType="Int NOT NULL")]
		public int Logical_instance_id
		{
			get
			{
				return this._Logical_instance_id;
			}
			set
			{
				if ((this._Logical_instance_id != value))
				{
					this.OnLogical_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Logical_instance_id = value;
					this.SendPropertyChanged("Logical_instance_id");
					this.OnLogical_instance_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_bundle_new_pos")]
	public partial class Agg_bundle_new_pos
	{
		
		private System.Nullable<int> _Id_po;
		
		public Agg_bundle_new_pos()
		{
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_bundle_old_pos")]
	public partial class Agg_bundle_old_pos
	{
		
		private System.Nullable<int> _Id_po;
		
		public Agg_bundle_old_pos()
		{
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_bundle_pos")]
	public partial class Agg_bundle_pos
	{
		
		private System.Nullable<int> _Id_po;
		
		public Agg_bundle_pos()
		{
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_bundle_pts")]
	public partial class Agg_bundle_pts
	{
		
		private string _Paramtable_name;
		
		private System.Nullable<int> _Id_pt;
		
		public Agg_bundle_pts()
		{
		}
		
		[Column(Name="paramtable_name", Storage="_Paramtable_name", DbType="VarChar(4000)")]
		public string Paramtable_name
		{
			get
			{
				return this._Paramtable_name;
			}
			set
			{
				if ((this._Paramtable_name != value))
				{
					this._Paramtable_name = value;
				}
			}
		}
		
		[Column(Name="id_pt", Storage="_Id_pt", DbType="Int")]
		public System.Nullable<int> Id_pt
		{
			get
			{
				return this._Id_pt;
			}
			set
			{
				if ((this._Id_pt != value))
				{
					this._Id_pt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_charge_audit_trail")]
	public partial class Agg_charge_audit_trail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_payee;
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _Decision_unique_id;
		
		private string _Tier_start;
		
		private string _Tier_end;
		
		private string _Charge_direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payeeChanging(int value);
    partial void OnId_payeeChanged();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnDecision_unique_idChanging(string value);
    partial void OnDecision_unique_idChanged();
    partial void OnTier_startChanging(string value);
    partial void OnTier_startChanged();
    partial void OnTier_endChanging(string value);
    partial void OnTier_endChanged();
    partial void OnCharge_directionChanging(string value);
    partial void OnCharge_directionChanged();
    #endregion
		
		public Agg_charge_audit_trail()
		{
			OnCreated();
		}
		
		[Column(Name="id_payee", Storage="_Id_payee", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_payee
		{
			get
			{
				return this._Id_payee;
			}
			set
			{
				if ((this._Id_payee != value))
				{
					this.OnId_payeeChanging(value);
					this.SendPropertyChanging();
					this._Id_payee = value;
					this.SendPropertyChanged("Id_payee");
					this.OnId_payeeChanged();
				}
			}
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="decision_unique_id", Storage="_Decision_unique_id", DbType="VarChar(4000)")]
		public string Decision_unique_id
		{
			get
			{
				return this._Decision_unique_id;
			}
			set
			{
				if ((this._Decision_unique_id != value))
				{
					this.OnDecision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_unique_id = value;
					this.SendPropertyChanged("Decision_unique_id");
					this.OnDecision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="tier_start", Storage="_Tier_start", DbType="VarChar(4000)")]
		public string Tier_start
		{
			get
			{
				return this._Tier_start;
			}
			set
			{
				if ((this._Tier_start != value))
				{
					this.OnTier_startChanging(value);
					this.SendPropertyChanging();
					this._Tier_start = value;
					this.SendPropertyChanged("Tier_start");
					this.OnTier_startChanged();
				}
			}
		}
		
		[Column(Name="tier_end", Storage="_Tier_end", DbType="VarChar(4000)")]
		public string Tier_end
		{
			get
			{
				return this._Tier_end;
			}
			set
			{
				if ((this._Tier_end != value))
				{
					this.OnTier_endChanging(value);
					this.SendPropertyChanging();
					this._Tier_end = value;
					this.SendPropertyChanged("Tier_end");
					this.OnTier_endChanged();
				}
			}
		}
		
		[Column(Name="charge_direction", Storage="_Charge_direction", DbType="VarChar(4000)")]
		public string Charge_direction
		{
			get
			{
				return this._Charge_direction;
			}
			set
			{
				if ((this._Charge_direction != value))
				{
					this.OnCharge_directionChanging(value);
					this.SendPropertyChanging();
					this._Charge_direction = value;
					this.SendPropertyChanged("Charge_direction");
					this.OnCharge_directionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_charge_definition")]
	public partial class Agg_charge_definition
	{
		
		private string _Charge_type_id;
		
		private string _Charge_qualification_group;
		
		private string _Productview_name;
		
		private System.Nullable<int> _Row_num;
		
		private string _Include_table_name;
		
		private string _Source_value;
		
		private string _Target_field;
		
		private string _Include_predicate;
		
		private string _Included_field_prefix;
		
		private string _Field_name;
		
		private string _Population_string;
		
		private string _Mvm_procedure;
		
		private string _Filter;
		
		private string _Default_value;
		
		private string _Child_charge_id;
		
		public Agg_charge_definition()
		{
		}
		
		[Column(Name="charge_type_id", Storage="_Charge_type_id", DbType="VarChar(100)")]
		public string Charge_type_id
		{
			get
			{
				return this._Charge_type_id;
			}
			set
			{
				if ((this._Charge_type_id != value))
				{
					this._Charge_type_id = value;
				}
			}
		}
		
		[Column(Name="charge_qualification_group", Storage="_Charge_qualification_group", DbType="VarChar(100)")]
		public string Charge_qualification_group
		{
			get
			{
				return this._Charge_qualification_group;
			}
			set
			{
				if ((this._Charge_qualification_group != value))
				{
					this._Charge_qualification_group = value;
				}
			}
		}
		
		[Column(Name="productview_name", Storage="_Productview_name", DbType="VarChar(100)")]
		public string Productview_name
		{
			get
			{
				return this._Productview_name;
			}
			set
			{
				if ((this._Productview_name != value))
				{
					this._Productview_name = value;
				}
			}
		}
		
		[Column(Name="row_num", Storage="_Row_num", DbType="Int")]
		public System.Nullable<int> Row_num
		{
			get
			{
				return this._Row_num;
			}
			set
			{
				if ((this._Row_num != value))
				{
					this._Row_num = value;
				}
			}
		}
		
		[Column(Name="include_table_name", Storage="_Include_table_name", DbType="VarChar(100)")]
		public string Include_table_name
		{
			get
			{
				return this._Include_table_name;
			}
			set
			{
				if ((this._Include_table_name != value))
				{
					this._Include_table_name = value;
				}
			}
		}
		
		[Column(Name="source_value", Storage="_Source_value", DbType="VarChar(1000)")]
		public string Source_value
		{
			get
			{
				return this._Source_value;
			}
			set
			{
				if ((this._Source_value != value))
				{
					this._Source_value = value;
				}
			}
		}
		
		[Column(Name="target_field", Storage="_Target_field", DbType="VarChar(100)")]
		public string Target_field
		{
			get
			{
				return this._Target_field;
			}
			set
			{
				if ((this._Target_field != value))
				{
					this._Target_field = value;
				}
			}
		}
		
		[Column(Name="include_predicate", Storage="_Include_predicate", DbType="VarChar(1000)")]
		public string Include_predicate
		{
			get
			{
				return this._Include_predicate;
			}
			set
			{
				if ((this._Include_predicate != value))
				{
					this._Include_predicate = value;
				}
			}
		}
		
		[Column(Name="included_field_prefix", Storage="_Included_field_prefix", DbType="VarChar(100)")]
		public string Included_field_prefix
		{
			get
			{
				return this._Included_field_prefix;
			}
			set
			{
				if ((this._Included_field_prefix != value))
				{
					this._Included_field_prefix = value;
				}
			}
		}
		
		[Column(Name="field_name", Storage="_Field_name", DbType="VarChar(100)")]
		public string Field_name
		{
			get
			{
				return this._Field_name;
			}
			set
			{
				if ((this._Field_name != value))
				{
					this._Field_name = value;
				}
			}
		}
		
		[Column(Name="population_string", Storage="_Population_string", DbType="VarChar(4000)")]
		public string Population_string
		{
			get
			{
				return this._Population_string;
			}
			set
			{
				if ((this._Population_string != value))
				{
					this._Population_string = value;
				}
			}
		}
		
		[Column(Name="mvm_procedure", Storage="_Mvm_procedure", DbType="VarChar(4000)")]
		public string Mvm_procedure
		{
			get
			{
				return this._Mvm_procedure;
			}
			set
			{
				if ((this._Mvm_procedure != value))
				{
					this._Mvm_procedure = value;
				}
			}
		}
		
		[Column(Name="filter", Storage="_Filter", DbType="VarChar(4000)")]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this._Filter = value;
				}
			}
		}
		
		[Column(Name="default_value", Storage="_Default_value", DbType="VarChar(1000)")]
		public string Default_value
		{
			get
			{
				return this._Default_value;
			}
			set
			{
				if ((this._Default_value != value))
				{
					this._Default_value = value;
				}
			}
		}
		
		[Column(Name="child_charge_id", Storage="_Child_charge_id", DbType="VarChar(100)")]
		public string Child_charge_id
		{
			get
			{
				return this._Child_charge_id;
			}
			set
			{
				if ((this._Child_charge_id != value))
				{
					this._Child_charge_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_custom_enums")]
	public partial class Agg_custom_enums
	{
		
		private string _Table_name;
		
		private string _Namespace;
		
		private string _Enum_value;
		
		private string _Enum_id;
		
		private string _Filter;
		
		public Agg_custom_enums()
		{
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(2000)")]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="namespace", Storage="_Namespace", DbType="VarChar(2000)")]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this._Namespace = value;
				}
			}
		}
		
		[Column(Name="enum_value", Storage="_Enum_value", DbType="VarChar(2000)")]
		public string Enum_value
		{
			get
			{
				return this._Enum_value;
			}
			set
			{
				if ((this._Enum_value != value))
				{
					this._Enum_value = value;
				}
			}
		}
		
		[Column(Name="enum_id", Storage="_Enum_id", DbType="VarChar(2000)")]
		public string Enum_id
		{
			get
			{
				return this._Enum_id;
			}
			set
			{
				if ((this._Enum_id != value))
				{
					this._Enum_id = value;
				}
			}
		}
		
		[Column(Name="filter", Storage="_Filter", DbType="VarChar(2000)")]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this._Filter = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_decision_audit_trail")]
	public partial class Agg_decision_audit_trail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Id_acc;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _Interval_start;
		
		private System.Nullable<int> _Interval_end;
		
		private string _Decision_unique_id;
		
		private string _Parent_decision_unique_id;
		
		private string _Decision_type;
		
		private System.Nullable<int> _Intervals_remaining;
		
		private System.Nullable<System.DateTime> _Start_date;
		
		private System.DateTime _End_date;
		
		private System.Nullable<System.DateTime> _Finalization_date;
		
		private string _Finalized;
		
		private System.Nullable<System.DateTime> _Expiration_date;
		
		private string _Expired;
		
		private string _Audit_only;
		
		private System.Nullable<decimal> _Tier_start;
		
		private System.Nullable<decimal> _Tier_end;
		
		private System.Nullable<decimal> _Qualified_total;
		
		private System.Nullable<decimal> _Qualified_events;
		
		private System.Nullable<decimal> _Qualified_units;
		
		private System.Nullable<decimal> _Qualified_amount;
		
		private System.Nullable<decimal> _Total_generated_events;
		
		private System.Nullable<decimal> _Total_generated_amount;
		
		private System.Nullable<decimal> _Total_rated_events;
		
		private System.Nullable<decimal> _Total_rated_units;
		
		private System.Nullable<decimal> _Total_rated_amount_delta;
		
		private System.Nullable<decimal> _Total_rated_amount_after;
		
		private System.Nullable<decimal> _Total_discounted_events;
		
		private System.Nullable<decimal> _Total_discounted_units;
		
		private System.Nullable<decimal> _Total_discounted_amount;
		
		private System.Nullable<decimal> _Total_discount_amount;
		
		private System.Nullable<decimal> _Pre_qualified_total;
		
		private System.Nullable<decimal> _Pre_qualified_events;
		
		private System.Nullable<decimal> _Pre_qualified_units;
		
		private System.Nullable<decimal> _Pre_qualified_amount;
		
		private System.Nullable<decimal> _Pre_total_generated_events;
		
		private System.Nullable<decimal> _Pre_total_generated_amount;
		
		private System.Nullable<decimal> _Pre_total_rated_events;
		
		private System.Nullable<decimal> _Pre_total_rated_units;
		
		private System.Nullable<decimal> _Pre_total_rated_amount_delta;
		
		private System.Nullable<decimal> _Pre_total_rated_amount_after;
		
		private System.Nullable<decimal> _Pre_total_discounted_events;
		
		private System.Nullable<decimal> _Pre_total_discounted_units;
		
		private System.Nullable<decimal> _Pre_total_discounted_amount;
		
		private System.Nullable<decimal> _Pre_total_discount_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(System.Nullable<int> value);
    partial void OnId_accChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnInterval_startChanging(System.Nullable<int> value);
    partial void OnInterval_startChanged();
    partial void OnInterval_endChanging(System.Nullable<int> value);
    partial void OnInterval_endChanged();
    partial void OnDecision_unique_idChanging(string value);
    partial void OnDecision_unique_idChanged();
    partial void OnParent_decision_unique_idChanging(string value);
    partial void OnParent_decision_unique_idChanged();
    partial void OnDecision_typeChanging(string value);
    partial void OnDecision_typeChanged();
    partial void OnIntervals_remainingChanging(System.Nullable<int> value);
    partial void OnIntervals_remainingChanged();
    partial void OnStart_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.DateTime value);
    partial void OnEnd_dateChanged();
    partial void OnFinalization_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinalization_dateChanged();
    partial void OnFinalizedChanging(string value);
    partial void OnFinalizedChanged();
    partial void OnExpiration_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiration_dateChanged();
    partial void OnExpiredChanging(string value);
    partial void OnExpiredChanged();
    partial void OnAudit_onlyChanging(string value);
    partial void OnAudit_onlyChanged();
    partial void OnTier_startChanging(System.Nullable<decimal> value);
    partial void OnTier_startChanged();
    partial void OnTier_endChanging(System.Nullable<decimal> value);
    partial void OnTier_endChanged();
    partial void OnQualified_totalChanging(System.Nullable<decimal> value);
    partial void OnQualified_totalChanged();
    partial void OnQualified_eventsChanging(System.Nullable<decimal> value);
    partial void OnQualified_eventsChanged();
    partial void OnQualified_unitsChanging(System.Nullable<decimal> value);
    partial void OnQualified_unitsChanged();
    partial void OnQualified_amountChanging(System.Nullable<decimal> value);
    partial void OnQualified_amountChanged();
    partial void OnTotal_generated_eventsChanging(System.Nullable<decimal> value);
    partial void OnTotal_generated_eventsChanged();
    partial void OnTotal_generated_amountChanging(System.Nullable<decimal> value);
    partial void OnTotal_generated_amountChanged();
    partial void OnTotal_rated_eventsChanging(System.Nullable<decimal> value);
    partial void OnTotal_rated_eventsChanged();
    partial void OnTotal_rated_unitsChanging(System.Nullable<decimal> value);
    partial void OnTotal_rated_unitsChanged();
    partial void OnTotal_rated_amount_deltaChanging(System.Nullable<decimal> value);
    partial void OnTotal_rated_amount_deltaChanged();
    partial void OnTotal_rated_amount_afterChanging(System.Nullable<decimal> value);
    partial void OnTotal_rated_amount_afterChanged();
    partial void OnTotal_discounted_eventsChanging(System.Nullable<decimal> value);
    partial void OnTotal_discounted_eventsChanged();
    partial void OnTotal_discounted_unitsChanging(System.Nullable<decimal> value);
    partial void OnTotal_discounted_unitsChanged();
    partial void OnTotal_discounted_amountChanging(System.Nullable<decimal> value);
    partial void OnTotal_discounted_amountChanged();
    partial void OnTotal_discount_amountChanging(System.Nullable<decimal> value);
    partial void OnTotal_discount_amountChanged();
    partial void OnPre_qualified_totalChanging(System.Nullable<decimal> value);
    partial void OnPre_qualified_totalChanged();
    partial void OnPre_qualified_eventsChanging(System.Nullable<decimal> value);
    partial void OnPre_qualified_eventsChanged();
    partial void OnPre_qualified_unitsChanging(System.Nullable<decimal> value);
    partial void OnPre_qualified_unitsChanged();
    partial void OnPre_qualified_amountChanging(System.Nullable<decimal> value);
    partial void OnPre_qualified_amountChanged();
    partial void OnPre_total_generated_eventsChanging(System.Nullable<decimal> value);
    partial void OnPre_total_generated_eventsChanged();
    partial void OnPre_total_generated_amountChanging(System.Nullable<decimal> value);
    partial void OnPre_total_generated_amountChanged();
    partial void OnPre_total_rated_eventsChanging(System.Nullable<decimal> value);
    partial void OnPre_total_rated_eventsChanged();
    partial void OnPre_total_rated_unitsChanging(System.Nullable<decimal> value);
    partial void OnPre_total_rated_unitsChanged();
    partial void OnPre_total_rated_amount_deltaChanging(System.Nullable<decimal> value);
    partial void OnPre_total_rated_amount_deltaChanged();
    partial void OnPre_total_rated_amount_afterChanging(System.Nullable<decimal> value);
    partial void OnPre_total_rated_amount_afterChanged();
    partial void OnPre_total_discounted_eventsChanging(System.Nullable<decimal> value);
    partial void OnPre_total_discounted_eventsChanged();
    partial void OnPre_total_discounted_unitsChanging(System.Nullable<decimal> value);
    partial void OnPre_total_discounted_unitsChanged();
    partial void OnPre_total_discounted_amountChanging(System.Nullable<decimal> value);
    partial void OnPre_total_discounted_amountChanged();
    partial void OnPre_total_discount_amountChanging(System.Nullable<decimal> value);
    partial void OnPre_total_discount_amountChanged();
    #endregion
		
		public Agg_decision_audit_trail()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="interval_start", Storage="_Interval_start", DbType="Int")]
		public System.Nullable<int> Interval_start
		{
			get
			{
				return this._Interval_start;
			}
			set
			{
				if ((this._Interval_start != value))
				{
					this.OnInterval_startChanging(value);
					this.SendPropertyChanging();
					this._Interval_start = value;
					this.SendPropertyChanged("Interval_start");
					this.OnInterval_startChanged();
				}
			}
		}
		
		[Column(Name="interval_end", Storage="_Interval_end", DbType="Int")]
		public System.Nullable<int> Interval_end
		{
			get
			{
				return this._Interval_end;
			}
			set
			{
				if ((this._Interval_end != value))
				{
					this.OnInterval_endChanging(value);
					this.SendPropertyChanging();
					this._Interval_end = value;
					this.SendPropertyChanged("Interval_end");
					this.OnInterval_endChanged();
				}
			}
		}
		
		[Column(Name="decision_unique_id", Storage="_Decision_unique_id", DbType="VarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Decision_unique_id
		{
			get
			{
				return this._Decision_unique_id;
			}
			set
			{
				if ((this._Decision_unique_id != value))
				{
					this.OnDecision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_unique_id = value;
					this.SendPropertyChanged("Decision_unique_id");
					this.OnDecision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="parent_decision_unique_id", Storage="_Parent_decision_unique_id", DbType="VarChar(400)")]
		public string Parent_decision_unique_id
		{
			get
			{
				return this._Parent_decision_unique_id;
			}
			set
			{
				if ((this._Parent_decision_unique_id != value))
				{
					this.OnParent_decision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Parent_decision_unique_id = value;
					this.SendPropertyChanged("Parent_decision_unique_id");
					this.OnParent_decision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="decision_type", Storage="_Decision_type", DbType="VarChar(4000)")]
		public string Decision_type
		{
			get
			{
				return this._Decision_type;
			}
			set
			{
				if ((this._Decision_type != value))
				{
					this.OnDecision_typeChanging(value);
					this.SendPropertyChanging();
					this._Decision_type = value;
					this.SendPropertyChanged("Decision_type");
					this.OnDecision_typeChanged();
				}
			}
		}
		
		[Column(Name="intervals_remaining", Storage="_Intervals_remaining", DbType="Int")]
		public System.Nullable<int> Intervals_remaining
		{
			get
			{
				return this._Intervals_remaining;
			}
			set
			{
				if ((this._Intervals_remaining != value))
				{
					this.OnIntervals_remainingChanging(value);
					this.SendPropertyChanging();
					this._Intervals_remaining = value;
					this.SendPropertyChanged("Intervals_remaining");
					this.OnIntervals_remainingChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_End_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[Column(Name="finalization_date", Storage="_Finalization_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Finalization_date
		{
			get
			{
				return this._Finalization_date;
			}
			set
			{
				if ((this._Finalization_date != value))
				{
					this.OnFinalization_dateChanging(value);
					this.SendPropertyChanging();
					this._Finalization_date = value;
					this.SendPropertyChanged("Finalization_date");
					this.OnFinalization_dateChanged();
				}
			}
		}
		
		[Column(Name="finalized", Storage="_Finalized", DbType="VarChar(4000)")]
		public string Finalized
		{
			get
			{
				return this._Finalized;
			}
			set
			{
				if ((this._Finalized != value))
				{
					this.OnFinalizedChanging(value);
					this.SendPropertyChanging();
					this._Finalized = value;
					this.SendPropertyChanged("Finalized");
					this.OnFinalizedChanged();
				}
			}
		}
		
		[Column(Name="expiration_date", Storage="_Expiration_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expiration_date
		{
			get
			{
				return this._Expiration_date;
			}
			set
			{
				if ((this._Expiration_date != value))
				{
					this.OnExpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._Expiration_date = value;
					this.SendPropertyChanged("Expiration_date");
					this.OnExpiration_dateChanged();
				}
			}
		}
		
		[Column(Name="expired", Storage="_Expired", DbType="VarChar(4000)")]
		public string Expired
		{
			get
			{
				return this._Expired;
			}
			set
			{
				if ((this._Expired != value))
				{
					this.OnExpiredChanging(value);
					this.SendPropertyChanging();
					this._Expired = value;
					this.SendPropertyChanged("Expired");
					this.OnExpiredChanged();
				}
			}
		}
		
		[Column(Name="audit_only", Storage="_Audit_only", DbType="VarChar(4000)")]
		public string Audit_only
		{
			get
			{
				return this._Audit_only;
			}
			set
			{
				if ((this._Audit_only != value))
				{
					this.OnAudit_onlyChanging(value);
					this.SendPropertyChanging();
					this._Audit_only = value;
					this.SendPropertyChanged("Audit_only");
					this.OnAudit_onlyChanged();
				}
			}
		}
		
		[Column(Name="tier_start", Storage="_Tier_start", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Tier_start
		{
			get
			{
				return this._Tier_start;
			}
			set
			{
				if ((this._Tier_start != value))
				{
					this.OnTier_startChanging(value);
					this.SendPropertyChanging();
					this._Tier_start = value;
					this.SendPropertyChanged("Tier_start");
					this.OnTier_startChanged();
				}
			}
		}
		
		[Column(Name="tier_end", Storage="_Tier_end", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Tier_end
		{
			get
			{
				return this._Tier_end;
			}
			set
			{
				if ((this._Tier_end != value))
				{
					this.OnTier_endChanging(value);
					this.SendPropertyChanging();
					this._Tier_end = value;
					this.SendPropertyChanged("Tier_end");
					this.OnTier_endChanged();
				}
			}
		}
		
		[Column(Name="qualified_total", Storage="_Qualified_total", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Qualified_total
		{
			get
			{
				return this._Qualified_total;
			}
			set
			{
				if ((this._Qualified_total != value))
				{
					this.OnQualified_totalChanging(value);
					this.SendPropertyChanging();
					this._Qualified_total = value;
					this.SendPropertyChanged("Qualified_total");
					this.OnQualified_totalChanged();
				}
			}
		}
		
		[Column(Name="qualified_events", Storage="_Qualified_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Qualified_events
		{
			get
			{
				return this._Qualified_events;
			}
			set
			{
				if ((this._Qualified_events != value))
				{
					this.OnQualified_eventsChanging(value);
					this.SendPropertyChanging();
					this._Qualified_events = value;
					this.SendPropertyChanged("Qualified_events");
					this.OnQualified_eventsChanged();
				}
			}
		}
		
		[Column(Name="qualified_units", Storage="_Qualified_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Qualified_units
		{
			get
			{
				return this._Qualified_units;
			}
			set
			{
				if ((this._Qualified_units != value))
				{
					this.OnQualified_unitsChanging(value);
					this.SendPropertyChanging();
					this._Qualified_units = value;
					this.SendPropertyChanged("Qualified_units");
					this.OnQualified_unitsChanged();
				}
			}
		}
		
		[Column(Name="qualified_amount", Storage="_Qualified_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Qualified_amount
		{
			get
			{
				return this._Qualified_amount;
			}
			set
			{
				if ((this._Qualified_amount != value))
				{
					this.OnQualified_amountChanging(value);
					this.SendPropertyChanging();
					this._Qualified_amount = value;
					this.SendPropertyChanged("Qualified_amount");
					this.OnQualified_amountChanged();
				}
			}
		}
		
		[Column(Name="total_generated_events", Storage="_Total_generated_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_generated_events
		{
			get
			{
				return this._Total_generated_events;
			}
			set
			{
				if ((this._Total_generated_events != value))
				{
					this.OnTotal_generated_eventsChanging(value);
					this.SendPropertyChanging();
					this._Total_generated_events = value;
					this.SendPropertyChanged("Total_generated_events");
					this.OnTotal_generated_eventsChanged();
				}
			}
		}
		
		[Column(Name="total_generated_amount", Storage="_Total_generated_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_generated_amount
		{
			get
			{
				return this._Total_generated_amount;
			}
			set
			{
				if ((this._Total_generated_amount != value))
				{
					this.OnTotal_generated_amountChanging(value);
					this.SendPropertyChanging();
					this._Total_generated_amount = value;
					this.SendPropertyChanged("Total_generated_amount");
					this.OnTotal_generated_amountChanged();
				}
			}
		}
		
		[Column(Name="total_rated_events", Storage="_Total_rated_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_rated_events
		{
			get
			{
				return this._Total_rated_events;
			}
			set
			{
				if ((this._Total_rated_events != value))
				{
					this.OnTotal_rated_eventsChanging(value);
					this.SendPropertyChanging();
					this._Total_rated_events = value;
					this.SendPropertyChanged("Total_rated_events");
					this.OnTotal_rated_eventsChanged();
				}
			}
		}
		
		[Column(Name="total_rated_units", Storage="_Total_rated_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_rated_units
		{
			get
			{
				return this._Total_rated_units;
			}
			set
			{
				if ((this._Total_rated_units != value))
				{
					this.OnTotal_rated_unitsChanging(value);
					this.SendPropertyChanging();
					this._Total_rated_units = value;
					this.SendPropertyChanged("Total_rated_units");
					this.OnTotal_rated_unitsChanged();
				}
			}
		}
		
		[Column(Name="total_rated_amount_delta", Storage="_Total_rated_amount_delta", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_rated_amount_delta
		{
			get
			{
				return this._Total_rated_amount_delta;
			}
			set
			{
				if ((this._Total_rated_amount_delta != value))
				{
					this.OnTotal_rated_amount_deltaChanging(value);
					this.SendPropertyChanging();
					this._Total_rated_amount_delta = value;
					this.SendPropertyChanged("Total_rated_amount_delta");
					this.OnTotal_rated_amount_deltaChanged();
				}
			}
		}
		
		[Column(Name="total_rated_amount_after", Storage="_Total_rated_amount_after", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_rated_amount_after
		{
			get
			{
				return this._Total_rated_amount_after;
			}
			set
			{
				if ((this._Total_rated_amount_after != value))
				{
					this.OnTotal_rated_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Total_rated_amount_after = value;
					this.SendPropertyChanged("Total_rated_amount_after");
					this.OnTotal_rated_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="total_discounted_events", Storage="_Total_discounted_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_discounted_events
		{
			get
			{
				return this._Total_discounted_events;
			}
			set
			{
				if ((this._Total_discounted_events != value))
				{
					this.OnTotal_discounted_eventsChanging(value);
					this.SendPropertyChanging();
					this._Total_discounted_events = value;
					this.SendPropertyChanged("Total_discounted_events");
					this.OnTotal_discounted_eventsChanged();
				}
			}
		}
		
		[Column(Name="total_discounted_units", Storage="_Total_discounted_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_discounted_units
		{
			get
			{
				return this._Total_discounted_units;
			}
			set
			{
				if ((this._Total_discounted_units != value))
				{
					this.OnTotal_discounted_unitsChanging(value);
					this.SendPropertyChanging();
					this._Total_discounted_units = value;
					this.SendPropertyChanged("Total_discounted_units");
					this.OnTotal_discounted_unitsChanged();
				}
			}
		}
		
		[Column(Name="total_discounted_amount", Storage="_Total_discounted_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_discounted_amount
		{
			get
			{
				return this._Total_discounted_amount;
			}
			set
			{
				if ((this._Total_discounted_amount != value))
				{
					this.OnTotal_discounted_amountChanging(value);
					this.SendPropertyChanging();
					this._Total_discounted_amount = value;
					this.SendPropertyChanged("Total_discounted_amount");
					this.OnTotal_discounted_amountChanged();
				}
			}
		}
		
		[Column(Name="total_discount_amount", Storage="_Total_discount_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Total_discount_amount
		{
			get
			{
				return this._Total_discount_amount;
			}
			set
			{
				if ((this._Total_discount_amount != value))
				{
					this.OnTotal_discount_amountChanging(value);
					this.SendPropertyChanging();
					this._Total_discount_amount = value;
					this.SendPropertyChanged("Total_discount_amount");
					this.OnTotal_discount_amountChanged();
				}
			}
		}
		
		[Column(Name="pre_qualified_total", Storage="_Pre_qualified_total", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_qualified_total
		{
			get
			{
				return this._Pre_qualified_total;
			}
			set
			{
				if ((this._Pre_qualified_total != value))
				{
					this.OnPre_qualified_totalChanging(value);
					this.SendPropertyChanging();
					this._Pre_qualified_total = value;
					this.SendPropertyChanged("Pre_qualified_total");
					this.OnPre_qualified_totalChanged();
				}
			}
		}
		
		[Column(Name="pre_qualified_events", Storage="_Pre_qualified_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_qualified_events
		{
			get
			{
				return this._Pre_qualified_events;
			}
			set
			{
				if ((this._Pre_qualified_events != value))
				{
					this.OnPre_qualified_eventsChanging(value);
					this.SendPropertyChanging();
					this._Pre_qualified_events = value;
					this.SendPropertyChanged("Pre_qualified_events");
					this.OnPre_qualified_eventsChanged();
				}
			}
		}
		
		[Column(Name="pre_qualified_units", Storage="_Pre_qualified_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_qualified_units
		{
			get
			{
				return this._Pre_qualified_units;
			}
			set
			{
				if ((this._Pre_qualified_units != value))
				{
					this.OnPre_qualified_unitsChanging(value);
					this.SendPropertyChanging();
					this._Pre_qualified_units = value;
					this.SendPropertyChanged("Pre_qualified_units");
					this.OnPre_qualified_unitsChanged();
				}
			}
		}
		
		[Column(Name="pre_qualified_amount", Storage="_Pre_qualified_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_qualified_amount
		{
			get
			{
				return this._Pre_qualified_amount;
			}
			set
			{
				if ((this._Pre_qualified_amount != value))
				{
					this.OnPre_qualified_amountChanging(value);
					this.SendPropertyChanging();
					this._Pre_qualified_amount = value;
					this.SendPropertyChanged("Pre_qualified_amount");
					this.OnPre_qualified_amountChanged();
				}
			}
		}
		
		[Column(Name="pre_total_generated_events", Storage="_Pre_total_generated_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_generated_events
		{
			get
			{
				return this._Pre_total_generated_events;
			}
			set
			{
				if ((this._Pre_total_generated_events != value))
				{
					this.OnPre_total_generated_eventsChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_generated_events = value;
					this.SendPropertyChanged("Pre_total_generated_events");
					this.OnPre_total_generated_eventsChanged();
				}
			}
		}
		
		[Column(Name="pre_total_generated_amount", Storage="_Pre_total_generated_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_generated_amount
		{
			get
			{
				return this._Pre_total_generated_amount;
			}
			set
			{
				if ((this._Pre_total_generated_amount != value))
				{
					this.OnPre_total_generated_amountChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_generated_amount = value;
					this.SendPropertyChanged("Pre_total_generated_amount");
					this.OnPre_total_generated_amountChanged();
				}
			}
		}
		
		[Column(Name="pre_total_rated_events", Storage="_Pre_total_rated_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_rated_events
		{
			get
			{
				return this._Pre_total_rated_events;
			}
			set
			{
				if ((this._Pre_total_rated_events != value))
				{
					this.OnPre_total_rated_eventsChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_rated_events = value;
					this.SendPropertyChanged("Pre_total_rated_events");
					this.OnPre_total_rated_eventsChanged();
				}
			}
		}
		
		[Column(Name="pre_total_rated_units", Storage="_Pre_total_rated_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_rated_units
		{
			get
			{
				return this._Pre_total_rated_units;
			}
			set
			{
				if ((this._Pre_total_rated_units != value))
				{
					this.OnPre_total_rated_unitsChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_rated_units = value;
					this.SendPropertyChanged("Pre_total_rated_units");
					this.OnPre_total_rated_unitsChanged();
				}
			}
		}
		
		[Column(Name="pre_total_rated_amount_delta", Storage="_Pre_total_rated_amount_delta", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_rated_amount_delta
		{
			get
			{
				return this._Pre_total_rated_amount_delta;
			}
			set
			{
				if ((this._Pre_total_rated_amount_delta != value))
				{
					this.OnPre_total_rated_amount_deltaChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_rated_amount_delta = value;
					this.SendPropertyChanged("Pre_total_rated_amount_delta");
					this.OnPre_total_rated_amount_deltaChanged();
				}
			}
		}
		
		[Column(Name="pre_total_rated_amount_after", Storage="_Pre_total_rated_amount_after", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_rated_amount_after
		{
			get
			{
				return this._Pre_total_rated_amount_after;
			}
			set
			{
				if ((this._Pre_total_rated_amount_after != value))
				{
					this.OnPre_total_rated_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_rated_amount_after = value;
					this.SendPropertyChanged("Pre_total_rated_amount_after");
					this.OnPre_total_rated_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="pre_total_discounted_events", Storage="_Pre_total_discounted_events", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_discounted_events
		{
			get
			{
				return this._Pre_total_discounted_events;
			}
			set
			{
				if ((this._Pre_total_discounted_events != value))
				{
					this.OnPre_total_discounted_eventsChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_discounted_events = value;
					this.SendPropertyChanged("Pre_total_discounted_events");
					this.OnPre_total_discounted_eventsChanged();
				}
			}
		}
		
		[Column(Name="pre_total_discounted_units", Storage="_Pre_total_discounted_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_discounted_units
		{
			get
			{
				return this._Pre_total_discounted_units;
			}
			set
			{
				if ((this._Pre_total_discounted_units != value))
				{
					this.OnPre_total_discounted_unitsChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_discounted_units = value;
					this.SendPropertyChanged("Pre_total_discounted_units");
					this.OnPre_total_discounted_unitsChanged();
				}
			}
		}
		
		[Column(Name="pre_total_discounted_amount", Storage="_Pre_total_discounted_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_discounted_amount
		{
			get
			{
				return this._Pre_total_discounted_amount;
			}
			set
			{
				if ((this._Pre_total_discounted_amount != value))
				{
					this.OnPre_total_discounted_amountChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_discounted_amount = value;
					this.SendPropertyChanged("Pre_total_discounted_amount");
					this.OnPre_total_discounted_amountChanged();
				}
			}
		}
		
		[Column(Name="pre_total_discount_amount", Storage="_Pre_total_discount_amount", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Pre_total_discount_amount
		{
			get
			{
				return this._Pre_total_discount_amount;
			}
			set
			{
				if ((this._Pre_total_discount_amount != value))
				{
					this.OnPre_total_discount_amountChanging(value);
					this.SendPropertyChanging();
					this._Pre_total_discount_amount = value;
					this.SendPropertyChanged("Pre_total_discount_amount");
					this.OnPre_total_discount_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_decision_info")]
	public partial class Agg_decision_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private System.Nullable<int> _Id_group;
		
		private System.Nullable<int> _Id_sub;
		
		private System.Nullable<System.DateTime> _Start_date;
		
		private System.Nullable<System.DateTime> _End_date;
		
		private System.Nullable<int> _Id_po;
		
		private System.Nullable<int> _Id_sched;
		
		private System.Nullable<int> _N_order;
		
		private System.Nullable<System.DateTime> _Tt_start;
		
		private string _Account_qualification_group;
		
		private string _Tier_column_group;
		
		private System.Nullable<decimal> _Tier_priority;
		
		private string _Tier_category;
		
		private string _Tier_responsiveness;
		
		private string _Decision_unique_id;
		
		private string _Decision_object_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_groupChanging(System.Nullable<int> value);
    partial void OnId_groupChanged();
    partial void OnId_subChanging(System.Nullable<int> value);
    partial void OnId_subChanged();
    partial void OnStart_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_dateChanged();
    partial void OnId_poChanging(System.Nullable<int> value);
    partial void OnId_poChanged();
    partial void OnId_schedChanging(System.Nullable<int> value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(System.Nullable<int> value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.Nullable<System.DateTime> value);
    partial void OnTt_startChanged();
    partial void OnAccount_qualification_groupChanging(string value);
    partial void OnAccount_qualification_groupChanged();
    partial void OnTier_column_groupChanging(string value);
    partial void OnTier_column_groupChanged();
    partial void OnTier_priorityChanging(System.Nullable<decimal> value);
    partial void OnTier_priorityChanged();
    partial void OnTier_categoryChanging(string value);
    partial void OnTier_categoryChanged();
    partial void OnTier_responsivenessChanging(string value);
    partial void OnTier_responsivenessChanged();
    partial void OnDecision_unique_idChanging(string value);
    partial void OnDecision_unique_idChanged();
    partial void OnDecision_object_idChanging(string value);
    partial void OnDecision_object_idChanged();
    #endregion
		
		public Agg_decision_info()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int")]
		public System.Nullable<int> Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this.OnId_groupChanging(value);
					this.SendPropertyChanging();
					this._Id_group = value;
					this.SendPropertyChanged("Id_group");
					this.OnId_groupChanged();
				}
			}
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int")]
		public System.Nullable<int> Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this.OnId_subChanging(value);
					this.SendPropertyChanging();
					this._Id_sub = value;
					this.SendPropertyChanged("Id_sub");
					this.OnId_subChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_End_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this.OnId_poChanging(value);
					this.SendPropertyChanging();
					this._Id_po = value;
					this.SendPropertyChanged("Id_po");
					this.OnId_poChanged();
				}
			}
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int")]
		public System.Nullable<int> Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int")]
		public System.Nullable<int> N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="account_qualification_group", Storage="_Account_qualification_group", DbType="VarChar(100)")]
		public string Account_qualification_group
		{
			get
			{
				return this._Account_qualification_group;
			}
			set
			{
				if ((this._Account_qualification_group != value))
				{
					this.OnAccount_qualification_groupChanging(value);
					this.SendPropertyChanging();
					this._Account_qualification_group = value;
					this.SendPropertyChanged("Account_qualification_group");
					this.OnAccount_qualification_groupChanged();
				}
			}
		}
		
		[Column(Name="tier_column_group", Storage="_Tier_column_group", DbType="VarChar(100)")]
		public string Tier_column_group
		{
			get
			{
				return this._Tier_column_group;
			}
			set
			{
				if ((this._Tier_column_group != value))
				{
					this.OnTier_column_groupChanging(value);
					this.SendPropertyChanging();
					this._Tier_column_group = value;
					this.SendPropertyChanged("Tier_column_group");
					this.OnTier_column_groupChanged();
				}
			}
		}
		
		[Column(Name="tier_priority", Storage="_Tier_priority", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tier_priority
		{
			get
			{
				return this._Tier_priority;
			}
			set
			{
				if ((this._Tier_priority != value))
				{
					this.OnTier_priorityChanging(value);
					this.SendPropertyChanging();
					this._Tier_priority = value;
					this.SendPropertyChanged("Tier_priority");
					this.OnTier_priorityChanged();
				}
			}
		}
		
		[Column(Name="tier_category", Storage="_Tier_category", DbType="VarChar(100)")]
		public string Tier_category
		{
			get
			{
				return this._Tier_category;
			}
			set
			{
				if ((this._Tier_category != value))
				{
					this.OnTier_categoryChanging(value);
					this.SendPropertyChanging();
					this._Tier_category = value;
					this.SendPropertyChanged("Tier_category");
					this.OnTier_categoryChanged();
				}
			}
		}
		
		[Column(Name="tier_responsiveness", Storage="_Tier_responsiveness", DbType="VarChar(100)")]
		public string Tier_responsiveness
		{
			get
			{
				return this._Tier_responsiveness;
			}
			set
			{
				if ((this._Tier_responsiveness != value))
				{
					this.OnTier_responsivenessChanging(value);
					this.SendPropertyChanging();
					this._Tier_responsiveness = value;
					this.SendPropertyChanged("Tier_responsiveness");
					this.OnTier_responsivenessChanged();
				}
			}
		}
		
		[Column(Name="decision_unique_id", Storage="_Decision_unique_id", DbType="VarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Decision_unique_id
		{
			get
			{
				return this._Decision_unique_id;
			}
			set
			{
				if ((this._Decision_unique_id != value))
				{
					this.OnDecision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_unique_id = value;
					this.SendPropertyChanged("Decision_unique_id");
					this.OnDecision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="decision_object_id", Storage="_Decision_object_id", DbType="VarChar(8000)")]
		public string Decision_object_id
		{
			get
			{
				return this._Decision_object_id;
			}
			set
			{
				if ((this._Decision_object_id != value))
				{
					this.OnDecision_object_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_object_id = value;
					this.SendPropertyChanged("Decision_object_id");
					this.OnDecision_object_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_decision_rollover")]
	public partial class Agg_decision_rollover : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _Interval_start;
		
		private System.Nullable<int> _Interval_end;
		
		private string _Decision_unique_id;
		
		private System.Nullable<System.DateTime> _Start_date;
		
		private System.DateTime _End_date;
		
		private System.Nullable<System.DateTime> _Rollover_end_date;
		
		private System.Nullable<int> _Rollover_interval_end;
		
		private System.Nullable<decimal> _Rolled_over_units;
		
		private System.Nullable<decimal> _Expired_units;
		
		private System.Nullable<System.DateTime> _Rollover_date;
		
		private string _Rollover_action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnInterval_startChanging(System.Nullable<int> value);
    partial void OnInterval_startChanged();
    partial void OnInterval_endChanging(System.Nullable<int> value);
    partial void OnInterval_endChanged();
    partial void OnDecision_unique_idChanging(string value);
    partial void OnDecision_unique_idChanged();
    partial void OnStart_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.DateTime value);
    partial void OnEnd_dateChanged();
    partial void OnRollover_end_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnRollover_end_dateChanged();
    partial void OnRollover_interval_endChanging(System.Nullable<int> value);
    partial void OnRollover_interval_endChanged();
    partial void OnRolled_over_unitsChanging(System.Nullable<decimal> value);
    partial void OnRolled_over_unitsChanged();
    partial void OnExpired_unitsChanging(System.Nullable<decimal> value);
    partial void OnExpired_unitsChanged();
    partial void OnRollover_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnRollover_dateChanged();
    partial void OnRollover_actionChanging(string value);
    partial void OnRollover_actionChanged();
    #endregion
		
		public Agg_decision_rollover()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="interval_start", Storage="_Interval_start", DbType="Int")]
		public System.Nullable<int> Interval_start
		{
			get
			{
				return this._Interval_start;
			}
			set
			{
				if ((this._Interval_start != value))
				{
					this.OnInterval_startChanging(value);
					this.SendPropertyChanging();
					this._Interval_start = value;
					this.SendPropertyChanged("Interval_start");
					this.OnInterval_startChanged();
				}
			}
		}
		
		[Column(Name="interval_end", Storage="_Interval_end", DbType="Int")]
		public System.Nullable<int> Interval_end
		{
			get
			{
				return this._Interval_end;
			}
			set
			{
				if ((this._Interval_end != value))
				{
					this.OnInterval_endChanging(value);
					this.SendPropertyChanging();
					this._Interval_end = value;
					this.SendPropertyChanged("Interval_end");
					this.OnInterval_endChanged();
				}
			}
		}
		
		[Column(Name="decision_unique_id", Storage="_Decision_unique_id", DbType="VarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Decision_unique_id
		{
			get
			{
				return this._Decision_unique_id;
			}
			set
			{
				if ((this._Decision_unique_id != value))
				{
					this.OnDecision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_unique_id = value;
					this.SendPropertyChanged("Decision_unique_id");
					this.OnDecision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_End_date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[Column(Name="rollover_end_date", Storage="_Rollover_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rollover_end_date
		{
			get
			{
				return this._Rollover_end_date;
			}
			set
			{
				if ((this._Rollover_end_date != value))
				{
					this.OnRollover_end_dateChanging(value);
					this.SendPropertyChanging();
					this._Rollover_end_date = value;
					this.SendPropertyChanged("Rollover_end_date");
					this.OnRollover_end_dateChanged();
				}
			}
		}
		
		[Column(Name="rollover_interval_end", Storage="_Rollover_interval_end", DbType="Int")]
		public System.Nullable<int> Rollover_interval_end
		{
			get
			{
				return this._Rollover_interval_end;
			}
			set
			{
				if ((this._Rollover_interval_end != value))
				{
					this.OnRollover_interval_endChanging(value);
					this.SendPropertyChanging();
					this._Rollover_interval_end = value;
					this.SendPropertyChanged("Rollover_interval_end");
					this.OnRollover_interval_endChanged();
				}
			}
		}
		
		[Column(Name="rolled_over_units", Storage="_Rolled_over_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Rolled_over_units
		{
			get
			{
				return this._Rolled_over_units;
			}
			set
			{
				if ((this._Rolled_over_units != value))
				{
					this.OnRolled_over_unitsChanging(value);
					this.SendPropertyChanging();
					this._Rolled_over_units = value;
					this.SendPropertyChanged("Rolled_over_units");
					this.OnRolled_over_unitsChanged();
				}
			}
		}
		
		[Column(Name="expired_units", Storage="_Expired_units", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Expired_units
		{
			get
			{
				return this._Expired_units;
			}
			set
			{
				if ((this._Expired_units != value))
				{
					this.OnExpired_unitsChanging(value);
					this.SendPropertyChanging();
					this._Expired_units = value;
					this.SendPropertyChanged("Expired_units");
					this.OnExpired_unitsChanged();
				}
			}
		}
		
		[Column(Name="rollover_date", Storage="_Rollover_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rollover_date
		{
			get
			{
				return this._Rollover_date;
			}
			set
			{
				if ((this._Rollover_date != value))
				{
					this.OnRollover_dateChanging(value);
					this.SendPropertyChanging();
					this._Rollover_date = value;
					this.SendPropertyChanged("Rollover_date");
					this.OnRollover_dateChanged();
				}
			}
		}
		
		[Column(Name="rollover_action", Storage="_Rollover_action", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rollover_action
		{
			get
			{
				return this._Rollover_action;
			}
			set
			{
				if ((this._Rollover_action != value))
				{
					this.OnRollover_actionChanging(value);
					this.SendPropertyChanging();
					this._Rollover_action = value;
					this.SendPropertyChanged("Rollover_action");
					this.OnRollover_actionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_field_formats")]
	public partial class Agg_field_formats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Format_id;
		
		private string _Format_string1;
		
		private string _Format_string2;
		
		private string _Format_string3;
		
		private string _Format_string4;
		
		private string _Format_string5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormat_idChanging(int value);
    partial void OnFormat_idChanged();
    partial void OnFormat_string1Changing(string value);
    partial void OnFormat_string1Changed();
    partial void OnFormat_string2Changing(string value);
    partial void OnFormat_string2Changed();
    partial void OnFormat_string3Changing(string value);
    partial void OnFormat_string3Changed();
    partial void OnFormat_string4Changing(string value);
    partial void OnFormat_string4Changed();
    partial void OnFormat_string5Changing(string value);
    partial void OnFormat_string5Changed();
    #endregion
		
		public Agg_field_formats()
		{
			OnCreated();
		}
		
		[Column(Name="format_id", Storage="_Format_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Format_id
		{
			get
			{
				return this._Format_id;
			}
			set
			{
				if ((this._Format_id != value))
				{
					this.OnFormat_idChanging(value);
					this.SendPropertyChanging();
					this._Format_id = value;
					this.SendPropertyChanged("Format_id");
					this.OnFormat_idChanged();
				}
			}
		}
		
		[Column(Name="format_string1", Storage="_Format_string1", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Format_string1
		{
			get
			{
				return this._Format_string1;
			}
			set
			{
				if ((this._Format_string1 != value))
				{
					this.OnFormat_string1Changing(value);
					this.SendPropertyChanging();
					this._Format_string1 = value;
					this.SendPropertyChanged("Format_string1");
					this.OnFormat_string1Changed();
				}
			}
		}
		
		[Column(Name="format_string2", Storage="_Format_string2", DbType="VarChar(4000)")]
		public string Format_string2
		{
			get
			{
				return this._Format_string2;
			}
			set
			{
				if ((this._Format_string2 != value))
				{
					this.OnFormat_string2Changing(value);
					this.SendPropertyChanging();
					this._Format_string2 = value;
					this.SendPropertyChanged("Format_string2");
					this.OnFormat_string2Changed();
				}
			}
		}
		
		[Column(Name="format_string3", Storage="_Format_string3", DbType="VarChar(4000)")]
		public string Format_string3
		{
			get
			{
				return this._Format_string3;
			}
			set
			{
				if ((this._Format_string3 != value))
				{
					this.OnFormat_string3Changing(value);
					this.SendPropertyChanging();
					this._Format_string3 = value;
					this.SendPropertyChanged("Format_string3");
					this.OnFormat_string3Changed();
				}
			}
		}
		
		[Column(Name="format_string4", Storage="_Format_string4", DbType="VarChar(4000)")]
		public string Format_string4
		{
			get
			{
				return this._Format_string4;
			}
			set
			{
				if ((this._Format_string4 != value))
				{
					this.OnFormat_string4Changing(value);
					this.SendPropertyChanging();
					this._Format_string4 = value;
					this.SendPropertyChanged("Format_string4");
					this.OnFormat_string4Changed();
				}
			}
		}
		
		[Column(Name="format_string5", Storage="_Format_string5", DbType="VarChar(4000)")]
		public string Format_string5
		{
			get
			{
				return this._Format_string5;
			}
			set
			{
				if ((this._Format_string5 != value))
				{
					this.OnFormat_string5Changing(value);
					this.SendPropertyChanging();
					this._Format_string5 = value;
					this.SendPropertyChanged("Format_string5");
					this.OnFormat_string5Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_mapping_chain_members")]
	public partial class Agg_mapping_chain_members
	{
		
		private string _Mapping_chain;
		
		private string _Mapping_name;
		
		private int _Mapping_order;
		
		public Agg_mapping_chain_members()
		{
		}
		
		[Column(Name="mapping_chain", Storage="_Mapping_chain", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mapping_chain
		{
			get
			{
				return this._Mapping_chain;
			}
			set
			{
				if ((this._Mapping_chain != value))
				{
					this._Mapping_chain = value;
				}
			}
		}
		
		[Column(Name="mapping_name", Storage="_Mapping_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mapping_name
		{
			get
			{
				return this._Mapping_name;
			}
			set
			{
				if ((this._Mapping_name != value))
				{
					this._Mapping_name = value;
				}
			}
		}
		
		[Column(Name="mapping_order", Storage="_Mapping_order", DbType="Int NOT NULL")]
		public int Mapping_order
		{
			get
			{
				return this._Mapping_order;
			}
			set
			{
				if ((this._Mapping_order != value))
				{
					this._Mapping_order = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_mapping_chains")]
	public partial class Agg_mapping_chains
	{
		
		private string _Mapping_chain;
		
		public Agg_mapping_chains()
		{
		}
		
		[Column(Name="mapping_chain", Storage="_Mapping_chain", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mapping_chain
		{
			get
			{
				return this._Mapping_chain;
			}
			set
			{
				if ((this._Mapping_chain != value))
				{
					this._Mapping_chain = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_mapping_table_rules")]
	public partial class Agg_mapping_table_rules
	{
		
		private string _Mapping_name;
		
		private string _Object_field_name;
		
		private string _Table_field_name;
		
		private string _Population_string;
		
		private int _Is_key;
		
		private string _Procedure_name;
		
		private int _Rule_order;
		
		public Agg_mapping_table_rules()
		{
		}
		
		[Column(Name="mapping_name", Storage="_Mapping_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mapping_name
		{
			get
			{
				return this._Mapping_name;
			}
			set
			{
				if ((this._Mapping_name != value))
				{
					this._Mapping_name = value;
				}
			}
		}
		
		[Column(Name="object_field_name", Storage="_Object_field_name", DbType="VarChar(100)")]
		public string Object_field_name
		{
			get
			{
				return this._Object_field_name;
			}
			set
			{
				if ((this._Object_field_name != value))
				{
					this._Object_field_name = value;
				}
			}
		}
		
		[Column(Name="table_field_name", Storage="_Table_field_name", DbType="VarChar(100)")]
		public string Table_field_name
		{
			get
			{
				return this._Table_field_name;
			}
			set
			{
				if ((this._Table_field_name != value))
				{
					this._Table_field_name = value;
				}
			}
		}
		
		[Column(Name="population_string", Storage="_Population_string", DbType="VarChar(4000)")]
		public string Population_string
		{
			get
			{
				return this._Population_string;
			}
			set
			{
				if ((this._Population_string != value))
				{
					this._Population_string = value;
				}
			}
		}
		
		[Column(Name="is_key", Storage="_Is_key", DbType="Int NOT NULL")]
		public int Is_key
		{
			get
			{
				return this._Is_key;
			}
			set
			{
				if ((this._Is_key != value))
				{
					this._Is_key = value;
				}
			}
		}
		
		[Column(Name="procedure_name", Storage="_Procedure_name", DbType="VarChar(100)")]
		public string Procedure_name
		{
			get
			{
				return this._Procedure_name;
			}
			set
			{
				if ((this._Procedure_name != value))
				{
					this._Procedure_name = value;
				}
			}
		}
		
		[Column(Name="rule_order", Storage="_Rule_order", DbType="Int NOT NULL")]
		public int Rule_order
		{
			get
			{
				return this._Rule_order;
			}
			set
			{
				if ((this._Rule_order != value))
				{
					this._Rule_order = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_mapping_tables")]
	public partial class Agg_mapping_tables
	{
		
		private string _Mapping_name;
		
		private string _Table_name;
		
		private int _Is_cached;
		
		public Agg_mapping_tables()
		{
		}
		
		[Column(Name="mapping_name", Storage="_Mapping_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mapping_name
		{
			get
			{
				return this._Mapping_name;
			}
			set
			{
				if ((this._Mapping_name != value))
				{
					this._Mapping_name = value;
				}
			}
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="is_cached", Storage="_Is_cached", DbType="Int NOT NULL")]
		public int Is_cached
		{
			get
			{
				return this._Is_cached;
			}
			set
			{
				if ((this._Is_cached != value))
				{
					this._Is_cached = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_orig_field_map")]
	public partial class Agg_orig_field_map
	{
		
		private string _Table_name;
		
		private string _Field_name;
		
		private string _Orig_field_name;
		
		public Agg_orig_field_map()
		{
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(30)")]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="field_name", Storage="_Field_name", DbType="VarChar(30)")]
		public string Field_name
		{
			get
			{
				return this._Field_name;
			}
			set
			{
				if ((this._Field_name != value))
				{
					this._Field_name = value;
				}
			}
		}
		
		[Column(Name="orig_field_name", Storage="_Orig_field_name", DbType="VarChar(30)")]
		public string Orig_field_name
		{
			get
			{
				return this._Orig_field_name;
			}
			set
			{
				if ((this._Orig_field_name != value))
				{
					this._Orig_field_name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_param_name_map")]
	public partial class Agg_param_name_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _From_name;
		
		private string _To_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFrom_nameChanging(string value);
    partial void OnFrom_nameChanged();
    partial void OnTo_nameChanging(string value);
    partial void OnTo_nameChanged();
    #endregion
		
		public Agg_param_name_map()
		{
			OnCreated();
		}
		
		[Column(Name="from_name", Storage="_From_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string From_name
		{
			get
			{
				return this._From_name;
			}
			set
			{
				if ((this._From_name != value))
				{
					this.OnFrom_nameChanging(value);
					this.SendPropertyChanging();
					this._From_name = value;
					this.SendPropertyChanged("From_name");
					this.OnFrom_nameChanged();
				}
			}
		}
		
		[Column(Name="to_name", Storage="_To_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string To_name
		{
			get
			{
				return this._To_name;
			}
			set
			{
				if ((this._To_name != value))
				{
					this.OnTo_nameChanging(value);
					this.SendPropertyChanging();
					this._To_name = value;
					this.SendPropertyChanged("To_name");
					this.OnTo_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_pushed_usage")]
	public partial class Agg_pushed_usage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private long _Id_sess;
		
		private int _Old_usage_interval;
		
		private System.Nullable<int> _New_usage_interval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnOld_usage_intervalChanging(int value);
    partial void OnOld_usage_intervalChanged();
    partial void OnNew_usage_intervalChanging(System.Nullable<int> value);
    partial void OnNew_usage_intervalChanged();
    #endregion
		
		public Agg_pushed_usage()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="old_usage_interval", Storage="_Old_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Old_usage_interval
		{
			get
			{
				return this._Old_usage_interval;
			}
			set
			{
				if ((this._Old_usage_interval != value))
				{
					this.OnOld_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Old_usage_interval = value;
					this.SendPropertyChanged("Old_usage_interval");
					this.OnOld_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="new_usage_interval", Storage="_New_usage_interval", DbType="Int")]
		public System.Nullable<int> New_usage_interval
		{
			get
			{
				return this._New_usage_interval;
			}
			set
			{
				if ((this._New_usage_interval != value))
				{
					this.OnNew_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._New_usage_interval = value;
					this.SendPropertyChanged("New_usage_interval");
					this.OnNew_usage_intervalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_pv_sortkeys")]
	public partial class Agg_pv_sortkeys
	{
		
		private string _Productview_name;
		
		private System.Nullable<int> _Sortkey_order;
		
		private string _Sortkey_filter;
		
		private string _Sortkey_expression;
		
		public Agg_pv_sortkeys()
		{
		}
		
		[Column(Name="productview_name", Storage="_Productview_name", DbType="VarChar(100)")]
		public string Productview_name
		{
			get
			{
				return this._Productview_name;
			}
			set
			{
				if ((this._Productview_name != value))
				{
					this._Productview_name = value;
				}
			}
		}
		
		[Column(Name="sortkey_order", Storage="_Sortkey_order", DbType="Int")]
		public System.Nullable<int> Sortkey_order
		{
			get
			{
				return this._Sortkey_order;
			}
			set
			{
				if ((this._Sortkey_order != value))
				{
					this._Sortkey_order = value;
				}
			}
		}
		
		[Column(Name="sortkey_filter", Storage="_Sortkey_filter", DbType="VarChar(1000)")]
		public string Sortkey_filter
		{
			get
			{
				return this._Sortkey_filter;
			}
			set
			{
				if ((this._Sortkey_filter != value))
				{
					this._Sortkey_filter = value;
				}
			}
		}
		
		[Column(Name="sortkey_expression", Storage="_Sortkey_expression", DbType="VarChar(1000)")]
		public string Sortkey_expression
		{
			get
			{
				return this._Sortkey_expression;
			}
			set
			{
				if ((this._Sortkey_expression != value))
				{
					this._Sortkey_expression = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.agg_usage_audit_trail")]
	public partial class Agg_usage_audit_trail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_payee;
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _Orig_usage_interval;
		
		private int _Is_realtime;
		
		private System.Nullable<int> _Field_format_id;
		
		private string _Orig_values_packed;
		
		private System.Nullable<System.DateTime> _Last_modified;
		
		private System.Nullable<System.DateTime> _Last_modified_pv;
		
		private System.Nullable<System.DateTime> _Last_modified_au;
		
		private string _Pushed_priority;
		
		private System.Nullable<int> _Agg_applied_tier_counter;
		
		private string _Agg_applied_tiers;
		
		private string _Agg_applied_tier_ranges;
		
		private string _Agg_applied_tier_amounts;
		
		private string _Agg_tier_1_id;
		
		private string _Agg_tier_1_amount_before;
		
		private string _Agg_tier_1_amount_after;
		
		private string _Agg_tier_1_perc_elig;
		
		private string _Agg_tier_1_start;
		
		private string _Agg_tier_1_end;
		
		private string _Agg_tier_1_cqg;
		
		private string _Agg_tier_2_id;
		
		private string _Agg_tier_2_amount_before;
		
		private string _Agg_tier_2_amount_after;
		
		private string _Agg_tier_2_perc_elig;
		
		private string _Agg_tier_2_start;
		
		private string _Agg_tier_2_end;
		
		private string _Agg_tier_2_cqg;
		
		private string _Agg_tier_3_id;
		
		private string _Agg_tier_3_amount_before;
		
		private string _Agg_tier_3_amount_after;
		
		private string _Agg_tier_3_perc_elig;
		
		private string _Agg_tier_3_start;
		
		private string _Agg_tier_3_end;
		
		private string _Agg_tier_3_cqg;
		
		private string _Agg_tier_4_id;
		
		private string _Agg_tier_4_amount_before;
		
		private string _Agg_tier_4_amount_after;
		
		private string _Agg_tier_4_perc_elig;
		
		private string _Agg_tier_4_start;
		
		private string _Agg_tier_4_end;
		
		private string _Agg_tier_4_cqg;
		
		private string _Agg_tier_5_id;
		
		private string _Agg_tier_5_amount_before;
		
		private string _Agg_tier_5_amount_after;
		
		private string _Agg_tier_5_perc_elig;
		
		private string _Agg_tier_5_start;
		
		private string _Agg_tier_5_end;
		
		private string _Agg_tier_5_cqg;
		
		private string _Agg_tier_6_id;
		
		private string _Agg_tier_6_amount_before;
		
		private string _Agg_tier_6_amount_after;
		
		private string _Agg_tier_6_perc_elig;
		
		private string _Agg_tier_6_start;
		
		private string _Agg_tier_6_end;
		
		private string _Agg_tier_6_cqg;
		
		private string _Agg_tier_7_id;
		
		private string _Agg_tier_7_amount_before;
		
		private string _Agg_tier_7_amount_after;
		
		private string _Agg_tier_7_perc_elig;
		
		private string _Agg_tier_7_start;
		
		private string _Agg_tier_7_end;
		
		private string _Agg_tier_7_cqg;
		
		private string _Agg_tier_8_id;
		
		private string _Agg_tier_8_amount_before;
		
		private string _Agg_tier_8_amount_after;
		
		private string _Agg_tier_8_perc_elig;
		
		private string _Agg_tier_8_start;
		
		private string _Agg_tier_8_end;
		
		private string _Agg_tier_8_cqg;
		
		private string _Agg_tier_9_id;
		
		private string _Agg_tier_9_amount_before;
		
		private string _Agg_tier_9_amount_after;
		
		private string _Agg_tier_9_perc_elig;
		
		private string _Agg_tier_9_start;
		
		private string _Agg_tier_9_end;
		
		private string _Agg_tier_9_cqg;
		
		private string _Agg_tier_10_id;
		
		private string _Agg_tier_10_amount_before;
		
		private string _Agg_tier_10_amount_after;
		
		private string _Agg_tier_10_perc_elig;
		
		private string _Agg_tier_10_start;
		
		private string _Agg_tier_10_end;
		
		private string _Agg_tier_10_cqg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payeeChanging(int value);
    partial void OnId_payeeChanged();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnOrig_usage_intervalChanging(System.Nullable<int> value);
    partial void OnOrig_usage_intervalChanged();
    partial void OnIs_realtimeChanging(int value);
    partial void OnIs_realtimeChanged();
    partial void OnField_format_idChanging(System.Nullable<int> value);
    partial void OnField_format_idChanged();
    partial void OnOrig_values_packedChanging(string value);
    partial void OnOrig_values_packedChanged();
    partial void OnLast_modifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_modifiedChanged();
    partial void OnLast_modified_pvChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_modified_pvChanged();
    partial void OnLast_modified_auChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_modified_auChanged();
    partial void OnPushed_priorityChanging(string value);
    partial void OnPushed_priorityChanged();
    partial void OnAgg_applied_tier_counterChanging(System.Nullable<int> value);
    partial void OnAgg_applied_tier_counterChanged();
    partial void OnAgg_applied_tiersChanging(string value);
    partial void OnAgg_applied_tiersChanged();
    partial void OnAgg_applied_tier_rangesChanging(string value);
    partial void OnAgg_applied_tier_rangesChanged();
    partial void OnAgg_applied_tier_amountsChanging(string value);
    partial void OnAgg_applied_tier_amountsChanged();
    partial void OnAgg_tier_1_idChanging(string value);
    partial void OnAgg_tier_1_idChanged();
    partial void OnAgg_tier_1_amount_beforeChanging(string value);
    partial void OnAgg_tier_1_amount_beforeChanged();
    partial void OnAgg_tier_1_amount_afterChanging(string value);
    partial void OnAgg_tier_1_amount_afterChanged();
    partial void OnAgg_tier_1_perc_eligChanging(string value);
    partial void OnAgg_tier_1_perc_eligChanged();
    partial void OnAgg_tier_1_startChanging(string value);
    partial void OnAgg_tier_1_startChanged();
    partial void OnAgg_tier_1_endChanging(string value);
    partial void OnAgg_tier_1_endChanged();
    partial void OnAgg_tier_1_cqgChanging(string value);
    partial void OnAgg_tier_1_cqgChanged();
    partial void OnAgg_tier_2_idChanging(string value);
    partial void OnAgg_tier_2_idChanged();
    partial void OnAgg_tier_2_amount_beforeChanging(string value);
    partial void OnAgg_tier_2_amount_beforeChanged();
    partial void OnAgg_tier_2_amount_afterChanging(string value);
    partial void OnAgg_tier_2_amount_afterChanged();
    partial void OnAgg_tier_2_perc_eligChanging(string value);
    partial void OnAgg_tier_2_perc_eligChanged();
    partial void OnAgg_tier_2_startChanging(string value);
    partial void OnAgg_tier_2_startChanged();
    partial void OnAgg_tier_2_endChanging(string value);
    partial void OnAgg_tier_2_endChanged();
    partial void OnAgg_tier_2_cqgChanging(string value);
    partial void OnAgg_tier_2_cqgChanged();
    partial void OnAgg_tier_3_idChanging(string value);
    partial void OnAgg_tier_3_idChanged();
    partial void OnAgg_tier_3_amount_beforeChanging(string value);
    partial void OnAgg_tier_3_amount_beforeChanged();
    partial void OnAgg_tier_3_amount_afterChanging(string value);
    partial void OnAgg_tier_3_amount_afterChanged();
    partial void OnAgg_tier_3_perc_eligChanging(string value);
    partial void OnAgg_tier_3_perc_eligChanged();
    partial void OnAgg_tier_3_startChanging(string value);
    partial void OnAgg_tier_3_startChanged();
    partial void OnAgg_tier_3_endChanging(string value);
    partial void OnAgg_tier_3_endChanged();
    partial void OnAgg_tier_3_cqgChanging(string value);
    partial void OnAgg_tier_3_cqgChanged();
    partial void OnAgg_tier_4_idChanging(string value);
    partial void OnAgg_tier_4_idChanged();
    partial void OnAgg_tier_4_amount_beforeChanging(string value);
    partial void OnAgg_tier_4_amount_beforeChanged();
    partial void OnAgg_tier_4_amount_afterChanging(string value);
    partial void OnAgg_tier_4_amount_afterChanged();
    partial void OnAgg_tier_4_perc_eligChanging(string value);
    partial void OnAgg_tier_4_perc_eligChanged();
    partial void OnAgg_tier_4_startChanging(string value);
    partial void OnAgg_tier_4_startChanged();
    partial void OnAgg_tier_4_endChanging(string value);
    partial void OnAgg_tier_4_endChanged();
    partial void OnAgg_tier_4_cqgChanging(string value);
    partial void OnAgg_tier_4_cqgChanged();
    partial void OnAgg_tier_5_idChanging(string value);
    partial void OnAgg_tier_5_idChanged();
    partial void OnAgg_tier_5_amount_beforeChanging(string value);
    partial void OnAgg_tier_5_amount_beforeChanged();
    partial void OnAgg_tier_5_amount_afterChanging(string value);
    partial void OnAgg_tier_5_amount_afterChanged();
    partial void OnAgg_tier_5_perc_eligChanging(string value);
    partial void OnAgg_tier_5_perc_eligChanged();
    partial void OnAgg_tier_5_startChanging(string value);
    partial void OnAgg_tier_5_startChanged();
    partial void OnAgg_tier_5_endChanging(string value);
    partial void OnAgg_tier_5_endChanged();
    partial void OnAgg_tier_5_cqgChanging(string value);
    partial void OnAgg_tier_5_cqgChanged();
    partial void OnAgg_tier_6_idChanging(string value);
    partial void OnAgg_tier_6_idChanged();
    partial void OnAgg_tier_6_amount_beforeChanging(string value);
    partial void OnAgg_tier_6_amount_beforeChanged();
    partial void OnAgg_tier_6_amount_afterChanging(string value);
    partial void OnAgg_tier_6_amount_afterChanged();
    partial void OnAgg_tier_6_perc_eligChanging(string value);
    partial void OnAgg_tier_6_perc_eligChanged();
    partial void OnAgg_tier_6_startChanging(string value);
    partial void OnAgg_tier_6_startChanged();
    partial void OnAgg_tier_6_endChanging(string value);
    partial void OnAgg_tier_6_endChanged();
    partial void OnAgg_tier_6_cqgChanging(string value);
    partial void OnAgg_tier_6_cqgChanged();
    partial void OnAgg_tier_7_idChanging(string value);
    partial void OnAgg_tier_7_idChanged();
    partial void OnAgg_tier_7_amount_beforeChanging(string value);
    partial void OnAgg_tier_7_amount_beforeChanged();
    partial void OnAgg_tier_7_amount_afterChanging(string value);
    partial void OnAgg_tier_7_amount_afterChanged();
    partial void OnAgg_tier_7_perc_eligChanging(string value);
    partial void OnAgg_tier_7_perc_eligChanged();
    partial void OnAgg_tier_7_startChanging(string value);
    partial void OnAgg_tier_7_startChanged();
    partial void OnAgg_tier_7_endChanging(string value);
    partial void OnAgg_tier_7_endChanged();
    partial void OnAgg_tier_7_cqgChanging(string value);
    partial void OnAgg_tier_7_cqgChanged();
    partial void OnAgg_tier_8_idChanging(string value);
    partial void OnAgg_tier_8_idChanged();
    partial void OnAgg_tier_8_amount_beforeChanging(string value);
    partial void OnAgg_tier_8_amount_beforeChanged();
    partial void OnAgg_tier_8_amount_afterChanging(string value);
    partial void OnAgg_tier_8_amount_afterChanged();
    partial void OnAgg_tier_8_perc_eligChanging(string value);
    partial void OnAgg_tier_8_perc_eligChanged();
    partial void OnAgg_tier_8_startChanging(string value);
    partial void OnAgg_tier_8_startChanged();
    partial void OnAgg_tier_8_endChanging(string value);
    partial void OnAgg_tier_8_endChanged();
    partial void OnAgg_tier_8_cqgChanging(string value);
    partial void OnAgg_tier_8_cqgChanged();
    partial void OnAgg_tier_9_idChanging(string value);
    partial void OnAgg_tier_9_idChanged();
    partial void OnAgg_tier_9_amount_beforeChanging(string value);
    partial void OnAgg_tier_9_amount_beforeChanged();
    partial void OnAgg_tier_9_amount_afterChanging(string value);
    partial void OnAgg_tier_9_amount_afterChanged();
    partial void OnAgg_tier_9_perc_eligChanging(string value);
    partial void OnAgg_tier_9_perc_eligChanged();
    partial void OnAgg_tier_9_startChanging(string value);
    partial void OnAgg_tier_9_startChanged();
    partial void OnAgg_tier_9_endChanging(string value);
    partial void OnAgg_tier_9_endChanged();
    partial void OnAgg_tier_9_cqgChanging(string value);
    partial void OnAgg_tier_9_cqgChanged();
    partial void OnAgg_tier_10_idChanging(string value);
    partial void OnAgg_tier_10_idChanged();
    partial void OnAgg_tier_10_amount_beforeChanging(string value);
    partial void OnAgg_tier_10_amount_beforeChanged();
    partial void OnAgg_tier_10_amount_afterChanging(string value);
    partial void OnAgg_tier_10_amount_afterChanged();
    partial void OnAgg_tier_10_perc_eligChanging(string value);
    partial void OnAgg_tier_10_perc_eligChanged();
    partial void OnAgg_tier_10_startChanging(string value);
    partial void OnAgg_tier_10_startChanged();
    partial void OnAgg_tier_10_endChanging(string value);
    partial void OnAgg_tier_10_endChanged();
    partial void OnAgg_tier_10_cqgChanging(string value);
    partial void OnAgg_tier_10_cqgChanged();
    #endregion
		
		public Agg_usage_audit_trail()
		{
			OnCreated();
		}
		
		[Column(Name="id_payee", Storage="_Id_payee", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_payee
		{
			get
			{
				return this._Id_payee;
			}
			set
			{
				if ((this._Id_payee != value))
				{
					this.OnId_payeeChanging(value);
					this.SendPropertyChanging();
					this._Id_payee = value;
					this.SendPropertyChanged("Id_payee");
					this.OnId_payeeChanged();
				}
			}
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="orig_usage_interval", Storage="_Orig_usage_interval", DbType="Int")]
		public System.Nullable<int> Orig_usage_interval
		{
			get
			{
				return this._Orig_usage_interval;
			}
			set
			{
				if ((this._Orig_usage_interval != value))
				{
					this.OnOrig_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Orig_usage_interval = value;
					this.SendPropertyChanged("Orig_usage_interval");
					this.OnOrig_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="is_realtime", Storage="_Is_realtime", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Is_realtime
		{
			get
			{
				return this._Is_realtime;
			}
			set
			{
				if ((this._Is_realtime != value))
				{
					this.OnIs_realtimeChanging(value);
					this.SendPropertyChanging();
					this._Is_realtime = value;
					this.SendPropertyChanged("Is_realtime");
					this.OnIs_realtimeChanged();
				}
			}
		}
		
		[Column(Name="field_format_id", Storage="_Field_format_id", DbType="Int")]
		public System.Nullable<int> Field_format_id
		{
			get
			{
				return this._Field_format_id;
			}
			set
			{
				if ((this._Field_format_id != value))
				{
					this.OnField_format_idChanging(value);
					this.SendPropertyChanging();
					this._Field_format_id = value;
					this.SendPropertyChanged("Field_format_id");
					this.OnField_format_idChanged();
				}
			}
		}
		
		[Column(Name="orig_values_packed", Storage="_Orig_values_packed", DbType="VarChar(4000)")]
		public string Orig_values_packed
		{
			get
			{
				return this._Orig_values_packed;
			}
			set
			{
				if ((this._Orig_values_packed != value))
				{
					this.OnOrig_values_packedChanging(value);
					this.SendPropertyChanging();
					this._Orig_values_packed = value;
					this.SendPropertyChanged("Orig_values_packed");
					this.OnOrig_values_packedChanged();
				}
			}
		}
		
		[Column(Name="last_modified", Storage="_Last_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_modified
		{
			get
			{
				return this._Last_modified;
			}
			set
			{
				if ((this._Last_modified != value))
				{
					this.OnLast_modifiedChanging(value);
					this.SendPropertyChanging();
					this._Last_modified = value;
					this.SendPropertyChanged("Last_modified");
					this.OnLast_modifiedChanged();
				}
			}
		}
		
		[Column(Name="last_modified_pv", Storage="_Last_modified_pv", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_modified_pv
		{
			get
			{
				return this._Last_modified_pv;
			}
			set
			{
				if ((this._Last_modified_pv != value))
				{
					this.OnLast_modified_pvChanging(value);
					this.SendPropertyChanging();
					this._Last_modified_pv = value;
					this.SendPropertyChanged("Last_modified_pv");
					this.OnLast_modified_pvChanged();
				}
			}
		}
		
		[Column(Name="last_modified_au", Storage="_Last_modified_au", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_modified_au
		{
			get
			{
				return this._Last_modified_au;
			}
			set
			{
				if ((this._Last_modified_au != value))
				{
					this.OnLast_modified_auChanging(value);
					this.SendPropertyChanging();
					this._Last_modified_au = value;
					this.SendPropertyChanged("Last_modified_au");
					this.OnLast_modified_auChanged();
				}
			}
		}
		
		[Column(Name="pushed_priority", Storage="_Pushed_priority", DbType="VarChar(4000)")]
		public string Pushed_priority
		{
			get
			{
				return this._Pushed_priority;
			}
			set
			{
				if ((this._Pushed_priority != value))
				{
					this.OnPushed_priorityChanging(value);
					this.SendPropertyChanging();
					this._Pushed_priority = value;
					this.SendPropertyChanged("Pushed_priority");
					this.OnPushed_priorityChanged();
				}
			}
		}
		
		[Column(Name="agg_applied_tier_counter", Storage="_Agg_applied_tier_counter", DbType="Int")]
		public System.Nullable<int> Agg_applied_tier_counter
		{
			get
			{
				return this._Agg_applied_tier_counter;
			}
			set
			{
				if ((this._Agg_applied_tier_counter != value))
				{
					this.OnAgg_applied_tier_counterChanging(value);
					this.SendPropertyChanging();
					this._Agg_applied_tier_counter = value;
					this.SendPropertyChanged("Agg_applied_tier_counter");
					this.OnAgg_applied_tier_counterChanged();
				}
			}
		}
		
		[Column(Name="agg_applied_tiers", Storage="_Agg_applied_tiers", DbType="VarChar(4000)")]
		public string Agg_applied_tiers
		{
			get
			{
				return this._Agg_applied_tiers;
			}
			set
			{
				if ((this._Agg_applied_tiers != value))
				{
					this.OnAgg_applied_tiersChanging(value);
					this.SendPropertyChanging();
					this._Agg_applied_tiers = value;
					this.SendPropertyChanged("Agg_applied_tiers");
					this.OnAgg_applied_tiersChanged();
				}
			}
		}
		
		[Column(Name="agg_applied_tier_ranges", Storage="_Agg_applied_tier_ranges", DbType="VarChar(4000)")]
		public string Agg_applied_tier_ranges
		{
			get
			{
				return this._Agg_applied_tier_ranges;
			}
			set
			{
				if ((this._Agg_applied_tier_ranges != value))
				{
					this.OnAgg_applied_tier_rangesChanging(value);
					this.SendPropertyChanging();
					this._Agg_applied_tier_ranges = value;
					this.SendPropertyChanged("Agg_applied_tier_ranges");
					this.OnAgg_applied_tier_rangesChanged();
				}
			}
		}
		
		[Column(Name="agg_applied_tier_amounts", Storage="_Agg_applied_tier_amounts", DbType="VarChar(4000)")]
		public string Agg_applied_tier_amounts
		{
			get
			{
				return this._Agg_applied_tier_amounts;
			}
			set
			{
				if ((this._Agg_applied_tier_amounts != value))
				{
					this.OnAgg_applied_tier_amountsChanging(value);
					this.SendPropertyChanging();
					this._Agg_applied_tier_amounts = value;
					this.SendPropertyChanged("Agg_applied_tier_amounts");
					this.OnAgg_applied_tier_amountsChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_id", Storage="_Agg_tier_1_id", DbType="VarChar(4000)")]
		public string Agg_tier_1_id
		{
			get
			{
				return this._Agg_tier_1_id;
			}
			set
			{
				if ((this._Agg_tier_1_id != value))
				{
					this.OnAgg_tier_1_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_id = value;
					this.SendPropertyChanged("Agg_tier_1_id");
					this.OnAgg_tier_1_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_amount_before", Storage="_Agg_tier_1_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_1_amount_before
		{
			get
			{
				return this._Agg_tier_1_amount_before;
			}
			set
			{
				if ((this._Agg_tier_1_amount_before != value))
				{
					this.OnAgg_tier_1_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_amount_before = value;
					this.SendPropertyChanged("Agg_tier_1_amount_before");
					this.OnAgg_tier_1_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_amount_after", Storage="_Agg_tier_1_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_1_amount_after
		{
			get
			{
				return this._Agg_tier_1_amount_after;
			}
			set
			{
				if ((this._Agg_tier_1_amount_after != value))
				{
					this.OnAgg_tier_1_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_amount_after = value;
					this.SendPropertyChanged("Agg_tier_1_amount_after");
					this.OnAgg_tier_1_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_perc_elig", Storage="_Agg_tier_1_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_1_perc_elig
		{
			get
			{
				return this._Agg_tier_1_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_1_perc_elig != value))
				{
					this.OnAgg_tier_1_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_1_perc_elig");
					this.OnAgg_tier_1_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_start", Storage="_Agg_tier_1_start", DbType="VarChar(4000)")]
		public string Agg_tier_1_start
		{
			get
			{
				return this._Agg_tier_1_start;
			}
			set
			{
				if ((this._Agg_tier_1_start != value))
				{
					this.OnAgg_tier_1_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_start = value;
					this.SendPropertyChanged("Agg_tier_1_start");
					this.OnAgg_tier_1_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_end", Storage="_Agg_tier_1_end", DbType="VarChar(4000)")]
		public string Agg_tier_1_end
		{
			get
			{
				return this._Agg_tier_1_end;
			}
			set
			{
				if ((this._Agg_tier_1_end != value))
				{
					this.OnAgg_tier_1_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_end = value;
					this.SendPropertyChanged("Agg_tier_1_end");
					this.OnAgg_tier_1_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_1_cqg", Storage="_Agg_tier_1_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_1_cqg
		{
			get
			{
				return this._Agg_tier_1_cqg;
			}
			set
			{
				if ((this._Agg_tier_1_cqg != value))
				{
					this.OnAgg_tier_1_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_1_cqg = value;
					this.SendPropertyChanged("Agg_tier_1_cqg");
					this.OnAgg_tier_1_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_id", Storage="_Agg_tier_2_id", DbType="VarChar(4000)")]
		public string Agg_tier_2_id
		{
			get
			{
				return this._Agg_tier_2_id;
			}
			set
			{
				if ((this._Agg_tier_2_id != value))
				{
					this.OnAgg_tier_2_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_id = value;
					this.SendPropertyChanged("Agg_tier_2_id");
					this.OnAgg_tier_2_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_amount_before", Storage="_Agg_tier_2_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_2_amount_before
		{
			get
			{
				return this._Agg_tier_2_amount_before;
			}
			set
			{
				if ((this._Agg_tier_2_amount_before != value))
				{
					this.OnAgg_tier_2_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_amount_before = value;
					this.SendPropertyChanged("Agg_tier_2_amount_before");
					this.OnAgg_tier_2_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_amount_after", Storage="_Agg_tier_2_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_2_amount_after
		{
			get
			{
				return this._Agg_tier_2_amount_after;
			}
			set
			{
				if ((this._Agg_tier_2_amount_after != value))
				{
					this.OnAgg_tier_2_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_amount_after = value;
					this.SendPropertyChanged("Agg_tier_2_amount_after");
					this.OnAgg_tier_2_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_perc_elig", Storage="_Agg_tier_2_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_2_perc_elig
		{
			get
			{
				return this._Agg_tier_2_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_2_perc_elig != value))
				{
					this.OnAgg_tier_2_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_2_perc_elig");
					this.OnAgg_tier_2_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_start", Storage="_Agg_tier_2_start", DbType="VarChar(4000)")]
		public string Agg_tier_2_start
		{
			get
			{
				return this._Agg_tier_2_start;
			}
			set
			{
				if ((this._Agg_tier_2_start != value))
				{
					this.OnAgg_tier_2_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_start = value;
					this.SendPropertyChanged("Agg_tier_2_start");
					this.OnAgg_tier_2_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_end", Storage="_Agg_tier_2_end", DbType="VarChar(4000)")]
		public string Agg_tier_2_end
		{
			get
			{
				return this._Agg_tier_2_end;
			}
			set
			{
				if ((this._Agg_tier_2_end != value))
				{
					this.OnAgg_tier_2_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_end = value;
					this.SendPropertyChanged("Agg_tier_2_end");
					this.OnAgg_tier_2_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_2_cqg", Storage="_Agg_tier_2_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_2_cqg
		{
			get
			{
				return this._Agg_tier_2_cqg;
			}
			set
			{
				if ((this._Agg_tier_2_cqg != value))
				{
					this.OnAgg_tier_2_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_2_cqg = value;
					this.SendPropertyChanged("Agg_tier_2_cqg");
					this.OnAgg_tier_2_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_id", Storage="_Agg_tier_3_id", DbType="VarChar(4000)")]
		public string Agg_tier_3_id
		{
			get
			{
				return this._Agg_tier_3_id;
			}
			set
			{
				if ((this._Agg_tier_3_id != value))
				{
					this.OnAgg_tier_3_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_id = value;
					this.SendPropertyChanged("Agg_tier_3_id");
					this.OnAgg_tier_3_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_amount_before", Storage="_Agg_tier_3_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_3_amount_before
		{
			get
			{
				return this._Agg_tier_3_amount_before;
			}
			set
			{
				if ((this._Agg_tier_3_amount_before != value))
				{
					this.OnAgg_tier_3_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_amount_before = value;
					this.SendPropertyChanged("Agg_tier_3_amount_before");
					this.OnAgg_tier_3_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_amount_after", Storage="_Agg_tier_3_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_3_amount_after
		{
			get
			{
				return this._Agg_tier_3_amount_after;
			}
			set
			{
				if ((this._Agg_tier_3_amount_after != value))
				{
					this.OnAgg_tier_3_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_amount_after = value;
					this.SendPropertyChanged("Agg_tier_3_amount_after");
					this.OnAgg_tier_3_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_perc_elig", Storage="_Agg_tier_3_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_3_perc_elig
		{
			get
			{
				return this._Agg_tier_3_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_3_perc_elig != value))
				{
					this.OnAgg_tier_3_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_3_perc_elig");
					this.OnAgg_tier_3_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_start", Storage="_Agg_tier_3_start", DbType="VarChar(4000)")]
		public string Agg_tier_3_start
		{
			get
			{
				return this._Agg_tier_3_start;
			}
			set
			{
				if ((this._Agg_tier_3_start != value))
				{
					this.OnAgg_tier_3_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_start = value;
					this.SendPropertyChanged("Agg_tier_3_start");
					this.OnAgg_tier_3_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_end", Storage="_Agg_tier_3_end", DbType="VarChar(4000)")]
		public string Agg_tier_3_end
		{
			get
			{
				return this._Agg_tier_3_end;
			}
			set
			{
				if ((this._Agg_tier_3_end != value))
				{
					this.OnAgg_tier_3_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_end = value;
					this.SendPropertyChanged("Agg_tier_3_end");
					this.OnAgg_tier_3_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_3_cqg", Storage="_Agg_tier_3_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_3_cqg
		{
			get
			{
				return this._Agg_tier_3_cqg;
			}
			set
			{
				if ((this._Agg_tier_3_cqg != value))
				{
					this.OnAgg_tier_3_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_3_cqg = value;
					this.SendPropertyChanged("Agg_tier_3_cqg");
					this.OnAgg_tier_3_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_id", Storage="_Agg_tier_4_id", DbType="VarChar(4000)")]
		public string Agg_tier_4_id
		{
			get
			{
				return this._Agg_tier_4_id;
			}
			set
			{
				if ((this._Agg_tier_4_id != value))
				{
					this.OnAgg_tier_4_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_id = value;
					this.SendPropertyChanged("Agg_tier_4_id");
					this.OnAgg_tier_4_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_amount_before", Storage="_Agg_tier_4_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_4_amount_before
		{
			get
			{
				return this._Agg_tier_4_amount_before;
			}
			set
			{
				if ((this._Agg_tier_4_amount_before != value))
				{
					this.OnAgg_tier_4_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_amount_before = value;
					this.SendPropertyChanged("Agg_tier_4_amount_before");
					this.OnAgg_tier_4_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_amount_after", Storage="_Agg_tier_4_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_4_amount_after
		{
			get
			{
				return this._Agg_tier_4_amount_after;
			}
			set
			{
				if ((this._Agg_tier_4_amount_after != value))
				{
					this.OnAgg_tier_4_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_amount_after = value;
					this.SendPropertyChanged("Agg_tier_4_amount_after");
					this.OnAgg_tier_4_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_perc_elig", Storage="_Agg_tier_4_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_4_perc_elig
		{
			get
			{
				return this._Agg_tier_4_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_4_perc_elig != value))
				{
					this.OnAgg_tier_4_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_4_perc_elig");
					this.OnAgg_tier_4_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_start", Storage="_Agg_tier_4_start", DbType="VarChar(4000)")]
		public string Agg_tier_4_start
		{
			get
			{
				return this._Agg_tier_4_start;
			}
			set
			{
				if ((this._Agg_tier_4_start != value))
				{
					this.OnAgg_tier_4_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_start = value;
					this.SendPropertyChanged("Agg_tier_4_start");
					this.OnAgg_tier_4_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_end", Storage="_Agg_tier_4_end", DbType="VarChar(4000)")]
		public string Agg_tier_4_end
		{
			get
			{
				return this._Agg_tier_4_end;
			}
			set
			{
				if ((this._Agg_tier_4_end != value))
				{
					this.OnAgg_tier_4_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_end = value;
					this.SendPropertyChanged("Agg_tier_4_end");
					this.OnAgg_tier_4_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_4_cqg", Storage="_Agg_tier_4_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_4_cqg
		{
			get
			{
				return this._Agg_tier_4_cqg;
			}
			set
			{
				if ((this._Agg_tier_4_cqg != value))
				{
					this.OnAgg_tier_4_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_4_cqg = value;
					this.SendPropertyChanged("Agg_tier_4_cqg");
					this.OnAgg_tier_4_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_id", Storage="_Agg_tier_5_id", DbType="VarChar(4000)")]
		public string Agg_tier_5_id
		{
			get
			{
				return this._Agg_tier_5_id;
			}
			set
			{
				if ((this._Agg_tier_5_id != value))
				{
					this.OnAgg_tier_5_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_id = value;
					this.SendPropertyChanged("Agg_tier_5_id");
					this.OnAgg_tier_5_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_amount_before", Storage="_Agg_tier_5_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_5_amount_before
		{
			get
			{
				return this._Agg_tier_5_amount_before;
			}
			set
			{
				if ((this._Agg_tier_5_amount_before != value))
				{
					this.OnAgg_tier_5_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_amount_before = value;
					this.SendPropertyChanged("Agg_tier_5_amount_before");
					this.OnAgg_tier_5_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_amount_after", Storage="_Agg_tier_5_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_5_amount_after
		{
			get
			{
				return this._Agg_tier_5_amount_after;
			}
			set
			{
				if ((this._Agg_tier_5_amount_after != value))
				{
					this.OnAgg_tier_5_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_amount_after = value;
					this.SendPropertyChanged("Agg_tier_5_amount_after");
					this.OnAgg_tier_5_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_perc_elig", Storage="_Agg_tier_5_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_5_perc_elig
		{
			get
			{
				return this._Agg_tier_5_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_5_perc_elig != value))
				{
					this.OnAgg_tier_5_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_5_perc_elig");
					this.OnAgg_tier_5_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_start", Storage="_Agg_tier_5_start", DbType="VarChar(4000)")]
		public string Agg_tier_5_start
		{
			get
			{
				return this._Agg_tier_5_start;
			}
			set
			{
				if ((this._Agg_tier_5_start != value))
				{
					this.OnAgg_tier_5_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_start = value;
					this.SendPropertyChanged("Agg_tier_5_start");
					this.OnAgg_tier_5_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_end", Storage="_Agg_tier_5_end", DbType="VarChar(4000)")]
		public string Agg_tier_5_end
		{
			get
			{
				return this._Agg_tier_5_end;
			}
			set
			{
				if ((this._Agg_tier_5_end != value))
				{
					this.OnAgg_tier_5_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_end = value;
					this.SendPropertyChanged("Agg_tier_5_end");
					this.OnAgg_tier_5_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_5_cqg", Storage="_Agg_tier_5_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_5_cqg
		{
			get
			{
				return this._Agg_tier_5_cqg;
			}
			set
			{
				if ((this._Agg_tier_5_cqg != value))
				{
					this.OnAgg_tier_5_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_5_cqg = value;
					this.SendPropertyChanged("Agg_tier_5_cqg");
					this.OnAgg_tier_5_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_id", Storage="_Agg_tier_6_id", DbType="VarChar(4000)")]
		public string Agg_tier_6_id
		{
			get
			{
				return this._Agg_tier_6_id;
			}
			set
			{
				if ((this._Agg_tier_6_id != value))
				{
					this.OnAgg_tier_6_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_id = value;
					this.SendPropertyChanged("Agg_tier_6_id");
					this.OnAgg_tier_6_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_amount_before", Storage="_Agg_tier_6_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_6_amount_before
		{
			get
			{
				return this._Agg_tier_6_amount_before;
			}
			set
			{
				if ((this._Agg_tier_6_amount_before != value))
				{
					this.OnAgg_tier_6_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_amount_before = value;
					this.SendPropertyChanged("Agg_tier_6_amount_before");
					this.OnAgg_tier_6_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_amount_after", Storage="_Agg_tier_6_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_6_amount_after
		{
			get
			{
				return this._Agg_tier_6_amount_after;
			}
			set
			{
				if ((this._Agg_tier_6_amount_after != value))
				{
					this.OnAgg_tier_6_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_amount_after = value;
					this.SendPropertyChanged("Agg_tier_6_amount_after");
					this.OnAgg_tier_6_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_perc_elig", Storage="_Agg_tier_6_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_6_perc_elig
		{
			get
			{
				return this._Agg_tier_6_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_6_perc_elig != value))
				{
					this.OnAgg_tier_6_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_6_perc_elig");
					this.OnAgg_tier_6_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_start", Storage="_Agg_tier_6_start", DbType="VarChar(4000)")]
		public string Agg_tier_6_start
		{
			get
			{
				return this._Agg_tier_6_start;
			}
			set
			{
				if ((this._Agg_tier_6_start != value))
				{
					this.OnAgg_tier_6_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_start = value;
					this.SendPropertyChanged("Agg_tier_6_start");
					this.OnAgg_tier_6_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_end", Storage="_Agg_tier_6_end", DbType="VarChar(4000)")]
		public string Agg_tier_6_end
		{
			get
			{
				return this._Agg_tier_6_end;
			}
			set
			{
				if ((this._Agg_tier_6_end != value))
				{
					this.OnAgg_tier_6_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_end = value;
					this.SendPropertyChanged("Agg_tier_6_end");
					this.OnAgg_tier_6_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_6_cqg", Storage="_Agg_tier_6_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_6_cqg
		{
			get
			{
				return this._Agg_tier_6_cqg;
			}
			set
			{
				if ((this._Agg_tier_6_cqg != value))
				{
					this.OnAgg_tier_6_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_6_cqg = value;
					this.SendPropertyChanged("Agg_tier_6_cqg");
					this.OnAgg_tier_6_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_id", Storage="_Agg_tier_7_id", DbType="VarChar(4000)")]
		public string Agg_tier_7_id
		{
			get
			{
				return this._Agg_tier_7_id;
			}
			set
			{
				if ((this._Agg_tier_7_id != value))
				{
					this.OnAgg_tier_7_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_id = value;
					this.SendPropertyChanged("Agg_tier_7_id");
					this.OnAgg_tier_7_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_amount_before", Storage="_Agg_tier_7_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_7_amount_before
		{
			get
			{
				return this._Agg_tier_7_amount_before;
			}
			set
			{
				if ((this._Agg_tier_7_amount_before != value))
				{
					this.OnAgg_tier_7_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_amount_before = value;
					this.SendPropertyChanged("Agg_tier_7_amount_before");
					this.OnAgg_tier_7_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_amount_after", Storage="_Agg_tier_7_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_7_amount_after
		{
			get
			{
				return this._Agg_tier_7_amount_after;
			}
			set
			{
				if ((this._Agg_tier_7_amount_after != value))
				{
					this.OnAgg_tier_7_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_amount_after = value;
					this.SendPropertyChanged("Agg_tier_7_amount_after");
					this.OnAgg_tier_7_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_perc_elig", Storage="_Agg_tier_7_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_7_perc_elig
		{
			get
			{
				return this._Agg_tier_7_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_7_perc_elig != value))
				{
					this.OnAgg_tier_7_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_7_perc_elig");
					this.OnAgg_tier_7_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_start", Storage="_Agg_tier_7_start", DbType="VarChar(4000)")]
		public string Agg_tier_7_start
		{
			get
			{
				return this._Agg_tier_7_start;
			}
			set
			{
				if ((this._Agg_tier_7_start != value))
				{
					this.OnAgg_tier_7_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_start = value;
					this.SendPropertyChanged("Agg_tier_7_start");
					this.OnAgg_tier_7_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_end", Storage="_Agg_tier_7_end", DbType="VarChar(4000)")]
		public string Agg_tier_7_end
		{
			get
			{
				return this._Agg_tier_7_end;
			}
			set
			{
				if ((this._Agg_tier_7_end != value))
				{
					this.OnAgg_tier_7_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_end = value;
					this.SendPropertyChanged("Agg_tier_7_end");
					this.OnAgg_tier_7_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_7_cqg", Storage="_Agg_tier_7_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_7_cqg
		{
			get
			{
				return this._Agg_tier_7_cqg;
			}
			set
			{
				if ((this._Agg_tier_7_cqg != value))
				{
					this.OnAgg_tier_7_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_7_cqg = value;
					this.SendPropertyChanged("Agg_tier_7_cqg");
					this.OnAgg_tier_7_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_id", Storage="_Agg_tier_8_id", DbType="VarChar(4000)")]
		public string Agg_tier_8_id
		{
			get
			{
				return this._Agg_tier_8_id;
			}
			set
			{
				if ((this._Agg_tier_8_id != value))
				{
					this.OnAgg_tier_8_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_id = value;
					this.SendPropertyChanged("Agg_tier_8_id");
					this.OnAgg_tier_8_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_amount_before", Storage="_Agg_tier_8_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_8_amount_before
		{
			get
			{
				return this._Agg_tier_8_amount_before;
			}
			set
			{
				if ((this._Agg_tier_8_amount_before != value))
				{
					this.OnAgg_tier_8_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_amount_before = value;
					this.SendPropertyChanged("Agg_tier_8_amount_before");
					this.OnAgg_tier_8_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_amount_after", Storage="_Agg_tier_8_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_8_amount_after
		{
			get
			{
				return this._Agg_tier_8_amount_after;
			}
			set
			{
				if ((this._Agg_tier_8_amount_after != value))
				{
					this.OnAgg_tier_8_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_amount_after = value;
					this.SendPropertyChanged("Agg_tier_8_amount_after");
					this.OnAgg_tier_8_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_perc_elig", Storage="_Agg_tier_8_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_8_perc_elig
		{
			get
			{
				return this._Agg_tier_8_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_8_perc_elig != value))
				{
					this.OnAgg_tier_8_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_8_perc_elig");
					this.OnAgg_tier_8_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_start", Storage="_Agg_tier_8_start", DbType="VarChar(4000)")]
		public string Agg_tier_8_start
		{
			get
			{
				return this._Agg_tier_8_start;
			}
			set
			{
				if ((this._Agg_tier_8_start != value))
				{
					this.OnAgg_tier_8_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_start = value;
					this.SendPropertyChanged("Agg_tier_8_start");
					this.OnAgg_tier_8_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_end", Storage="_Agg_tier_8_end", DbType="VarChar(4000)")]
		public string Agg_tier_8_end
		{
			get
			{
				return this._Agg_tier_8_end;
			}
			set
			{
				if ((this._Agg_tier_8_end != value))
				{
					this.OnAgg_tier_8_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_end = value;
					this.SendPropertyChanged("Agg_tier_8_end");
					this.OnAgg_tier_8_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_8_cqg", Storage="_Agg_tier_8_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_8_cqg
		{
			get
			{
				return this._Agg_tier_8_cqg;
			}
			set
			{
				if ((this._Agg_tier_8_cqg != value))
				{
					this.OnAgg_tier_8_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_8_cqg = value;
					this.SendPropertyChanged("Agg_tier_8_cqg");
					this.OnAgg_tier_8_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_id", Storage="_Agg_tier_9_id", DbType="VarChar(4000)")]
		public string Agg_tier_9_id
		{
			get
			{
				return this._Agg_tier_9_id;
			}
			set
			{
				if ((this._Agg_tier_9_id != value))
				{
					this.OnAgg_tier_9_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_id = value;
					this.SendPropertyChanged("Agg_tier_9_id");
					this.OnAgg_tier_9_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_amount_before", Storage="_Agg_tier_9_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_9_amount_before
		{
			get
			{
				return this._Agg_tier_9_amount_before;
			}
			set
			{
				if ((this._Agg_tier_9_amount_before != value))
				{
					this.OnAgg_tier_9_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_amount_before = value;
					this.SendPropertyChanged("Agg_tier_9_amount_before");
					this.OnAgg_tier_9_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_amount_after", Storage="_Agg_tier_9_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_9_amount_after
		{
			get
			{
				return this._Agg_tier_9_amount_after;
			}
			set
			{
				if ((this._Agg_tier_9_amount_after != value))
				{
					this.OnAgg_tier_9_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_amount_after = value;
					this.SendPropertyChanged("Agg_tier_9_amount_after");
					this.OnAgg_tier_9_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_perc_elig", Storage="_Agg_tier_9_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_9_perc_elig
		{
			get
			{
				return this._Agg_tier_9_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_9_perc_elig != value))
				{
					this.OnAgg_tier_9_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_9_perc_elig");
					this.OnAgg_tier_9_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_start", Storage="_Agg_tier_9_start", DbType="VarChar(4000)")]
		public string Agg_tier_9_start
		{
			get
			{
				return this._Agg_tier_9_start;
			}
			set
			{
				if ((this._Agg_tier_9_start != value))
				{
					this.OnAgg_tier_9_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_start = value;
					this.SendPropertyChanged("Agg_tier_9_start");
					this.OnAgg_tier_9_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_end", Storage="_Agg_tier_9_end", DbType="VarChar(4000)")]
		public string Agg_tier_9_end
		{
			get
			{
				return this._Agg_tier_9_end;
			}
			set
			{
				if ((this._Agg_tier_9_end != value))
				{
					this.OnAgg_tier_9_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_end = value;
					this.SendPropertyChanged("Agg_tier_9_end");
					this.OnAgg_tier_9_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_9_cqg", Storage="_Agg_tier_9_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_9_cqg
		{
			get
			{
				return this._Agg_tier_9_cqg;
			}
			set
			{
				if ((this._Agg_tier_9_cqg != value))
				{
					this.OnAgg_tier_9_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_9_cqg = value;
					this.SendPropertyChanged("Agg_tier_9_cqg");
					this.OnAgg_tier_9_cqgChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_id", Storage="_Agg_tier_10_id", DbType="VarChar(4000)")]
		public string Agg_tier_10_id
		{
			get
			{
				return this._Agg_tier_10_id;
			}
			set
			{
				if ((this._Agg_tier_10_id != value))
				{
					this.OnAgg_tier_10_idChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_id = value;
					this.SendPropertyChanged("Agg_tier_10_id");
					this.OnAgg_tier_10_idChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_amount_before", Storage="_Agg_tier_10_amount_before", DbType="VarChar(4000)")]
		public string Agg_tier_10_amount_before
		{
			get
			{
				return this._Agg_tier_10_amount_before;
			}
			set
			{
				if ((this._Agg_tier_10_amount_before != value))
				{
					this.OnAgg_tier_10_amount_beforeChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_amount_before = value;
					this.SendPropertyChanged("Agg_tier_10_amount_before");
					this.OnAgg_tier_10_amount_beforeChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_amount_after", Storage="_Agg_tier_10_amount_after", DbType="VarChar(4000)")]
		public string Agg_tier_10_amount_after
		{
			get
			{
				return this._Agg_tier_10_amount_after;
			}
			set
			{
				if ((this._Agg_tier_10_amount_after != value))
				{
					this.OnAgg_tier_10_amount_afterChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_amount_after = value;
					this.SendPropertyChanged("Agg_tier_10_amount_after");
					this.OnAgg_tier_10_amount_afterChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_perc_elig", Storage="_Agg_tier_10_perc_elig", DbType="VarChar(4000)")]
		public string Agg_tier_10_perc_elig
		{
			get
			{
				return this._Agg_tier_10_perc_elig;
			}
			set
			{
				if ((this._Agg_tier_10_perc_elig != value))
				{
					this.OnAgg_tier_10_perc_eligChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_perc_elig = value;
					this.SendPropertyChanged("Agg_tier_10_perc_elig");
					this.OnAgg_tier_10_perc_eligChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_start", Storage="_Agg_tier_10_start", DbType="VarChar(4000)")]
		public string Agg_tier_10_start
		{
			get
			{
				return this._Agg_tier_10_start;
			}
			set
			{
				if ((this._Agg_tier_10_start != value))
				{
					this.OnAgg_tier_10_startChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_start = value;
					this.SendPropertyChanged("Agg_tier_10_start");
					this.OnAgg_tier_10_startChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_end", Storage="_Agg_tier_10_end", DbType="VarChar(4000)")]
		public string Agg_tier_10_end
		{
			get
			{
				return this._Agg_tier_10_end;
			}
			set
			{
				if ((this._Agg_tier_10_end != value))
				{
					this.OnAgg_tier_10_endChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_end = value;
					this.SendPropertyChanged("Agg_tier_10_end");
					this.OnAgg_tier_10_endChanged();
				}
			}
		}
		
		[Column(Name="agg_tier_10_cqg", Storage="_Agg_tier_10_cqg", DbType="VarChar(4000)")]
		public string Agg_tier_10_cqg
		{
			get
			{
				return this._Agg_tier_10_cqg;
			}
			set
			{
				if ((this._Agg_tier_10_cqg != value))
				{
					this.OnAgg_tier_10_cqgChanging(value);
					this.SendPropertyChanging();
					this._Agg_tier_10_cqg = value;
					this.SendPropertyChanged("Agg_tier_10_cqg");
					this.OnAgg_tier_10_cqgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.agg_usage_hook_id_accs")]
	public partial class Agg_usage_hook_id_accs
	{
		
		private string _Hook_name;
		
		private int _Id_acc;
		
		public Agg_usage_hook_id_accs()
		{
		}
		
		[Column(Name="hook_name", Storage="_Hook_name", DbType="VarChar(100)")]
		public string Hook_name
		{
			get
			{
				return this._Hook_name;
			}
			set
			{
				if ((this._Hook_name != value))
				{
					this._Hook_name = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.amp_staging_tables")]
	public partial class Amp_staging_tables
	{
		
		private int _Mvm_run_id;
		
		private string _Node_id;
		
		private string _Staging_table_name;
		
		private System.DateTime _Create_dt;
		
		public Amp_staging_tables()
		{
		}
		
		[Column(Name="mvm_run_id", Storage="_Mvm_run_id", DbType="Int NOT NULL")]
		public int Mvm_run_id
		{
			get
			{
				return this._Mvm_run_id;
			}
			set
			{
				if ((this._Mvm_run_id != value))
				{
					this._Mvm_run_id = value;
				}
			}
		}
		
		[Column(Name="node_id", Storage="_Node_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Node_id
		{
			get
			{
				return this._Node_id;
			}
			set
			{
				if ((this._Node_id != value))
				{
					this._Node_id = value;
				}
			}
		}
		
		[Column(Name="staging_table_name", Storage="_Staging_table_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Staging_table_name
		{
			get
			{
				return this._Staging_table_name;
			}
			set
			{
				if ((this._Staging_table_name != value))
				{
					this._Staging_table_name = value;
				}
			}
		}
		
		[Column(Name="create_dt", Storage="_Create_dt", DbType="Date NOT NULL")]
		public System.DateTime Create_dt
		{
			get
			{
				return this._Create_dt;
			}
			set
			{
				if ((this._Create_dt != value))
				{
					this._Create_dt = value;
				}
			}
		}
	}
	
	[Table(Name="cdc.captured_columns")]
	public partial class Cdc_Captured_columns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Object_id;
		
		private string _Column_name;
		
		private System.Nullable<int> _Column_id;
		
		private string _Column_type;
		
		private int _Column_ordinal;
		
		private System.Nullable<bool> _Is_computed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObject_idChanging(int value);
    partial void OnObject_idChanged();
    partial void OnColumn_nameChanging(string value);
    partial void OnColumn_nameChanged();
    partial void OnColumn_idChanging(System.Nullable<int> value);
    partial void OnColumn_idChanged();
    partial void OnColumn_typeChanging(string value);
    partial void OnColumn_typeChanged();
    partial void OnColumn_ordinalChanging(int value);
    partial void OnColumn_ordinalChanged();
    partial void OnIs_computedChanging(System.Nullable<bool> value);
    partial void OnIs_computedChanged();
    #endregion
		
		public Cdc_Captured_columns()
		{
			OnCreated();
		}
		
		[Column(Name="object_id", Storage="_Object_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_id
		{
			get
			{
				return this._Object_id;
			}
			set
			{
				if ((this._Object_id != value))
				{
					this.OnObject_idChanging(value);
					this.SendPropertyChanging();
					this._Object_id = value;
					this.SendPropertyChanged("Object_id");
					this.OnObject_idChanged();
				}
			}
		}
		
		[Column(Name="column_name", Storage="_Column_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Column_name
		{
			get
			{
				return this._Column_name;
			}
			set
			{
				if ((this._Column_name != value))
				{
					this.OnColumn_nameChanging(value);
					this.SendPropertyChanging();
					this._Column_name = value;
					this.SendPropertyChanged("Column_name");
					this.OnColumn_nameChanged();
				}
			}
		}
		
		[Column(Name="column_id", Storage="_Column_id", DbType="Int")]
		public System.Nullable<int> Column_id
		{
			get
			{
				return this._Column_id;
			}
			set
			{
				if ((this._Column_id != value))
				{
					this.OnColumn_idChanging(value);
					this.SendPropertyChanging();
					this._Column_id = value;
					this.SendPropertyChanged("Column_id");
					this.OnColumn_idChanged();
				}
			}
		}
		
		[Column(Name="column_type", Storage="_Column_type", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Column_type
		{
			get
			{
				return this._Column_type;
			}
			set
			{
				if ((this._Column_type != value))
				{
					this.OnColumn_typeChanging(value);
					this.SendPropertyChanging();
					this._Column_type = value;
					this.SendPropertyChanged("Column_type");
					this.OnColumn_typeChanged();
				}
			}
		}
		
		[Column(Name="column_ordinal", Storage="_Column_ordinal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Column_ordinal
		{
			get
			{
				return this._Column_ordinal;
			}
			set
			{
				if ((this._Column_ordinal != value))
				{
					this.OnColumn_ordinalChanging(value);
					this.SendPropertyChanging();
					this._Column_ordinal = value;
					this.SendPropertyChanged("Column_ordinal");
					this.OnColumn_ordinalChanged();
				}
			}
		}
		
		[Column(Name="is_computed", Storage="_Is_computed", DbType="Bit")]
		public System.Nullable<bool> Is_computed
		{
			get
			{
				return this._Is_computed;
			}
			set
			{
				if ((this._Is_computed != value))
				{
					this.OnIs_computedChanging(value);
					this.SendPropertyChanging();
					this._Is_computed = value;
					this.SendPropertyChanged("Is_computed");
					this.OnIs_computedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cdc.change_tables")]
	public partial class Cdc_Change_tables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Object_id;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<int> _Source_object_id;
		
		private string _Capture_instance;
		
		private System.Data.Linq.Binary _Start_lsn;
		
		private System.Data.Linq.Binary _End_lsn;
		
		private System.Nullable<bool> _Supports_net_changes;
		
		private System.Nullable<bool> _Has_drop_pending;
		
		private string _Role_name;
		
		private string _Index_name;
		
		private string _Filegroup_name;
		
		private System.Nullable<System.DateTime> _Create_date;
		
		private bool _Partition_switch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObject_idChanging(int value);
    partial void OnObject_idChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnSource_object_idChanging(System.Nullable<int> value);
    partial void OnSource_object_idChanged();
    partial void OnCapture_instanceChanging(string value);
    partial void OnCapture_instanceChanged();
    partial void OnStart_lsnChanging(System.Data.Linq.Binary value);
    partial void OnStart_lsnChanged();
    partial void OnEnd_lsnChanging(System.Data.Linq.Binary value);
    partial void OnEnd_lsnChanged();
    partial void OnSupports_net_changesChanging(System.Nullable<bool> value);
    partial void OnSupports_net_changesChanged();
    partial void OnHas_drop_pendingChanging(System.Nullable<bool> value);
    partial void OnHas_drop_pendingChanged();
    partial void OnRole_nameChanging(string value);
    partial void OnRole_nameChanged();
    partial void OnIndex_nameChanging(string value);
    partial void OnIndex_nameChanged();
    partial void OnFilegroup_nameChanging(string value);
    partial void OnFilegroup_nameChanged();
    partial void OnCreate_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_dateChanged();
    partial void OnPartition_switchChanging(bool value);
    partial void OnPartition_switchChanged();
    #endregion
		
		public Cdc_Change_tables()
		{
			OnCreated();
		}
		
		[Column(Name="object_id", Storage="_Object_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_id
		{
			get
			{
				return this._Object_id;
			}
			set
			{
				if ((this._Object_id != value))
				{
					this.OnObject_idChanging(value);
					this.SendPropertyChanging();
					this._Object_id = value;
					this.SendPropertyChanged("Object_id");
					this.OnObject_idChanged();
				}
			}
		}
		
		[Column(Name="version", Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[Column(Name="source_object_id", Storage="_Source_object_id", DbType="Int")]
		public System.Nullable<int> Source_object_id
		{
			get
			{
				return this._Source_object_id;
			}
			set
			{
				if ((this._Source_object_id != value))
				{
					this.OnSource_object_idChanging(value);
					this.SendPropertyChanging();
					this._Source_object_id = value;
					this.SendPropertyChanged("Source_object_id");
					this.OnSource_object_idChanged();
				}
			}
		}
		
		[Column(Name="capture_instance", Storage="_Capture_instance", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Capture_instance
		{
			get
			{
				return this._Capture_instance;
			}
			set
			{
				if ((this._Capture_instance != value))
				{
					this.OnCapture_instanceChanging(value);
					this.SendPropertyChanging();
					this._Capture_instance = value;
					this.SendPropertyChanged("Capture_instance");
					this.OnCapture_instanceChanged();
				}
			}
		}
		
		[Column(Name="start_lsn", Storage="_Start_lsn", DbType="Binary(10)", CanBeNull=true)]
		public System.Data.Linq.Binary Start_lsn
		{
			get
			{
				return this._Start_lsn;
			}
			set
			{
				if ((this._Start_lsn != value))
				{
					this.OnStart_lsnChanging(value);
					this.SendPropertyChanging();
					this._Start_lsn = value;
					this.SendPropertyChanged("Start_lsn");
					this.OnStart_lsnChanged();
				}
			}
		}
		
		[Column(Name="end_lsn", Storage="_End_lsn", DbType="Binary(10)", CanBeNull=true)]
		public System.Data.Linq.Binary End_lsn
		{
			get
			{
				return this._End_lsn;
			}
			set
			{
				if ((this._End_lsn != value))
				{
					this.OnEnd_lsnChanging(value);
					this.SendPropertyChanging();
					this._End_lsn = value;
					this.SendPropertyChanged("End_lsn");
					this.OnEnd_lsnChanged();
				}
			}
		}
		
		[Column(Name="supports_net_changes", Storage="_Supports_net_changes", DbType="Bit")]
		public System.Nullable<bool> Supports_net_changes
		{
			get
			{
				return this._Supports_net_changes;
			}
			set
			{
				if ((this._Supports_net_changes != value))
				{
					this.OnSupports_net_changesChanging(value);
					this.SendPropertyChanging();
					this._Supports_net_changes = value;
					this.SendPropertyChanged("Supports_net_changes");
					this.OnSupports_net_changesChanged();
				}
			}
		}
		
		[Column(Name="has_drop_pending", Storage="_Has_drop_pending", DbType="Bit")]
		public System.Nullable<bool> Has_drop_pending
		{
			get
			{
				return this._Has_drop_pending;
			}
			set
			{
				if ((this._Has_drop_pending != value))
				{
					this.OnHas_drop_pendingChanging(value);
					this.SendPropertyChanging();
					this._Has_drop_pending = value;
					this.SendPropertyChanged("Has_drop_pending");
					this.OnHas_drop_pendingChanged();
				}
			}
		}
		
		[Column(Name="role_name", Storage="_Role_name", DbType="NVarChar(128)")]
		public string Role_name
		{
			get
			{
				return this._Role_name;
			}
			set
			{
				if ((this._Role_name != value))
				{
					this.OnRole_nameChanging(value);
					this.SendPropertyChanging();
					this._Role_name = value;
					this.SendPropertyChanged("Role_name");
					this.OnRole_nameChanged();
				}
			}
		}
		
		[Column(Name="index_name", Storage="_Index_name", DbType="NVarChar(128)")]
		public string Index_name
		{
			get
			{
				return this._Index_name;
			}
			set
			{
				if ((this._Index_name != value))
				{
					this.OnIndex_nameChanging(value);
					this.SendPropertyChanging();
					this._Index_name = value;
					this.SendPropertyChanged("Index_name");
					this.OnIndex_nameChanged();
				}
			}
		}
		
		[Column(Name="filegroup_name", Storage="_Filegroup_name", DbType="NVarChar(128)")]
		public string Filegroup_name
		{
			get
			{
				return this._Filegroup_name;
			}
			set
			{
				if ((this._Filegroup_name != value))
				{
					this.OnFilegroup_nameChanging(value);
					this.SendPropertyChanging();
					this._Filegroup_name = value;
					this.SendPropertyChanged("Filegroup_name");
					this.OnFilegroup_nameChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="partition_switch", Storage="_Partition_switch", DbType="Bit NOT NULL")]
		public bool Partition_switch
		{
			get
			{
				return this._Partition_switch;
			}
			set
			{
				if ((this._Partition_switch != value))
				{
					this.OnPartition_switchChanging(value);
					this.SendPropertyChanging();
					this._Partition_switch = value;
					this.SendPropertyChanged("Partition_switch");
					this.OnPartition_switchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cdc.ddl_history")]
	public partial class Cdc_Ddl_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Source_object_id;
		
		private int _Object_id;
		
		private System.Nullable<bool> _Required_column_update;
		
		private string _Ddl_command;
		
		private System.Data.Linq.Binary _Ddl_lsn;
		
		private System.Nullable<System.DateTime> _Ddl_time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSource_object_idChanging(System.Nullable<int> value);
    partial void OnSource_object_idChanged();
    partial void OnObject_idChanging(int value);
    partial void OnObject_idChanged();
    partial void OnRequired_column_updateChanging(System.Nullable<bool> value);
    partial void OnRequired_column_updateChanged();
    partial void OnDdl_commandChanging(string value);
    partial void OnDdl_commandChanged();
    partial void OnDdl_lsnChanging(System.Data.Linq.Binary value);
    partial void OnDdl_lsnChanged();
    partial void OnDdl_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnDdl_timeChanged();
    #endregion
		
		public Cdc_Ddl_history()
		{
			OnCreated();
		}
		
		[Column(Name="source_object_id", Storage="_Source_object_id", DbType="Int")]
		public System.Nullable<int> Source_object_id
		{
			get
			{
				return this._Source_object_id;
			}
			set
			{
				if ((this._Source_object_id != value))
				{
					this.OnSource_object_idChanging(value);
					this.SendPropertyChanging();
					this._Source_object_id = value;
					this.SendPropertyChanged("Source_object_id");
					this.OnSource_object_idChanged();
				}
			}
		}
		
		[Column(Name="object_id", Storage="_Object_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_id
		{
			get
			{
				return this._Object_id;
			}
			set
			{
				if ((this._Object_id != value))
				{
					this.OnObject_idChanging(value);
					this.SendPropertyChanging();
					this._Object_id = value;
					this.SendPropertyChanged("Object_id");
					this.OnObject_idChanged();
				}
			}
		}
		
		[Column(Name="required_column_update", Storage="_Required_column_update", DbType="Bit")]
		public System.Nullable<bool> Required_column_update
		{
			get
			{
				return this._Required_column_update;
			}
			set
			{
				if ((this._Required_column_update != value))
				{
					this.OnRequired_column_updateChanging(value);
					this.SendPropertyChanging();
					this._Required_column_update = value;
					this.SendPropertyChanged("Required_column_update");
					this.OnRequired_column_updateChanged();
				}
			}
		}
		
		[Column(Name="ddl_command", Storage="_Ddl_command", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Ddl_command
		{
			get
			{
				return this._Ddl_command;
			}
			set
			{
				if ((this._Ddl_command != value))
				{
					this.OnDdl_commandChanging(value);
					this.SendPropertyChanging();
					this._Ddl_command = value;
					this.SendPropertyChanged("Ddl_command");
					this.OnDdl_commandChanged();
				}
			}
		}
		
		[Column(Name="ddl_lsn", Storage="_Ddl_lsn", DbType="Binary(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Ddl_lsn
		{
			get
			{
				return this._Ddl_lsn;
			}
			set
			{
				if ((this._Ddl_lsn != value))
				{
					this.OnDdl_lsnChanging(value);
					this.SendPropertyChanging();
					this._Ddl_lsn = value;
					this.SendPropertyChanged("Ddl_lsn");
					this.OnDdl_lsnChanged();
				}
			}
		}
		
		[Column(Name="ddl_time", Storage="_Ddl_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ddl_time
		{
			get
			{
				return this._Ddl_time;
			}
			set
			{
				if ((this._Ddl_time != value))
				{
					this.OnDdl_timeChanging(value);
					this.SendPropertyChanging();
					this._Ddl_time = value;
					this.SendPropertyChanged("Ddl_time");
					this.OnDdl_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.decision_qualification_groups")]
	public partial class Decision_qualification_groups
	{
		
		private string _Decision_qualification_group;
		
		private System.Nullable<int> _Row_num;
		
		private string _Filter;
		
		public Decision_qualification_groups()
		{
		}
		
		[Column(Name="decision_qualification_group", Storage="_Decision_qualification_group", DbType="VarChar(100)")]
		public string Decision_qualification_group
		{
			get
			{
				return this._Decision_qualification_group;
			}
			set
			{
				if ((this._Decision_qualification_group != value))
				{
					this._Decision_qualification_group = value;
				}
			}
		}
		
		[Column(Name="row_num", Storage="_Row_num", DbType="Int")]
		public System.Nullable<int> Row_num
		{
			get
			{
				return this._Row_num;
			}
			set
			{
				if ((this._Row_num != value))
				{
					this._Row_num = value;
				}
			}
		}
		
		[Column(Name="filter", Storage="_Filter", DbType="VarChar(4000)")]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this._Filter = value;
				}
			}
		}
	}
	
	[Table(Name="cdc.index_columns")]
	public partial class Cdc_Index_columns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Object_id;
		
		private string _Column_name;
		
		private byte _Index_ordinal;
		
		private System.Nullable<int> _Column_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObject_idChanging(int value);
    partial void OnObject_idChanged();
    partial void OnColumn_nameChanging(string value);
    partial void OnColumn_nameChanged();
    partial void OnIndex_ordinalChanging(byte value);
    partial void OnIndex_ordinalChanged();
    partial void OnColumn_idChanging(System.Nullable<int> value);
    partial void OnColumn_idChanged();
    #endregion
		
		public Cdc_Index_columns()
		{
			OnCreated();
		}
		
		[Column(Name="object_id", Storage="_Object_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_id
		{
			get
			{
				return this._Object_id;
			}
			set
			{
				if ((this._Object_id != value))
				{
					this.OnObject_idChanging(value);
					this.SendPropertyChanging();
					this._Object_id = value;
					this.SendPropertyChanged("Object_id");
					this.OnObject_idChanged();
				}
			}
		}
		
		[Column(Name="column_name", Storage="_Column_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Column_name
		{
			get
			{
				return this._Column_name;
			}
			set
			{
				if ((this._Column_name != value))
				{
					this.OnColumn_nameChanging(value);
					this.SendPropertyChanging();
					this._Column_name = value;
					this.SendPropertyChanged("Column_name");
					this.OnColumn_nameChanged();
				}
			}
		}
		
		[Column(Name="index_ordinal", Storage="_Index_ordinal", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Index_ordinal
		{
			get
			{
				return this._Index_ordinal;
			}
			set
			{
				if ((this._Index_ordinal != value))
				{
					this.OnIndex_ordinalChanging(value);
					this.SendPropertyChanging();
					this._Index_ordinal = value;
					this.SendPropertyChanged("Index_ordinal");
					this.OnIndex_ordinalChanged();
				}
			}
		}
		
		[Column(Name="column_id", Storage="_Column_id", DbType="Int")]
		public System.Nullable<int> Column_id
		{
			get
			{
				return this._Column_id;
			}
			set
			{
				if ((this._Column_id != value))
				{
					this.OnColumn_idChanging(value);
					this.SendPropertyChanging();
					this._Column_id = value;
					this.SendPropertyChanged("Column_id");
					this.OnColumn_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cdc.lsn_time_mapping")]
	public partial class Cdc_Lsn_time_mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Start_lsn;
		
		private System.Nullable<System.DateTime> _Tran_begin_time;
		
		private System.Nullable<System.DateTime> _Tran_end_time;
		
		private System.Data.Linq.Binary _Tran_id;
		
		private System.Data.Linq.Binary _Tran_begin_lsn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStart_lsnChanging(System.Data.Linq.Binary value);
    partial void OnStart_lsnChanged();
    partial void OnTran_begin_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnTran_begin_timeChanged();
    partial void OnTran_end_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnTran_end_timeChanged();
    partial void OnTran_idChanging(System.Data.Linq.Binary value);
    partial void OnTran_idChanged();
    partial void OnTran_begin_lsnChanging(System.Data.Linq.Binary value);
    partial void OnTran_begin_lsnChanged();
    #endregion
		
		public Cdc_Lsn_time_mapping()
		{
			OnCreated();
		}
		
		[Column(Name="start_lsn", Storage="_Start_lsn", DbType="Binary(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Start_lsn
		{
			get
			{
				return this._Start_lsn;
			}
			set
			{
				if ((this._Start_lsn != value))
				{
					this.OnStart_lsnChanging(value);
					this.SendPropertyChanging();
					this._Start_lsn = value;
					this.SendPropertyChanged("Start_lsn");
					this.OnStart_lsnChanged();
				}
			}
		}
		
		[Column(Name="tran_begin_time", Storage="_Tran_begin_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tran_begin_time
		{
			get
			{
				return this._Tran_begin_time;
			}
			set
			{
				if ((this._Tran_begin_time != value))
				{
					this.OnTran_begin_timeChanging(value);
					this.SendPropertyChanging();
					this._Tran_begin_time = value;
					this.SendPropertyChanged("Tran_begin_time");
					this.OnTran_begin_timeChanged();
				}
			}
		}
		
		[Column(Name="tran_end_time", Storage="_Tran_end_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tran_end_time
		{
			get
			{
				return this._Tran_end_time;
			}
			set
			{
				if ((this._Tran_end_time != value))
				{
					this.OnTran_end_timeChanging(value);
					this.SendPropertyChanging();
					this._Tran_end_time = value;
					this.SendPropertyChanged("Tran_end_time");
					this.OnTran_end_timeChanged();
				}
			}
		}
		
		[Column(Name="tran_id", Storage="_Tran_id", DbType="VarBinary(10)", CanBeNull=true)]
		public System.Data.Linq.Binary Tran_id
		{
			get
			{
				return this._Tran_id;
			}
			set
			{
				if ((this._Tran_id != value))
				{
					this.OnTran_idChanging(value);
					this.SendPropertyChanging();
					this._Tran_id = value;
					this.SendPropertyChanged("Tran_id");
					this.OnTran_idChanged();
				}
			}
		}
		
		[Column(Name="tran_begin_lsn", Storage="_Tran_begin_lsn", DbType="Binary(10)", CanBeNull=true)]
		public System.Data.Linq.Binary Tran_begin_lsn
		{
			get
			{
				return this._Tran_begin_lsn;
			}
			set
			{
				if ((this._Tran_begin_lsn != value))
				{
					this.OnTran_begin_lsnChanging(value);
					this.SendPropertyChanging();
					this._Tran_begin_lsn = value;
					this.SendPropertyChanged("Tran_begin_lsn");
					this.OnTran_begin_lsnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Metadata")]
	public partial class Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Timecreate;
		
		private string _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimecreateChanging(System.DateTime value);
    partial void OnTimecreateChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public Metadata()
		{
			OnCreated();
		}
		
		[Column(Name="timecreate", Storage="_Timecreate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Timecreate
		{
			get
			{
				return this._Timecreate;
			}
			set
			{
				if ((this._Timecreate != value))
				{
					this.OnTimecreateChanging(value);
					this.SendPropertyChanging();
					this._Timecreate = value;
					this.SendPropertyChanged("Timecreate");
					this.OnTimecreateChanged();
				}
			}
		}
		
		[Column(Name="content", Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_change_tracking_nodes")]
	public partial class Mvm_change_tracking_nodes
	{
		
		private string _Logical_cluster_name;
		
		private int _Node_count;
		
		public Mvm_change_tracking_nodes()
		{
		}
		
		[Column(Name="logical_cluster_name", Storage="_Logical_cluster_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Logical_cluster_name
		{
			get
			{
				return this._Logical_cluster_name;
			}
			set
			{
				if ((this._Logical_cluster_name != value))
				{
					this._Logical_cluster_name = value;
				}
			}
		}
		
		[Column(Name="node_count", Storage="_Node_count", DbType="Int NOT NULL")]
		public int Node_count
		{
			get
			{
				return this._Node_count;
			}
			set
			{
				if ((this._Node_count != value))
				{
					this._Node_count = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_change_tracking_persistent")]
	public partial class Mvm_change_tracking_persistent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster_name;
		
		private string _Table_name;
		
		private string _Routing_proc;
		
		private string _Prerouting_proc;
		
		private string _Postrouting_proc;
		
		private string _Integration_proc;
		
		private string _Included_columns;
		
		private string _Excluded_columns;
		
		private string _Operation_field;
		
		private string _Table_field;
		
		private string _Inclusion_proc;
		
		private string _Database_predicate;
		
		private System.Nullable<int> _Priority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_cluster_nameChanging(string value);
    partial void OnLogical_cluster_nameChanged();
    partial void OnTable_nameChanging(string value);
    partial void OnTable_nameChanged();
    partial void OnRouting_procChanging(string value);
    partial void OnRouting_procChanged();
    partial void OnPrerouting_procChanging(string value);
    partial void OnPrerouting_procChanged();
    partial void OnPostrouting_procChanging(string value);
    partial void OnPostrouting_procChanged();
    partial void OnIntegration_procChanging(string value);
    partial void OnIntegration_procChanged();
    partial void OnIncluded_columnsChanging(string value);
    partial void OnIncluded_columnsChanged();
    partial void OnExcluded_columnsChanging(string value);
    partial void OnExcluded_columnsChanged();
    partial void OnOperation_fieldChanging(string value);
    partial void OnOperation_fieldChanged();
    partial void OnTable_fieldChanging(string value);
    partial void OnTable_fieldChanged();
    partial void OnInclusion_procChanging(string value);
    partial void OnInclusion_procChanged();
    partial void OnDatabase_predicateChanging(string value);
    partial void OnDatabase_predicateChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    #endregion
		
		public Mvm_change_tracking_persistent()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster_name", Storage="_Logical_cluster_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster_name
		{
			get
			{
				return this._Logical_cluster_name;
			}
			set
			{
				if ((this._Logical_cluster_name != value))
				{
					this.OnLogical_cluster_nameChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster_name = value;
					this.SendPropertyChanged("Logical_cluster_name");
					this.OnLogical_cluster_nameChanged();
				}
			}
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this.OnTable_nameChanging(value);
					this.SendPropertyChanging();
					this._Table_name = value;
					this.SendPropertyChanged("Table_name");
					this.OnTable_nameChanged();
				}
			}
		}
		
		[Column(Name="routing_proc", Storage="_Routing_proc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Routing_proc
		{
			get
			{
				return this._Routing_proc;
			}
			set
			{
				if ((this._Routing_proc != value))
				{
					this.OnRouting_procChanging(value);
					this.SendPropertyChanging();
					this._Routing_proc = value;
					this.SendPropertyChanged("Routing_proc");
					this.OnRouting_procChanged();
				}
			}
		}
		
		[Column(Name="prerouting_proc", Storage="_Prerouting_proc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Prerouting_proc
		{
			get
			{
				return this._Prerouting_proc;
			}
			set
			{
				if ((this._Prerouting_proc != value))
				{
					this.OnPrerouting_procChanging(value);
					this.SendPropertyChanging();
					this._Prerouting_proc = value;
					this.SendPropertyChanged("Prerouting_proc");
					this.OnPrerouting_procChanged();
				}
			}
		}
		
		[Column(Name="postrouting_proc", Storage="_Postrouting_proc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Postrouting_proc
		{
			get
			{
				return this._Postrouting_proc;
			}
			set
			{
				if ((this._Postrouting_proc != value))
				{
					this.OnPostrouting_procChanging(value);
					this.SendPropertyChanging();
					this._Postrouting_proc = value;
					this.SendPropertyChanged("Postrouting_proc");
					this.OnPostrouting_procChanged();
				}
			}
		}
		
		[Column(Name="integration_proc", Storage="_Integration_proc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Integration_proc
		{
			get
			{
				return this._Integration_proc;
			}
			set
			{
				if ((this._Integration_proc != value))
				{
					this.OnIntegration_procChanging(value);
					this.SendPropertyChanging();
					this._Integration_proc = value;
					this.SendPropertyChanged("Integration_proc");
					this.OnIntegration_procChanged();
				}
			}
		}
		
		[Column(Name="included_columns", Storage="_Included_columns", DbType="VarChar(4000)")]
		public string Included_columns
		{
			get
			{
				return this._Included_columns;
			}
			set
			{
				if ((this._Included_columns != value))
				{
					this.OnIncluded_columnsChanging(value);
					this.SendPropertyChanging();
					this._Included_columns = value;
					this.SendPropertyChanged("Included_columns");
					this.OnIncluded_columnsChanged();
				}
			}
		}
		
		[Column(Name="excluded_columns", Storage="_Excluded_columns", DbType="VarChar(4000)")]
		public string Excluded_columns
		{
			get
			{
				return this._Excluded_columns;
			}
			set
			{
				if ((this._Excluded_columns != value))
				{
					this.OnExcluded_columnsChanging(value);
					this.SendPropertyChanging();
					this._Excluded_columns = value;
					this.SendPropertyChanged("Excluded_columns");
					this.OnExcluded_columnsChanged();
				}
			}
		}
		
		[Column(Name="operation_field", Storage="_Operation_field", DbType="VarChar(100)")]
		public string Operation_field
		{
			get
			{
				return this._Operation_field;
			}
			set
			{
				if ((this._Operation_field != value))
				{
					this.OnOperation_fieldChanging(value);
					this.SendPropertyChanging();
					this._Operation_field = value;
					this.SendPropertyChanged("Operation_field");
					this.OnOperation_fieldChanged();
				}
			}
		}
		
		[Column(Name="table_field", Storage="_Table_field", DbType="VarChar(100)")]
		public string Table_field
		{
			get
			{
				return this._Table_field;
			}
			set
			{
				if ((this._Table_field != value))
				{
					this.OnTable_fieldChanging(value);
					this.SendPropertyChanging();
					this._Table_field = value;
					this.SendPropertyChanged("Table_field");
					this.OnTable_fieldChanged();
				}
			}
		}
		
		[Column(Name="inclusion_proc", Storage="_Inclusion_proc", DbType="VarChar(100)")]
		public string Inclusion_proc
		{
			get
			{
				return this._Inclusion_proc;
			}
			set
			{
				if ((this._Inclusion_proc != value))
				{
					this.OnInclusion_procChanging(value);
					this.SendPropertyChanging();
					this._Inclusion_proc = value;
					this.SendPropertyChanged("Inclusion_proc");
					this.OnInclusion_procChanged();
				}
			}
		}
		
		[Column(Name="database_predicate", Storage="_Database_predicate", DbType="VarChar(4000)")]
		public string Database_predicate
		{
			get
			{
				return this._Database_predicate;
			}
			set
			{
				if ((this._Database_predicate != value))
				{
					this.OnDatabase_predicateChanging(value);
					this.SendPropertyChanging();
					this._Database_predicate = value;
					this.SendPropertyChanged("Database_predicate");
					this.OnDatabase_predicateChanged();
				}
			}
		}
		
		[Column(Name="priority", Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_change_tracking_status")]
	public partial class Mvm_change_tracking_status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster_name;
		
		private string _Table_name;
		
		private string _Last_transaction_id;
		
		private System.Nullable<System.DateTime> _Last_transaction_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_cluster_nameChanging(string value);
    partial void OnLogical_cluster_nameChanged();
    partial void OnTable_nameChanging(string value);
    partial void OnTable_nameChanged();
    partial void OnLast_transaction_idChanging(string value);
    partial void OnLast_transaction_idChanged();
    partial void OnLast_transaction_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_transaction_dateChanged();
    #endregion
		
		public Mvm_change_tracking_status()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster_name", Storage="_Logical_cluster_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster_name
		{
			get
			{
				return this._Logical_cluster_name;
			}
			set
			{
				if ((this._Logical_cluster_name != value))
				{
					this.OnLogical_cluster_nameChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster_name = value;
					this.SendPropertyChanged("Logical_cluster_name");
					this.OnLogical_cluster_nameChanged();
				}
			}
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this.OnTable_nameChanging(value);
					this.SendPropertyChanging();
					this._Table_name = value;
					this.SendPropertyChanged("Table_name");
					this.OnTable_nameChanged();
				}
			}
		}
		
		[Column(Name="last_transaction_id", Storage="_Last_transaction_id", DbType="VarChar(1000)")]
		public string Last_transaction_id
		{
			get
			{
				return this._Last_transaction_id;
			}
			set
			{
				if ((this._Last_transaction_id != value))
				{
					this.OnLast_transaction_idChanging(value);
					this.SendPropertyChanging();
					this._Last_transaction_id = value;
					this.SendPropertyChanged("Last_transaction_id");
					this.OnLast_transaction_idChanged();
				}
			}
		}
		
		[Column(Name="last_transaction_date", Storage="_Last_transaction_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_transaction_date
		{
			get
			{
				return this._Last_transaction_date;
			}
			set
			{
				if ((this._Last_transaction_date != value))
				{
					this.OnLast_transaction_dateChanging(value);
					this.SendPropertyChanging();
					this._Last_transaction_date = value;
					this.SendPropertyChanged("Last_transaction_date");
					this.OnLast_transaction_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_cluster_history")]
	public partial class Mvm_cluster_history
	{
		
		private string _Physical_cluster;
		
		private System.DateTime _Dt_started;
		
		private System.Nullable<System.DateTime> _Dt_stopped;
		
		public Mvm_cluster_history()
		{
		}
		
		[Column(Name="physical_cluster", Storage="_Physical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Physical_cluster
		{
			get
			{
				return this._Physical_cluster;
			}
			set
			{
				if ((this._Physical_cluster != value))
				{
					this._Physical_cluster = value;
				}
			}
		}
		
		[Column(Name="dt_started", Storage="_Dt_started", DbType="Date NOT NULL")]
		public System.DateTime Dt_started
		{
			get
			{
				return this._Dt_started;
			}
			set
			{
				if ((this._Dt_started != value))
				{
					this._Dt_started = value;
				}
			}
		}
		
		[Column(Name="dt_stopped", Storage="_Dt_stopped", DbType="Date")]
		public System.Nullable<System.DateTime> Dt_stopped
		{
			get
			{
				return this._Dt_stopped;
			}
			set
			{
				if ((this._Dt_stopped != value))
				{
					this._Dt_stopped = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_cluster_run_history")]
	public partial class Mvm_cluster_run_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Physical_cluster;
		
		private System.DateTime _Dt_started;
		
		private System.Nullable<System.DateTime> _Dt_stopped;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhysical_clusterChanging(string value);
    partial void OnPhysical_clusterChanged();
    partial void OnDt_startedChanging(System.DateTime value);
    partial void OnDt_startedChanged();
    partial void OnDt_stoppedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_stoppedChanged();
    #endregion
		
		public Mvm_cluster_run_history()
		{
			OnCreated();
		}
		
		[Column(Name="physical_cluster", Storage="_Physical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Physical_cluster
		{
			get
			{
				return this._Physical_cluster;
			}
			set
			{
				if ((this._Physical_cluster != value))
				{
					this.OnPhysical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Physical_cluster = value;
					this.SendPropertyChanged("Physical_cluster");
					this.OnPhysical_clusterChanged();
				}
			}
		}
		
		[Column(Name="dt_started", Storage="_Dt_started", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Dt_started
		{
			get
			{
				return this._Dt_started;
			}
			set
			{
				if ((this._Dt_started != value))
				{
					this.OnDt_startedChanging(value);
					this.SendPropertyChanging();
					this._Dt_started = value;
					this.SendPropertyChanged("Dt_started");
					this.OnDt_startedChanged();
				}
			}
		}
		
		[Column(Name="dt_stopped", Storage="_Dt_stopped", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_stopped
		{
			get
			{
				return this._Dt_stopped;
			}
			set
			{
				if ((this._Dt_stopped != value))
				{
					this.OnDt_stoppedChanging(value);
					this.SendPropertyChanging();
					this._Dt_stopped = value;
					this.SendPropertyChanged("Dt_stopped");
					this.OnDt_stoppedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_clusters")]
	public partial class Mvm_clusters
	{
		
		private string _Mvm_cluster_name;
		
		private string _Server;
		
		private int _Num_instances;
		
		private System.Nullable<int> _Port_start;
		
		private System.Nullable<int> _Port_end;
		
		private string _Bin;
		
		private System.Nullable<int> _Group_id;
		
		private string _Exe;
		
		private System.Nullable<int> _Is_master;
		
		public Mvm_clusters()
		{
		}
		
		[Column(Name="mvm_cluster_name", Storage="_Mvm_cluster_name", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Mvm_cluster_name
		{
			get
			{
				return this._Mvm_cluster_name;
			}
			set
			{
				if ((this._Mvm_cluster_name != value))
				{
					this._Mvm_cluster_name = value;
				}
			}
		}
		
		[Column(Name="server", Storage="_Server", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this._Server = value;
				}
			}
		}
		
		[Column(Name="num_instances", Storage="_Num_instances", DbType="Int NOT NULL")]
		public int Num_instances
		{
			get
			{
				return this._Num_instances;
			}
			set
			{
				if ((this._Num_instances != value))
				{
					this._Num_instances = value;
				}
			}
		}
		
		[Column(Name="port_start", Storage="_Port_start", DbType="Int")]
		public System.Nullable<int> Port_start
		{
			get
			{
				return this._Port_start;
			}
			set
			{
				if ((this._Port_start != value))
				{
					this._Port_start = value;
				}
			}
		}
		
		[Column(Name="port_end", Storage="_Port_end", DbType="Int")]
		public System.Nullable<int> Port_end
		{
			get
			{
				return this._Port_end;
			}
			set
			{
				if ((this._Port_end != value))
				{
					this._Port_end = value;
				}
			}
		}
		
		[Column(Name="bin", Storage="_Bin", DbType="VarChar(4000)")]
		public string Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this._Bin = value;
				}
			}
		}
		
		[Column(Name="group_id", Storage="_Group_id", DbType="Int")]
		public System.Nullable<int> Group_id
		{
			get
			{
				return this._Group_id;
			}
			set
			{
				if ((this._Group_id != value))
				{
					this._Group_id = value;
				}
			}
		}
		
		[Column(Name="exe", Storage="_Exe", DbType="VarChar(4000)")]
		public string Exe
		{
			get
			{
				return this._Exe;
			}
			set
			{
				if ((this._Exe != value))
				{
					this._Exe = value;
				}
			}
		}
		
		[Column(Name="is_master", Storage="_Is_master", DbType="Int")]
		public System.Nullable<int> Is_master
		{
			get
			{
				return this._Is_master;
			}
			set
			{
				if ((this._Is_master != value))
				{
					this._Is_master = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_counters")]
	public partial class Mvm_counters
	{
		
		private System.Nullable<int> _Mvm_batch_id;
		
		private System.Nullable<int> _Mvm_node_id;
		
		private System.Nullable<System.DateTime> _Counter_date;
		
		private string _Counter_name;
		
		private string _Counter_value;
		
		public Mvm_counters()
		{
		}
		
		[Column(Name="mvm_batch_id", Storage="_Mvm_batch_id", DbType="Int")]
		public System.Nullable<int> Mvm_batch_id
		{
			get
			{
				return this._Mvm_batch_id;
			}
			set
			{
				if ((this._Mvm_batch_id != value))
				{
					this._Mvm_batch_id = value;
				}
			}
		}
		
		[Column(Name="mvm_node_id", Storage="_Mvm_node_id", DbType="Int")]
		public System.Nullable<int> Mvm_node_id
		{
			get
			{
				return this._Mvm_node_id;
			}
			set
			{
				if ((this._Mvm_node_id != value))
				{
					this._Mvm_node_id = value;
				}
			}
		}
		
		[Column(Name="counter_date", Storage="_Counter_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Counter_date
		{
			get
			{
				return this._Counter_date;
			}
			set
			{
				if ((this._Counter_date != value))
				{
					this._Counter_date = value;
				}
			}
		}
		
		[Column(Name="counter_name", Storage="_Counter_name", DbType="VarChar(1000)")]
		public string Counter_name
		{
			get
			{
				return this._Counter_name;
			}
			set
			{
				if ((this._Counter_name != value))
				{
					this._Counter_name = value;
				}
			}
		}
		
		[Column(Name="counter_value", Storage="_Counter_value", DbType="VarChar(1000)")]
		public string Counter_value
		{
			get
			{
				return this._Counter_value;
			}
			set
			{
				if ((this._Counter_value != value))
				{
					this._Counter_value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_global_params")]
	public partial class Mvm_global_params
	{
		
		private string _Logical_cluster;
		
		private string _Log_base_name;
		
		private string _Param_name;
		
		private string _Param_value;
		
		public Mvm_global_params()
		{
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100)")]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this._Logical_cluster = value;
				}
			}
		}
		
		[Column(Name="log_base_name", Storage="_Log_base_name", DbType="VarChar(100)")]
		public string Log_base_name
		{
			get
			{
				return this._Log_base_name;
			}
			set
			{
				if ((this._Log_base_name != value))
				{
					this._Log_base_name = value;
				}
			}
		}
		
		[Column(Name="param_name", Storage="_Param_name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Param_name
		{
			get
			{
				return this._Param_name;
			}
			set
			{
				if ((this._Param_name != value))
				{
					this._Param_name = value;
				}
			}
		}
		
		[Column(Name="param_value", Storage="_Param_value", DbType="VarChar(1000)")]
		public string Param_value
		{
			get
			{
				return this._Param_value;
			}
			set
			{
				if ((this._Param_value != value))
				{
					this._Param_value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_logging")]
	public partial class Mvm_logging : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private int _Mvm_run_id;
		
		private string _Physical_node_id;
		
		private int _Message_number;
		
		private string _File_name;
		
		private string _Line_number;
		
		private string _Procedure_name;
		
		private System.Nullable<System.DateTime> _Message_date;
		
		private string _Log_level;
		
		private string _Message_type;
		
		private string _Message_text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnMvm_run_idChanging(int value);
    partial void OnMvm_run_idChanged();
    partial void OnPhysical_node_idChanging(string value);
    partial void OnPhysical_node_idChanged();
    partial void OnMessage_numberChanging(int value);
    partial void OnMessage_numberChanged();
    partial void OnFile_nameChanging(string value);
    partial void OnFile_nameChanged();
    partial void OnLine_numberChanging(string value);
    partial void OnLine_numberChanged();
    partial void OnProcedure_nameChanging(string value);
    partial void OnProcedure_nameChanged();
    partial void OnMessage_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnMessage_dateChanged();
    partial void OnLog_levelChanging(string value);
    partial void OnLog_levelChanged();
    partial void OnMessage_typeChanging(string value);
    partial void OnMessage_typeChanged();
    partial void OnMessage_textChanging(string value);
    partial void OnMessage_textChanged();
    #endregion
		
		public Mvm_logging()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100)")]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="mvm_run_id", Storage="_Mvm_run_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mvm_run_id
		{
			get
			{
				return this._Mvm_run_id;
			}
			set
			{
				if ((this._Mvm_run_id != value))
				{
					this.OnMvm_run_idChanging(value);
					this.SendPropertyChanging();
					this._Mvm_run_id = value;
					this.SendPropertyChanged("Mvm_run_id");
					this.OnMvm_run_idChanged();
				}
			}
		}
		
		[Column(Name="physical_node_id", Storage="_Physical_node_id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Physical_node_id
		{
			get
			{
				return this._Physical_node_id;
			}
			set
			{
				if ((this._Physical_node_id != value))
				{
					this.OnPhysical_node_idChanging(value);
					this.SendPropertyChanging();
					this._Physical_node_id = value;
					this.SendPropertyChanged("Physical_node_id");
					this.OnPhysical_node_idChanged();
				}
			}
		}
		
		[Column(Name="message_number", Storage="_Message_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Message_number
		{
			get
			{
				return this._Message_number;
			}
			set
			{
				if ((this._Message_number != value))
				{
					this.OnMessage_numberChanging(value);
					this.SendPropertyChanging();
					this._Message_number = value;
					this.SendPropertyChanged("Message_number");
					this.OnMessage_numberChanged();
				}
			}
		}
		
		[Column(Name="file_name", Storage="_File_name", DbType="VarChar(1000)")]
		public string File_name
		{
			get
			{
				return this._File_name;
			}
			set
			{
				if ((this._File_name != value))
				{
					this.OnFile_nameChanging(value);
					this.SendPropertyChanging();
					this._File_name = value;
					this.SendPropertyChanged("File_name");
					this.OnFile_nameChanged();
				}
			}
		}
		
		[Column(Name="line_number", Storage="_Line_number", DbType="VarChar(1000)")]
		public string Line_number
		{
			get
			{
				return this._Line_number;
			}
			set
			{
				if ((this._Line_number != value))
				{
					this.OnLine_numberChanging(value);
					this.SendPropertyChanging();
					this._Line_number = value;
					this.SendPropertyChanged("Line_number");
					this.OnLine_numberChanged();
				}
			}
		}
		
		[Column(Name="procedure_name", Storage="_Procedure_name", DbType="VarChar(1000)")]
		public string Procedure_name
		{
			get
			{
				return this._Procedure_name;
			}
			set
			{
				if ((this._Procedure_name != value))
				{
					this.OnProcedure_nameChanging(value);
					this.SendPropertyChanging();
					this._Procedure_name = value;
					this.SendPropertyChanged("Procedure_name");
					this.OnProcedure_nameChanged();
				}
			}
		}
		
		[Column(Name="message_date", Storage="_Message_date", DbType="Date")]
		public System.Nullable<System.DateTime> Message_date
		{
			get
			{
				return this._Message_date;
			}
			set
			{
				if ((this._Message_date != value))
				{
					this.OnMessage_dateChanging(value);
					this.SendPropertyChanging();
					this._Message_date = value;
					this.SendPropertyChanged("Message_date");
					this.OnMessage_dateChanged();
				}
			}
		}
		
		[Column(Name="log_level", Storage="_Log_level", DbType="VarChar(1000)")]
		public string Log_level
		{
			get
			{
				return this._Log_level;
			}
			set
			{
				if ((this._Log_level != value))
				{
					this.OnLog_levelChanging(value);
					this.SendPropertyChanging();
					this._Log_level = value;
					this.SendPropertyChanged("Log_level");
					this.OnLog_levelChanged();
				}
			}
		}
		
		[Column(Name="message_type", Storage="_Message_type", DbType="VarChar(1000)")]
		public string Message_type
		{
			get
			{
				return this._Message_type;
			}
			set
			{
				if ((this._Message_type != value))
				{
					this.OnMessage_typeChanging(value);
					this.SendPropertyChanging();
					this._Message_type = value;
					this.SendPropertyChanged("Message_type");
					this.OnMessage_typeChanged();
				}
			}
		}
		
		[Column(Name="message_text", Storage="_Message_text", DbType="VarChar(4000)")]
		public string Message_text
		{
			get
			{
				return this._Message_text;
			}
			set
			{
				if ((this._Message_text != value))
				{
					this.OnMessage_textChanging(value);
					this.SendPropertyChanging();
					this._Message_text = value;
					this.SendPropertyChanged("Message_text");
					this.OnMessage_textChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_logical_cluster_def")]
	public partial class Mvm_logical_cluster_def : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private int _Nodes;
		
		private int _Has_backup_nodes;
		
		private decimal _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnNodesChanging(int value);
    partial void OnNodesChanged();
    partial void OnHas_backup_nodesChanging(int value);
    partial void OnHas_backup_nodesChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    #endregion
		
		public Mvm_logical_cluster_def()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="nodes", Storage="_Nodes", DbType="Int NOT NULL")]
		public int Nodes
		{
			get
			{
				return this._Nodes;
			}
			set
			{
				if ((this._Nodes != value))
				{
					this.OnNodesChanging(value);
					this.SendPropertyChanging();
					this._Nodes = value;
					this.SendPropertyChanged("Nodes");
					this.OnNodesChanged();
				}
			}
		}
		
		[Column(Name="has_backup_nodes", Storage="_Has_backup_nodes", DbType="Int NOT NULL")]
		public int Has_backup_nodes
		{
			get
			{
				return this._Has_backup_nodes;
			}
			set
			{
				if ((this._Has_backup_nodes != value))
				{
					this.OnHas_backup_nodesChanging(value);
					this.SendPropertyChanging();
					this._Has_backup_nodes = value;
					this.SendPropertyChanged("Has_backup_nodes");
					this.OnHas_backup_nodesChanged();
				}
			}
		}
		
		[Column(Name="weight", Storage="_Weight", DbType="Decimal(18,6) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_logical_cluster_nodes")]
	public partial class Mvm_logical_cluster_nodes
	{
		
		private string _Logical_cluster;
		
		private string _Logical_node_id;
		
		private string _Physical_node_id;
		
		private decimal _Weight;
		
		public Mvm_logical_cluster_nodes()
		{
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this._Logical_cluster = value;
				}
			}
		}
		
		[Column(Name="logical_node_id", Storage="_Logical_node_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Logical_node_id
		{
			get
			{
				return this._Logical_node_id;
			}
			set
			{
				if ((this._Logical_node_id != value))
				{
					this._Logical_node_id = value;
				}
			}
		}
		
		[Column(Name="physical_node_id", Storage="_Physical_node_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Physical_node_id
		{
			get
			{
				return this._Physical_node_id;
			}
			set
			{
				if ((this._Physical_node_id != value))
				{
					this._Physical_node_id = value;
				}
			}
		}
		
		[Column(Name="weight", Storage="_Weight", DbType="Decimal(18,6) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_param_table_props")]
	public partial class Mvm_param_table_props
	{
		
		private string _Paramtable_name;
		
		private string _Column_name;
		
		private string _Display_name;
		
		private string _Is_condition;
		
		private string _Column_operator;
		
		private string _Is_operator;
		
		private string _Has_operator_name;
		
		private string _Is_action;
		
		private string _Column_type;
		
		private string _Enum_namespace;
		
		private string _Enum_type;
		
		private System.Nullable<int> _Column_length;
		
		private string _Is_required;
		
		private string _Default_value;
		
		public Mvm_param_table_props()
		{
		}
		
		[Column(Name="paramtable_name", Storage="_Paramtable_name", DbType="VarChar(100)")]
		public string Paramtable_name
		{
			get
			{
				return this._Paramtable_name;
			}
			set
			{
				if ((this._Paramtable_name != value))
				{
					this._Paramtable_name = value;
				}
			}
		}
		
		[Column(Name="column_name", Storage="_Column_name", DbType="VarChar(100)")]
		public string Column_name
		{
			get
			{
				return this._Column_name;
			}
			set
			{
				if ((this._Column_name != value))
				{
					this._Column_name = value;
				}
			}
		}
		
		[Column(Name="display_name", Storage="_Display_name", DbType="VarChar(100)")]
		public string Display_name
		{
			get
			{
				return this._Display_name;
			}
			set
			{
				if ((this._Display_name != value))
				{
					this._Display_name = value;
				}
			}
		}
		
		[Column(Name="is_condition", Storage="_Is_condition", DbType="VarChar(100)")]
		public string Is_condition
		{
			get
			{
				return this._Is_condition;
			}
			set
			{
				if ((this._Is_condition != value))
				{
					this._Is_condition = value;
				}
			}
		}
		
		[Column(Name="column_operator", Storage="_Column_operator", DbType="VarChar(100)")]
		public string Column_operator
		{
			get
			{
				return this._Column_operator;
			}
			set
			{
				if ((this._Column_operator != value))
				{
					this._Column_operator = value;
				}
			}
		}
		
		[Column(Name="is_operator", Storage="_Is_operator", DbType="VarChar(100)")]
		public string Is_operator
		{
			get
			{
				return this._Is_operator;
			}
			set
			{
				if ((this._Is_operator != value))
				{
					this._Is_operator = value;
				}
			}
		}
		
		[Column(Name="has_operator_name", Storage="_Has_operator_name", DbType="VarChar(1000)")]
		public string Has_operator_name
		{
			get
			{
				return this._Has_operator_name;
			}
			set
			{
				if ((this._Has_operator_name != value))
				{
					this._Has_operator_name = value;
				}
			}
		}
		
		[Column(Name="is_action", Storage="_Is_action", DbType="VarChar(100)")]
		public string Is_action
		{
			get
			{
				return this._Is_action;
			}
			set
			{
				if ((this._Is_action != value))
				{
					this._Is_action = value;
				}
			}
		}
		
		[Column(Name="column_type", Storage="_Column_type", DbType="VarChar(100)")]
		public string Column_type
		{
			get
			{
				return this._Column_type;
			}
			set
			{
				if ((this._Column_type != value))
				{
					this._Column_type = value;
				}
			}
		}
		
		[Column(Name="enum_namespace", Storage="_Enum_namespace", DbType="VarChar(1000)")]
		public string Enum_namespace
		{
			get
			{
				return this._Enum_namespace;
			}
			set
			{
				if ((this._Enum_namespace != value))
				{
					this._Enum_namespace = value;
				}
			}
		}
		
		[Column(Name="enum_type", Storage="_Enum_type", DbType="VarChar(1000)")]
		public string Enum_type
		{
			get
			{
				return this._Enum_type;
			}
			set
			{
				if ((this._Enum_type != value))
				{
					this._Enum_type = value;
				}
			}
		}
		
		[Column(Name="column_length", Storage="_Column_length", DbType="Int")]
		public System.Nullable<int> Column_length
		{
			get
			{
				return this._Column_length;
			}
			set
			{
				if ((this._Column_length != value))
				{
					this._Column_length = value;
				}
			}
		}
		
		[Column(Name="is_required", Storage="_Is_required", DbType="VarChar(100)")]
		public string Is_required
		{
			get
			{
				return this._Is_required;
			}
			set
			{
				if ((this._Is_required != value))
				{
					this._Is_required = value;
				}
			}
		}
		
		[Column(Name="default_value", Storage="_Default_value", DbType="VarChar(1000)")]
		public string Default_value
		{
			get
			{
				return this._Default_value;
			}
			set
			{
				if ((this._Default_value != value))
				{
					this._Default_value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_physical_cluster_def")]
	public partial class Mvm_physical_cluster_def : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Physical_cluster;
		
		private string _Server;
		
		private int _Num_cores;
		
		private decimal _Num_resource_cores;
		
		private System.Nullable<int> _Port_start;
		
		private System.Nullable<int> _Port_end;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhysical_clusterChanging(string value);
    partial void OnPhysical_clusterChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnNum_coresChanging(int value);
    partial void OnNum_coresChanged();
    partial void OnNum_resource_coresChanging(decimal value);
    partial void OnNum_resource_coresChanged();
    partial void OnPort_startChanging(System.Nullable<int> value);
    partial void OnPort_startChanged();
    partial void OnPort_endChanging(System.Nullable<int> value);
    partial void OnPort_endChanged();
    #endregion
		
		public Mvm_physical_cluster_def()
		{
			OnCreated();
		}
		
		[Column(Name="physical_cluster", Storage="_Physical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Physical_cluster
		{
			get
			{
				return this._Physical_cluster;
			}
			set
			{
				if ((this._Physical_cluster != value))
				{
					this.OnPhysical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Physical_cluster = value;
					this.SendPropertyChanged("Physical_cluster");
					this.OnPhysical_clusterChanged();
				}
			}
		}
		
		[Column(Name="server", Storage="_Server", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[Column(Name="num_cores", Storage="_Num_cores", DbType="Int NOT NULL")]
		public int Num_cores
		{
			get
			{
				return this._Num_cores;
			}
			set
			{
				if ((this._Num_cores != value))
				{
					this.OnNum_coresChanging(value);
					this.SendPropertyChanging();
					this._Num_cores = value;
					this.SendPropertyChanged("Num_cores");
					this.OnNum_coresChanged();
				}
			}
		}
		
		[Column(Name="num_resource_cores", Storage="_Num_resource_cores", DbType="Decimal(18,6) NOT NULL")]
		public decimal Num_resource_cores
		{
			get
			{
				return this._Num_resource_cores;
			}
			set
			{
				if ((this._Num_resource_cores != value))
				{
					this.OnNum_resource_coresChanging(value);
					this.SendPropertyChanging();
					this._Num_resource_cores = value;
					this.SendPropertyChanged("Num_resource_cores");
					this.OnNum_resource_coresChanged();
				}
			}
		}
		
		[Column(Name="port_start", Storage="_Port_start", DbType="Int")]
		public System.Nullable<int> Port_start
		{
			get
			{
				return this._Port_start;
			}
			set
			{
				if ((this._Port_start != value))
				{
					this.OnPort_startChanging(value);
					this.SendPropertyChanging();
					this._Port_start = value;
					this.SendPropertyChanged("Port_start");
					this.OnPort_startChanged();
				}
			}
		}
		
		[Column(Name="port_end", Storage="_Port_end", DbType="Int")]
		public System.Nullable<int> Port_end
		{
			get
			{
				return this._Port_end;
			}
			set
			{
				if ((this._Port_end != value))
				{
					this.OnPort_endChanging(value);
					this.SendPropertyChanging();
					this._Port_end = value;
					this.SendPropertyChanged("Port_end");
					this.OnPort_endChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_physical_cluster_nodes")]
	public partial class Mvm_physical_cluster_nodes
	{
		
		private string _Physical_cluster;
		
		private string _Physical_node_id;
		
		private string _Parent_physical_node_id;
		
		private string _Server;
		
		private System.Nullable<decimal> _Num_cores;
		
		private System.Nullable<int> _Port;
		
		private System.Nullable<int> _Pid;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Status_date;
		
		private System.Nullable<System.DateTime> _Heartbeat_date;
		
		private System.Nullable<System.DateTime> _Timeout_date;
		
		private System.Nullable<int> _Keep_alive;
		
		private System.Nullable<int> _Mvm_run_id;
		
		private string _Starting_proc;
		
		private string _Args;
		
		private string _Assembly;
		
		private System.Nullable<int> _Is_x64;
		
		public Mvm_physical_cluster_nodes()
		{
		}
		
		[Column(Name="physical_cluster", Storage="_Physical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Physical_cluster
		{
			get
			{
				return this._Physical_cluster;
			}
			set
			{
				if ((this._Physical_cluster != value))
				{
					this._Physical_cluster = value;
				}
			}
		}
		
		[Column(Name="physical_node_id", Storage="_Physical_node_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Physical_node_id
		{
			get
			{
				return this._Physical_node_id;
			}
			set
			{
				if ((this._Physical_node_id != value))
				{
					this._Physical_node_id = value;
				}
			}
		}
		
		[Column(Name="parent_physical_node_id", Storage="_Parent_physical_node_id", DbType="VarChar(100)")]
		public string Parent_physical_node_id
		{
			get
			{
				return this._Parent_physical_node_id;
			}
			set
			{
				if ((this._Parent_physical_node_id != value))
				{
					this._Parent_physical_node_id = value;
				}
			}
		}
		
		[Column(Name="server", Storage="_Server", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this._Server = value;
				}
			}
		}
		
		[Column(Name="num_cores", Storage="_Num_cores", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Num_cores
		{
			get
			{
				return this._Num_cores;
			}
			set
			{
				if ((this._Num_cores != value))
				{
					this._Num_cores = value;
				}
			}
		}
		
		[Column(Name="port", Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this._Port = value;
				}
			}
		}
		
		[Column(Name="pid", Storage="_Pid", DbType="Int")]
		public System.Nullable<int> Pid
		{
			get
			{
				return this._Pid;
			}
			set
			{
				if ((this._Pid != value))
				{
					this._Pid = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="VarChar(100)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="status_date", Storage="_Status_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Status_date
		{
			get
			{
				return this._Status_date;
			}
			set
			{
				if ((this._Status_date != value))
				{
					this._Status_date = value;
				}
			}
		}
		
		[Column(Name="heartbeat_date", Storage="_Heartbeat_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Heartbeat_date
		{
			get
			{
				return this._Heartbeat_date;
			}
			set
			{
				if ((this._Heartbeat_date != value))
				{
					this._Heartbeat_date = value;
				}
			}
		}
		
		[Column(Name="timeout_date", Storage="_Timeout_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Timeout_date
		{
			get
			{
				return this._Timeout_date;
			}
			set
			{
				if ((this._Timeout_date != value))
				{
					this._Timeout_date = value;
				}
			}
		}
		
		[Column(Name="keep_alive", Storage="_Keep_alive", DbType="Int")]
		public System.Nullable<int> Keep_alive
		{
			get
			{
				return this._Keep_alive;
			}
			set
			{
				if ((this._Keep_alive != value))
				{
					this._Keep_alive = value;
				}
			}
		}
		
		[Column(Name="mvm_run_id", Storage="_Mvm_run_id", DbType="Int")]
		public System.Nullable<int> Mvm_run_id
		{
			get
			{
				return this._Mvm_run_id;
			}
			set
			{
				if ((this._Mvm_run_id != value))
				{
					this._Mvm_run_id = value;
				}
			}
		}
		
		[Column(Name="starting_proc", Storage="_Starting_proc", DbType="VarChar(100)")]
		public string Starting_proc
		{
			get
			{
				return this._Starting_proc;
			}
			set
			{
				if ((this._Starting_proc != value))
				{
					this._Starting_proc = value;
				}
			}
		}
		
		[Column(Name="args", Storage="_Args", DbType="VarChar(4000)")]
		public string Args
		{
			get
			{
				return this._Args;
			}
			set
			{
				if ((this._Args != value))
				{
					this._Args = value;
				}
			}
		}
		
		[Column(Name="assembly", Storage="_Assembly", DbType="VarChar(100)")]
		public string Assembly
		{
			get
			{
				return this._Assembly;
			}
			set
			{
				if ((this._Assembly != value))
				{
					this._Assembly = value;
				}
			}
		}
		
		[Column(Name="is_x64", Storage="_Is_x64", DbType="Int")]
		public System.Nullable<int> Is_x64
		{
			get
			{
				return this._Is_x64;
			}
			set
			{
				if ((this._Is_x64 != value))
				{
					this._Is_x64 = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_rabbitmq_map")]
	public partial class Mvm_rabbitmq_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private System.Nullable<int> _Logical_node_id_start;
		
		private System.Nullable<int> _Logical_node_id_end;
		
		private string _Queue_type;
		
		private string _Queue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnLogical_node_id_startChanging(System.Nullable<int> value);
    partial void OnLogical_node_id_startChanged();
    partial void OnLogical_node_id_endChanging(System.Nullable<int> value);
    partial void OnLogical_node_id_endChanged();
    partial void OnQueue_typeChanging(string value);
    partial void OnQueue_typeChanged();
    partial void OnQueueChanging(string value);
    partial void OnQueueChanged();
    #endregion
		
		public Mvm_rabbitmq_map()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="logical_node_id_start", Storage="_Logical_node_id_start", DbType="Int")]
		public System.Nullable<int> Logical_node_id_start
		{
			get
			{
				return this._Logical_node_id_start;
			}
			set
			{
				if ((this._Logical_node_id_start != value))
				{
					this.OnLogical_node_id_startChanging(value);
					this.SendPropertyChanging();
					this._Logical_node_id_start = value;
					this.SendPropertyChanged("Logical_node_id_start");
					this.OnLogical_node_id_startChanged();
				}
			}
		}
		
		[Column(Name="logical_node_id_end", Storage="_Logical_node_id_end", DbType="Int")]
		public System.Nullable<int> Logical_node_id_end
		{
			get
			{
				return this._Logical_node_id_end;
			}
			set
			{
				if ((this._Logical_node_id_end != value))
				{
					this.OnLogical_node_id_endChanging(value);
					this.SendPropertyChanging();
					this._Logical_node_id_end = value;
					this.SendPropertyChanged("Logical_node_id_end");
					this.OnLogical_node_id_endChanged();
				}
			}
		}
		
		[Column(Name="queue_type", Storage="_Queue_type", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Queue_type
		{
			get
			{
				return this._Queue_type;
			}
			set
			{
				if ((this._Queue_type != value))
				{
					this.OnQueue_typeChanging(value);
					this.SendPropertyChanging();
					this._Queue_type = value;
					this.SendPropertyChanged("Queue_type");
					this.OnQueue_typeChanged();
				}
			}
		}
		
		[Column(Name="queue", Storage="_Queue", DbType="VarChar(100)")]
		public string Queue
		{
			get
			{
				return this._Queue;
			}
			set
			{
				if ((this._Queue != value))
				{
					this.OnQueueChanging(value);
					this.SendPropertyChanging();
					this._Queue = value;
					this.SendPropertyChanged("Queue");
					this.OnQueueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_resource_def")]
	public partial class Mvm_resource_def : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Resource_type;
		
		private string _Mvm_args;
		
		private decimal _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_typeChanging(string value);
    partial void OnResource_typeChanged();
    partial void OnMvm_argsChanging(string value);
    partial void OnMvm_argsChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    #endregion
		
		public Mvm_resource_def()
		{
			OnCreated();
		}
		
		[Column(Name="resource_type", Storage="_Resource_type", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Resource_type
		{
			get
			{
				return this._Resource_type;
			}
			set
			{
				if ((this._Resource_type != value))
				{
					this.OnResource_typeChanging(value);
					this.SendPropertyChanging();
					this._Resource_type = value;
					this.SendPropertyChanged("Resource_type");
					this.OnResource_typeChanged();
				}
			}
		}
		
		[Column(Name="mvm_args", Storage="_Mvm_args", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Mvm_args
		{
			get
			{
				return this._Mvm_args;
			}
			set
			{
				if ((this._Mvm_args != value))
				{
					this.OnMvm_argsChanging(value);
					this.SendPropertyChanging();
					this._Mvm_args = value;
					this.SendPropertyChanged("Mvm_args");
					this.OnMvm_argsChanged();
				}
			}
		}
		
		[Column(Name="weight", Storage="_Weight", DbType="Decimal(18,6) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_resource_nodes")]
	public partial class Mvm_resource_nodes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Resource_type;
		
		private string _Logical_cluster;
		
		private string _Physical_node_id;
		
		private string _Lock_who;
		
		private System.DateTime _Lock_timeout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_typeChanging(string value);
    partial void OnResource_typeChanged();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnPhysical_node_idChanging(string value);
    partial void OnPhysical_node_idChanged();
    partial void OnLock_whoChanging(string value);
    partial void OnLock_whoChanged();
    partial void OnLock_timeoutChanging(System.DateTime value);
    partial void OnLock_timeoutChanged();
    #endregion
		
		public Mvm_resource_nodes()
		{
			OnCreated();
		}
		
		[Column(Name="resource_type", Storage="_Resource_type", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Resource_type
		{
			get
			{
				return this._Resource_type;
			}
			set
			{
				if ((this._Resource_type != value))
				{
					this.OnResource_typeChanging(value);
					this.SendPropertyChanging();
					this._Resource_type = value;
					this.SendPropertyChanged("Resource_type");
					this.OnResource_typeChanged();
				}
			}
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="physical_node_id", Storage="_Physical_node_id", DbType="VarChar(100)")]
		public string Physical_node_id
		{
			get
			{
				return this._Physical_node_id;
			}
			set
			{
				if ((this._Physical_node_id != value))
				{
					this.OnPhysical_node_idChanging(value);
					this.SendPropertyChanging();
					this._Physical_node_id = value;
					this.SendPropertyChanged("Physical_node_id");
					this.OnPhysical_node_idChanged();
				}
			}
		}
		
		[Column(Name="lock_who", Storage="_Lock_who", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Lock_who
		{
			get
			{
				return this._Lock_who;
			}
			set
			{
				if ((this._Lock_who != value))
				{
					this.OnLock_whoChanging(value);
					this.SendPropertyChanging();
					this._Lock_who = value;
					this.SendPropertyChanged("Lock_who");
					this.OnLock_whoChanged();
				}
			}
		}
		
		[Column(Name="lock_timeout", Storage="_Lock_timeout", DbType="DateTime NOT NULL")]
		public System.DateTime Lock_timeout
		{
			get
			{
				return this._Lock_timeout;
			}
			set
			{
				if ((this._Lock_timeout != value))
				{
					this.OnLock_timeoutChanging(value);
					this.SendPropertyChanging();
					this._Lock_timeout = value;
					this.SendPropertyChanged("Lock_timeout");
					this.OnLock_timeoutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_resubmit_runs")]
	public partial class Mvm_resubmit_runs
	{
		
		private System.Nullable<System.DateTime> _Resubmit_date;
		
		private System.Nullable<System.DateTime> _Dt_started;
		
		private System.Nullable<System.DateTime> _Dt_completed;
		
		private System.Nullable<System.DateTime> _Dt_assigned;
		
		private System.Nullable<System.DateTime> _Range_start_date;
		
		private System.Nullable<System.DateTime> _Range_end_date;
		
		private System.Nullable<int> _Msg_count;
		
		private System.Nullable<int> _Ss_count;
		
		private System.Nullable<int> _S_count;
		
		public Mvm_resubmit_runs()
		{
		}
		
		[Column(Name="resubmit_date", Storage="_Resubmit_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Resubmit_date
		{
			get
			{
				return this._Resubmit_date;
			}
			set
			{
				if ((this._Resubmit_date != value))
				{
					this._Resubmit_date = value;
				}
			}
		}
		
		[Column(Name="dt_started", Storage="_Dt_started", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_started
		{
			get
			{
				return this._Dt_started;
			}
			set
			{
				if ((this._Dt_started != value))
				{
					this._Dt_started = value;
				}
			}
		}
		
		[Column(Name="dt_completed", Storage="_Dt_completed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_completed
		{
			get
			{
				return this._Dt_completed;
			}
			set
			{
				if ((this._Dt_completed != value))
				{
					this._Dt_completed = value;
				}
			}
		}
		
		[Column(Name="dt_assigned", Storage="_Dt_assigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_assigned
		{
			get
			{
				return this._Dt_assigned;
			}
			set
			{
				if ((this._Dt_assigned != value))
				{
					this._Dt_assigned = value;
				}
			}
		}
		
		[Column(Name="range_start_date", Storage="_Range_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Range_start_date
		{
			get
			{
				return this._Range_start_date;
			}
			set
			{
				if ((this._Range_start_date != value))
				{
					this._Range_start_date = value;
				}
			}
		}
		
		[Column(Name="range_end_date", Storage="_Range_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Range_end_date
		{
			get
			{
				return this._Range_end_date;
			}
			set
			{
				if ((this._Range_end_date != value))
				{
					this._Range_end_date = value;
				}
			}
		}
		
		[Column(Name="msg_count", Storage="_Msg_count", DbType="Int")]
		public System.Nullable<int> Msg_count
		{
			get
			{
				return this._Msg_count;
			}
			set
			{
				if ((this._Msg_count != value))
				{
					this._Msg_count = value;
				}
			}
		}
		
		[Column(Name="ss_count", Storage="_Ss_count", DbType="Int")]
		public System.Nullable<int> Ss_count
		{
			get
			{
				return this._Ss_count;
			}
			set
			{
				if ((this._Ss_count != value))
				{
					this._Ss_count = value;
				}
			}
		}
		
		[Column(Name="s_count", Storage="_S_count", DbType="Int")]
		public System.Nullable<int> S_count
		{
			get
			{
				return this._S_count;
			}
			set
			{
				if ((this._S_count != value))
				{
					this._S_count = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_run_history")]
	public partial class Mvm_run_history
	{
		
		private int _Mvm_run_id;
		
		private string _Application_name;
		
		private System.DateTime _Start_dt;
		
		private System.Nullable<System.DateTime> _End_dt;
		
		public Mvm_run_history()
		{
		}
		
		[Column(Name="mvm_run_id", Storage="_Mvm_run_id", DbType="Int NOT NULL")]
		public int Mvm_run_id
		{
			get
			{
				return this._Mvm_run_id;
			}
			set
			{
				if ((this._Mvm_run_id != value))
				{
					this._Mvm_run_id = value;
				}
			}
		}
		
		[Column(Name="application_name", Storage="_Application_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Application_name
		{
			get
			{
				return this._Application_name;
			}
			set
			{
				if ((this._Application_name != value))
				{
					this._Application_name = value;
				}
			}
		}
		
		[Column(Name="start_dt", Storage="_Start_dt", DbType="Date NOT NULL")]
		public System.DateTime Start_dt
		{
			get
			{
				return this._Start_dt;
			}
			set
			{
				if ((this._Start_dt != value))
				{
					this._Start_dt = value;
				}
			}
		}
		
		[Column(Name="end_dt", Storage="_End_dt", DbType="Date")]
		public System.Nullable<System.DateTime> End_dt
		{
			get
			{
				return this._End_dt;
			}
			set
			{
				if ((this._End_dt != value))
				{
					this._End_dt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_scheduled_tasks")]
	public partial class Mvm_scheduled_tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mvm_logical_cluster;
		
		private System.DateTime _Mvm_scheduled_dt;
		
		private string _Mvm_status;
		
		private string _Is_scheduled;
		
		private System.DateTime _Mvm_status_dt;
		
		private string _Mvm_proc;
		
		private string _Mvm_task_guid;
		
		private string _Mvm_poll_guid;
		
		private string _Mvm_scheduler_physical_node_id;
		
		private string _Mvm_delta_object;
		
		private string _Workproc;
		
		private System.Nullable<int> _Id_acc;
		
		private System.Nullable<int> _Target_id_acc;
		
		private string _Decision_unique_id;
		
		private string _Target_decision_unique_id;
		
		private System.Nullable<int> _Id_usage_interval;
		
		private System.Nullable<System.DateTime> _Rollover_dt;
		
		private System.Nullable<int> _Precalculated_units;
		
		private string _Mvm_error_msg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMvm_logical_clusterChanging(string value);
    partial void OnMvm_logical_clusterChanged();
    partial void OnMvm_scheduled_dtChanging(System.DateTime value);
    partial void OnMvm_scheduled_dtChanged();
    partial void OnMvm_statusChanging(string value);
    partial void OnMvm_statusChanged();
    partial void OnIs_scheduledChanging(string value);
    partial void OnIs_scheduledChanged();
    partial void OnMvm_status_dtChanging(System.DateTime value);
    partial void OnMvm_status_dtChanged();
    partial void OnMvm_procChanging(string value);
    partial void OnMvm_procChanged();
    partial void OnMvm_task_guidChanging(string value);
    partial void OnMvm_task_guidChanged();
    partial void OnMvm_poll_guidChanging(string value);
    partial void OnMvm_poll_guidChanged();
    partial void OnMvm_scheduler_physical_node_idChanging(string value);
    partial void OnMvm_scheduler_physical_node_idChanged();
    partial void OnMvm_delta_objectChanging(string value);
    partial void OnMvm_delta_objectChanged();
    partial void OnWorkprocChanging(string value);
    partial void OnWorkprocChanged();
    partial void OnId_accChanging(System.Nullable<int> value);
    partial void OnId_accChanged();
    partial void OnTarget_id_accChanging(System.Nullable<int> value);
    partial void OnTarget_id_accChanged();
    partial void OnDecision_unique_idChanging(string value);
    partial void OnDecision_unique_idChanged();
    partial void OnTarget_decision_unique_idChanging(string value);
    partial void OnTarget_decision_unique_idChanged();
    partial void OnId_usage_intervalChanging(System.Nullable<int> value);
    partial void OnId_usage_intervalChanged();
    partial void OnRollover_dtChanging(System.Nullable<System.DateTime> value);
    partial void OnRollover_dtChanged();
    partial void OnPrecalculated_unitsChanging(System.Nullable<int> value);
    partial void OnPrecalculated_unitsChanged();
    partial void OnMvm_error_msgChanging(string value);
    partial void OnMvm_error_msgChanged();
    #endregion
		
		public Mvm_scheduled_tasks()
		{
			OnCreated();
		}
		
		[Column(Name="mvm_logical_cluster", Storage="_Mvm_logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mvm_logical_cluster
		{
			get
			{
				return this._Mvm_logical_cluster;
			}
			set
			{
				if ((this._Mvm_logical_cluster != value))
				{
					this.OnMvm_logical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Mvm_logical_cluster = value;
					this.SendPropertyChanged("Mvm_logical_cluster");
					this.OnMvm_logical_clusterChanged();
				}
			}
		}
		
		[Column(Name="mvm_scheduled_dt", Storage="_Mvm_scheduled_dt", DbType="DateTime NOT NULL")]
		public System.DateTime Mvm_scheduled_dt
		{
			get
			{
				return this._Mvm_scheduled_dt;
			}
			set
			{
				if ((this._Mvm_scheduled_dt != value))
				{
					this.OnMvm_scheduled_dtChanging(value);
					this.SendPropertyChanging();
					this._Mvm_scheduled_dt = value;
					this.SendPropertyChanged("Mvm_scheduled_dt");
					this.OnMvm_scheduled_dtChanged();
				}
			}
		}
		
		[Column(Name="mvm_status", Storage="_Mvm_status", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Mvm_status
		{
			get
			{
				return this._Mvm_status;
			}
			set
			{
				if ((this._Mvm_status != value))
				{
					this.OnMvm_statusChanging(value);
					this.SendPropertyChanging();
					this._Mvm_status = value;
					this.SendPropertyChanged("Mvm_status");
					this.OnMvm_statusChanged();
				}
			}
		}
		
		[Column(Name="is_scheduled", Storage="_Is_scheduled", DbType="VarChar(10)")]
		public string Is_scheduled
		{
			get
			{
				return this._Is_scheduled;
			}
			set
			{
				if ((this._Is_scheduled != value))
				{
					this.OnIs_scheduledChanging(value);
					this.SendPropertyChanging();
					this._Is_scheduled = value;
					this.SendPropertyChanged("Is_scheduled");
					this.OnIs_scheduledChanged();
				}
			}
		}
		
		[Column(Name="mvm_status_dt", Storage="_Mvm_status_dt", DbType="DateTime NOT NULL")]
		public System.DateTime Mvm_status_dt
		{
			get
			{
				return this._Mvm_status_dt;
			}
			set
			{
				if ((this._Mvm_status_dt != value))
				{
					this.OnMvm_status_dtChanging(value);
					this.SendPropertyChanging();
					this._Mvm_status_dt = value;
					this.SendPropertyChanged("Mvm_status_dt");
					this.OnMvm_status_dtChanged();
				}
			}
		}
		
		[Column(Name="mvm_proc", Storage="_Mvm_proc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mvm_proc
		{
			get
			{
				return this._Mvm_proc;
			}
			set
			{
				if ((this._Mvm_proc != value))
				{
					this.OnMvm_procChanging(value);
					this.SendPropertyChanging();
					this._Mvm_proc = value;
					this.SendPropertyChanged("Mvm_proc");
					this.OnMvm_procChanged();
				}
			}
		}
		
		[Column(Name="mvm_task_guid", Storage="_Mvm_task_guid", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mvm_task_guid
		{
			get
			{
				return this._Mvm_task_guid;
			}
			set
			{
				if ((this._Mvm_task_guid != value))
				{
					this.OnMvm_task_guidChanging(value);
					this.SendPropertyChanging();
					this._Mvm_task_guid = value;
					this.SendPropertyChanged("Mvm_task_guid");
					this.OnMvm_task_guidChanged();
				}
			}
		}
		
		[Column(Name="mvm_poll_guid", Storage="_Mvm_poll_guid", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mvm_poll_guid
		{
			get
			{
				return this._Mvm_poll_guid;
			}
			set
			{
				if ((this._Mvm_poll_guid != value))
				{
					this.OnMvm_poll_guidChanging(value);
					this.SendPropertyChanging();
					this._Mvm_poll_guid = value;
					this.SendPropertyChanged("Mvm_poll_guid");
					this.OnMvm_poll_guidChanged();
				}
			}
		}
		
		[Column(Name="mvm_scheduler_physical_node_id", Storage="_Mvm_scheduler_physical_node_id", DbType="VarChar(100)")]
		public string Mvm_scheduler_physical_node_id
		{
			get
			{
				return this._Mvm_scheduler_physical_node_id;
			}
			set
			{
				if ((this._Mvm_scheduler_physical_node_id != value))
				{
					this.OnMvm_scheduler_physical_node_idChanging(value);
					this.SendPropertyChanging();
					this._Mvm_scheduler_physical_node_id = value;
					this.SendPropertyChanged("Mvm_scheduler_physical_node_id");
					this.OnMvm_scheduler_physical_node_idChanged();
				}
			}
		}
		
		[Column(Name="mvm_delta_object", Storage="_Mvm_delta_object", DbType="VarChar(8000)")]
		public string Mvm_delta_object
		{
			get
			{
				return this._Mvm_delta_object;
			}
			set
			{
				if ((this._Mvm_delta_object != value))
				{
					this.OnMvm_delta_objectChanging(value);
					this.SendPropertyChanging();
					this._Mvm_delta_object = value;
					this.SendPropertyChanged("Mvm_delta_object");
					this.OnMvm_delta_objectChanged();
				}
			}
		}
		
		[Column(Name="workproc", Storage="_Workproc", DbType="VarChar(1000)")]
		public string Workproc
		{
			get
			{
				return this._Workproc;
			}
			set
			{
				if ((this._Workproc != value))
				{
					this.OnWorkprocChanging(value);
					this.SendPropertyChanging();
					this._Workproc = value;
					this.SendPropertyChanged("Workproc");
					this.OnWorkprocChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="target_id_acc", Storage="_Target_id_acc", DbType="Int")]
		public System.Nullable<int> Target_id_acc
		{
			get
			{
				return this._Target_id_acc;
			}
			set
			{
				if ((this._Target_id_acc != value))
				{
					this.OnTarget_id_accChanging(value);
					this.SendPropertyChanging();
					this._Target_id_acc = value;
					this.SendPropertyChanged("Target_id_acc");
					this.OnTarget_id_accChanged();
				}
			}
		}
		
		[Column(Name="decision_unique_id", Storage="_Decision_unique_id", DbType="VarChar(1000)")]
		public string Decision_unique_id
		{
			get
			{
				return this._Decision_unique_id;
			}
			set
			{
				if ((this._Decision_unique_id != value))
				{
					this.OnDecision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Decision_unique_id = value;
					this.SendPropertyChanged("Decision_unique_id");
					this.OnDecision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="target_decision_unique_id", Storage="_Target_decision_unique_id", DbType="VarChar(1000)")]
		public string Target_decision_unique_id
		{
			get
			{
				return this._Target_decision_unique_id;
			}
			set
			{
				if ((this._Target_decision_unique_id != value))
				{
					this.OnTarget_decision_unique_idChanging(value);
					this.SendPropertyChanging();
					this._Target_decision_unique_id = value;
					this.SendPropertyChanged("Target_decision_unique_id");
					this.OnTarget_decision_unique_idChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int")]
		public System.Nullable<int> Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="rollover_dt", Storage="_Rollover_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rollover_dt
		{
			get
			{
				return this._Rollover_dt;
			}
			set
			{
				if ((this._Rollover_dt != value))
				{
					this.OnRollover_dtChanging(value);
					this.SendPropertyChanging();
					this._Rollover_dt = value;
					this.SendPropertyChanged("Rollover_dt");
					this.OnRollover_dtChanged();
				}
			}
		}
		
		[Column(Name="precalculated_units", Storage="_Precalculated_units", DbType="Int")]
		public System.Nullable<int> Precalculated_units
		{
			get
			{
				return this._Precalculated_units;
			}
			set
			{
				if ((this._Precalculated_units != value))
				{
					this.OnPrecalculated_unitsChanging(value);
					this.SendPropertyChanging();
					this._Precalculated_units = value;
					this.SendPropertyChanged("Precalculated_units");
					this.OnPrecalculated_unitsChanged();
				}
			}
		}
		
		[Column(Name="mvm_error_msg", Storage="_Mvm_error_msg", DbType="VarChar(256)")]
		public string Mvm_error_msg
		{
			get
			{
				return this._Mvm_error_msg;
			}
			set
			{
				if ((this._Mvm_error_msg != value))
				{
					this.OnMvm_error_msgChanging(value);
					this.SendPropertyChanging();
					this._Mvm_error_msg = value;
					this.SendPropertyChanged("Mvm_error_msg");
					this.OnMvm_error_msgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_semaphores")]
	public partial class Mvm_semaphores
	{
		
		private string _Mvm_resource;
		
		private string _Lock_guid;
		
		private System.Nullable<System.DateTime> _Lock_date;
		
		private System.Nullable<System.DateTime> _Lock_until_date;
		
		private string _Initial_locking_node;
		
		private string _Mvm_run_id;
		
		private System.Nullable<System.DateTime> _Last_release_date;
		
		public Mvm_semaphores()
		{
		}
		
		[Column(Name="mvm_resource", Storage="_Mvm_resource", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mvm_resource
		{
			get
			{
				return this._Mvm_resource;
			}
			set
			{
				if ((this._Mvm_resource != value))
				{
					this._Mvm_resource = value;
				}
			}
		}
		
		[Column(Name="lock_guid", Storage="_Lock_guid", DbType="VarChar(100)")]
		public string Lock_guid
		{
			get
			{
				return this._Lock_guid;
			}
			set
			{
				if ((this._Lock_guid != value))
				{
					this._Lock_guid = value;
				}
			}
		}
		
		[Column(Name="lock_date", Storage="_Lock_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Lock_date
		{
			get
			{
				return this._Lock_date;
			}
			set
			{
				if ((this._Lock_date != value))
				{
					this._Lock_date = value;
				}
			}
		}
		
		[Column(Name="lock_until_date", Storage="_Lock_until_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Lock_until_date
		{
			get
			{
				return this._Lock_until_date;
			}
			set
			{
				if ((this._Lock_until_date != value))
				{
					this._Lock_until_date = value;
				}
			}
		}
		
		[Column(Name="initial_locking_node", Storage="_Initial_locking_node", DbType="VarChar(1000)")]
		public string Initial_locking_node
		{
			get
			{
				return this._Initial_locking_node;
			}
			set
			{
				if ((this._Initial_locking_node != value))
				{
					this._Initial_locking_node = value;
				}
			}
		}
		
		[Column(Name="mvm_run_id", Storage="_Mvm_run_id", DbType="VarChar(1000)")]
		public string Mvm_run_id
		{
			get
			{
				return this._Mvm_run_id;
			}
			set
			{
				if ((this._Mvm_run_id != value))
				{
					this._Mvm_run_id = value;
				}
			}
		}
		
		[Column(Name="last_release_date", Storage="_Last_release_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_release_date
		{
			get
			{
				return this._Last_release_date;
			}
			set
			{
				if ((this._Last_release_date != value))
				{
					this._Last_release_date = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.mvm_server_credentials")]
	public partial class Mvm_server_credentials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Server;
		
		private string _Username;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Mvm_server_credentials()
		{
			OnCreated();
		}
		
		[Column(Name="server", Storage="_Server", DbType="VarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[Column(Name="username", Storage="_Username", DbType="VarChar(4000) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Name="password", Storage="_Password", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_temp_field_formats")]
	public partial class Mvm_temp_field_formats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private System.DateTime _Create_date;
		
		private int _Format_id;
		
		private string _Format_string1;
		
		private string _Format_string2;
		
		private string _Format_string3;
		
		private string _Format_string4;
		
		private string _Format_string5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnCreate_dateChanging(System.DateTime value);
    partial void OnCreate_dateChanged();
    partial void OnFormat_idChanging(int value);
    partial void OnFormat_idChanged();
    partial void OnFormat_string1Changing(string value);
    partial void OnFormat_string1Changed();
    partial void OnFormat_string2Changing(string value);
    partial void OnFormat_string2Changed();
    partial void OnFormat_string3Changing(string value);
    partial void OnFormat_string3Changed();
    partial void OnFormat_string4Changing(string value);
    partial void OnFormat_string4Changed();
    partial void OnFormat_string5Changing(string value);
    partial void OnFormat_string5Changed();
    #endregion
		
		public Mvm_temp_field_formats()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="format_id", Storage="_Format_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Format_id
		{
			get
			{
				return this._Format_id;
			}
			set
			{
				if ((this._Format_id != value))
				{
					this.OnFormat_idChanging(value);
					this.SendPropertyChanging();
					this._Format_id = value;
					this.SendPropertyChanged("Format_id");
					this.OnFormat_idChanged();
				}
			}
		}
		
		[Column(Name="format_string1", Storage="_Format_string1", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Format_string1
		{
			get
			{
				return this._Format_string1;
			}
			set
			{
				if ((this._Format_string1 != value))
				{
					this.OnFormat_string1Changing(value);
					this.SendPropertyChanging();
					this._Format_string1 = value;
					this.SendPropertyChanged("Format_string1");
					this.OnFormat_string1Changed();
				}
			}
		}
		
		[Column(Name="format_string2", Storage="_Format_string2", DbType="VarChar(4000)")]
		public string Format_string2
		{
			get
			{
				return this._Format_string2;
			}
			set
			{
				if ((this._Format_string2 != value))
				{
					this.OnFormat_string2Changing(value);
					this.SendPropertyChanging();
					this._Format_string2 = value;
					this.SendPropertyChanged("Format_string2");
					this.OnFormat_string2Changed();
				}
			}
		}
		
		[Column(Name="format_string3", Storage="_Format_string3", DbType="VarChar(4000)")]
		public string Format_string3
		{
			get
			{
				return this._Format_string3;
			}
			set
			{
				if ((this._Format_string3 != value))
				{
					this.OnFormat_string3Changing(value);
					this.SendPropertyChanging();
					this._Format_string3 = value;
					this.SendPropertyChanged("Format_string3");
					this.OnFormat_string3Changed();
				}
			}
		}
		
		[Column(Name="format_string4", Storage="_Format_string4", DbType="VarChar(4000)")]
		public string Format_string4
		{
			get
			{
				return this._Format_string4;
			}
			set
			{
				if ((this._Format_string4 != value))
				{
					this.OnFormat_string4Changing(value);
					this.SendPropertyChanging();
					this._Format_string4 = value;
					this.SendPropertyChanged("Format_string4");
					this.OnFormat_string4Changed();
				}
			}
		}
		
		[Column(Name="format_string5", Storage="_Format_string5", DbType="VarChar(4000)")]
		public string Format_string5
		{
			get
			{
				return this._Format_string5;
			}
			set
			{
				if ((this._Format_string5 != value))
				{
					this.OnFormat_string5Changing(value);
					this.SendPropertyChanging();
					this._Format_string5 = value;
					this.SendPropertyChanged("Format_string5");
					this.OnFormat_string5Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_temp_field_numbers")]
	public partial class Mvm_temp_field_numbers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private System.DateTime _Create_date;
		
		private string _Field_name;
		
		private int _Field_number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnCreate_dateChanging(System.DateTime value);
    partial void OnCreate_dateChanged();
    partial void OnField_nameChanging(string value);
    partial void OnField_nameChanged();
    partial void OnField_numberChanging(int value);
    partial void OnField_numberChanged();
    #endregion
		
		public Mvm_temp_field_numbers()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="field_name", Storage="_Field_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Field_name
		{
			get
			{
				return this._Field_name;
			}
			set
			{
				if ((this._Field_name != value))
				{
					this.OnField_nameChanging(value);
					this.SendPropertyChanging();
					this._Field_name = value;
					this.SendPropertyChanged("Field_name");
					this.OnField_nameChanged();
				}
			}
		}
		
		[Column(Name="field_number", Storage="_Field_number", DbType="Int NOT NULL")]
		public int Field_number
		{
			get
			{
				return this._Field_number;
			}
			set
			{
				if ((this._Field_number != value))
				{
					this.OnField_numberChanging(value);
					this.SendPropertyChanging();
					this._Field_number = value;
					this.SendPropertyChanged("Field_number");
					this.OnField_numberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.mvm_temp_rcn")]
	public partial class Mvm_temp_rcn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Logical_cluster;
		
		private System.DateTime _Create_date;
		
		private long _Id_current;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogical_clusterChanging(string value);
    partial void OnLogical_clusterChanged();
    partial void OnCreate_dateChanging(System.DateTime value);
    partial void OnCreate_dateChanged();
    partial void OnId_currentChanging(long value);
    partial void OnId_currentChanged();
    #endregion
		
		public Mvm_temp_rcn()
		{
			OnCreated();
		}
		
		[Column(Name="logical_cluster", Storage="_Logical_cluster", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Logical_cluster
		{
			get
			{
				return this._Logical_cluster;
			}
			set
			{
				if ((this._Logical_cluster != value))
				{
					this.OnLogical_clusterChanging(value);
					this.SendPropertyChanging();
					this._Logical_cluster = value;
					this.SendPropertyChanged("Logical_cluster");
					this.OnLogical_clusterChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="id_current", Storage="_Id_current", DbType="BigInt NOT NULL")]
		public long Id_current
		{
			get
			{
				return this._Id_current;
			}
			set
			{
				if ((this._Id_current != value))
				{
					this.OnId_currentChanging(value);
					this.SendPropertyChanging();
					this._Id_current = value;
					this.SendPropertyChanged("Id_current");
					this.OnId_currentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NotificationConfiguration")]
	public partial class NotificationConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityId;
		
		private string _ExternalId;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private string _EventType;
		
		private string _Criteria;
		
		private System.Guid _NotificationEndpointEntityId;
		
		private string _MessageTemplate;
		
		private EntityRef<NotificationEndpoint> _NotificationEndpoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnCriteriaChanging(string value);
    partial void OnCriteriaChanged();
    partial void OnNotificationEndpointEntityIdChanging(System.Guid value);
    partial void OnNotificationEndpointEntityIdChanged();
    partial void OnMessageTemplateChanging(string value);
    partial void OnMessageTemplateChanged();
    #endregion
		
		public NotificationConfiguration()
		{
			this._NotificationEndpoint = default(EntityRef<NotificationEndpoint>);
			OnCreated();
		}
		
		[Column(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[Column(Storage="_ExternalId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_EventType", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Criteria", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[Column(Storage="_NotificationEndpointEntityId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NotificationEndpointEntityId
		{
			get
			{
				return this._NotificationEndpointEntityId;
			}
			set
			{
				if ((this._NotificationEndpointEntityId != value))
				{
					if (this._NotificationEndpoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationEndpointEntityIdChanging(value);
					this.SendPropertyChanging();
					this._NotificationEndpointEntityId = value;
					this.SendPropertyChanged("NotificationEndpointEntityId");
					this.OnNotificationEndpointEntityIdChanged();
				}
			}
		}
		
		[Column(Storage="_MessageTemplate", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string MessageTemplate
		{
			get
			{
				return this._MessageTemplate;
			}
			set
			{
				if ((this._MessageTemplate != value))
				{
					this.OnMessageTemplateChanging(value);
					this.SendPropertyChanging();
					this._MessageTemplate = value;
					this.SendPropertyChanged("MessageTemplate");
					this.OnMessageTemplateChanged();
				}
			}
		}
		
		[Association(Name="FK_NotificationConfiguration_NotificationEndpoint_NotificationEndpointEntityId", Storage="_NotificationEndpoint", ThisKey="NotificationEndpointEntityId", OtherKey="EntityId", IsForeignKey=true)]
		public NotificationEndpoint NotificationEndpoint
		{
			get
			{
				return this._NotificationEndpoint.Entity;
			}
			set
			{
				NotificationEndpoint previousValue = this._NotificationEndpoint.Entity;
				if (((previousValue != value) 
							|| (this._NotificationEndpoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotificationEndpoint.Entity = null;
						previousValue.NotificationConfiguration.Remove(this);
					}
					this._NotificationEndpoint.Entity = value;
					if ((value != null))
					{
						value.NotificationConfiguration.Add(this);
						this._NotificationEndpointEntityId = value.EntityId;
					}
					else
					{
						this._NotificationEndpointEntityId = default(System.Guid);
					}
					this.SendPropertyChanged("NotificationEndpoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NotificationEndpoint")]
	public partial class NotificationEndpoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EntityId;
		
		private string _ExternalId;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _ModifiedDate;
		
		private bool _Active;
		
		private string _EndpointConfiguration;
		
		private string _AuthenticationConfiguration;
		
		private EntitySet<NotificationConfiguration> _NotificationConfiguration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIdChanging(System.Guid value);
    partial void OnEntityIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnEndpointConfigurationChanging(string value);
    partial void OnEndpointConfigurationChanged();
    partial void OnAuthenticationConfigurationChanging(string value);
    partial void OnAuthenticationConfigurationChanged();
    #endregion
		
		public NotificationEndpoint()
		{
			this._NotificationConfiguration = new EntitySet<NotificationConfiguration>(new Action<NotificationConfiguration>(this.attach_NotificationConfiguration), new Action<NotificationConfiguration>(this.detach_NotificationConfiguration));
			OnCreated();
		}
		
		[Column(Storage="_EntityId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[Column(Storage="_ExternalId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_EndpointConfiguration", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string EndpointConfiguration
		{
			get
			{
				return this._EndpointConfiguration;
			}
			set
			{
				if ((this._EndpointConfiguration != value))
				{
					this.OnEndpointConfigurationChanging(value);
					this.SendPropertyChanging();
					this._EndpointConfiguration = value;
					this.SendPropertyChanged("EndpointConfiguration");
					this.OnEndpointConfigurationChanged();
				}
			}
		}
		
		[Column(Storage="_AuthenticationConfiguration", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AuthenticationConfiguration
		{
			get
			{
				return this._AuthenticationConfiguration;
			}
			set
			{
				if ((this._AuthenticationConfiguration != value))
				{
					this.OnAuthenticationConfigurationChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationConfiguration = value;
					this.SendPropertyChanged("AuthenticationConfiguration");
					this.OnAuthenticationConfigurationChanged();
				}
			}
		}
		
		[Association(Name="FK_NotificationConfiguration_NotificationEndpoint_NotificationEndpointEntityId", Storage="_NotificationConfiguration", ThisKey="EntityId", OtherKey="NotificationEndpointEntityId", DeleteRule="NO ACTION")]
		public EntitySet<NotificationConfiguration> NotificationConfiguration
		{
			get
			{
				return this._NotificationConfiguration;
			}
			set
			{
				this._NotificationConfiguration.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NotificationConfiguration(NotificationConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.NotificationEndpoint = this;
		}
		
		private void detach_NotificationConfiguration(NotificationConfiguration entity)
		{
			this.SendPropertyChanging();
			entity.NotificationEndpoint = null;
		}
	}
	
	[Table(Name="dbo.QuoteIndividualPrice")]
	public partial class QuoteIndividualPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _QuoteId;
		
		private string _CurrentChargeType;
		
		private int _ProductOfferingId;
		
		private System.Nullable<int> _PriceableItemId;
		
		private System.Xml.Linq.XElement _ChargesRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnQuoteIdChanging(int value);
    partial void OnQuoteIdChanged();
    partial void OnCurrentChargeTypeChanging(string value);
    partial void OnCurrentChargeTypeChanged();
    partial void OnProductOfferingIdChanging(int value);
    partial void OnProductOfferingIdChanged();
    partial void OnPriceableItemIdChanging(System.Nullable<int> value);
    partial void OnPriceableItemIdChanged();
    partial void OnChargesRatesChanging(System.Xml.Linq.XElement value);
    partial void OnChargesRatesChanged();
    #endregion
		
		public QuoteIndividualPrice()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_QuoteId", DbType="Int NOT NULL")]
		public int QuoteId
		{
			get
			{
				return this._QuoteId;
			}
			set
			{
				if ((this._QuoteId != value))
				{
					this.OnQuoteIdChanging(value);
					this.SendPropertyChanging();
					this._QuoteId = value;
					this.SendPropertyChanged("QuoteId");
					this.OnQuoteIdChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentChargeType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentChargeType
		{
			get
			{
				return this._CurrentChargeType;
			}
			set
			{
				if ((this._CurrentChargeType != value))
				{
					this.OnCurrentChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrentChargeType = value;
					this.SendPropertyChanged("CurrentChargeType");
					this.OnCurrentChargeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ProductOfferingId", DbType="Int NOT NULL")]
		public int ProductOfferingId
		{
			get
			{
				return this._ProductOfferingId;
			}
			set
			{
				if ((this._ProductOfferingId != value))
				{
					this.OnProductOfferingIdChanging(value);
					this.SendPropertyChanging();
					this._ProductOfferingId = value;
					this.SendPropertyChanged("ProductOfferingId");
					this.OnProductOfferingIdChanged();
				}
			}
		}
		
		[Column(Storage="_PriceableItemId", DbType="Int")]
		public System.Nullable<int> PriceableItemId
		{
			get
			{
				return this._PriceableItemId;
			}
			set
			{
				if ((this._PriceableItemId != value))
				{
					this.OnPriceableItemIdChanging(value);
					this.SendPropertyChanging();
					this._PriceableItemId = value;
					this.SendPropertyChanged("PriceableItemId");
					this.OnPriceableItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_ChargesRates", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ChargesRates
		{
			get
			{
				return this._ChargesRates;
			}
			set
			{
				if ((this._ChargesRates != value))
				{
					this.OnChargesRatesChanging(value);
					this.SendPropertyChanging();
					this._ChargesRates = value;
					this.SendPropertyChanged("ChargesRates");
					this.OnChargesRatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.recon_compressed_fields")]
	public partial class Recon_compressed_fields
	{
		
		private string _Table_name;
		
		private string _Field_name;
		
		private string _Compression_key;
		
		private System.Nullable<int> _Is_master;
		
		public Recon_compressed_fields()
		{
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(100)")]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="field_name", Storage="_Field_name", DbType="VarChar(1000)")]
		public string Field_name
		{
			get
			{
				return this._Field_name;
			}
			set
			{
				if ((this._Field_name != value))
				{
					this._Field_name = value;
				}
			}
		}
		
		[Column(Name="compression_key", Storage="_Compression_key", DbType="VarChar(1000)")]
		public string Compression_key
		{
			get
			{
				return this._Compression_key;
			}
			set
			{
				if ((this._Compression_key != value))
				{
					this._Compression_key = value;
				}
			}
		}
		
		[Column(Name="is_master", Storage="_Is_master", DbType="Int")]
		public System.Nullable<int> Is_master
		{
			get
			{
				return this._Is_master;
			}
			set
			{
				if ((this._Is_master != value))
				{
					this._Is_master = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.recon_ignored_fields")]
	public partial class Recon_ignored_fields
	{
		
		private string _Table_name;
		
		private string _Field_name;
		
		public Recon_ignored_fields()
		{
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(100)")]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="field_name", Storage="_Field_name", DbType="VarChar(1000)")]
		public string Field_name
		{
			get
			{
				return this._Field_name;
			}
			set
			{
				if ((this._Field_name != value))
				{
					this._Field_name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.recon_join_rules")]
	public partial class Recon_join_rules
	{
		
		private string _Join_rule;
		
		private string _Expression;
		
		public Recon_join_rules()
		{
		}
		
		[Column(Name="join_rule", Storage="_Join_rule", DbType="VarChar(100)")]
		public string Join_rule
		{
			get
			{
				return this._Join_rule;
			}
			set
			{
				if ((this._Join_rule != value))
				{
					this._Join_rule = value;
				}
			}
		}
		
		[Column(Name="expression", Storage="_Expression", DbType="VarChar(1000)")]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this._Expression = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.recon_tables")]
	public partial class Recon_tables
	{
		
		private string _Table_name;
		
		private string _Join_rule;
		
		private System.Nullable<int> _Table_order;
		
		public Recon_tables()
		{
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="VarChar(1000)")]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this._Table_name = value;
				}
			}
		}
		
		[Column(Name="join_rule", Storage="_Join_rule", DbType="VarChar(1000)")]
		public string Join_rule
		{
			get
			{
				return this._Join_rule;
			}
			set
			{
				if ((this._Join_rule != value))
				{
					this._Join_rule = value;
				}
			}
		}
		
		[Column(Name="table_order", Storage="_Table_order", DbType="Int")]
		public System.Nullable<int> Table_order
		{
			get
			{
				return this._Table_order;
			}
			set
			{
				if ((this._Table_order != value))
				{
					this._Table_order = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.recon_worklist")]
	public partial class Recon_worklist
	{
		
		private System.Nullable<int> _Tracked_id_acc;
		
		private string _Group_identifier;
		
		public Recon_worklist()
		{
		}
		
		[Column(Name="tracked_id_acc", Storage="_Tracked_id_acc", DbType="Int")]
		public System.Nullable<int> Tracked_id_acc
		{
			get
			{
				return this._Tracked_id_acc;
			}
			set
			{
				if ((this._Tracked_id_acc != value))
				{
					this._Tracked_id_acc = value;
				}
			}
		}
		
		[Column(Name="group_identifier", Storage="_Group_identifier", DbType="VarChar(1000)")]
		public string Group_identifier
		{
			get
			{
				return this._Group_identifier;
			}
			set
			{
				if ((this._Group_identifier != value))
				{
					this._Group_identifier = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_acc_bucket_map")]
	public partial class T_acc_bucket_map
	{
		
		private int _Id_usage_interval;
		
		private int _Id_acc;
		
		private int _Bucket;
		
		private string _Status;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_acc_bucket_map()
		{
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this._Id_usage_interval = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="bucket", Storage="_Bucket", DbType="Int NOT NULL")]
		public int Bucket
		{
			get
			{
				return this._Bucket;
			}
			set
			{
				if ((this._Bucket != value))
				{
					this._Bucket = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_acc_ownership")]
	public partial class T_acc_ownership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_owner;
		
		private int _Id_owned;
		
		private int _Id_relation_type;
		
		private int _N_percent;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_account> _Id_ownedT_account;
		
		private EntityRef<T_enum_data> _T_enum_data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ownerChanging(int value);
    partial void OnId_ownerChanged();
    partial void OnId_ownedChanging(int value);
    partial void OnId_ownedChanged();
    partial void OnId_relation_typeChanging(int value);
    partial void OnId_relation_typeChanged();
    partial void OnN_percentChanging(int value);
    partial void OnN_percentChanged();
    partial void OnVt_startChanging(System.DateTime value);
    partial void OnVt_startChanged();
    partial void OnVt_endChanging(System.DateTime value);
    partial void OnVt_endChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    #endregion
		
		public T_acc_ownership()
		{
			this._T_account = default(EntityRef<T_account>);
			this._Id_ownedT_account = default(EntityRef<T_account>);
			this._T_enum_data = default(EntityRef<T_enum_data>);
			OnCreated();
		}
		
		[Column(Name="id_owner", Storage="_Id_owner", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_owner
		{
			get
			{
				return this._Id_owner;
			}
			set
			{
				if ((this._Id_owner != value))
				{
					this.OnId_ownerChanging(value);
					this.SendPropertyChanging();
					this._Id_owner = value;
					this.SendPropertyChanged("Id_owner");
					this.OnId_ownerChanged();
				}
			}
		}
		
		[Column(Name="id_owned", Storage="_Id_owned", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_owned
		{
			get
			{
				return this._Id_owned;
			}
			set
			{
				if ((this._Id_owned != value))
				{
					this.OnId_ownedChanging(value);
					this.SendPropertyChanging();
					this._Id_owned = value;
					this.SendPropertyChanged("Id_owned");
					this.OnId_ownedChanged();
				}
			}
		}
		
		[Column(Name="id_relation_type", Storage="_Id_relation_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_relation_type
		{
			get
			{
				return this._Id_relation_type;
			}
			set
			{
				if ((this._Id_relation_type != value))
				{
					this.OnId_relation_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_relation_type = value;
					this.SendPropertyChanged("Id_relation_type");
					this.OnId_relation_typeChanged();
				}
			}
		}
		
		[Column(Name="n_percent", Storage="_N_percent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_percent
		{
			get
			{
				return this._N_percent;
			}
			set
			{
				if ((this._N_percent != value))
				{
					this.OnN_percentChanging(value);
					this.SendPropertyChanging();
					this._N_percent = value;
					this.SendPropertyChanged("N_percent");
					this.OnN_percentChanged();
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this.OnVt_startChanging(value);
					this.SendPropertyChanging();
					this._Vt_start = value;
					this.SendPropertyChanged("Vt_start");
					this.OnVt_startChanged();
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this.OnVt_endChanging(value);
					this.SendPropertyChanging();
					this._Vt_end = value;
					this.SendPropertyChanged("Vt_end");
					this.OnVt_endChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Association(Name="t_acc_ownership_fk1", Storage="_T_account", ThisKey="Id_owner", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_acc_ownership.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_acc_ownership.Add(this);
						this._Id_owner = value.Id_acc;
					}
					else
					{
						this._Id_owner = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="t_acc_ownership_fk2", Storage="_Id_ownedT_account", ThisKey="Id_owned", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account Id_ownedT_account
		{
			get
			{
				return this._Id_ownedT_account.Entity;
			}
			set
			{
				T_account previousValue = this._Id_ownedT_account.Entity;
				if (((previousValue != value) 
							|| (this._Id_ownedT_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_ownedT_account.Entity = null;
						previousValue.Id_accT_acc_ownership.Remove(this);
					}
					this._Id_ownedT_account.Entity = value;
					if ((value != null))
					{
						value.Id_accT_acc_ownership.Add(this);
						this._Id_owned = value.Id_acc;
					}
					else
					{
						this._Id_owned = default(int);
					}
					this.SendPropertyChanged("Id_ownedT_account");
				}
			}
		}
		
		[Association(Name="t_acc_ownership_fk3", Storage="_T_enum_data", ThisKey="Id_relation_type", OtherKey="Id_enum_data", IsForeignKey=true)]
		public T_enum_data T_enum_data
		{
			get
			{
				return this._T_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._T_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_data.Entity = null;
						previousValue.T_acc_ownership.Remove(this);
					}
					this._T_enum_data.Entity = value;
					if ((value != null))
					{
						value.T_acc_ownership.Add(this);
						this._Id_relation_type = value.Id_enum_data;
					}
					else
					{
						this._Id_relation_type = default(int);
					}
					this.SendPropertyChanged("T_enum_data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_template")]
	public partial class T_acc_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc_template;
		
		private int _Id_folder;
		
		private int _Id_acc_type;
		
		private System.DateTime _Dt_crt;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private string _B_ApplyDefaultPolicy;
		
		private EntityRef<T_account> _T_account;
		
		private EntitySet<T_acc_template_props> _T_acc_template_props;
		
		private EntitySet<T_acc_template_props_pub> _T_acc_template_props_pub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_acc_templateChanging(int value);
    partial void OnId_acc_templateChanged();
    partial void OnId_folderChanging(int value);
    partial void OnId_folderChanged();
    partial void OnId_acc_typeChanging(int value);
    partial void OnId_acc_typeChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnB_ApplyDefaultPolicyChanging(string value);
    partial void OnB_ApplyDefaultPolicyChanged();
    #endregion
		
		public T_acc_template()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_acc_template_props = new EntitySet<T_acc_template_props>(new Action<T_acc_template_props>(this.attach_T_acc_template_props), new Action<T_acc_template_props>(this.detach_T_acc_template_props));
			this._T_acc_template_props_pub = new EntitySet<T_acc_template_props_pub>(new Action<T_acc_template_props_pub>(this.attach_T_acc_template_props_pub), new Action<T_acc_template_props_pub>(this.detach_T_acc_template_props_pub));
			OnCreated();
		}
		
		[Column(Name="id_acc_template", Storage="_Id_acc_template", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_acc_template
		{
			get
			{
				return this._Id_acc_template;
			}
			set
			{
				if ((this._Id_acc_template != value))
				{
					this.OnId_acc_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_template = value;
					this.SendPropertyChanged("Id_acc_template");
					this.OnId_acc_templateChanged();
				}
			}
		}
		
		[Column(Name="id_folder", Storage="_Id_folder", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_folder
		{
			get
			{
				return this._Id_folder;
			}
			set
			{
				if ((this._Id_folder != value))
				{
					this.OnId_folderChanging(value);
					this.SendPropertyChanging();
					this._Id_folder = value;
					this.SendPropertyChanged("Id_folder");
					this.OnId_folderChanged();
				}
			}
		}
		
		[Column(Name="id_acc_type", Storage="_Id_acc_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc_type
		{
			get
			{
				return this._Id_acc_type;
			}
			set
			{
				if ((this._Id_acc_type != value))
				{
					this.OnId_acc_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_type = value;
					this.SendPropertyChanged("Id_acc_type");
					this.OnId_acc_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255)")]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="b_ApplyDefaultPolicy", Storage="_B_ApplyDefaultPolicy", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_ApplyDefaultPolicy
		{
			get
			{
				return this._B_ApplyDefaultPolicy;
			}
			set
			{
				if ((this._B_ApplyDefaultPolicy != value))
				{
					this.OnB_ApplyDefaultPolicyChanging(value);
					this.SendPropertyChanging();
					this._B_ApplyDefaultPolicy = value;
					this.SendPropertyChanged("B_ApplyDefaultPolicy");
					this.OnB_ApplyDefaultPolicyChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE", Storage="_T_account", ThisKey="Id_folder", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_acc_template.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_acc_template.Add(this);
						this._Id_folder = value.Id_acc;
					}
					else
					{
						this._Id_folder = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE_PROPS", Storage="_T_acc_template_props", ThisKey="Id_acc_template", OtherKey="Id_acc_template", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_template_props> T_acc_template_props
		{
			get
			{
				return this._T_acc_template_props;
			}
			set
			{
				this._T_acc_template_props.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE_PROPS_PUB", Storage="_T_acc_template_props_pub", ThisKey="Id_acc_template", OtherKey="Id_acc_template", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_template_props_pub> T_acc_template_props_pub
		{
			get
			{
				return this._T_acc_template_props_pub;
			}
			set
			{
				this._T_acc_template_props_pub.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_acc_template_props(T_acc_template_props entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template = this;
		}
		
		private void detach_T_acc_template_props(T_acc_template_props entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template = null;
		}
		
		private void attach_T_acc_template_props_pub(T_acc_template_props_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template = this;
		}
		
		private void detach_T_acc_template_props_pub(T_acc_template_props_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template = null;
		}
	}
	
	[Table(Name="dbo.t_acc_template_props")]
	public partial class T_acc_template_props : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _Id_acc_template;
		
		private string _Nm_prop_class;
		
		private string _Nm_prop;
		
		private string _Nm_value;
		
		private EntityRef<T_acc_template> _T_acc_template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_acc_templateChanging(int value);
    partial void OnId_acc_templateChanged();
    partial void OnNm_prop_classChanging(string value);
    partial void OnNm_prop_classChanged();
    partial void OnNm_propChanging(string value);
    partial void OnNm_propChanged();
    partial void OnNm_valueChanging(string value);
    partial void OnNm_valueChanged();
    #endregion
		
		public T_acc_template_props()
		{
			this._T_acc_template = default(EntityRef<T_acc_template>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_acc_template", Storage="_Id_acc_template", DbType="Int NOT NULL")]
		public int Id_acc_template
		{
			get
			{
				return this._Id_acc_template;
			}
			set
			{
				if ((this._Id_acc_template != value))
				{
					this.OnId_acc_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_template = value;
					this.SendPropertyChanged("Id_acc_template");
					this.OnId_acc_templateChanged();
				}
			}
		}
		
		[Column(Name="nm_prop_class", Storage="_Nm_prop_class", DbType="NVarChar(100)")]
		public string Nm_prop_class
		{
			get
			{
				return this._Nm_prop_class;
			}
			set
			{
				if ((this._Nm_prop_class != value))
				{
					this.OnNm_prop_classChanging(value);
					this.SendPropertyChanging();
					this._Nm_prop_class = value;
					this.SendPropertyChanged("Nm_prop_class");
					this.OnNm_prop_classChanged();
				}
			}
		}
		
		[Column(Name="nm_prop", Storage="_Nm_prop", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_prop
		{
			get
			{
				return this._Nm_prop;
			}
			set
			{
				if ((this._Nm_prop != value))
				{
					this.OnNm_propChanging(value);
					this.SendPropertyChanging();
					this._Nm_prop = value;
					this.SendPropertyChanged("Nm_prop");
					this.OnNm_propChanged();
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(256)")]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this.OnNm_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_value = value;
					this.SendPropertyChanged("Nm_value");
					this.OnNm_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE_PROPS", Storage="_T_acc_template", ThisKey="Id_acc_template", OtherKey="Id_acc_template", IsForeignKey=true)]
		public T_acc_template T_acc_template
		{
			get
			{
				return this._T_acc_template.Entity;
			}
			set
			{
				T_acc_template previousValue = this._T_acc_template.Entity;
				if (((previousValue != value) 
							|| (this._T_acc_template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_acc_template.Entity = null;
						previousValue.T_acc_template_props.Remove(this);
					}
					this._T_acc_template.Entity = value;
					if ((value != null))
					{
						value.T_acc_template_props.Add(this);
						this._Id_acc_template = value.Id_acc_template;
					}
					else
					{
						this._Id_acc_template = default(int);
					}
					this.SendPropertyChanged("T_acc_template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_template_props_pub")]
	public partial class T_acc_template_props_pub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _Id_acc_template;
		
		private string _Nm_prop_class;
		
		private string _Nm_prop;
		
		private string _Nm_value;
		
		private EntityRef<T_acc_template> _T_acc_template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_acc_templateChanging(int value);
    partial void OnId_acc_templateChanged();
    partial void OnNm_prop_classChanging(string value);
    partial void OnNm_prop_classChanged();
    partial void OnNm_propChanging(string value);
    partial void OnNm_propChanged();
    partial void OnNm_valueChanging(string value);
    partial void OnNm_valueChanged();
    #endregion
		
		public T_acc_template_props_pub()
		{
			this._T_acc_template = default(EntityRef<T_acc_template>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_acc_template", Storage="_Id_acc_template", DbType="Int NOT NULL")]
		public int Id_acc_template
		{
			get
			{
				return this._Id_acc_template;
			}
			set
			{
				if ((this._Id_acc_template != value))
				{
					this.OnId_acc_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_template = value;
					this.SendPropertyChanged("Id_acc_template");
					this.OnId_acc_templateChanged();
				}
			}
		}
		
		[Column(Name="nm_prop_class", Storage="_Nm_prop_class", DbType="NVarChar(100)")]
		public string Nm_prop_class
		{
			get
			{
				return this._Nm_prop_class;
			}
			set
			{
				if ((this._Nm_prop_class != value))
				{
					this.OnNm_prop_classChanging(value);
					this.SendPropertyChanging();
					this._Nm_prop_class = value;
					this.SendPropertyChanged("Nm_prop_class");
					this.OnNm_prop_classChanged();
				}
			}
		}
		
		[Column(Name="nm_prop", Storage="_Nm_prop", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_prop
		{
			get
			{
				return this._Nm_prop;
			}
			set
			{
				if ((this._Nm_prop != value))
				{
					this.OnNm_propChanging(value);
					this.SendPropertyChanging();
					this._Nm_prop = value;
					this.SendPropertyChanged("Nm_prop");
					this.OnNm_propChanged();
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(256)")]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this.OnNm_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_value = value;
					this.SendPropertyChanged("Nm_value");
					this.OnNm_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE_PROPS_PUB", Storage="_T_acc_template", ThisKey="Id_acc_template", OtherKey="Id_acc_template", IsForeignKey=true)]
		public T_acc_template T_acc_template
		{
			get
			{
				return this._T_acc_template.Entity;
			}
			set
			{
				T_acc_template previousValue = this._T_acc_template.Entity;
				if (((previousValue != value) 
							|| (this._T_acc_template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_acc_template.Entity = null;
						previousValue.T_acc_template_props_pub.Remove(this);
					}
					this._T_acc_template.Entity = value;
					if ((value != null))
					{
						value.T_acc_template_props_pub.Add(this);
						this._Id_acc_template = value.Id_acc_template;
					}
					else
					{
						this._Id_acc_template = default(int);
					}
					this.SendPropertyChanged("T_acc_template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_template_session")]
	public partial class T_acc_template_session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_session;
		
		private int _Id_template_owner;
		
		private string _Nm_acc_type;
		
		private System.DateTime _Dt_submission;
		
		private int _Id_submitter;
		
		private string _Nm_host;
		
		private int _N_status;
		
		private int _N_accts;
		
		private int _N_subs;
		
		private int _N_retries;
		
		private int _N_templates;
		
		private int _N_templates_applied;
		
		private EntitySet<T_acc_template_session_detail> _T_acc_template_session_detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessionChanging(int value);
    partial void OnId_sessionChanged();
    partial void OnId_template_ownerChanging(int value);
    partial void OnId_template_ownerChanged();
    partial void OnNm_acc_typeChanging(string value);
    partial void OnNm_acc_typeChanged();
    partial void OnDt_submissionChanging(System.DateTime value);
    partial void OnDt_submissionChanged();
    partial void OnId_submitterChanging(int value);
    partial void OnId_submitterChanged();
    partial void OnNm_hostChanging(string value);
    partial void OnNm_hostChanged();
    partial void OnN_statusChanging(int value);
    partial void OnN_statusChanged();
    partial void OnN_acctsChanging(int value);
    partial void OnN_acctsChanged();
    partial void OnN_subsChanging(int value);
    partial void OnN_subsChanged();
    partial void OnN_retriesChanging(int value);
    partial void OnN_retriesChanged();
    partial void OnN_templatesChanging(int value);
    partial void OnN_templatesChanged();
    partial void OnN_templates_appliedChanging(int value);
    partial void OnN_templates_appliedChanged();
    #endregion
		
		public T_acc_template_session()
		{
			this._T_acc_template_session_detail = new EntitySet<T_acc_template_session_detail>(new Action<T_acc_template_session_detail>(this.attach_T_acc_template_session_detail), new Action<T_acc_template_session_detail>(this.detach_T_acc_template_session_detail));
			OnCreated();
		}
		
		[Column(Name="id_session", Storage="_Id_session", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_session
		{
			get
			{
				return this._Id_session;
			}
			set
			{
				if ((this._Id_session != value))
				{
					this.OnId_sessionChanging(value);
					this.SendPropertyChanging();
					this._Id_session = value;
					this.SendPropertyChanged("Id_session");
					this.OnId_sessionChanged();
				}
			}
		}
		
		[Column(Name="id_template_owner", Storage="_Id_template_owner", DbType="Int NOT NULL")]
		public int Id_template_owner
		{
			get
			{
				return this._Id_template_owner;
			}
			set
			{
				if ((this._Id_template_owner != value))
				{
					this.OnId_template_ownerChanging(value);
					this.SendPropertyChanging();
					this._Id_template_owner = value;
					this.SendPropertyChanged("Id_template_owner");
					this.OnId_template_ownerChanged();
				}
			}
		}
		
		[Column(Name="nm_acc_type", Storage="_Nm_acc_type", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_acc_type
		{
			get
			{
				return this._Nm_acc_type;
			}
			set
			{
				if ((this._Nm_acc_type != value))
				{
					this.OnNm_acc_typeChanging(value);
					this.SendPropertyChanging();
					this._Nm_acc_type = value;
					this.SendPropertyChanged("Nm_acc_type");
					this.OnNm_acc_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_submission", Storage="_Dt_submission", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_submission
		{
			get
			{
				return this._Dt_submission;
			}
			set
			{
				if ((this._Dt_submission != value))
				{
					this.OnDt_submissionChanging(value);
					this.SendPropertyChanging();
					this._Dt_submission = value;
					this.SendPropertyChanged("Dt_submission");
					this.OnDt_submissionChanged();
				}
			}
		}
		
		[Column(Name="id_submitter", Storage="_Id_submitter", DbType="Int NOT NULL")]
		public int Id_submitter
		{
			get
			{
				return this._Id_submitter;
			}
			set
			{
				if ((this._Id_submitter != value))
				{
					this.OnId_submitterChanging(value);
					this.SendPropertyChanging();
					this._Id_submitter = value;
					this.SendPropertyChanged("Id_submitter");
					this.OnId_submitterChanged();
				}
			}
		}
		
		[Column(Name="nm_host", Storage="_Nm_host", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_host
		{
			get
			{
				return this._Nm_host;
			}
			set
			{
				if ((this._Nm_host != value))
				{
					this.OnNm_hostChanging(value);
					this.SendPropertyChanging();
					this._Nm_host = value;
					this.SendPropertyChanged("Nm_host");
					this.OnNm_hostChanged();
				}
			}
		}
		
		[Column(Name="n_status", Storage="_N_status", DbType="Int NOT NULL")]
		public int N_status
		{
			get
			{
				return this._N_status;
			}
			set
			{
				if ((this._N_status != value))
				{
					this.OnN_statusChanging(value);
					this.SendPropertyChanging();
					this._N_status = value;
					this.SendPropertyChanged("N_status");
					this.OnN_statusChanged();
				}
			}
		}
		
		[Column(Name="n_accts", Storage="_N_accts", DbType="Int NOT NULL")]
		public int N_accts
		{
			get
			{
				return this._N_accts;
			}
			set
			{
				if ((this._N_accts != value))
				{
					this.OnN_acctsChanging(value);
					this.SendPropertyChanging();
					this._N_accts = value;
					this.SendPropertyChanged("N_accts");
					this.OnN_acctsChanged();
				}
			}
		}
		
		[Column(Name="n_subs", Storage="_N_subs", DbType="Int NOT NULL")]
		public int N_subs
		{
			get
			{
				return this._N_subs;
			}
			set
			{
				if ((this._N_subs != value))
				{
					this.OnN_subsChanging(value);
					this.SendPropertyChanging();
					this._N_subs = value;
					this.SendPropertyChanged("N_subs");
					this.OnN_subsChanged();
				}
			}
		}
		
		[Column(Name="n_retries", Storage="_N_retries", DbType="Int NOT NULL")]
		public int N_retries
		{
			get
			{
				return this._N_retries;
			}
			set
			{
				if ((this._N_retries != value))
				{
					this.OnN_retriesChanging(value);
					this.SendPropertyChanging();
					this._N_retries = value;
					this.SendPropertyChanged("N_retries");
					this.OnN_retriesChanged();
				}
			}
		}
		
		[Column(Name="n_templates", Storage="_N_templates", DbType="Int NOT NULL")]
		public int N_templates
		{
			get
			{
				return this._N_templates;
			}
			set
			{
				if ((this._N_templates != value))
				{
					this.OnN_templatesChanging(value);
					this.SendPropertyChanging();
					this._N_templates = value;
					this.SendPropertyChanged("N_templates");
					this.OnN_templatesChanged();
				}
			}
		}
		
		[Column(Name="n_templates_applied", Storage="_N_templates_applied", DbType="Int NOT NULL")]
		public int N_templates_applied
		{
			get
			{
				return this._N_templates_applied;
			}
			set
			{
				if ((this._N_templates_applied != value))
				{
					this.OnN_templates_appliedChanging(value);
					this.SendPropertyChanging();
					this._N_templates_applied = value;
					this.SendPropertyChanged("N_templates_applied");
					this.OnN_templates_appliedChanged();
				}
			}
		}
		
		[Association(Name="fk1_template_session_detail", Storage="_T_acc_template_session_detail", ThisKey="Id_session", OtherKey="Id_session", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_template_session_detail> T_acc_template_session_detail
		{
			get
			{
				return this._T_acc_template_session_detail;
			}
			set
			{
				this._T_acc_template_session_detail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_acc_template_session_detail(T_acc_template_session_detail entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template_session = this;
		}
		
		private void detach_T_acc_template_session_detail(T_acc_template_session_detail entity)
		{
			this.SendPropertyChanging();
			entity.T_acc_template_session = null;
		}
	}
	
	[Table(Name="dbo.t_acc_template_session_detail")]
	public partial class T_acc_template_session_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_detail;
		
		private int _Id_session;
		
		private int _N_detail_type;
		
		private int _N_result;
		
		private System.DateTime _Dt_detail;
		
		private string _Nm_text;
		
		private System.Nullable<int> _N_retry_count;
		
		private EntityRef<T_acc_template_session> _T_acc_template_session;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_detailChanging(int value);
    partial void OnId_detailChanged();
    partial void OnId_sessionChanging(int value);
    partial void OnId_sessionChanged();
    partial void OnN_detail_typeChanging(int value);
    partial void OnN_detail_typeChanged();
    partial void OnN_resultChanging(int value);
    partial void OnN_resultChanged();
    partial void OnDt_detailChanging(System.DateTime value);
    partial void OnDt_detailChanged();
    partial void OnNm_textChanging(string value);
    partial void OnNm_textChanged();
    partial void OnN_retry_countChanging(System.Nullable<int> value);
    partial void OnN_retry_countChanged();
    #endregion
		
		public T_acc_template_session_detail()
		{
			this._T_acc_template_session = default(EntityRef<T_acc_template_session>);
			OnCreated();
		}
		
		[Column(Name="id_detail", Storage="_Id_detail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_detail
		{
			get
			{
				return this._Id_detail;
			}
			set
			{
				if ((this._Id_detail != value))
				{
					this.OnId_detailChanging(value);
					this.SendPropertyChanging();
					this._Id_detail = value;
					this.SendPropertyChanged("Id_detail");
					this.OnId_detailChanged();
				}
			}
		}
		
		[Column(Name="id_session", Storage="_Id_session", DbType="Int NOT NULL")]
		public int Id_session
		{
			get
			{
				return this._Id_session;
			}
			set
			{
				if ((this._Id_session != value))
				{
					this.OnId_sessionChanging(value);
					this.SendPropertyChanging();
					this._Id_session = value;
					this.SendPropertyChanged("Id_session");
					this.OnId_sessionChanged();
				}
			}
		}
		
		[Column(Name="n_detail_type", Storage="_N_detail_type", DbType="Int NOT NULL")]
		public int N_detail_type
		{
			get
			{
				return this._N_detail_type;
			}
			set
			{
				if ((this._N_detail_type != value))
				{
					this.OnN_detail_typeChanging(value);
					this.SendPropertyChanging();
					this._N_detail_type = value;
					this.SendPropertyChanged("N_detail_type");
					this.OnN_detail_typeChanged();
				}
			}
		}
		
		[Column(Name="n_result", Storage="_N_result", DbType="Int NOT NULL")]
		public int N_result
		{
			get
			{
				return this._N_result;
			}
			set
			{
				if ((this._N_result != value))
				{
					this.OnN_resultChanging(value);
					this.SendPropertyChanging();
					this._N_result = value;
					this.SendPropertyChanged("N_result");
					this.OnN_resultChanged();
				}
			}
		}
		
		[Column(Name="dt_detail", Storage="_Dt_detail", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_detail
		{
			get
			{
				return this._Dt_detail;
			}
			set
			{
				if ((this._Dt_detail != value))
				{
					this.OnDt_detailChanging(value);
					this.SendPropertyChanging();
					this._Dt_detail = value;
					this.SendPropertyChanged("Dt_detail");
					this.OnDt_detailChanged();
				}
			}
		}
		
		[Column(Name="nm_text", Storage="_Nm_text", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Nm_text
		{
			get
			{
				return this._Nm_text;
			}
			set
			{
				if ((this._Nm_text != value))
				{
					this.OnNm_textChanging(value);
					this.SendPropertyChanging();
					this._Nm_text = value;
					this.SendPropertyChanged("Nm_text");
					this.OnNm_textChanged();
				}
			}
		}
		
		[Column(Name="n_retry_count", Storage="_N_retry_count", DbType="Int")]
		public System.Nullable<int> N_retry_count
		{
			get
			{
				return this._N_retry_count;
			}
			set
			{
				if ((this._N_retry_count != value))
				{
					this.OnN_retry_countChanging(value);
					this.SendPropertyChanging();
					this._N_retry_count = value;
					this.SendPropertyChanged("N_retry_count");
					this.OnN_retry_countChanged();
				}
			}
		}
		
		[Association(Name="fk1_template_session_detail", Storage="_T_acc_template_session", ThisKey="Id_session", OtherKey="Id_session", IsForeignKey=true)]
		public T_acc_template_session T_acc_template_session
		{
			get
			{
				return this._T_acc_template_session.Entity;
			}
			set
			{
				T_acc_template_session previousValue = this._T_acc_template_session.Entity;
				if (((previousValue != value) 
							|| (this._T_acc_template_session.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_acc_template_session.Entity = null;
						previousValue.T_acc_template_session_detail.Remove(this);
					}
					this._T_acc_template_session.Entity = value;
					if ((value != null))
					{
						value.T_acc_template_session_detail.Add(this);
						this._Id_session = value.Id_session;
					}
					else
					{
						this._Id_session = default(int);
					}
					this.SendPropertyChanged("T_acc_template_session");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_template_subs")]
	public partial class T_acc_template_subs
	{
		
		private System.Nullable<int> _Id_po;
		
		private System.Nullable<int> _Id_group;
		
		private int _Id_acc_template;
		
		private System.Nullable<System.DateTime> _Vt_start;
		
		private System.Nullable<System.DateTime> _Vt_end;
		
		public T_acc_template_subs()
		{
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int")]
		public System.Nullable<int> Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc_template", Storage="_Id_acc_template", DbType="Int NOT NULL")]
		public int Id_acc_template
		{
			get
			{
				return this._Id_acc_template;
			}
			set
			{
				if ((this._Id_acc_template != value))
				{
					this._Id_acc_template = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_acc_template_subs_pub")]
	public partial class T_acc_template_subs_pub
	{
		
		private System.Nullable<int> _Id_po;
		
		private System.Nullable<int> _Id_group;
		
		private int _Id_acc_template;
		
		private System.Nullable<System.DateTime> _Vt_start;
		
		private System.Nullable<System.DateTime> _Vt_end;
		
		public T_acc_template_subs_pub()
		{
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int")]
		public System.Nullable<int> Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc_template", Storage="_Id_acc_template", DbType="Int NOT NULL")]
		public int Id_acc_template
		{
			get
			{
				return this._Id_acc_template;
			}
			set
			{
				if ((this._Id_acc_template != value))
				{
					this._Id_acc_template = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_acc_tmpl_types")]
	public partial class T_acc_tmpl_types : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _All_types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAll_typesChanging(int value);
    partial void OnAll_typesChanged();
    #endregion
		
		public T_acc_tmpl_types()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="all_types", Storage="_All_types", DbType="Int NOT NULL")]
		public int All_types
		{
			get
			{
				return this._All_types;
			}
			set
			{
				if ((this._All_types != value))
				{
					this.OnAll_typesChanging(value);
					this.SendPropertyChanging();
					this._All_types = value;
					this.SendPropertyChanged("All_types");
					this.OnAll_typesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_usage")]
	public partial class T_acc_usage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private System.Data.Linq.Binary _Tx_UID;
		
		private int _Id_acc;
		
		private int _Id_payee;
		
		private int _Id_view;
		
		private int _Id_usage_interval;
		
		private System.Nullable<long> _Id_parent_sess;
		
		private System.Nullable<int> _Id_prod;
		
		private int _Id_svc;
		
		private System.DateTime _Dt_session;
		
		private decimal _Amount;
		
		private string _Am_currency;
		
		private System.DateTime _Dt_crt;
		
		private System.Data.Linq.Binary _Tx_batch;
		
		private System.Nullable<decimal> _Tax_federal;
		
		private System.Nullable<decimal> _Tax_state;
		
		private System.Nullable<decimal> _Tax_county;
		
		private System.Nullable<decimal> _Tax_local;
		
		private System.Nullable<decimal> _Tax_other;
		
		private System.Nullable<int> _Id_pi_instance;
		
		private System.Nullable<int> _Id_pi_template;
		
		private int _Id_se;
		
		private string _Div_currency;
		
		private System.Nullable<decimal> _Div_amount;
		
		private string _Is_implied_tax;
		
		private string _Tax_calculated;
		
		private string _Tax_informational;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_po> _T_po;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnTx_UIDChanging(System.Data.Linq.Binary value);
    partial void OnTx_UIDChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_payeeChanging(int value);
    partial void OnId_payeeChanged();
    partial void OnId_viewChanging(int value);
    partial void OnId_viewChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnId_parent_sessChanging(System.Nullable<long> value);
    partial void OnId_parent_sessChanged();
    partial void OnId_prodChanging(System.Nullable<int> value);
    partial void OnId_prodChanged();
    partial void OnId_svcChanging(int value);
    partial void OnId_svcChanged();
    partial void OnDt_sessionChanging(System.DateTime value);
    partial void OnDt_sessionChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAm_currencyChanging(string value);
    partial void OnAm_currencyChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    partial void OnTx_batchChanging(System.Data.Linq.Binary value);
    partial void OnTx_batchChanged();
    partial void OnTax_federalChanging(System.Nullable<decimal> value);
    partial void OnTax_federalChanged();
    partial void OnTax_stateChanging(System.Nullable<decimal> value);
    partial void OnTax_stateChanged();
    partial void OnTax_countyChanging(System.Nullable<decimal> value);
    partial void OnTax_countyChanged();
    partial void OnTax_localChanging(System.Nullable<decimal> value);
    partial void OnTax_localChanged();
    partial void OnTax_otherChanging(System.Nullable<decimal> value);
    partial void OnTax_otherChanged();
    partial void OnId_pi_instanceChanging(System.Nullable<int> value);
    partial void OnId_pi_instanceChanged();
    partial void OnId_pi_templateChanging(System.Nullable<int> value);
    partial void OnId_pi_templateChanged();
    partial void OnId_seChanging(int value);
    partial void OnId_seChanged();
    partial void OnDiv_currencyChanging(string value);
    partial void OnDiv_currencyChanged();
    partial void OnDiv_amountChanging(System.Nullable<decimal> value);
    partial void OnDiv_amountChanged();
    partial void OnIs_implied_taxChanging(string value);
    partial void OnIs_implied_taxChanged();
    partial void OnTax_calculatedChanging(string value);
    partial void OnTax_calculatedChanged();
    partial void OnTax_informationalChanging(string value);
    partial void OnTax_informationalChanged();
    #endregion
		
		public T_acc_usage()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_po = default(EntityRef<T_po>);
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="tx_UID", Storage="_Tx_UID", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Tx_UID
		{
			get
			{
				return this._Tx_UID;
			}
			set
			{
				if ((this._Tx_UID != value))
				{
					this.OnTx_UIDChanging(value);
					this.SendPropertyChanging();
					this._Tx_UID = value;
					this.SendPropertyChanged("Tx_UID");
					this.OnTx_UIDChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_payee", Storage="_Id_payee", DbType="Int NOT NULL")]
		public int Id_payee
		{
			get
			{
				return this._Id_payee;
			}
			set
			{
				if ((this._Id_payee != value))
				{
					this.OnId_payeeChanging(value);
					this.SendPropertyChanging();
					this._Id_payee = value;
					this.SendPropertyChanged("Id_payee");
					this.OnId_payeeChanged();
				}
			}
		}
		
		[Column(Name="id_view", Storage="_Id_view", DbType="Int NOT NULL")]
		public int Id_view
		{
			get
			{
				return this._Id_view;
			}
			set
			{
				if ((this._Id_view != value))
				{
					this.OnId_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_view = value;
					this.SendPropertyChanged("Id_view");
					this.OnId_viewChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_parent_sess", Storage="_Id_parent_sess", DbType="BigInt")]
		public System.Nullable<long> Id_parent_sess
		{
			get
			{
				return this._Id_parent_sess;
			}
			set
			{
				if ((this._Id_parent_sess != value))
				{
					this.OnId_parent_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_sess = value;
					this.SendPropertyChanged("Id_parent_sess");
					this.OnId_parent_sessChanged();
				}
			}
		}
		
		[Column(Name="id_prod", Storage="_Id_prod", DbType="Int")]
		public System.Nullable<int> Id_prod
		{
			get
			{
				return this._Id_prod;
			}
			set
			{
				if ((this._Id_prod != value))
				{
					this.OnId_prodChanging(value);
					this.SendPropertyChanging();
					this._Id_prod = value;
					this.SendPropertyChanged("Id_prod");
					this.OnId_prodChanged();
				}
			}
		}
		
		[Column(Name="id_svc", Storage="_Id_svc", DbType="Int NOT NULL")]
		public int Id_svc
		{
			get
			{
				return this._Id_svc;
			}
			set
			{
				if ((this._Id_svc != value))
				{
					this.OnId_svcChanging(value);
					this.SendPropertyChanging();
					this._Id_svc = value;
					this.SendPropertyChanged("Id_svc");
					this.OnId_svcChanged();
				}
			}
		}
		
		[Column(Name="dt_session", Storage="_Dt_session", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_session
		{
			get
			{
				return this._Dt_session;
			}
			set
			{
				if ((this._Dt_session != value))
				{
					this.OnDt_sessionChanging(value);
					this.SendPropertyChanging();
					this._Dt_session = value;
					this.SendPropertyChanged("Dt_session");
					this.OnDt_sessionChanged();
				}
			}
		}
		
		[Column(Name="amount", Storage="_Amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[Column(Name="am_currency", Storage="_Am_currency", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Am_currency
		{
			get
			{
				return this._Am_currency;
			}
			set
			{
				if ((this._Am_currency != value))
				{
					this.OnAm_currencyChanging(value);
					this.SendPropertyChanging();
					this._Am_currency = value;
					this.SendPropertyChanged("Am_currency");
					this.OnAm_currencyChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Column(Name="tx_batch", Storage="_Tx_batch", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_batch
		{
			get
			{
				return this._Tx_batch;
			}
			set
			{
				if ((this._Tx_batch != value))
				{
					this.OnTx_batchChanging(value);
					this.SendPropertyChanging();
					this._Tx_batch = value;
					this.SendPropertyChanged("Tx_batch");
					this.OnTx_batchChanged();
				}
			}
		}
		
		[Column(Name="tax_federal", Storage="_Tax_federal", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tax_federal
		{
			get
			{
				return this._Tax_federal;
			}
			set
			{
				if ((this._Tax_federal != value))
				{
					this.OnTax_federalChanging(value);
					this.SendPropertyChanging();
					this._Tax_federal = value;
					this.SendPropertyChanged("Tax_federal");
					this.OnTax_federalChanged();
				}
			}
		}
		
		[Column(Name="tax_state", Storage="_Tax_state", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tax_state
		{
			get
			{
				return this._Tax_state;
			}
			set
			{
				if ((this._Tax_state != value))
				{
					this.OnTax_stateChanging(value);
					this.SendPropertyChanging();
					this._Tax_state = value;
					this.SendPropertyChanged("Tax_state");
					this.OnTax_stateChanged();
				}
			}
		}
		
		[Column(Name="tax_county", Storage="_Tax_county", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tax_county
		{
			get
			{
				return this._Tax_county;
			}
			set
			{
				if ((this._Tax_county != value))
				{
					this.OnTax_countyChanging(value);
					this.SendPropertyChanging();
					this._Tax_county = value;
					this.SendPropertyChanged("Tax_county");
					this.OnTax_countyChanged();
				}
			}
		}
		
		[Column(Name="tax_local", Storage="_Tax_local", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tax_local
		{
			get
			{
				return this._Tax_local;
			}
			set
			{
				if ((this._Tax_local != value))
				{
					this.OnTax_localChanging(value);
					this.SendPropertyChanging();
					this._Tax_local = value;
					this.SendPropertyChanged("Tax_local");
					this.OnTax_localChanged();
				}
			}
		}
		
		[Column(Name="tax_other", Storage="_Tax_other", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Tax_other
		{
			get
			{
				return this._Tax_other;
			}
			set
			{
				if ((this._Tax_other != value))
				{
					this.OnTax_otherChanging(value);
					this.SendPropertyChanging();
					this._Tax_other = value;
					this.SendPropertyChanged("Tax_other");
					this.OnTax_otherChanged();
				}
			}
		}
		
		[Column(Name="id_pi_instance", Storage="_Id_pi_instance", DbType="Int")]
		public System.Nullable<int> Id_pi_instance
		{
			get
			{
				return this._Id_pi_instance;
			}
			set
			{
				if ((this._Id_pi_instance != value))
				{
					this.OnId_pi_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_instance = value;
					this.SendPropertyChanged("Id_pi_instance");
					this.OnId_pi_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_pi_template", Storage="_Id_pi_template", DbType="Int")]
		public System.Nullable<int> Id_pi_template
		{
			get
			{
				return this._Id_pi_template;
			}
			set
			{
				if ((this._Id_pi_template != value))
				{
					this.OnId_pi_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_template = value;
					this.SendPropertyChanged("Id_pi_template");
					this.OnId_pi_templateChanged();
				}
			}
		}
		
		[Column(Name="id_se", Storage="_Id_se", DbType="Int NOT NULL")]
		public int Id_se
		{
			get
			{
				return this._Id_se;
			}
			set
			{
				if ((this._Id_se != value))
				{
					this.OnId_seChanging(value);
					this.SendPropertyChanging();
					this._Id_se = value;
					this.SendPropertyChanged("Id_se");
					this.OnId_seChanged();
				}
			}
		}
		
		[Column(Name="div_currency", Storage="_Div_currency", DbType="NVarChar(3)")]
		public string Div_currency
		{
			get
			{
				return this._Div_currency;
			}
			set
			{
				if ((this._Div_currency != value))
				{
					this.OnDiv_currencyChanging(value);
					this.SendPropertyChanging();
					this._Div_currency = value;
					this.SendPropertyChanged("Div_currency");
					this.OnDiv_currencyChanged();
				}
			}
		}
		
		[Column(Name="div_amount", Storage="_Div_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Div_amount
		{
			get
			{
				return this._Div_amount;
			}
			set
			{
				if ((this._Div_amount != value))
				{
					this.OnDiv_amountChanging(value);
					this.SendPropertyChanging();
					this._Div_amount = value;
					this.SendPropertyChanged("Div_amount");
					this.OnDiv_amountChanged();
				}
			}
		}
		
		[Column(Name="is_implied_tax", Storage="_Is_implied_tax", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Is_implied_tax
		{
			get
			{
				return this._Is_implied_tax;
			}
			set
			{
				if ((this._Is_implied_tax != value))
				{
					this.OnIs_implied_taxChanging(value);
					this.SendPropertyChanging();
					this._Is_implied_tax = value;
					this.SendPropertyChanged("Is_implied_tax");
					this.OnIs_implied_taxChanged();
				}
			}
		}
		
		[Column(Name="tax_calculated", Storage="_Tax_calculated", DbType="NVarChar(1)")]
		public string Tax_calculated
		{
			get
			{
				return this._Tax_calculated;
			}
			set
			{
				if ((this._Tax_calculated != value))
				{
					this.OnTax_calculatedChanging(value);
					this.SendPropertyChanging();
					this._Tax_calculated = value;
					this.SendPropertyChanged("Tax_calculated");
					this.OnTax_calculatedChanged();
				}
			}
		}
		
		[Column(Name="tax_informational", Storage="_Tax_informational", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Tax_informational
		{
			get
			{
				return this._Tax_informational;
			}
			set
			{
				if ((this._Tax_informational != value))
				{
					this.OnTax_informationalChanging(value);
					this.SendPropertyChanging();
					this._Tax_informational = value;
					this.SendPropertyChanged("Tax_informational");
					this.OnTax_informationalChanged();
				}
			}
		}
		
		[Association(Name="fk2_t_acc_usage", Storage="_T_account", ThisKey="Id_payee", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_acc_usage.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage.Add(this);
						this._Id_payee = value.Id_acc;
					}
					else
					{
						this._Id_payee = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="fk3_t_acc_usage", Storage="_T_po", ThisKey="Id_prod", OtherKey="Id_po", IsForeignKey=true)]
		public T_po T_po
		{
			get
			{
				return this._T_po.Entity;
			}
			set
			{
				T_po previousValue = this._T_po.Entity;
				if (((previousValue != value) 
							|| (this._T_po.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_po.Entity = null;
						previousValue.T_acc_usage.Remove(this);
					}
					this._T_po.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage.Add(this);
						this._Id_prod = value.Id_po;
					}
					else
					{
						this._Id_prod = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_po");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_usage_cycle")]
	public partial class T_acc_usage_cycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _Id_usage_cycle;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_usage_cycleChanging(int value);
    partial void OnId_usage_cycleChanged();
    #endregion
		
		public T_acc_usage_cycle()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int NOT NULL")]
		public int Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_acc_usage_cycle", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_acc_usage_cycle = null;
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage_cycle = this;
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="FK2_T_ACC_USAGE_CYCLE", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_acc_usage_cycle.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage_cycle.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(int);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acc_usage_interval")]
	public partial class T_acc_usage_interval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _Id_usage_interval;
		
		private string _Tx_status;
		
		private System.Nullable<System.DateTime> _Dt_effective;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_usage_interval> _T_usage_interval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    partial void OnDt_effectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_effectiveChanged();
    #endregion
		
		public T_acc_usage_interval()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_usage_interval = default(EntityRef<T_usage_interval>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Column(Name="dt_effective", Storage="_Dt_effective", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_effective
		{
			get
			{
				return this._Dt_effective;
			}
			set
			{
				if ((this._Dt_effective != value))
				{
					this.OnDt_effectiveChanging(value);
					this.SendPropertyChanging();
					this._Dt_effective = value;
					this.SendPropertyChanged("Dt_effective");
					this.OnDt_effectiveChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_acc_usage_interval", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_acc_usage_interval.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage_interval.Add(this);
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="fk2_t_acc_usage_interval", Storage="_T_usage_interval", ThisKey="Id_usage_interval", OtherKey="Id_interval", IsForeignKey=true)]
		public T_usage_interval T_usage_interval
		{
			get
			{
				return this._T_usage_interval.Entity;
			}
			set
			{
				T_usage_interval previousValue = this._T_usage_interval.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_interval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_interval.Entity = null;
						previousValue.T_acc_usage_interval.Remove(this);
					}
					this._T_usage_interval.Entity = value;
					if ((value != null))
					{
						value.T_acc_usage_interval.Add(this);
						this._Id_usage_interval = value.Id_interval;
					}
					else
					{
						this._Id_usage_interval = default(int);
					}
					this.SendPropertyChanged("T_usage_interval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_account")]
	public partial class T_account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private System.Data.Linq.Binary _Id_acc_ext;
		
		private int _Id_type;
		
		private System.DateTime _Dt_crt;
		
		private EntitySet<T_av_Contact> _T_av_Contact;
		
		private EntityRef<T_av_GSM> _T_av_GSM;
		
		private EntityRef<T_av_Internal> _T_av_Internal;
		
		private EntitySet<T_acc_template> _T_acc_template;
		
		private EntityRef<T_acc_usage_cycle> _T_acc_usage_cycle;
		
		private EntitySet<T_acc_usage_interval> _T_acc_usage_interval;
		
		private EntityRef<T_account_type> _T_account_type;
		
		private EntitySet<T_billgroup_materialization> _T_billgroup_materialization;
		
		private EntitySet<T_principal_policy> _T_principal_policy;
		
		private EntitySet<T_acc_usage> _T_acc_usage;
		
		private EntitySet<T_group_sub> _T_group_sub;
		
		private EntitySet<T_group_sub> _Id_accT_group_sub;
		
		private EntitySet<T_acc_ownership> _T_acc_ownership;
		
		private EntitySet<T_acc_ownership> _Id_accT_acc_ownership;
		
		private EntitySet<T_gsub_recur_map> _T_gsub_recur_map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_acc_extChanging(System.Data.Linq.Binary value);
    partial void OnId_acc_extChanged();
    partial void OnId_typeChanging(int value);
    partial void OnId_typeChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    #endregion
		
		public T_account()
		{
			this._T_av_Contact = new EntitySet<T_av_Contact>(new Action<T_av_Contact>(this.attach_T_av_Contact), new Action<T_av_Contact>(this.detach_T_av_Contact));
			this._T_av_GSM = default(EntityRef<T_av_GSM>);
			this._T_av_Internal = default(EntityRef<T_av_Internal>);
			this._T_acc_template = new EntitySet<T_acc_template>(new Action<T_acc_template>(this.attach_T_acc_template), new Action<T_acc_template>(this.detach_T_acc_template));
			this._T_acc_usage_cycle = default(EntityRef<T_acc_usage_cycle>);
			this._T_acc_usage_interval = new EntitySet<T_acc_usage_interval>(new Action<T_acc_usage_interval>(this.attach_T_acc_usage_interval), new Action<T_acc_usage_interval>(this.detach_T_acc_usage_interval));
			this._T_account_type = default(EntityRef<T_account_type>);
			this._T_billgroup_materialization = new EntitySet<T_billgroup_materialization>(new Action<T_billgroup_materialization>(this.attach_T_billgroup_materialization), new Action<T_billgroup_materialization>(this.detach_T_billgroup_materialization));
			this._T_principal_policy = new EntitySet<T_principal_policy>(new Action<T_principal_policy>(this.attach_T_principal_policy), new Action<T_principal_policy>(this.detach_T_principal_policy));
			this._T_acc_usage = new EntitySet<T_acc_usage>(new Action<T_acc_usage>(this.attach_T_acc_usage), new Action<T_acc_usage>(this.detach_T_acc_usage));
			this._T_group_sub = new EntitySet<T_group_sub>(new Action<T_group_sub>(this.attach_T_group_sub), new Action<T_group_sub>(this.detach_T_group_sub));
			this._Id_accT_group_sub = new EntitySet<T_group_sub>(new Action<T_group_sub>(this.attach_Id_accT_group_sub), new Action<T_group_sub>(this.detach_Id_accT_group_sub));
			this._T_acc_ownership = new EntitySet<T_acc_ownership>(new Action<T_acc_ownership>(this.attach_T_acc_ownership), new Action<T_acc_ownership>(this.detach_T_acc_ownership));
			this._Id_accT_acc_ownership = new EntitySet<T_acc_ownership>(new Action<T_acc_ownership>(this.attach_Id_accT_acc_ownership), new Action<T_acc_ownership>(this.detach_Id_accT_acc_ownership));
			this._T_gsub_recur_map = new EntitySet<T_gsub_recur_map>(new Action<T_gsub_recur_map>(this.attach_T_gsub_recur_map), new Action<T_gsub_recur_map>(this.detach_T_gsub_recur_map));
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_acc_ext", Storage="_Id_acc_ext", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Id_acc_ext
		{
			get
			{
				return this._Id_acc_ext;
			}
			set
			{
				if ((this._Id_acc_ext != value))
				{
					this.OnId_acc_extChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_ext = value;
					this.SendPropertyChanged("Id_acc_ext");
					this.OnId_acc_extChanged();
				}
			}
		}
		
		[Column(Name="id_type", Storage="_Id_type", DbType="Int NOT NULL")]
		public int Id_type
		{
			get
			{
				return this._Id_type;
			}
			set
			{
				if ((this._Id_type != value))
				{
					this.OnId_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_type = value;
					this.SendPropertyChanged("Id_type");
					this.OnId_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Association(Name="fk_t_av_Contact", Storage="_T_av_Contact", ThisKey="Id_acc", OtherKey="Id_acc", DeleteRule="NO ACTION")]
		public EntitySet<T_av_Contact> T_av_Contact
		{
			get
			{
				return this._T_av_Contact;
			}
			set
			{
				this._T_av_Contact.Assign(value);
			}
		}
		
		[Association(Name="fk_t_av_GSM", Storage="_T_av_GSM", ThisKey="Id_acc", OtherKey="Id_acc", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_av_GSM T_av_GSM
		{
			get
			{
				return this._T_av_GSM.Entity;
			}
			set
			{
				T_av_GSM previousValue = this._T_av_GSM.Entity;
				if (((previousValue != value) 
							|| (this._T_av_GSM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_av_GSM.Entity = null;
						previousValue.T_account = null;
					}
					this._T_av_GSM.Entity = value;
					if ((value != null))
					{
						value.T_account = this;
					}
					this.SendPropertyChanged("T_av_GSM");
				}
			}
		}
		
		[Association(Name="fk_t_av_Internal", Storage="_T_av_Internal", ThisKey="Id_acc", OtherKey="Id_acc", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_av_Internal T_av_Internal
		{
			get
			{
				return this._T_av_Internal.Entity;
			}
			set
			{
				T_av_Internal previousValue = this._T_av_Internal.Entity;
				if (((previousValue != value) 
							|| (this._T_av_Internal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_av_Internal.Entity = null;
						previousValue.T_account = null;
					}
					this._T_av_Internal.Entity = value;
					if ((value != null))
					{
						value.T_account = this;
					}
					this.SendPropertyChanged("T_av_Internal");
				}
			}
		}
		
		[Association(Name="FK1_T_ACC_TEMPLATE", Storage="_T_acc_template", ThisKey="Id_acc", OtherKey="Id_folder", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_template> T_acc_template
		{
			get
			{
				return this._T_acc_template;
			}
			set
			{
				this._T_acc_template.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_acc_usage_cycle", Storage="_T_acc_usage_cycle", ThisKey="Id_acc", OtherKey="Id_acc", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_acc_usage_cycle T_acc_usage_cycle
		{
			get
			{
				return this._T_acc_usage_cycle.Entity;
			}
			set
			{
				T_acc_usage_cycle previousValue = this._T_acc_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_acc_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_acc_usage_cycle.Entity = null;
						previousValue.T_account = null;
					}
					this._T_acc_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_account = this;
					}
					this.SendPropertyChanged("T_acc_usage_cycle");
				}
			}
		}
		
		[Association(Name="fk1_t_acc_usage_interval", Storage="_T_acc_usage_interval", ThisKey="Id_acc", OtherKey="Id_acc", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_usage_interval> T_acc_usage_interval
		{
			get
			{
				return this._T_acc_usage_interval;
			}
			set
			{
				this._T_acc_usage_interval.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_account", Storage="_T_account_type", ThisKey="Id_type", OtherKey="Id_type", IsForeignKey=true)]
		public T_account_type T_account_type
		{
			get
			{
				return this._T_account_type.Entity;
			}
			set
			{
				T_account_type previousValue = this._T_account_type.Entity;
				if (((previousValue != value) 
							|| (this._T_account_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account_type.Entity = null;
						previousValue.T_account.Remove(this);
					}
					this._T_account_type.Entity = value;
					if ((value != null))
					{
						value.T_account.Add(this);
						this._Id_type = value.Id_type;
					}
					else
					{
						this._Id_type = default(int);
					}
					this.SendPropertyChanged("T_account_type");
				}
			}
		}
		
		[Association(Name="FK1_t_billgroup_materialization", Storage="_T_billgroup_materialization", ThisKey="Id_acc", OtherKey="Id_user_acc", DeleteRule="NO ACTION")]
		public EntitySet<T_billgroup_materialization> T_billgroup_materialization
		{
			get
			{
				return this._T_billgroup_materialization;
			}
			set
			{
				this._T_billgroup_materialization.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_PRINCIPAL_POLICY", Storage="_T_principal_policy", ThisKey="Id_acc", OtherKey="Id_acc", DeleteRule="NO ACTION")]
		public EntitySet<T_principal_policy> T_principal_policy
		{
			get
			{
				return this._T_principal_policy;
			}
			set
			{
				this._T_principal_policy.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_acc_usage", Storage="_T_acc_usage", ThisKey="Id_acc", OtherKey="Id_payee", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_usage> T_acc_usage
		{
			get
			{
				return this._T_acc_usage;
			}
			set
			{
				this._T_acc_usage.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_GROUP_SUB", Storage="_T_group_sub", ThisKey="Id_acc", OtherKey="Id_discountAccount", DeleteRule="NO ACTION")]
		public EntitySet<T_group_sub> T_group_sub
		{
			get
			{
				return this._T_group_sub;
			}
			set
			{
				this._T_group_sub.Assign(value);
			}
		}
		
		[Association(Name="FK3_T_GROUP_SUB", Storage="_Id_accT_group_sub", ThisKey="Id_acc", OtherKey="Id_corporate_account", DeleteRule="NO ACTION")]
		public EntitySet<T_group_sub> Id_accT_group_sub
		{
			get
			{
				return this._Id_accT_group_sub;
			}
			set
			{
				this._Id_accT_group_sub.Assign(value);
			}
		}
		
		[Association(Name="t_acc_ownership_fk1", Storage="_T_acc_ownership", ThisKey="Id_acc", OtherKey="Id_owner", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_ownership> T_acc_ownership
		{
			get
			{
				return this._T_acc_ownership;
			}
			set
			{
				this._T_acc_ownership.Assign(value);
			}
		}
		
		[Association(Name="t_acc_ownership_fk2", Storage="_Id_accT_acc_ownership", ThisKey="Id_acc", OtherKey="Id_owned", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_ownership> Id_accT_acc_ownership
		{
			get
			{
				return this._Id_accT_acc_ownership;
			}
			set
			{
				this._Id_accT_acc_ownership.Assign(value);
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk3", Storage="_T_gsub_recur_map", ThisKey="Id_acc", OtherKey="Id_acc", DeleteRule="NO ACTION")]
		public EntitySet<T_gsub_recur_map> T_gsub_recur_map
		{
			get
			{
				return this._T_gsub_recur_map;
			}
			set
			{
				this._T_gsub_recur_map.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_av_Contact(T_av_Contact entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_av_Contact(T_av_Contact entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_acc_template(T_acc_template entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_acc_template(T_acc_template entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_acc_usage_interval(T_acc_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_acc_usage_interval(T_acc_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_billgroup_materialization(T_billgroup_materialization entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_billgroup_materialization(T_billgroup_materialization entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_principal_policy(T_principal_policy entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_principal_policy(T_principal_policy entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_acc_usage(T_acc_usage entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_acc_usage(T_acc_usage entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_T_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_Id_accT_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.Id_corporate_accountT_account = this;
		}
		
		private void detach_Id_accT_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.Id_corporate_accountT_account = null;
		}
		
		private void attach_T_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
		
		private void attach_Id_accT_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.Id_ownedT_account = this;
		}
		
		private void detach_Id_accT_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.Id_ownedT_account = null;
		}
		
		private void attach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_account = this;
		}
		
		private void detach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_account = null;
		}
	}
	
	[Table(Name="dbo.t_account_ancestor")]
	public partial class T_account_ancestor
	{
		
		private int _Id_ancestor;
		
		private int _Id_descendent;
		
		private int _Num_generations;
		
		private string _B_children;
		
		private System.Nullable<System.DateTime> _Vt_start;
		
		private System.Nullable<System.DateTime> _Vt_end;
		
		private string _Tx_path;
		
		public T_account_ancestor()
		{
		}
		
		[Column(Name="id_ancestor", Storage="_Id_ancestor", DbType="Int NOT NULL")]
		public int Id_ancestor
		{
			get
			{
				return this._Id_ancestor;
			}
			set
			{
				if ((this._Id_ancestor != value))
				{
					this._Id_ancestor = value;
				}
			}
		}
		
		[Column(Name="id_descendent", Storage="_Id_descendent", DbType="Int NOT NULL")]
		public int Id_descendent
		{
			get
			{
				return this._Id_descendent;
			}
			set
			{
				if ((this._Id_descendent != value))
				{
					this._Id_descendent = value;
				}
			}
		}
		
		[Column(Name="num_generations", Storage="_Num_generations", DbType="Int NOT NULL")]
		public int Num_generations
		{
			get
			{
				return this._Num_generations;
			}
			set
			{
				if ((this._Num_generations != value))
				{
					this._Num_generations = value;
				}
			}
		}
		
		[Column(Name="b_children", Storage="_B_children", DbType="Char(1)")]
		public string B_children
		{
			get
			{
				return this._B_children;
			}
			set
			{
				if ((this._B_children != value))
				{
					this._B_children = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tx_path", Storage="_Tx_path", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Tx_path
		{
			get
			{
				return this._Tx_path;
			}
			set
			{
				if ((this._Tx_path != value))
				{
					this._Tx_path = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_account_mapper")]
	public partial class T_account_mapper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_login;
		
		private string _Nm_space;
		
		private int _Id_acc;
		
		private EntityRef<T_namespace> _T_namespace;
		
		private EntityRef<T_user_credentials> _T_user_credentials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    #endregion
		
		public T_account_mapper()
		{
			this._T_namespace = default(EntityRef<T_namespace>);
			this._T_user_credentials = default(EntityRef<T_user_credentials>);
			OnCreated();
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ACCOUNT_MAPPER", Storage="_T_namespace", ThisKey="Nm_space", OtherKey="Nm_space", IsForeignKey=true)]
		public T_namespace T_namespace
		{
			get
			{
				return this._T_namespace.Entity;
			}
			set
			{
				T_namespace previousValue = this._T_namespace.Entity;
				if (((previousValue != value) 
							|| (this._T_namespace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_namespace.Entity = null;
						previousValue.T_account_mapper.Remove(this);
					}
					this._T_namespace.Entity = value;
					if ((value != null))
					{
						value.T_account_mapper.Add(this);
						this._Nm_space = value.Nm_space;
					}
					else
					{
						this._Nm_space = default(string);
					}
					this.SendPropertyChanged("T_namespace");
				}
			}
		}
		
		[Association(Name="fk1_t_user_credentials", Storage="_T_user_credentials", ThisKey="Nm_login,Nm_space", OtherKey="Nm_login,Nm_space", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_user_credentials T_user_credentials
		{
			get
			{
				return this._T_user_credentials.Entity;
			}
			set
			{
				T_user_credentials previousValue = this._T_user_credentials.Entity;
				if (((previousValue != value) 
							|| (this._T_user_credentials.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_user_credentials.Entity = null;
						previousValue.T_account_mapper = null;
					}
					this._T_user_credentials.Entity = value;
					if ((value != null))
					{
						value.T_account_mapper = this;
					}
					this.SendPropertyChanged("T_user_credentials");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_account_state")]
	public partial class T_account_state
	{
		
		private int _Id_acc;
		
		private string _Status;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		public T_account_state()
		{
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_account_state_history")]
	public partial class T_account_state_history
	{
		
		private int _Id_acc;
		
		private string _Status;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_account_state_history()
		{
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_account_type")]
	public partial class T_account_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_type;
		
		private string _Name;
		
		private string _B_CanSubscribe;
		
		private string _B_CanBePayer;
		
		private string _B_CanHaveSyntheticRoot;
		
		private string _B_CanParticipateInGSub;
		
		private string _B_IsVisibleInHierarchy;
		
		private string _B_CanHaveTemplates;
		
		private string _B_IsCorporate;
		
		private string _Nm_description;
		
		private EntitySet<T_account> _T_account;
		
		private EntitySet<T_acctype_descendenttype_map> _T_acctype_descendenttype_map;
		
		private EntitySet<T_acctype_descendenttype_map> _Id_typeT_acctype_descendenttype_map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_typeChanging(int value);
    partial void OnId_typeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnB_CanSubscribeChanging(string value);
    partial void OnB_CanSubscribeChanged();
    partial void OnB_CanBePayerChanging(string value);
    partial void OnB_CanBePayerChanged();
    partial void OnB_CanHaveSyntheticRootChanging(string value);
    partial void OnB_CanHaveSyntheticRootChanged();
    partial void OnB_CanParticipateInGSubChanging(string value);
    partial void OnB_CanParticipateInGSubChanged();
    partial void OnB_IsVisibleInHierarchyChanging(string value);
    partial void OnB_IsVisibleInHierarchyChanged();
    partial void OnB_CanHaveTemplatesChanging(string value);
    partial void OnB_CanHaveTemplatesChanged();
    partial void OnB_IsCorporateChanging(string value);
    partial void OnB_IsCorporateChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    #endregion
		
		public T_account_type()
		{
			this._T_account = new EntitySet<T_account>(new Action<T_account>(this.attach_T_account), new Action<T_account>(this.detach_T_account));
			this._T_acctype_descendenttype_map = new EntitySet<T_acctype_descendenttype_map>(new Action<T_acctype_descendenttype_map>(this.attach_T_acctype_descendenttype_map), new Action<T_acctype_descendenttype_map>(this.detach_T_acctype_descendenttype_map));
			this._Id_typeT_acctype_descendenttype_map = new EntitySet<T_acctype_descendenttype_map>(new Action<T_acctype_descendenttype_map>(this.attach_Id_typeT_acctype_descendenttype_map), new Action<T_acctype_descendenttype_map>(this.detach_Id_typeT_acctype_descendenttype_map));
			OnCreated();
		}
		
		[Column(Name="id_type", Storage="_Id_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_type
		{
			get
			{
				return this._Id_type;
			}
			set
			{
				if ((this._Id_type != value))
				{
					this.OnId_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_type = value;
					this.SendPropertyChanged("Id_type");
					this.OnId_typeChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="b_CanSubscribe", Storage="_B_CanSubscribe", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_CanSubscribe
		{
			get
			{
				return this._B_CanSubscribe;
			}
			set
			{
				if ((this._B_CanSubscribe != value))
				{
					this.OnB_CanSubscribeChanging(value);
					this.SendPropertyChanging();
					this._B_CanSubscribe = value;
					this.SendPropertyChanged("B_CanSubscribe");
					this.OnB_CanSubscribeChanged();
				}
			}
		}
		
		[Column(Name="b_CanBePayer", Storage="_B_CanBePayer", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_CanBePayer
		{
			get
			{
				return this._B_CanBePayer;
			}
			set
			{
				if ((this._B_CanBePayer != value))
				{
					this.OnB_CanBePayerChanging(value);
					this.SendPropertyChanging();
					this._B_CanBePayer = value;
					this.SendPropertyChanged("B_CanBePayer");
					this.OnB_CanBePayerChanged();
				}
			}
		}
		
		[Column(Name="b_CanHaveSyntheticRoot", Storage="_B_CanHaveSyntheticRoot", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_CanHaveSyntheticRoot
		{
			get
			{
				return this._B_CanHaveSyntheticRoot;
			}
			set
			{
				if ((this._B_CanHaveSyntheticRoot != value))
				{
					this.OnB_CanHaveSyntheticRootChanging(value);
					this.SendPropertyChanging();
					this._B_CanHaveSyntheticRoot = value;
					this.SendPropertyChanged("B_CanHaveSyntheticRoot");
					this.OnB_CanHaveSyntheticRootChanged();
				}
			}
		}
		
		[Column(Name="b_CanParticipateInGSub", Storage="_B_CanParticipateInGSub", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_CanParticipateInGSub
		{
			get
			{
				return this._B_CanParticipateInGSub;
			}
			set
			{
				if ((this._B_CanParticipateInGSub != value))
				{
					this.OnB_CanParticipateInGSubChanging(value);
					this.SendPropertyChanging();
					this._B_CanParticipateInGSub = value;
					this.SendPropertyChanged("B_CanParticipateInGSub");
					this.OnB_CanParticipateInGSubChanged();
				}
			}
		}
		
		[Column(Name="b_IsVisibleInHierarchy", Storage="_B_IsVisibleInHierarchy", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_IsVisibleInHierarchy
		{
			get
			{
				return this._B_IsVisibleInHierarchy;
			}
			set
			{
				if ((this._B_IsVisibleInHierarchy != value))
				{
					this.OnB_IsVisibleInHierarchyChanging(value);
					this.SendPropertyChanging();
					this._B_IsVisibleInHierarchy = value;
					this.SendPropertyChanged("B_IsVisibleInHierarchy");
					this.OnB_IsVisibleInHierarchyChanged();
				}
			}
		}
		
		[Column(Name="b_CanHaveTemplates", Storage="_B_CanHaveTemplates", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_CanHaveTemplates
		{
			get
			{
				return this._B_CanHaveTemplates;
			}
			set
			{
				if ((this._B_CanHaveTemplates != value))
				{
					this.OnB_CanHaveTemplatesChanging(value);
					this.SendPropertyChanging();
					this._B_CanHaveTemplates = value;
					this.SendPropertyChanged("B_CanHaveTemplates");
					this.OnB_CanHaveTemplatesChanged();
				}
			}
		}
		
		[Column(Name="b_IsCorporate", Storage="_B_IsCorporate", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_IsCorporate
		{
			get
			{
				return this._B_IsCorporate;
			}
			set
			{
				if ((this._B_IsCorporate != value))
				{
					this.OnB_IsCorporateChanging(value);
					this.SendPropertyChanging();
					this._B_IsCorporate = value;
					this.SendPropertyChanged("B_IsCorporate");
					this.OnB_IsCorporateChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="VarChar(512)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_account", Storage="_T_account", ThisKey="Id_type", OtherKey="Id_type", DeleteRule="NO ACTION")]
		public EntitySet<T_account> T_account
		{
			get
			{
				return this._T_account;
			}
			set
			{
				this._T_account.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_acctype_descendenttype_map", Storage="_T_acctype_descendenttype_map", ThisKey="Id_type", OtherKey="Id_type", DeleteRule="NO ACTION")]
		public EntitySet<T_acctype_descendenttype_map> T_acctype_descendenttype_map
		{
			get
			{
				return this._T_acctype_descendenttype_map;
			}
			set
			{
				this._T_acctype_descendenttype_map.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_acctype_descendenttype_map", Storage="_Id_typeT_acctype_descendenttype_map", ThisKey="Id_type", OtherKey="Id_descendent_type", DeleteRule="NO ACTION")]
		public EntitySet<T_acctype_descendenttype_map> Id_typeT_acctype_descendenttype_map
		{
			get
			{
				return this._Id_typeT_acctype_descendenttype_map;
			}
			set
			{
				this._Id_typeT_acctype_descendenttype_map.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_account(T_account entity)
		{
			this.SendPropertyChanging();
			entity.T_account_type = this;
		}
		
		private void detach_T_account(T_account entity)
		{
			this.SendPropertyChanging();
			entity.T_account_type = null;
		}
		
		private void attach_T_acctype_descendenttype_map(T_acctype_descendenttype_map entity)
		{
			this.SendPropertyChanging();
			entity.T_account_type = this;
		}
		
		private void detach_T_acctype_descendenttype_map(T_acctype_descendenttype_map entity)
		{
			this.SendPropertyChanging();
			entity.T_account_type = null;
		}
		
		private void attach_Id_typeT_acctype_descendenttype_map(T_acctype_descendenttype_map entity)
		{
			this.SendPropertyChanging();
			entity.Id_descendent_typeT_account_type = this;
		}
		
		private void detach_Id_typeT_acctype_descendenttype_map(T_acctype_descendenttype_map entity)
		{
			this.SendPropertyChanging();
			entity.Id_descendent_typeT_account_type = null;
		}
	}
	
	[Table(Name="dbo.t_account_type_servicedef_map")]
	public partial class T_account_type_servicedef_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_type;
		
		private int _Operation;
		
		private int _Id_service_def;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_typeChanging(int value);
    partial void OnId_typeChanged();
    partial void OnOperationChanging(int value);
    partial void OnOperationChanged();
    partial void OnId_service_defChanging(int value);
    partial void OnId_service_defChanged();
    #endregion
		
		public T_account_type_servicedef_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_type", Storage="_Id_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_type
		{
			get
			{
				return this._Id_type;
			}
			set
			{
				if ((this._Id_type != value))
				{
					this.OnId_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_type = value;
					this.SendPropertyChanged("Id_type");
					this.OnId_typeChanged();
				}
			}
		}
		
		[Column(Name="operation", Storage="_Operation", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[Column(Name="id_service_def", Storage="_Id_service_def", DbType="Int NOT NULL")]
		public int Id_service_def
		{
			get
			{
				return this._Id_service_def;
			}
			set
			{
				if ((this._Id_service_def != value))
				{
					this.OnId_service_defChanging(value);
					this.SendPropertyChanging();
					this._Id_service_def = value;
					this.SendPropertyChanged("Id_service_def");
					this.OnId_service_defChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_account_type_view_map")]
	public partial class T_account_type_view_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_type;
		
		private int _Id_account_view;
		
		private string _Account_view_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_typeChanging(int value);
    partial void OnId_typeChanged();
    partial void OnId_account_viewChanging(int value);
    partial void OnId_account_viewChanged();
    partial void OnAccount_view_nameChanging(string value);
    partial void OnAccount_view_nameChanged();
    #endregion
		
		public T_account_type_view_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_type", Storage="_Id_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_type
		{
			get
			{
				return this._Id_type;
			}
			set
			{
				if ((this._Id_type != value))
				{
					this.OnId_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_type = value;
					this.SendPropertyChanged("Id_type");
					this.OnId_typeChanged();
				}
			}
		}
		
		[Column(Name="id_account_view", Storage="_Id_account_view", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_account_view
		{
			get
			{
				return this._Id_account_view;
			}
			set
			{
				if ((this._Id_account_view != value))
				{
					this.OnId_account_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_account_view = value;
					this.SendPropertyChanged("Id_account_view");
					this.OnId_account_viewChanged();
				}
			}
		}
		
		[Column(Name="account_view_name", Storage="_Account_view_name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Account_view_name
		{
			get
			{
				return this._Account_view_name;
			}
			set
			{
				if ((this._Account_view_name != value))
				{
					this.OnAccount_view_nameChanging(value);
					this.SendPropertyChanging();
					this._Account_view_name = value;
					this.SendPropertyChanged("Account_view_name");
					this.OnAccount_view_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_account_view_log")]
	public partial class T_account_view_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_account_view;
		
		private string _Nm_account_view;
		
		private int _Id_revision;
		
		private string _Tx_checksum;
		
		private string _Nm_table_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_account_viewChanging(int value);
    partial void OnId_account_viewChanged();
    partial void OnNm_account_viewChanging(string value);
    partial void OnNm_account_viewChanged();
    partial void OnId_revisionChanging(int value);
    partial void OnId_revisionChanged();
    partial void OnTx_checksumChanging(string value);
    partial void OnTx_checksumChanged();
    partial void OnNm_table_nameChanging(string value);
    partial void OnNm_table_nameChanged();
    #endregion
		
		public T_account_view_log()
		{
			OnCreated();
		}
		
		[Column(Name="id_account_view", Storage="_Id_account_view", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_account_view
		{
			get
			{
				return this._Id_account_view;
			}
			set
			{
				if ((this._Id_account_view != value))
				{
					this.OnId_account_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_account_view = value;
					this.SendPropertyChanged("Id_account_view");
					this.OnId_account_viewChanged();
				}
			}
		}
		
		[Column(Name="nm_account_view", Storage="_Nm_account_view", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_account_view
		{
			get
			{
				return this._Nm_account_view;
			}
			set
			{
				if ((this._Nm_account_view != value))
				{
					this.OnNm_account_viewChanging(value);
					this.SendPropertyChanging();
					this._Nm_account_view = value;
					this.SendPropertyChanged("Nm_account_view");
					this.OnNm_account_viewChanged();
				}
			}
		}
		
		[Column(Name="id_revision", Storage="_Id_revision", DbType="Int NOT NULL")]
		public int Id_revision
		{
			get
			{
				return this._Id_revision;
			}
			set
			{
				if ((this._Id_revision != value))
				{
					this.OnId_revisionChanging(value);
					this.SendPropertyChanging();
					this._Id_revision = value;
					this.SendPropertyChanged("Id_revision");
					this.OnId_revisionChanged();
				}
			}
		}
		
		[Column(Name="tx_checksum", Storage="_Tx_checksum", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tx_checksum
		{
			get
			{
				return this._Tx_checksum;
			}
			set
			{
				if ((this._Tx_checksum != value))
				{
					this.OnTx_checksumChanging(value);
					this.SendPropertyChanging();
					this._Tx_checksum = value;
					this.SendPropertyChanged("Tx_checksum");
					this.OnTx_checksumChanged();
				}
			}
		}
		
		[Column(Name="nm_table_name", Storage="_Nm_table_name", DbType="VarChar(255)")]
		public string Nm_table_name
		{
			get
			{
				return this._Nm_table_name;
			}
			set
			{
				if ((this._Nm_table_name != value))
				{
					this.OnNm_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_table_name = value;
					this.SendPropertyChanged("Nm_table_name");
					this.OnNm_table_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_account_view_prop")]
	public partial class T_account_view_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_account_view_prop;
		
		private int _Id_account_view;
		
		private string _Nm_name;
		
		private string _Nm_data_type;
		
		private string _Nm_column_name;
		
		private string _B_required;
		
		private string _B_composite_idx;
		
		private string _B_single_idx;
		
		private string _B_part_of_key;
		
		private string _B_exportable;
		
		private string _B_filterable;
		
		private string _B_user_visible;
		
		private string _Nm_default_value;
		
		private int _N_prop_type;
		
		private string _Nm_space;
		
		private string _Nm_enum;
		
		private string _B_core;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_account_view_propChanging(int value);
    partial void OnId_account_view_propChanged();
    partial void OnId_account_viewChanging(int value);
    partial void OnId_account_viewChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_data_typeChanging(string value);
    partial void OnNm_data_typeChanged();
    partial void OnNm_column_nameChanging(string value);
    partial void OnNm_column_nameChanged();
    partial void OnB_requiredChanging(string value);
    partial void OnB_requiredChanged();
    partial void OnB_composite_idxChanging(string value);
    partial void OnB_composite_idxChanged();
    partial void OnB_single_idxChanging(string value);
    partial void OnB_single_idxChanged();
    partial void OnB_part_of_keyChanging(string value);
    partial void OnB_part_of_keyChanged();
    partial void OnB_exportableChanging(string value);
    partial void OnB_exportableChanged();
    partial void OnB_filterableChanging(string value);
    partial void OnB_filterableChanged();
    partial void OnB_user_visibleChanging(string value);
    partial void OnB_user_visibleChanged();
    partial void OnNm_default_valueChanging(string value);
    partial void OnNm_default_valueChanged();
    partial void OnN_prop_typeChanging(int value);
    partial void OnN_prop_typeChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnNm_enumChanging(string value);
    partial void OnNm_enumChanged();
    partial void OnB_coreChanging(string value);
    partial void OnB_coreChanged();
    #endregion
		
		public T_account_view_prop()
		{
			OnCreated();
		}
		
		[Column(Name="id_account_view_prop", Storage="_Id_account_view_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_account_view_prop
		{
			get
			{
				return this._Id_account_view_prop;
			}
			set
			{
				if ((this._Id_account_view_prop != value))
				{
					this.OnId_account_view_propChanging(value);
					this.SendPropertyChanging();
					this._Id_account_view_prop = value;
					this.SendPropertyChanged("Id_account_view_prop");
					this.OnId_account_view_propChanged();
				}
			}
		}
		
		[Column(Name="id_account_view", Storage="_Id_account_view", DbType="Int NOT NULL")]
		public int Id_account_view
		{
			get
			{
				return this._Id_account_view;
			}
			set
			{
				if ((this._Id_account_view != value))
				{
					this.OnId_account_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_account_view = value;
					this.SendPropertyChanged("Id_account_view");
					this.OnId_account_viewChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_data_type", Storage="_Nm_data_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_data_type
		{
			get
			{
				return this._Nm_data_type;
			}
			set
			{
				if ((this._Nm_data_type != value))
				{
					this.OnNm_data_typeChanging(value);
					this.SendPropertyChanging();
					this._Nm_data_type = value;
					this.SendPropertyChanged("Nm_data_type");
					this.OnNm_data_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_column_name", Storage="_Nm_column_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_column_name
		{
			get
			{
				return this._Nm_column_name;
			}
			set
			{
				if ((this._Nm_column_name != value))
				{
					this.OnNm_column_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_column_name = value;
					this.SendPropertyChanged("Nm_column_name");
					this.OnNm_column_nameChanged();
				}
			}
		}
		
		[Column(Name="b_required", Storage="_B_required", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_required
		{
			get
			{
				return this._B_required;
			}
			set
			{
				if ((this._B_required != value))
				{
					this.OnB_requiredChanging(value);
					this.SendPropertyChanging();
					this._B_required = value;
					this.SendPropertyChanged("B_required");
					this.OnB_requiredChanged();
				}
			}
		}
		
		[Column(Name="b_composite_idx", Storage="_B_composite_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_composite_idx
		{
			get
			{
				return this._B_composite_idx;
			}
			set
			{
				if ((this._B_composite_idx != value))
				{
					this.OnB_composite_idxChanging(value);
					this.SendPropertyChanging();
					this._B_composite_idx = value;
					this.SendPropertyChanged("B_composite_idx");
					this.OnB_composite_idxChanged();
				}
			}
		}
		
		[Column(Name="b_single_idx", Storage="_B_single_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_single_idx
		{
			get
			{
				return this._B_single_idx;
			}
			set
			{
				if ((this._B_single_idx != value))
				{
					this.OnB_single_idxChanging(value);
					this.SendPropertyChanging();
					this._B_single_idx = value;
					this.SendPropertyChanged("B_single_idx");
					this.OnB_single_idxChanged();
				}
			}
		}
		
		[Column(Name="b_part_of_key", Storage="_B_part_of_key", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_part_of_key
		{
			get
			{
				return this._B_part_of_key;
			}
			set
			{
				if ((this._B_part_of_key != value))
				{
					this.OnB_part_of_keyChanging(value);
					this.SendPropertyChanging();
					this._B_part_of_key = value;
					this.SendPropertyChanged("B_part_of_key");
					this.OnB_part_of_keyChanged();
				}
			}
		}
		
		[Column(Name="b_exportable", Storage="_B_exportable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_exportable
		{
			get
			{
				return this._B_exportable;
			}
			set
			{
				if ((this._B_exportable != value))
				{
					this.OnB_exportableChanging(value);
					this.SendPropertyChanging();
					this._B_exportable = value;
					this.SendPropertyChanged("B_exportable");
					this.OnB_exportableChanged();
				}
			}
		}
		
		[Column(Name="b_filterable", Storage="_B_filterable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_filterable
		{
			get
			{
				return this._B_filterable;
			}
			set
			{
				if ((this._B_filterable != value))
				{
					this.OnB_filterableChanging(value);
					this.SendPropertyChanging();
					this._B_filterable = value;
					this.SendPropertyChanged("B_filterable");
					this.OnB_filterableChanged();
				}
			}
		}
		
		[Column(Name="b_user_visible", Storage="_B_user_visible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_visible
		{
			get
			{
				return this._B_user_visible;
			}
			set
			{
				if ((this._B_user_visible != value))
				{
					this.OnB_user_visibleChanging(value);
					this.SendPropertyChanging();
					this._B_user_visible = value;
					this.SendPropertyChanged("B_user_visible");
					this.OnB_user_visibleChanged();
				}
			}
		}
		
		[Column(Name="nm_default_value", Storage="_Nm_default_value", DbType="NVarChar(255)")]
		public string Nm_default_value
		{
			get
			{
				return this._Nm_default_value;
			}
			set
			{
				if ((this._Nm_default_value != value))
				{
					this.OnNm_default_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_default_value = value;
					this.SendPropertyChanged("Nm_default_value");
					this.OnNm_default_valueChanged();
				}
			}
		}
		
		[Column(Name="n_prop_type", Storage="_N_prop_type", DbType="Int NOT NULL")]
		public int N_prop_type
		{
			get
			{
				return this._N_prop_type;
			}
			set
			{
				if ((this._N_prop_type != value))
				{
					this.OnN_prop_typeChanging(value);
					this.SendPropertyChanging();
					this._N_prop_type = value;
					this.SendPropertyChanged("N_prop_type");
					this.OnN_prop_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(255)")]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="nm_enum", Storage="_Nm_enum", DbType="NVarChar(255)")]
		public string Nm_enum
		{
			get
			{
				return this._Nm_enum;
			}
			set
			{
				if ((this._Nm_enum != value))
				{
					this.OnNm_enumChanging(value);
					this.SendPropertyChanging();
					this._Nm_enum = value;
					this.SendPropertyChanged("Nm_enum");
					this.OnNm_enumChanged();
				}
			}
		}
		
		[Column(Name="b_core", Storage="_B_core", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_core
		{
			get
			{
				return this._B_core;
			}
			set
			{
				if ((this._B_core != value))
				{
					this.OnB_coreChanging(value);
					this.SendPropertyChanging();
					this._B_core = value;
					this.SendPropertyChanged("B_core");
					this.OnB_coreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_acctype_descendenttype_map")]
	public partial class T_acctype_descendenttype_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_type;
		
		private int _Id_descendent_type;
		
		private EntityRef<T_account_type> _T_account_type;
		
		private EntityRef<T_account_type> _Id_descendent_typeT_account_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_typeChanging(int value);
    partial void OnId_typeChanged();
    partial void OnId_descendent_typeChanging(int value);
    partial void OnId_descendent_typeChanged();
    #endregion
		
		public T_acctype_descendenttype_map()
		{
			this._T_account_type = default(EntityRef<T_account_type>);
			this._Id_descendent_typeT_account_type = default(EntityRef<T_account_type>);
			OnCreated();
		}
		
		[Column(Name="id_type", Storage="_Id_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_type
		{
			get
			{
				return this._Id_type;
			}
			set
			{
				if ((this._Id_type != value))
				{
					this.OnId_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_type = value;
					this.SendPropertyChanged("Id_type");
					this.OnId_typeChanged();
				}
			}
		}
		
		[Column(Name="id_descendent_type", Storage="_Id_descendent_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_descendent_type
		{
			get
			{
				return this._Id_descendent_type;
			}
			set
			{
				if ((this._Id_descendent_type != value))
				{
					this.OnId_descendent_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_descendent_type = value;
					this.SendPropertyChanged("Id_descendent_type");
					this.OnId_descendent_typeChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_acctype_descendenttype_map", Storage="_T_account_type", ThisKey="Id_type", OtherKey="Id_type", IsForeignKey=true)]
		public T_account_type T_account_type
		{
			get
			{
				return this._T_account_type.Entity;
			}
			set
			{
				T_account_type previousValue = this._T_account_type.Entity;
				if (((previousValue != value) 
							|| (this._T_account_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account_type.Entity = null;
						previousValue.T_acctype_descendenttype_map.Remove(this);
					}
					this._T_account_type.Entity = value;
					if ((value != null))
					{
						value.T_acctype_descendenttype_map.Add(this);
						this._Id_type = value.Id_type;
					}
					else
					{
						this._Id_type = default(int);
					}
					this.SendPropertyChanged("T_account_type");
				}
			}
		}
		
		[Association(Name="fk2_t_acctype_descendenttype_map", Storage="_Id_descendent_typeT_account_type", ThisKey="Id_descendent_type", OtherKey="Id_type", IsForeignKey=true)]
		public T_account_type Id_descendent_typeT_account_type
		{
			get
			{
				return this._Id_descendent_typeT_account_type.Entity;
			}
			set
			{
				T_account_type previousValue = this._Id_descendent_typeT_account_type.Entity;
				if (((previousValue != value) 
							|| (this._Id_descendent_typeT_account_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_descendent_typeT_account_type.Entity = null;
						previousValue.Id_typeT_acctype_descendenttype_map.Remove(this);
					}
					this._Id_descendent_typeT_account_type.Entity = value;
					if ((value != null))
					{
						value.Id_typeT_acctype_descendenttype_map.Add(this);
						this._Id_descendent_type = value.Id_type;
					}
					else
					{
						this._Id_descendent_type = default(int);
					}
					this.SendPropertyChanged("Id_descendent_typeT_account_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_active_tickets")]
	public partial class T_active_tickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ticket;
		
		private string _Nm_salt;
		
		private int _Id_acc;
		
		private string _Nm_space;
		
		private string _Nm_login;
		
		private int _N_lifespanminutes;
		
		private System.DateTime _Dt_create;
		
		private System.DateTime _Dt_expiration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ticketChanging(int value);
    partial void OnId_ticketChanged();
    partial void OnNm_saltChanging(string value);
    partial void OnNm_saltChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnN_lifespanminutesChanging(int value);
    partial void OnN_lifespanminutesChanged();
    partial void OnDt_createChanging(System.DateTime value);
    partial void OnDt_createChanged();
    partial void OnDt_expirationChanging(System.DateTime value);
    partial void OnDt_expirationChanged();
    #endregion
		
		public T_active_tickets()
		{
			OnCreated();
		}
		
		[Column(Name="id_ticket", Storage="_Id_ticket", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ticket
		{
			get
			{
				return this._Id_ticket;
			}
			set
			{
				if ((this._Id_ticket != value))
				{
					this.OnId_ticketChanging(value);
					this.SendPropertyChanging();
					this._Id_ticket = value;
					this.SendPropertyChanged("Id_ticket");
					this.OnId_ticketChanged();
				}
			}
		}
		
		[Column(Name="nm_salt", Storage="_Nm_salt", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_salt
		{
			get
			{
				return this._Nm_salt;
			}
			set
			{
				if ((this._Nm_salt != value))
				{
					this.OnNm_saltChanging(value);
					this.SendPropertyChanging();
					this._Nm_salt = value;
					this.SendPropertyChanged("Nm_salt");
					this.OnNm_saltChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="n_lifespanminutes", Storage="_N_lifespanminutes", DbType="Int NOT NULL")]
		public int N_lifespanminutes
		{
			get
			{
				return this._N_lifespanminutes;
			}
			set
			{
				if ((this._N_lifespanminutes != value))
				{
					this.OnN_lifespanminutesChanging(value);
					this.SendPropertyChanging();
					this._N_lifespanminutes = value;
					this.SendPropertyChanged("N_lifespanminutes");
					this.OnN_lifespanminutesChanged();
				}
			}
		}
		
		[Column(Name="dt_create", Storage="_Dt_create", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_create
		{
			get
			{
				return this._Dt_create;
			}
			set
			{
				if ((this._Dt_create != value))
				{
					this.OnDt_createChanging(value);
					this.SendPropertyChanging();
					this._Dt_create = value;
					this.SendPropertyChanged("Dt_create");
					this.OnDt_createChanged();
				}
			}
		}
		
		[Column(Name="dt_expiration", Storage="_Dt_expiration", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_expiration
		{
			get
			{
				return this._Dt_expiration;
			}
			set
			{
				if ((this._Dt_expiration != value))
				{
					this.OnDt_expirationChanging(value);
					this.SendPropertyChanging();
					this._Dt_expiration = value;
					this.SendPropertyChanged("Dt_expiration");
					this.OnDt_expirationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_adjustment")]
	public partial class T_adjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private System.Nullable<int> _Id_pi_template;
		
		private System.Nullable<int> _Id_pi_instance;
		
		private int _Id_adjustment_type;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_pi_template> _T_pi_template;
		
		private EntityRef<T_adjustment_type> _T_adjustment_type;
		
		private EntitySet<T_adjustment_transaction> _T_adjustment_transaction;
		
		private EntitySet<T_adjustment_transaction> _Id_propT_adjustment_transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnId_pi_templateChanging(System.Nullable<int> value);
    partial void OnId_pi_templateChanged();
    partial void OnId_pi_instanceChanging(System.Nullable<int> value);
    partial void OnId_pi_instanceChanged();
    partial void OnId_adjustment_typeChanging(int value);
    partial void OnId_adjustment_typeChanged();
    #endregion
		
		public T_adjustment()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_pi_template = default(EntityRef<T_pi_template>);
			this._T_adjustment_type = default(EntityRef<T_adjustment_type>);
			this._T_adjustment_transaction = new EntitySet<T_adjustment_transaction>(new Action<T_adjustment_transaction>(this.attach_T_adjustment_transaction), new Action<T_adjustment_transaction>(this.detach_T_adjustment_transaction));
			this._Id_propT_adjustment_transaction = new EntitySet<T_adjustment_transaction>(new Action<T_adjustment_transaction>(this.attach_Id_propT_adjustment_transaction), new Action<T_adjustment_transaction>(this.detach_Id_propT_adjustment_transaction));
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="id_pi_template", Storage="_Id_pi_template", DbType="Int")]
		public System.Nullable<int> Id_pi_template
		{
			get
			{
				return this._Id_pi_template;
			}
			set
			{
				if ((this._Id_pi_template != value))
				{
					this.OnId_pi_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_template = value;
					this.SendPropertyChanged("Id_pi_template");
					this.OnId_pi_templateChanged();
				}
			}
		}
		
		[Column(Name="id_pi_instance", Storage="_Id_pi_instance", DbType="Int")]
		public System.Nullable<int> Id_pi_instance
		{
			get
			{
				return this._Id_pi_instance;
			}
			set
			{
				if ((this._Id_pi_instance != value))
				{
					this.OnId_pi_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_instance = value;
					this.SendPropertyChanged("Id_pi_instance");
					this.OnId_pi_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_adjustment_type", Storage="_Id_adjustment_type", DbType="Int NOT NULL")]
		public int Id_adjustment_type
		{
			get
			{
				return this._Id_adjustment_type;
			}
			set
			{
				if ((this._Id_adjustment_type != value))
				{
					this.OnId_adjustment_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_adjustment_type = value;
					this.SendPropertyChanged("Id_adjustment_type");
					this.OnId_adjustment_typeChanged();
				}
			}
		}
		
		[Association(Name="t_adjustment_fk1", Storage="_T_base_props", ThisKey="Id_pi_instance", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_adjustment.Remove(this);
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_adjustment.Add(this);
						this._Id_pi_instance = value.Id_prop;
					}
					else
					{
						this._Id_pi_instance = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="t_adjustment_fk2", Storage="_T_pi_template", ThisKey="Id_pi_template", OtherKey="Id_template", IsForeignKey=true)]
		public T_pi_template T_pi_template
		{
			get
			{
				return this._T_pi_template.Entity;
			}
			set
			{
				T_pi_template previousValue = this._T_pi_template.Entity;
				if (((previousValue != value) 
							|| (this._T_pi_template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pi_template.Entity = null;
						previousValue.T_adjustment.Remove(this);
					}
					this._T_pi_template.Entity = value;
					if ((value != null))
					{
						value.T_adjustment.Add(this);
						this._Id_pi_template = value.Id_template;
					}
					else
					{
						this._Id_pi_template = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_pi_template");
				}
			}
		}
		
		[Association(Name="t_adjustment_fk3", Storage="_T_adjustment_type", ThisKey="Id_adjustment_type", OtherKey="Id_prop", IsForeignKey=true)]
		public T_adjustment_type T_adjustment_type
		{
			get
			{
				return this._T_adjustment_type.Entity;
			}
			set
			{
				T_adjustment_type previousValue = this._T_adjustment_type.Entity;
				if (((previousValue != value) 
							|| (this._T_adjustment_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_adjustment_type.Entity = null;
						previousValue.T_adjustment.Remove(this);
					}
					this._T_adjustment_type.Entity = value;
					if ((value != null))
					{
						value.T_adjustment.Add(this);
						this._Id_adjustment_type = value.Id_prop;
					}
					else
					{
						this._Id_adjustment_type = default(int);
					}
					this.SendPropertyChanged("T_adjustment_type");
				}
			}
		}
		
		[Association(Name="t_adjustment_trx_fk3", Storage="_T_adjustment_transaction", ThisKey="Id_prop", OtherKey="Id_aj_template", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment_transaction> T_adjustment_transaction
		{
			get
			{
				return this._T_adjustment_transaction;
			}
			set
			{
				this._T_adjustment_transaction.Assign(value);
			}
		}
		
		[Association(Name="t_adjustment_trx_fk4", Storage="_Id_propT_adjustment_transaction", ThisKey="Id_prop", OtherKey="Id_aj_instance", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment_transaction> Id_propT_adjustment_transaction
		{
			get
			{
				return this._Id_propT_adjustment_transaction;
			}
			set
			{
				this._Id_propT_adjustment_transaction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_adjustment_transaction(T_adjustment_transaction entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment = this;
		}
		
		private void detach_T_adjustment_transaction(T_adjustment_transaction entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment = null;
		}
		
		private void attach_Id_propT_adjustment_transaction(T_adjustment_transaction entity)
		{
			this.SendPropertyChanging();
			entity.Id_aj_instanceT_adjustment = this;
		}
		
		private void detach_Id_propT_adjustment_transaction(T_adjustment_transaction entity)
		{
			this.SendPropertyChanging();
			entity.Id_aj_instanceT_adjustment = null;
		}
	}
	
	[Table(Name="dbo.t_adjustment_transaction")]
	public partial class T_adjustment_transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_adj_trx;
		
		private System.Nullable<long> _Id_sess;
		
		private System.Nullable<long> _Id_parent_sess;
		
		private int _Id_reason_code;
		
		private int _Id_acc_creator;
		
		private int _Id_acc_payer;
		
		private string _C_status;
		
		private int _N_adjustmenttype;
		
		private System.DateTime _Dt_crt;
		
		private System.DateTime _Dt_modified;
		
		private System.Nullable<int> _Id_aj_template;
		
		private System.Nullable<int> _Id_aj_instance;
		
		private int _Id_aj_type;
		
		private int _Id_usage_interval;
		
		private decimal _AdjustmentAmount;
		
		private decimal _Aj_tax_federal;
		
		private decimal _Aj_tax_state;
		
		private decimal _Aj_tax_county;
		
		private decimal _Aj_tax_local;
		
		private decimal _Aj_tax_other;
		
		private string _Am_currency;
		
		private string _Tx_default_desc;
		
		private string _Tx_desc;
		
		private string _ARBatchID;
		
		private string _ARDelBatchID;
		
		private string _ARDelAction;
		
		private System.Nullable<int> _Archive_sess;
		
		private string _Div_currency;
		
		private System.Nullable<decimal> _Div_amount;
		
		private EntityRef<T_adjustment> _T_adjustment;
		
		private EntityRef<T_adjustment> _Id_aj_instanceT_adjustment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_adj_trxChanging(int value);
    partial void OnId_adj_trxChanged();
    partial void OnId_sessChanging(System.Nullable<long> value);
    partial void OnId_sessChanged();
    partial void OnId_parent_sessChanging(System.Nullable<long> value);
    partial void OnId_parent_sessChanged();
    partial void OnId_reason_codeChanging(int value);
    partial void OnId_reason_codeChanged();
    partial void OnId_acc_creatorChanging(int value);
    partial void OnId_acc_creatorChanged();
    partial void OnId_acc_payerChanging(int value);
    partial void OnId_acc_payerChanged();
    partial void OnC_statusChanging(string value);
    partial void OnC_statusChanged();
    partial void OnN_adjustmenttypeChanging(int value);
    partial void OnN_adjustmenttypeChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    partial void OnDt_modifiedChanging(System.DateTime value);
    partial void OnDt_modifiedChanged();
    partial void OnId_aj_templateChanging(System.Nullable<int> value);
    partial void OnId_aj_templateChanged();
    partial void OnId_aj_instanceChanging(System.Nullable<int> value);
    partial void OnId_aj_instanceChanged();
    partial void OnId_aj_typeChanging(int value);
    partial void OnId_aj_typeChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnAdjustmentAmountChanging(decimal value);
    partial void OnAdjustmentAmountChanged();
    partial void OnAj_tax_federalChanging(decimal value);
    partial void OnAj_tax_federalChanged();
    partial void OnAj_tax_stateChanging(decimal value);
    partial void OnAj_tax_stateChanged();
    partial void OnAj_tax_countyChanging(decimal value);
    partial void OnAj_tax_countyChanged();
    partial void OnAj_tax_localChanging(decimal value);
    partial void OnAj_tax_localChanged();
    partial void OnAj_tax_otherChanging(decimal value);
    partial void OnAj_tax_otherChanged();
    partial void OnAm_currencyChanging(string value);
    partial void OnAm_currencyChanged();
    partial void OnTx_default_descChanging(string value);
    partial void OnTx_default_descChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnARBatchIDChanging(string value);
    partial void OnARBatchIDChanged();
    partial void OnARDelBatchIDChanging(string value);
    partial void OnARDelBatchIDChanged();
    partial void OnARDelActionChanging(string value);
    partial void OnARDelActionChanged();
    partial void OnArchive_sessChanging(System.Nullable<int> value);
    partial void OnArchive_sessChanged();
    partial void OnDiv_currencyChanging(string value);
    partial void OnDiv_currencyChanged();
    partial void OnDiv_amountChanging(System.Nullable<decimal> value);
    partial void OnDiv_amountChanged();
    #endregion
		
		public T_adjustment_transaction()
		{
			this._T_adjustment = default(EntityRef<T_adjustment>);
			this._Id_aj_instanceT_adjustment = default(EntityRef<T_adjustment>);
			OnCreated();
		}
		
		[Column(Name="id_adj_trx", Storage="_Id_adj_trx", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_adj_trx
		{
			get
			{
				return this._Id_adj_trx;
			}
			set
			{
				if ((this._Id_adj_trx != value))
				{
					this.OnId_adj_trxChanging(value);
					this.SendPropertyChanging();
					this._Id_adj_trx = value;
					this.SendPropertyChanged("Id_adj_trx");
					this.OnId_adj_trxChanged();
				}
			}
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt")]
		public System.Nullable<long> Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_sess", Storage="_Id_parent_sess", DbType="BigInt")]
		public System.Nullable<long> Id_parent_sess
		{
			get
			{
				return this._Id_parent_sess;
			}
			set
			{
				if ((this._Id_parent_sess != value))
				{
					this.OnId_parent_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_sess = value;
					this.SendPropertyChanged("Id_parent_sess");
					this.OnId_parent_sessChanged();
				}
			}
		}
		
		[Column(Name="id_reason_code", Storage="_Id_reason_code", DbType="Int NOT NULL")]
		public int Id_reason_code
		{
			get
			{
				return this._Id_reason_code;
			}
			set
			{
				if ((this._Id_reason_code != value))
				{
					this.OnId_reason_codeChanging(value);
					this.SendPropertyChanging();
					this._Id_reason_code = value;
					this.SendPropertyChanged("Id_reason_code");
					this.OnId_reason_codeChanged();
				}
			}
		}
		
		[Column(Name="id_acc_creator", Storage="_Id_acc_creator", DbType="Int NOT NULL")]
		public int Id_acc_creator
		{
			get
			{
				return this._Id_acc_creator;
			}
			set
			{
				if ((this._Id_acc_creator != value))
				{
					this.OnId_acc_creatorChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_creator = value;
					this.SendPropertyChanged("Id_acc_creator");
					this.OnId_acc_creatorChanged();
				}
			}
		}
		
		[Column(Name="id_acc_payer", Storage="_Id_acc_payer", DbType="Int NOT NULL")]
		public int Id_acc_payer
		{
			get
			{
				return this._Id_acc_payer;
			}
			set
			{
				if ((this._Id_acc_payer != value))
				{
					this.OnId_acc_payerChanging(value);
					this.SendPropertyChanging();
					this._Id_acc_payer = value;
					this.SendPropertyChanged("Id_acc_payer");
					this.OnId_acc_payerChanged();
				}
			}
		}
		
		[Column(Name="c_status", Storage="_C_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string C_status
		{
			get
			{
				return this._C_status;
			}
			set
			{
				if ((this._C_status != value))
				{
					this.OnC_statusChanging(value);
					this.SendPropertyChanging();
					this._C_status = value;
					this.SendPropertyChanged("C_status");
					this.OnC_statusChanged();
				}
			}
		}
		
		[Column(Name="n_adjustmenttype", Storage="_N_adjustmenttype", DbType="Int NOT NULL")]
		public int N_adjustmenttype
		{
			get
			{
				return this._N_adjustmenttype;
			}
			set
			{
				if ((this._N_adjustmenttype != value))
				{
					this.OnN_adjustmenttypeChanging(value);
					this.SendPropertyChanging();
					this._N_adjustmenttype = value;
					this.SendPropertyChanged("N_adjustmenttype");
					this.OnN_adjustmenttypeChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this.OnDt_modifiedChanging(value);
					this.SendPropertyChanging();
					this._Dt_modified = value;
					this.SendPropertyChanged("Dt_modified");
					this.OnDt_modifiedChanged();
				}
			}
		}
		
		[Column(Name="id_aj_template", Storage="_Id_aj_template", DbType="Int")]
		public System.Nullable<int> Id_aj_template
		{
			get
			{
				return this._Id_aj_template;
			}
			set
			{
				if ((this._Id_aj_template != value))
				{
					this.OnId_aj_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_aj_template = value;
					this.SendPropertyChanged("Id_aj_template");
					this.OnId_aj_templateChanged();
				}
			}
		}
		
		[Column(Name="id_aj_instance", Storage="_Id_aj_instance", DbType="Int")]
		public System.Nullable<int> Id_aj_instance
		{
			get
			{
				return this._Id_aj_instance;
			}
			set
			{
				if ((this._Id_aj_instance != value))
				{
					this.OnId_aj_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_aj_instance = value;
					this.SendPropertyChanged("Id_aj_instance");
					this.OnId_aj_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_aj_type", Storage="_Id_aj_type", DbType="Int NOT NULL")]
		public int Id_aj_type
		{
			get
			{
				return this._Id_aj_type;
			}
			set
			{
				if ((this._Id_aj_type != value))
				{
					this.OnId_aj_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_aj_type = value;
					this.SendPropertyChanged("Id_aj_type");
					this.OnId_aj_typeChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Storage="_AdjustmentAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal AdjustmentAmount
		{
			get
			{
				return this._AdjustmentAmount;
			}
			set
			{
				if ((this._AdjustmentAmount != value))
				{
					this.OnAdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentAmount = value;
					this.SendPropertyChanged("AdjustmentAmount");
					this.OnAdjustmentAmountChanged();
				}
			}
		}
		
		[Column(Name="aj_tax_federal", Storage="_Aj_tax_federal", DbType="Decimal(22,10) NOT NULL")]
		public decimal Aj_tax_federal
		{
			get
			{
				return this._Aj_tax_federal;
			}
			set
			{
				if ((this._Aj_tax_federal != value))
				{
					this.OnAj_tax_federalChanging(value);
					this.SendPropertyChanging();
					this._Aj_tax_federal = value;
					this.SendPropertyChanged("Aj_tax_federal");
					this.OnAj_tax_federalChanged();
				}
			}
		}
		
		[Column(Name="aj_tax_state", Storage="_Aj_tax_state", DbType="Decimal(22,10) NOT NULL")]
		public decimal Aj_tax_state
		{
			get
			{
				return this._Aj_tax_state;
			}
			set
			{
				if ((this._Aj_tax_state != value))
				{
					this.OnAj_tax_stateChanging(value);
					this.SendPropertyChanging();
					this._Aj_tax_state = value;
					this.SendPropertyChanged("Aj_tax_state");
					this.OnAj_tax_stateChanged();
				}
			}
		}
		
		[Column(Name="aj_tax_county", Storage="_Aj_tax_county", DbType="Decimal(22,10) NOT NULL")]
		public decimal Aj_tax_county
		{
			get
			{
				return this._Aj_tax_county;
			}
			set
			{
				if ((this._Aj_tax_county != value))
				{
					this.OnAj_tax_countyChanging(value);
					this.SendPropertyChanging();
					this._Aj_tax_county = value;
					this.SendPropertyChanged("Aj_tax_county");
					this.OnAj_tax_countyChanged();
				}
			}
		}
		
		[Column(Name="aj_tax_local", Storage="_Aj_tax_local", DbType="Decimal(22,10) NOT NULL")]
		public decimal Aj_tax_local
		{
			get
			{
				return this._Aj_tax_local;
			}
			set
			{
				if ((this._Aj_tax_local != value))
				{
					this.OnAj_tax_localChanging(value);
					this.SendPropertyChanging();
					this._Aj_tax_local = value;
					this.SendPropertyChanged("Aj_tax_local");
					this.OnAj_tax_localChanged();
				}
			}
		}
		
		[Column(Name="aj_tax_other", Storage="_Aj_tax_other", DbType="Decimal(22,10) NOT NULL")]
		public decimal Aj_tax_other
		{
			get
			{
				return this._Aj_tax_other;
			}
			set
			{
				if ((this._Aj_tax_other != value))
				{
					this.OnAj_tax_otherChanging(value);
					this.SendPropertyChanging();
					this._Aj_tax_other = value;
					this.SendPropertyChanged("Aj_tax_other");
					this.OnAj_tax_otherChanged();
				}
			}
		}
		
		[Column(Name="am_currency", Storage="_Am_currency", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Am_currency
		{
			get
			{
				return this._Am_currency;
			}
			set
			{
				if ((this._Am_currency != value))
				{
					this.OnAm_currencyChanging(value);
					this.SendPropertyChanging();
					this._Am_currency = value;
					this.SendPropertyChanged("Am_currency");
					this.OnAm_currencyChanged();
				}
			}
		}
		
		[Column(Name="tx_default_desc", Storage="_Tx_default_desc", DbType="NVarChar(1900)")]
		public string Tx_default_desc
		{
			get
			{
				return this._Tx_default_desc;
			}
			set
			{
				if ((this._Tx_default_desc != value))
				{
					this.OnTx_default_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_default_desc = value;
					this.SendPropertyChanged("Tx_default_desc");
					this.OnTx_default_descChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(1900)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Storage="_ARBatchID", DbType="VarChar(15)")]
		public string ARBatchID
		{
			get
			{
				return this._ARBatchID;
			}
			set
			{
				if ((this._ARBatchID != value))
				{
					this.OnARBatchIDChanging(value);
					this.SendPropertyChanging();
					this._ARBatchID = value;
					this.SendPropertyChanged("ARBatchID");
					this.OnARBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ARDelBatchID", DbType="VarChar(15)")]
		public string ARDelBatchID
		{
			get
			{
				return this._ARDelBatchID;
			}
			set
			{
				if ((this._ARDelBatchID != value))
				{
					this.OnARDelBatchIDChanging(value);
					this.SendPropertyChanging();
					this._ARDelBatchID = value;
					this.SendPropertyChanged("ARDelBatchID");
					this.OnARDelBatchIDChanged();
				}
			}
		}
		
		[Column(Storage="_ARDelAction", DbType="Char(1)")]
		public string ARDelAction
		{
			get
			{
				return this._ARDelAction;
			}
			set
			{
				if ((this._ARDelAction != value))
				{
					this.OnARDelActionChanging(value);
					this.SendPropertyChanging();
					this._ARDelAction = value;
					this.SendPropertyChanged("ARDelAction");
					this.OnARDelActionChanged();
				}
			}
		}
		
		[Column(Name="archive_sess", Storage="_Archive_sess", DbType="Int")]
		public System.Nullable<int> Archive_sess
		{
			get
			{
				return this._Archive_sess;
			}
			set
			{
				if ((this._Archive_sess != value))
				{
					this.OnArchive_sessChanging(value);
					this.SendPropertyChanging();
					this._Archive_sess = value;
					this.SendPropertyChanged("Archive_sess");
					this.OnArchive_sessChanged();
				}
			}
		}
		
		[Column(Name="div_currency", Storage="_Div_currency", DbType="NVarChar(3)")]
		public string Div_currency
		{
			get
			{
				return this._Div_currency;
			}
			set
			{
				if ((this._Div_currency != value))
				{
					this.OnDiv_currencyChanging(value);
					this.SendPropertyChanging();
					this._Div_currency = value;
					this.SendPropertyChanged("Div_currency");
					this.OnDiv_currencyChanged();
				}
			}
		}
		
		[Column(Name="div_amount", Storage="_Div_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Div_amount
		{
			get
			{
				return this._Div_amount;
			}
			set
			{
				if ((this._Div_amount != value))
				{
					this.OnDiv_amountChanging(value);
					this.SendPropertyChanging();
					this._Div_amount = value;
					this.SendPropertyChanged("Div_amount");
					this.OnDiv_amountChanged();
				}
			}
		}
		
		[Association(Name="t_adjustment_trx_fk3", Storage="_T_adjustment", ThisKey="Id_aj_template", OtherKey="Id_prop", IsForeignKey=true)]
		public T_adjustment T_adjustment
		{
			get
			{
				return this._T_adjustment.Entity;
			}
			set
			{
				T_adjustment previousValue = this._T_adjustment.Entity;
				if (((previousValue != value) 
							|| (this._T_adjustment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_adjustment.Entity = null;
						previousValue.T_adjustment_transaction.Remove(this);
					}
					this._T_adjustment.Entity = value;
					if ((value != null))
					{
						value.T_adjustment_transaction.Add(this);
						this._Id_aj_template = value.Id_prop;
					}
					else
					{
						this._Id_aj_template = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_adjustment");
				}
			}
		}
		
		[Association(Name="t_adjustment_trx_fk4", Storage="_Id_aj_instanceT_adjustment", ThisKey="Id_aj_instance", OtherKey="Id_prop", IsForeignKey=true)]
		public T_adjustment Id_aj_instanceT_adjustment
		{
			get
			{
				return this._Id_aj_instanceT_adjustment.Entity;
			}
			set
			{
				T_adjustment previousValue = this._Id_aj_instanceT_adjustment.Entity;
				if (((previousValue != value) 
							|| (this._Id_aj_instanceT_adjustment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_aj_instanceT_adjustment.Entity = null;
						previousValue.Id_propT_adjustment_transaction.Remove(this);
					}
					this._Id_aj_instanceT_adjustment.Entity = value;
					if ((value != null))
					{
						value.Id_propT_adjustment_transaction.Add(this);
						this._Id_aj_instance = value.Id_prop;
					}
					else
					{
						this._Id_aj_instance = default(Nullable<int>);
					}
					this.SendPropertyChanged("Id_aj_instanceT_adjustment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_adjustment_type")]
	public partial class T_adjustment_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private int _Id_pi_type;
		
		private int _N_adjustmentType;
		
		private string _B_supportBulk;
		
		private int _Id_formula;
		
		private string _Tx_default_desc;
		
		private int _N_composite_adjustment;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_pi> _T_pi;
		
		private EntitySet<T_adjustment_type_prop> _T_adjustment_type_prop;
		
		private EntitySet<T_adjustment> _T_adjustment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnId_pi_typeChanging(int value);
    partial void OnId_pi_typeChanged();
    partial void OnN_adjustmentTypeChanging(int value);
    partial void OnN_adjustmentTypeChanged();
    partial void OnB_supportBulkChanging(string value);
    partial void OnB_supportBulkChanged();
    partial void OnId_formulaChanging(int value);
    partial void OnId_formulaChanged();
    partial void OnTx_default_descChanging(string value);
    partial void OnTx_default_descChanged();
    partial void OnN_composite_adjustmentChanging(int value);
    partial void OnN_composite_adjustmentChanged();
    #endregion
		
		public T_adjustment_type()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_pi = default(EntityRef<T_pi>);
			this._T_adjustment_type_prop = new EntitySet<T_adjustment_type_prop>(new Action<T_adjustment_type_prop>(this.attach_T_adjustment_type_prop), new Action<T_adjustment_type_prop>(this.detach_T_adjustment_type_prop));
			this._T_adjustment = new EntitySet<T_adjustment>(new Action<T_adjustment>(this.attach_T_adjustment), new Action<T_adjustment>(this.detach_T_adjustment));
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="id_pi_type", Storage="_Id_pi_type", DbType="Int NOT NULL")]
		public int Id_pi_type
		{
			get
			{
				return this._Id_pi_type;
			}
			set
			{
				if ((this._Id_pi_type != value))
				{
					this.OnId_pi_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_type = value;
					this.SendPropertyChanged("Id_pi_type");
					this.OnId_pi_typeChanged();
				}
			}
		}
		
		[Column(Name="n_adjustmentType", Storage="_N_adjustmentType", DbType="Int NOT NULL")]
		public int N_adjustmentType
		{
			get
			{
				return this._N_adjustmentType;
			}
			set
			{
				if ((this._N_adjustmentType != value))
				{
					this.OnN_adjustmentTypeChanging(value);
					this.SendPropertyChanging();
					this._N_adjustmentType = value;
					this.SendPropertyChanged("N_adjustmentType");
					this.OnN_adjustmentTypeChanged();
				}
			}
		}
		
		[Column(Name="b_supportBulk", Storage="_B_supportBulk", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_supportBulk
		{
			get
			{
				return this._B_supportBulk;
			}
			set
			{
				if ((this._B_supportBulk != value))
				{
					this.OnB_supportBulkChanging(value);
					this.SendPropertyChanging();
					this._B_supportBulk = value;
					this.SendPropertyChanged("B_supportBulk");
					this.OnB_supportBulkChanged();
				}
			}
		}
		
		[Column(Name="id_formula", Storage="_Id_formula", DbType="Int NOT NULL")]
		public int Id_formula
		{
			get
			{
				return this._Id_formula;
			}
			set
			{
				if ((this._Id_formula != value))
				{
					this.OnId_formulaChanging(value);
					this.SendPropertyChanging();
					this._Id_formula = value;
					this.SendPropertyChanged("Id_formula");
					this.OnId_formulaChanged();
				}
			}
		}
		
		[Column(Name="tx_default_desc", Storage="_Tx_default_desc", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Tx_default_desc
		{
			get
			{
				return this._Tx_default_desc;
			}
			set
			{
				if ((this._Tx_default_desc != value))
				{
					this.OnTx_default_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_default_desc = value;
					this.SendPropertyChanged("Tx_default_desc");
					this.OnTx_default_descChanged();
				}
			}
		}
		
		[Column(Name="n_composite_adjustment", Storage="_N_composite_adjustment", DbType="Int NOT NULL")]
		public int N_composite_adjustment
		{
			get
			{
				return this._N_composite_adjustment;
			}
			set
			{
				if ((this._N_composite_adjustment != value))
				{
					this.OnN_composite_adjustmentChanging(value);
					this.SendPropertyChanging();
					this._N_composite_adjustment = value;
					this.SendPropertyChanged("N_composite_adjustment");
					this.OnN_composite_adjustmentChanged();
				}
			}
		}
		
		[Association(Name="adjustment_type_fk1", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_adjustment_type = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_adjustment_type = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="adjustment_type_fk2", Storage="_T_pi", ThisKey="Id_pi_type", OtherKey="Id_pi", IsForeignKey=true)]
		public T_pi T_pi
		{
			get
			{
				return this._T_pi.Entity;
			}
			set
			{
				T_pi previousValue = this._T_pi.Entity;
				if (((previousValue != value) 
							|| (this._T_pi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pi.Entity = null;
						previousValue.T_adjustment_type.Remove(this);
					}
					this._T_pi.Entity = value;
					if ((value != null))
					{
						value.T_adjustment_type.Add(this);
						this._Id_pi_type = value.Id_pi;
					}
					else
					{
						this._Id_pi_type = default(int);
					}
					this.SendPropertyChanged("T_pi");
				}
			}
		}
		
		[Association(Name="adjustment_type_prop_fk1", Storage="_T_adjustment_type_prop", ThisKey="Id_prop", OtherKey="Id_adjustment_type", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment_type_prop> T_adjustment_type_prop
		{
			get
			{
				return this._T_adjustment_type_prop;
			}
			set
			{
				this._T_adjustment_type_prop.Assign(value);
			}
		}
		
		[Association(Name="t_adjustment_fk3", Storage="_T_adjustment", ThisKey="Id_prop", OtherKey="Id_adjustment_type", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment> T_adjustment
		{
			get
			{
				return this._T_adjustment;
			}
			set
			{
				this._T_adjustment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_adjustment_type_prop(T_adjustment_type_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment_type = this;
		}
		
		private void detach_T_adjustment_type_prop(T_adjustment_type_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment_type = null;
		}
		
		private void attach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment_type = this;
		}
		
		private void detach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_adjustment_type = null;
		}
	}
	
	[Table(Name="dbo.t_adjustment_type_prop")]
	public partial class T_adjustment_type_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _N_direction;
		
		private string _Nm_datatype;
		
		private int _Id_adjustment_type;
		
		private EntityRef<T_adjustment_type> _T_adjustment_type;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnN_directionChanging(int value);
    partial void OnN_directionChanged();
    partial void OnNm_datatypeChanging(string value);
    partial void OnNm_datatypeChanged();
    partial void OnId_adjustment_typeChanging(int value);
    partial void OnId_adjustment_typeChanged();
    #endregion
		
		public T_adjustment_type_prop()
		{
			this._T_adjustment_type = default(EntityRef<T_adjustment_type>);
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="n_direction", Storage="_N_direction", DbType="Int NOT NULL")]
		public int N_direction
		{
			get
			{
				return this._N_direction;
			}
			set
			{
				if ((this._N_direction != value))
				{
					this.OnN_directionChanging(value);
					this.SendPropertyChanging();
					this._N_direction = value;
					this.SendPropertyChanged("N_direction");
					this.OnN_directionChanged();
				}
			}
		}
		
		[Column(Name="nm_datatype", Storage="_Nm_datatype", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_datatype
		{
			get
			{
				return this._Nm_datatype;
			}
			set
			{
				if ((this._Nm_datatype != value))
				{
					this.OnNm_datatypeChanging(value);
					this.SendPropertyChanging();
					this._Nm_datatype = value;
					this.SendPropertyChanged("Nm_datatype");
					this.OnNm_datatypeChanged();
				}
			}
		}
		
		[Column(Name="id_adjustment_type", Storage="_Id_adjustment_type", DbType="Int NOT NULL")]
		public int Id_adjustment_type
		{
			get
			{
				return this._Id_adjustment_type;
			}
			set
			{
				if ((this._Id_adjustment_type != value))
				{
					this.OnId_adjustment_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_adjustment_type = value;
					this.SendPropertyChanged("Id_adjustment_type");
					this.OnId_adjustment_typeChanged();
				}
			}
		}
		
		[Association(Name="adjustment_type_prop_fk1", Storage="_T_adjustment_type", ThisKey="Id_adjustment_type", OtherKey="Id_prop", IsForeignKey=true)]
		public T_adjustment_type T_adjustment_type
		{
			get
			{
				return this._T_adjustment_type.Entity;
			}
			set
			{
				T_adjustment_type previousValue = this._T_adjustment_type.Entity;
				if (((previousValue != value) 
							|| (this._T_adjustment_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_adjustment_type.Entity = null;
						previousValue.T_adjustment_type_prop.Remove(this);
					}
					this._T_adjustment_type.Entity = value;
					if ((value != null))
					{
						value.T_adjustment_type_prop.Add(this);
						this._Id_adjustment_type = value.Id_prop;
					}
					else
					{
						this._Id_adjustment_type = default(int);
					}
					this.SendPropertyChanged("T_adjustment_type");
				}
			}
		}
		
		[Association(Name="adjustment_type_prop_fk2", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_adjustment_type_prop = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_adjustment_type_prop = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_aggregate")]
	public partial class T_aggregate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Nullable<int> _Id_usage_cycle;
		
		private System.Nullable<int> _Id_cycle_type;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
		private EntityRef<T_usage_cycle_type> _T_usage_cycle_type;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_usage_cycleChanging(System.Nullable<int> value);
    partial void OnId_usage_cycleChanged();
    partial void OnId_cycle_typeChanging(System.Nullable<int> value);
    partial void OnId_cycle_typeChanged();
    #endregion
		
		public T_aggregate()
		{
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			this._T_usage_cycle_type = default(EntityRef<T_usage_cycle_type>);
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int")]
		public System.Nullable<int> Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int")]
		public System.Nullable<int> Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_aggregate", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_aggregate.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_aggregate.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		[Association(Name="fk2_t_aggregate", Storage="_T_usage_cycle_type", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", IsForeignKey=true)]
		public T_usage_cycle_type T_usage_cycle_type
		{
			get
			{
				return this._T_usage_cycle_type.Entity;
			}
			set
			{
				T_usage_cycle_type previousValue = this._T_usage_cycle_type.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle_type.Entity = null;
						previousValue.T_aggregate.Remove(this);
					}
					this._T_usage_cycle_type.Entity = value;
					if ((value != null))
					{
						value.T_aggregate.Add(this);
						this._Id_cycle_type = value.Id_cycle_type;
					}
					else
					{
						this._Id_cycle_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle_type");
				}
			}
		}
		
		[Association(Name="fk3_t_aggregate", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_aggregate = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_aggregate = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_agr_properties")]
	public partial class T_agr_properties
	{
		
		private int _Id_agr_template;
		
		private System.Nullable<System.DateTime> _Effective_start_date;
		
		private System.Nullable<System.DateTime> _Effective_end_date;
		
		public T_agr_properties()
		{
		}
		
		[Column(Name="id_agr_template", Storage="_Id_agr_template", DbType="Int NOT NULL")]
		public int Id_agr_template
		{
			get
			{
				return this._Id_agr_template;
			}
			set
			{
				if ((this._Id_agr_template != value))
				{
					this._Id_agr_template = value;
				}
			}
		}
		
		[Column(Name="effective_start_date", Storage="_Effective_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Effective_start_date
		{
			get
			{
				return this._Effective_start_date;
			}
			set
			{
				if ((this._Effective_start_date != value))
				{
					this._Effective_start_date = value;
				}
			}
		}
		
		[Column(Name="effective_end_date", Storage="_Effective_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Effective_end_date
		{
			get
			{
				return this._Effective_end_date;
			}
			set
			{
				if ((this._Effective_end_date != value))
				{
					this._Effective_end_date = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_agr_template")]
	public partial class T_agr_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_agr_template;
		
		private int _N_template_name;
		
		private string _Nm_template_name;
		
		private System.Nullable<int> _N_template_description;
		
		private string _Nm_template_description;
		
		private System.Nullable<System.DateTime> _Created_date;
		
		private int _Created_by;
		
		private System.Nullable<System.DateTime> _Updated_date;
		
		private System.Nullable<int> _Updated_by;
		
		private System.Nullable<System.DateTime> _Available_start_date;
		
		private System.Nullable<System.DateTime> _Available_end_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_agr_templateChanging(int value);
    partial void OnId_agr_templateChanged();
    partial void OnN_template_nameChanging(int value);
    partial void OnN_template_nameChanged();
    partial void OnNm_template_nameChanging(string value);
    partial void OnNm_template_nameChanged();
    partial void OnN_template_descriptionChanging(System.Nullable<int> value);
    partial void OnN_template_descriptionChanged();
    partial void OnNm_template_descriptionChanging(string value);
    partial void OnNm_template_descriptionChanged();
    partial void OnCreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_dateChanged();
    partial void OnCreated_byChanging(int value);
    partial void OnCreated_byChanged();
    partial void OnUpdated_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_dateChanged();
    partial void OnUpdated_byChanging(System.Nullable<int> value);
    partial void OnUpdated_byChanged();
    partial void OnAvailable_start_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailable_start_dateChanged();
    partial void OnAvailable_end_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailable_end_dateChanged();
    #endregion
		
		public T_agr_template()
		{
			OnCreated();
		}
		
		[Column(Name="id_agr_template", Storage="_Id_agr_template", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_agr_template
		{
			get
			{
				return this._Id_agr_template;
			}
			set
			{
				if ((this._Id_agr_template != value))
				{
					this.OnId_agr_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_agr_template = value;
					this.SendPropertyChanged("Id_agr_template");
					this.OnId_agr_templateChanged();
				}
			}
		}
		
		[Column(Name="n_template_name", Storage="_N_template_name", DbType="Int NOT NULL")]
		public int N_template_name
		{
			get
			{
				return this._N_template_name;
			}
			set
			{
				if ((this._N_template_name != value))
				{
					this.OnN_template_nameChanging(value);
					this.SendPropertyChanging();
					this._N_template_name = value;
					this.SendPropertyChanged("N_template_name");
					this.OnN_template_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_template_name", Storage="_Nm_template_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_template_name
		{
			get
			{
				return this._Nm_template_name;
			}
			set
			{
				if ((this._Nm_template_name != value))
				{
					this.OnNm_template_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_template_name = value;
					this.SendPropertyChanged("Nm_template_name");
					this.OnNm_template_nameChanged();
				}
			}
		}
		
		[Column(Name="n_template_description", Storage="_N_template_description", DbType="Int")]
		public System.Nullable<int> N_template_description
		{
			get
			{
				return this._N_template_description;
			}
			set
			{
				if ((this._N_template_description != value))
				{
					this.OnN_template_descriptionChanging(value);
					this.SendPropertyChanging();
					this._N_template_description = value;
					this.SendPropertyChanged("N_template_description");
					this.OnN_template_descriptionChanged();
				}
			}
		}
		
		[Column(Name="nm_template_description", Storage="_Nm_template_description", DbType="NVarChar(255)")]
		public string Nm_template_description
		{
			get
			{
				return this._Nm_template_description;
			}
			set
			{
				if ((this._Nm_template_description != value))
				{
					this.OnNm_template_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_template_description = value;
					this.SendPropertyChanged("Nm_template_description");
					this.OnNm_template_descriptionChanged();
				}
			}
		}
		
		[Column(Name="created_date", Storage="_Created_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_date
		{
			get
			{
				return this._Created_date;
			}
			set
			{
				if ((this._Created_date != value))
				{
					this.OnCreated_dateChanging(value);
					this.SendPropertyChanging();
					this._Created_date = value;
					this.SendPropertyChanged("Created_date");
					this.OnCreated_dateChanged();
				}
			}
		}
		
		[Column(Name="created_by", Storage="_Created_by", DbType="Int NOT NULL")]
		public int Created_by
		{
			get
			{
				return this._Created_by;
			}
			set
			{
				if ((this._Created_by != value))
				{
					this.OnCreated_byChanging(value);
					this.SendPropertyChanging();
					this._Created_by = value;
					this.SendPropertyChanged("Created_by");
					this.OnCreated_byChanged();
				}
			}
		}
		
		[Column(Name="updated_date", Storage="_Updated_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated_date
		{
			get
			{
				return this._Updated_date;
			}
			set
			{
				if ((this._Updated_date != value))
				{
					this.OnUpdated_dateChanging(value);
					this.SendPropertyChanging();
					this._Updated_date = value;
					this.SendPropertyChanged("Updated_date");
					this.OnUpdated_dateChanged();
				}
			}
		}
		
		[Column(Name="updated_by", Storage="_Updated_by", DbType="Int")]
		public System.Nullable<int> Updated_by
		{
			get
			{
				return this._Updated_by;
			}
			set
			{
				if ((this._Updated_by != value))
				{
					this.OnUpdated_byChanging(value);
					this.SendPropertyChanging();
					this._Updated_by = value;
					this.SendPropertyChanged("Updated_by");
					this.OnUpdated_byChanged();
				}
			}
		}
		
		[Column(Name="available_start_date", Storage="_Available_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Available_start_date
		{
			get
			{
				return this._Available_start_date;
			}
			set
			{
				if ((this._Available_start_date != value))
				{
					this.OnAvailable_start_dateChanging(value);
					this.SendPropertyChanging();
					this._Available_start_date = value;
					this.SendPropertyChanged("Available_start_date");
					this.OnAvailable_start_dateChanged();
				}
			}
		}
		
		[Column(Name="available_end_date", Storage="_Available_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Available_end_date
		{
			get
			{
				return this._Available_end_date;
			}
			set
			{
				if ((this._Available_end_date != value))
				{
					this.OnAvailable_end_dateChanging(value);
					this.SendPropertyChanging();
					this._Available_end_date = value;
					this.SendPropertyChanged("Available_end_date");
					this.OnAvailable_end_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_agr_template_entity_map")]
	public partial class T_agr_template_entity_map
	{
		
		private int _Id_agr_template;
		
		private int _Id_entity;
		
		private int _Entity_type;
		
		public T_agr_template_entity_map()
		{
		}
		
		[Column(Name="id_agr_template", Storage="_Id_agr_template", DbType="Int NOT NULL")]
		public int Id_agr_template
		{
			get
			{
				return this._Id_agr_template;
			}
			set
			{
				if ((this._Id_agr_template != value))
				{
					this._Id_agr_template = value;
				}
			}
		}
		
		[Column(Name="id_entity", Storage="_Id_entity", DbType="Int NOT NULL")]
		public int Id_entity
		{
			get
			{
				return this._Id_entity;
			}
			set
			{
				if ((this._Id_entity != value))
				{
					this._Id_entity = value;
				}
			}
		}
		
		[Column(Name="entity_type", Storage="_Entity_type", DbType="Int NOT NULL")]
		public int Entity_type
		{
			get
			{
				return this._Entity_type;
			}
			set
			{
				if ((this._Entity_type != value))
				{
					this._Entity_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_audioconfcall")]
	public partial class T_aj_audioconfcall
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_UnusedPortCharges;
		
		private System.Nullable<decimal> _C_aj_OverusedPortCharges;
		
		private System.Nullable<decimal> _C_aj_CancelCharges;
		
		private System.Nullable<decimal> _C_aj_ReservationCharges;
		
		public T_aj_audioconfcall()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_UnusedPortCharges", Storage="_C_aj_UnusedPortCharges", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_UnusedPortCharges
		{
			get
			{
				return this._C_aj_UnusedPortCharges;
			}
			set
			{
				if ((this._C_aj_UnusedPortCharges != value))
				{
					this._C_aj_UnusedPortCharges = value;
				}
			}
		}
		
		[Column(Name="c_aj_OverusedPortCharges", Storage="_C_aj_OverusedPortCharges", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_OverusedPortCharges
		{
			get
			{
				return this._C_aj_OverusedPortCharges;
			}
			set
			{
				if ((this._C_aj_OverusedPortCharges != value))
				{
					this._C_aj_OverusedPortCharges = value;
				}
			}
		}
		
		[Column(Name="c_aj_CancelCharges", Storage="_C_aj_CancelCharges", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_CancelCharges
		{
			get
			{
				return this._C_aj_CancelCharges;
			}
			set
			{
				if ((this._C_aj_CancelCharges != value))
				{
					this._C_aj_CancelCharges = value;
				}
			}
		}
		
		[Column(Name="c_aj_ReservationCharges", Storage="_C_aj_ReservationCharges", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_ReservationCharges
		{
			get
			{
				return this._C_aj_ReservationCharges;
			}
			set
			{
				if ((this._C_aj_ReservationCharges != value))
				{
					this._C_aj_ReservationCharges = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_audioconfconnection")]
	public partial class T_aj_audioconfconnection
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_TransportAmount;
		
		private System.Nullable<decimal> _C_aj_BridgeAmount;
		
		public T_aj_audioconfconnection()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_TransportAmount", Storage="_C_aj_TransportAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_TransportAmount
		{
			get
			{
				return this._C_aj_TransportAmount;
			}
			set
			{
				if ((this._C_aj_TransportAmount != value))
				{
					this._C_aj_TransportAmount = value;
				}
			}
		}
		
		[Column(Name="c_aj_BridgeAmount", Storage="_C_aj_BridgeAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_BridgeAmount
		{
			get
			{
				return this._C_aj_BridgeAmount;
			}
			set
			{
				if ((this._C_aj_BridgeAmount != value))
				{
					this._C_aj_BridgeAmount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_audioconffeature")]
	public partial class T_aj_audioconffeature
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_SetupCharge;
		
		private System.Nullable<decimal> _C_aj_TimeBasedCharge;
		
		private System.Nullable<decimal> _C_aj_MetricCharge;
		
		public T_aj_audioconffeature()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_SetupCharge", Storage="_C_aj_SetupCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_SetupCharge
		{
			get
			{
				return this._C_aj_SetupCharge;
			}
			set
			{
				if ((this._C_aj_SetupCharge != value))
				{
					this._C_aj_SetupCharge = value;
				}
			}
		}
		
		[Column(Name="c_aj_TimeBasedCharge", Storage="_C_aj_TimeBasedCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_TimeBasedCharge
		{
			get
			{
				return this._C_aj_TimeBasedCharge;
			}
			set
			{
				if ((this._C_aj_TimeBasedCharge != value))
				{
					this._C_aj_TimeBasedCharge = value;
				}
			}
		}
		
		[Column(Name="c_aj_MetricCharge", Storage="_C_aj_MetricCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_MetricCharge
		{
			get
			{
				return this._C_aj_MetricCharge;
			}
			set
			{
				if ((this._C_aj_MetricCharge != value))
				{
					this._C_aj_MetricCharge = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_BillSoftPCode")]
	public partial class T_aj_BillSoftPCode
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_BillSoftPCode()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_Commitment")]
	public partial class T_aj_Commitment
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_Commitment()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_FlatDiscount")]
	public partial class T_aj_FlatDiscount
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_FlatDiscount()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_FlatDiscount_NoCond")]
	public partial class T_aj_FlatDiscount_NoCond
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_FlatDiscount_NoCond()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_FlatRecurringCharge")]
	public partial class T_aj_FlatRecurringCharge
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_FlatRecurringCharge()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_FreeUsage")]
	public partial class T_aj_FreeUsage
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_FreeUsage()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_MetraTax")]
	public partial class T_aj_MetraTax
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_MetraTax()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_movietickets")]
	public partial class T_aj_movietickets
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_movietickets()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_MultiBucketDiscount")]
	public partial class T_aj_MultiBucketDiscount
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_MultiBucketDiscount()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_MultiBucketPricing")]
	public partial class T_aj_MultiBucketPricing
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_MultiBucketPricing()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_NonRecurringCharge")]
	public partial class T_aj_NonRecurringCharge
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_NonRecurringCharge()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_PercentDiscount")]
	public partial class T_aj_PercentDiscount
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_PercentDiscount()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_PercentDiscount_NoCond")]
	public partial class T_aj_PercentDiscount_NoCond
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_PercentDiscount_NoCond()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_SingleBucketPricing")]
	public partial class T_aj_SingleBucketPricing
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_SingleBucketPricing()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_smokeaggrcnt")]
	public partial class T_aj_smokeaggrcnt
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_smokeaggrcnt()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_smokeaggrdec")]
	public partial class T_aj_smokeaggrdec
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_smokeaggrdec()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_smoketestpriceableitem")]
	public partial class T_aj_smoketestpriceableitem
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_smoketestpriceableitem()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_SMSService")]
	public partial class T_aj_SMSService
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_SMSService()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_songdownloads")]
	public partial class T_aj_songdownloads
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_ConnectionFee;
		
		public T_aj_songdownloads()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_ConnectionFee", Storage="_C_aj_ConnectionFee", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_ConnectionFee
		{
			get
			{
				return this._C_aj_ConnectionFee;
			}
			set
			{
				if ((this._C_aj_ConnectionFee != value))
				{
					this._C_aj_ConnectionFee = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_songsession")]
	public partial class T_aj_songsession
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_songsession()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_songsessionchild")]
	public partial class T_aj_songsessionchild
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_ConnectionFee;
		
		public T_aj_songsessionchild()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_ConnectionFee", Storage="_C_aj_ConnectionFee", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_ConnectionFee
		{
			get
			{
				return this._C_aj_ConnectionFee;
			}
			set
			{
				if ((this._C_aj_ConnectionFee != value))
				{
					this._C_aj_ConnectionFee = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_template_reason_code_map")]
	public partial class T_aj_template_reason_code_map
	{
		
		private int _Id_adjustment;
		
		private int _Id_reason_code;
		
		public T_aj_template_reason_code_map()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int NOT NULL")]
		public int Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="id_reason_code", Storage="_Id_reason_code", DbType="Int NOT NULL")]
		public int Id_reason_code
		{
			get
			{
				return this._Id_reason_code;
			}
			set
			{
				if ((this._Id_reason_code != value))
				{
					this._Id_reason_code = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_testpi")]
	public partial class T_aj_testpi
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		private System.Nullable<decimal> _C_aj_SetupCharge;
		
		public T_aj_testpi()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
		
		[Column(Name="c_aj_SetupCharge", Storage="_C_aj_SetupCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_aj_SetupCharge
		{
			get
			{
				return this._C_aj_SetupCharge;
			}
			set
			{
				if ((this._C_aj_SetupCharge != value))
				{
					this._C_aj_SetupCharge = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_type_applic_map")]
	public partial class T_aj_type_applic_map
	{
		
		private int _Id_adjustment_type;
		
		private int _Id_applicability_rule;
		
		public T_aj_type_applic_map()
		{
		}
		
		[Column(Name="id_adjustment_type", Storage="_Id_adjustment_type", DbType="Int NOT NULL")]
		public int Id_adjustment_type
		{
			get
			{
				return this._Id_adjustment_type;
			}
			set
			{
				if ((this._Id_adjustment_type != value))
				{
					this._Id_adjustment_type = value;
				}
			}
		}
		
		[Column(Name="id_applicability_rule", Storage="_Id_applicability_rule", DbType="Int NOT NULL")]
		public int Id_applicability_rule
		{
			get
			{
				return this._Id_applicability_rule;
			}
			set
			{
				if ((this._Id_applicability_rule != value))
				{
					this._Id_applicability_rule = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_aj_UDRecurringCharge")]
	public partial class T_aj_UDRecurringCharge
	{
		
		private System.Nullable<int> _Id_adjustment;
		
		public T_aj_UDRecurringCharge()
		{
		}
		
		[Column(Name="id_adjustment", Storage="_Id_adjustment", DbType="Int")]
		public System.Nullable<int> Id_adjustment
		{
			get
			{
				return this._Id_adjustment;
			}
			set
			{
				if ((this._Id_adjustment != value))
				{
					this._Id_adjustment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_amp_accountqualgro")]
	public partial class T_amp_accountqualgro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AccountQualGroup_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private EntitySet<T_amp_accountqualifi> _T_amp_accountqualifi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AccountQualGroup_IdChanging(System.Guid value);
    partial void OnC_AccountQualGroup_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_amp_accountqualgro()
		{
			this._T_amp_accountqualifi = new EntitySet<T_amp_accountqualifi>(new Action<T_amp_accountqualifi>(this.attach_T_amp_accountqualifi), new Action<T_amp_accountqualifi>(this.detach_T_amp_accountqualifi));
			OnCreated();
		}
		
		[Column(Name="c_AccountQualGroup_Id", Storage="_C_AccountQualGroup_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AccountQualGroup_Id
		{
			get
			{
				return this._C_AccountQualGroup_Id;
			}
			set
			{
				if ((this._C_AccountQualGroup_Id != value))
				{
					this.OnC_AccountQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountQualGroup_Id = value;
					this.SendPropertyChanged("C_AccountQualGroup_Id");
					this.OnC_AccountQualGroup_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_acc__c_Acc__4D4A6ED8", Storage="_T_amp_accountqualifi", ThisKey="C_AccountQualGroup_Id", OtherKey="C_AccountQualGroup_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_accountqualifi> T_amp_accountqualifi
		{
			get
			{
				return this._T_amp_accountqualifi;
			}
			set
			{
				this._T_amp_accountqualifi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_accountqualifi(T_amp_accountqualifi entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_accountqualgro = this;
		}
		
		private void detach_T_amp_accountqualifi(T_amp_accountqualifi entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_accountqualgro = null;
		}
	}
	
	[Table(Name="dbo.t_amp_accountqualifi")]
	public partial class T_amp_accountqualifi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AccountQualification_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Include;
		
		private string _C_Filter;
		
		private int _C_Mode;
		
		private int _C_ExecutionSequence;
		
		private string _C_IncludeFilter;
		
		private string _C_MatchField;
		
		private string _C_OutputField;
		
		private string _C_SourceField;
		
		private System.Nullable<int> _C_AppendRows;
		
		private System.Nullable<System.Guid> _C_AccountQualGroup_Id;
		
		private EntityRef<T_amp_accountqualgro> _T_amp_accountqualgro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AccountQualification_IdChanging(System.Guid value);
    partial void OnC_AccountQualification_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_IncludeChanging(string value);
    partial void OnC_IncludeChanged();
    partial void OnC_FilterChanging(string value);
    partial void OnC_FilterChanged();
    partial void OnC_ModeChanging(int value);
    partial void OnC_ModeChanged();
    partial void OnC_ExecutionSequenceChanging(int value);
    partial void OnC_ExecutionSequenceChanged();
    partial void OnC_IncludeFilterChanging(string value);
    partial void OnC_IncludeFilterChanged();
    partial void OnC_MatchFieldChanging(string value);
    partial void OnC_MatchFieldChanged();
    partial void OnC_OutputFieldChanging(string value);
    partial void OnC_OutputFieldChanged();
    partial void OnC_SourceFieldChanging(string value);
    partial void OnC_SourceFieldChanged();
    partial void OnC_AppendRowsChanging(System.Nullable<int> value);
    partial void OnC_AppendRowsChanged();
    partial void OnC_AccountQualGroup_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_AccountQualGroup_IdChanged();
    #endregion
		
		public T_amp_accountqualifi()
		{
			this._T_amp_accountqualgro = default(EntityRef<T_amp_accountqualgro>);
			OnCreated();
		}
		
		[Column(Name="c_AccountQualification_Id", Storage="_C_AccountQualification_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AccountQualification_Id
		{
			get
			{
				return this._C_AccountQualification_Id;
			}
			set
			{
				if ((this._C_AccountQualification_Id != value))
				{
					this.OnC_AccountQualification_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountQualification_Id = value;
					this.SendPropertyChanged("C_AccountQualification_Id");
					this.OnC_AccountQualification_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Include", Storage="_C_Include", DbType="NVarChar(255)")]
		public string C_Include
		{
			get
			{
				return this._C_Include;
			}
			set
			{
				if ((this._C_Include != value))
				{
					this.OnC_IncludeChanging(value);
					this.SendPropertyChanging();
					this._C_Include = value;
					this.SendPropertyChanged("C_Include");
					this.OnC_IncludeChanged();
				}
			}
		}
		
		[Column(Name="c_Filter", Storage="_C_Filter", DbType="NVarChar(2000)")]
		public string C_Filter
		{
			get
			{
				return this._C_Filter;
			}
			set
			{
				if ((this._C_Filter != value))
				{
					this.OnC_FilterChanging(value);
					this.SendPropertyChanging();
					this._C_Filter = value;
					this.SendPropertyChanged("C_Filter");
					this.OnC_FilterChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int NOT NULL")]
		public int C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_ExecutionSequence", Storage="_C_ExecutionSequence", DbType="Int NOT NULL")]
		public int C_ExecutionSequence
		{
			get
			{
				return this._C_ExecutionSequence;
			}
			set
			{
				if ((this._C_ExecutionSequence != value))
				{
					this.OnC_ExecutionSequenceChanging(value);
					this.SendPropertyChanging();
					this._C_ExecutionSequence = value;
					this.SendPropertyChanged("C_ExecutionSequence");
					this.OnC_ExecutionSequenceChanged();
				}
			}
		}
		
		[Column(Name="c_IncludeFilter", Storage="_C_IncludeFilter", DbType="NVarChar(1000)")]
		public string C_IncludeFilter
		{
			get
			{
				return this._C_IncludeFilter;
			}
			set
			{
				if ((this._C_IncludeFilter != value))
				{
					this.OnC_IncludeFilterChanging(value);
					this.SendPropertyChanging();
					this._C_IncludeFilter = value;
					this.SendPropertyChanged("C_IncludeFilter");
					this.OnC_IncludeFilterChanged();
				}
			}
		}
		
		[Column(Name="c_MatchField", Storage="_C_MatchField", DbType="NVarChar(1000)")]
		public string C_MatchField
		{
			get
			{
				return this._C_MatchField;
			}
			set
			{
				if ((this._C_MatchField != value))
				{
					this.OnC_MatchFieldChanging(value);
					this.SendPropertyChanging();
					this._C_MatchField = value;
					this.SendPropertyChanged("C_MatchField");
					this.OnC_MatchFieldChanged();
				}
			}
		}
		
		[Column(Name="c_OutputField", Storage="_C_OutputField", DbType="NVarChar(1000)")]
		public string C_OutputField
		{
			get
			{
				return this._C_OutputField;
			}
			set
			{
				if ((this._C_OutputField != value))
				{
					this.OnC_OutputFieldChanging(value);
					this.SendPropertyChanging();
					this._C_OutputField = value;
					this.SendPropertyChanged("C_OutputField");
					this.OnC_OutputFieldChanged();
				}
			}
		}
		
		[Column(Name="c_SourceField", Storage="_C_SourceField", DbType="NVarChar(1000)")]
		public string C_SourceField
		{
			get
			{
				return this._C_SourceField;
			}
			set
			{
				if ((this._C_SourceField != value))
				{
					this.OnC_SourceFieldChanging(value);
					this.SendPropertyChanging();
					this._C_SourceField = value;
					this.SendPropertyChanged("C_SourceField");
					this.OnC_SourceFieldChanged();
				}
			}
		}
		
		[Column(Name="c_AppendRows", Storage="_C_AppendRows", DbType="Int")]
		public System.Nullable<int> C_AppendRows
		{
			get
			{
				return this._C_AppendRows;
			}
			set
			{
				if ((this._C_AppendRows != value))
				{
					this.OnC_AppendRowsChanging(value);
					this.SendPropertyChanging();
					this._C_AppendRows = value;
					this.SendPropertyChanged("C_AppendRows");
					this.OnC_AppendRowsChanged();
				}
			}
		}
		
		[Column(Name="c_AccountQualGroup_Id", Storage="_C_AccountQualGroup_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_AccountQualGroup_Id
		{
			get
			{
				return this._C_AccountQualGroup_Id;
			}
			set
			{
				if ((this._C_AccountQualGroup_Id != value))
				{
					this.OnC_AccountQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountQualGroup_Id = value;
					this.SendPropertyChanged("C_AccountQualGroup_Id");
					this.OnC_AccountQualGroup_IdChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_acc__c_Acc__4D4A6ED8", Storage="_T_amp_accountqualgro", ThisKey="C_AccountQualGroup_Id", OtherKey="C_AccountQualGroup_Id", IsForeignKey=true)]
		public T_amp_accountqualgro T_amp_accountqualgro
		{
			get
			{
				return this._T_amp_accountqualgro.Entity;
			}
			set
			{
				T_amp_accountqualgro previousValue = this._T_amp_accountqualgro.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_accountqualgro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_accountqualgro.Entity = null;
						previousValue.T_amp_accountqualifi.Remove(this);
					}
					this._T_amp_accountqualgro.Entity = value;
					if ((value != null))
					{
						value.T_amp_accountqualifi.Add(this);
						this._C_AccountQualGroup_Id = value.C_AccountQualGroup_Id;
					}
					else
					{
						this._C_AccountQualGroup_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_accountqualgro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_amountchain")]
	public partial class T_amp_amountchain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AmountChain_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.DateTime _C_CreationDate;
		
		private System.DateTime _C_UpdateDate;
		
		private string _C_Name;
		
		private string _C_Description;
		
		private string _C_ProductViewName;
		
		private System.Nullable<int> _C_UseTaxAdapter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AmountChain_IdChanging(System.Guid value);
    partial void OnC_AmountChain_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.DateTime value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.DateTime value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_UseTaxAdapterChanging(System.Nullable<int> value);
    partial void OnC_UseTaxAdapterChanged();
    #endregion
		
		public T_amp_amountchain()
		{
			OnCreated();
		}
		
		[Column(Name="c_AmountChain_Id", Storage="_C_AmountChain_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AmountChain_Id
		{
			get
			{
				return this._C_AmountChain_Id;
			}
			set
			{
				if ((this._C_AmountChain_Id != value))
				{
					this.OnC_AmountChain_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AmountChain_Id = value;
					this.SendPropertyChanged("C_AmountChain_Id");
					this.OnC_AmountChain_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255)")]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_UseTaxAdapter", Storage="_C_UseTaxAdapter", DbType="Int")]
		public System.Nullable<int> C_UseTaxAdapter
		{
			get
			{
				return this._C_UseTaxAdapter;
			}
			set
			{
				if ((this._C_UseTaxAdapter != value))
				{
					this.OnC_UseTaxAdapterChanging(value);
					this.SendPropertyChanging();
					this._C_UseTaxAdapter = value;
					this.SendPropertyChanged("C_UseTaxAdapter");
					this.OnC_UseTaxAdapterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_amountchainfield")]
	public partial class T_amp_amountchainfield : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AmountChainField_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_AmountChainName;
		
		private string _C_FieldName;
		
		private string _C_FieldType;
		
		private string _C_ProductViewName;
		
		private string _C_CurrencyField;
		
		private string _C_Filter;
		
		private string _C_ContributingField;
		
		private string _C_PercentageField;
		
		private string _C_Modifier;
		
		private string _C_Rounding;
		
		private string _C_Direction;
		
		private System.Nullable<int> _C_RoundingNumDigits;
		
		private int _C_Priority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AmountChainField_IdChanging(System.Guid value);
    partial void OnC_AmountChainField_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_AmountChainNameChanging(string value);
    partial void OnC_AmountChainNameChanged();
    partial void OnC_FieldNameChanging(string value);
    partial void OnC_FieldNameChanged();
    partial void OnC_FieldTypeChanging(string value);
    partial void OnC_FieldTypeChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_CurrencyFieldChanging(string value);
    partial void OnC_CurrencyFieldChanged();
    partial void OnC_FilterChanging(string value);
    partial void OnC_FilterChanged();
    partial void OnC_ContributingFieldChanging(string value);
    partial void OnC_ContributingFieldChanged();
    partial void OnC_PercentageFieldChanging(string value);
    partial void OnC_PercentageFieldChanged();
    partial void OnC_ModifierChanging(string value);
    partial void OnC_ModifierChanged();
    partial void OnC_RoundingChanging(string value);
    partial void OnC_RoundingChanged();
    partial void OnC_DirectionChanging(string value);
    partial void OnC_DirectionChanged();
    partial void OnC_RoundingNumDigitsChanging(System.Nullable<int> value);
    partial void OnC_RoundingNumDigitsChanged();
    partial void OnC_PriorityChanging(int value);
    partial void OnC_PriorityChanged();
    #endregion
		
		public T_amp_amountchainfield()
		{
			OnCreated();
		}
		
		[Column(Name="c_AmountChainField_Id", Storage="_C_AmountChainField_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AmountChainField_Id
		{
			get
			{
				return this._C_AmountChainField_Id;
			}
			set
			{
				if ((this._C_AmountChainField_Id != value))
				{
					this.OnC_AmountChainField_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AmountChainField_Id = value;
					this.SendPropertyChanged("C_AmountChainField_Id");
					this.OnC_AmountChainField_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_AmountChainName", Storage="_C_AmountChainName", DbType="NVarChar(255)")]
		public string C_AmountChainName
		{
			get
			{
				return this._C_AmountChainName;
			}
			set
			{
				if ((this._C_AmountChainName != value))
				{
					this.OnC_AmountChainNameChanging(value);
					this.SendPropertyChanging();
					this._C_AmountChainName = value;
					this.SendPropertyChanged("C_AmountChainName");
					this.OnC_AmountChainNameChanged();
				}
			}
		}
		
		[Column(Name="c_FieldName", Storage="_C_FieldName", DbType="NVarChar(255)")]
		public string C_FieldName
		{
			get
			{
				return this._C_FieldName;
			}
			set
			{
				if ((this._C_FieldName != value))
				{
					this.OnC_FieldNameChanging(value);
					this.SendPropertyChanging();
					this._C_FieldName = value;
					this.SendPropertyChanged("C_FieldName");
					this.OnC_FieldNameChanged();
				}
			}
		}
		
		[Column(Name="c_FieldType", Storage="_C_FieldType", DbType="NVarChar(255)")]
		public string C_FieldType
		{
			get
			{
				return this._C_FieldType;
			}
			set
			{
				if ((this._C_FieldType != value))
				{
					this.OnC_FieldTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FieldType = value;
					this.SendPropertyChanged("C_FieldType");
					this.OnC_FieldTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255)")]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_CurrencyField", Storage="_C_CurrencyField", DbType="NVarChar(255)")]
		public string C_CurrencyField
		{
			get
			{
				return this._C_CurrencyField;
			}
			set
			{
				if ((this._C_CurrencyField != value))
				{
					this.OnC_CurrencyFieldChanging(value);
					this.SendPropertyChanging();
					this._C_CurrencyField = value;
					this.SendPropertyChanged("C_CurrencyField");
					this.OnC_CurrencyFieldChanged();
				}
			}
		}
		
		[Column(Name="c_Filter", Storage="_C_Filter", DbType="NVarChar(1000)")]
		public string C_Filter
		{
			get
			{
				return this._C_Filter;
			}
			set
			{
				if ((this._C_Filter != value))
				{
					this.OnC_FilterChanging(value);
					this.SendPropertyChanging();
					this._C_Filter = value;
					this.SendPropertyChanged("C_Filter");
					this.OnC_FilterChanged();
				}
			}
		}
		
		[Column(Name="c_ContributingField", Storage="_C_ContributingField", DbType="NVarChar(255)")]
		public string C_ContributingField
		{
			get
			{
				return this._C_ContributingField;
			}
			set
			{
				if ((this._C_ContributingField != value))
				{
					this.OnC_ContributingFieldChanging(value);
					this.SendPropertyChanging();
					this._C_ContributingField = value;
					this.SendPropertyChanged("C_ContributingField");
					this.OnC_ContributingFieldChanged();
				}
			}
		}
		
		[Column(Name="c_PercentageField", Storage="_C_PercentageField", DbType="NVarChar(255)")]
		public string C_PercentageField
		{
			get
			{
				return this._C_PercentageField;
			}
			set
			{
				if ((this._C_PercentageField != value))
				{
					this.OnC_PercentageFieldChanging(value);
					this.SendPropertyChanging();
					this._C_PercentageField = value;
					this.SendPropertyChanged("C_PercentageField");
					this.OnC_PercentageFieldChanged();
				}
			}
		}
		
		[Column(Name="c_Modifier", Storage="_C_Modifier", DbType="NVarChar(1000)")]
		public string C_Modifier
		{
			get
			{
				return this._C_Modifier;
			}
			set
			{
				if ((this._C_Modifier != value))
				{
					this.OnC_ModifierChanging(value);
					this.SendPropertyChanging();
					this._C_Modifier = value;
					this.SendPropertyChanged("C_Modifier");
					this.OnC_ModifierChanged();
				}
			}
		}
		
		[Column(Name="c_Rounding", Storage="_C_Rounding", DbType="NVarChar(255)")]
		public string C_Rounding
		{
			get
			{
				return this._C_Rounding;
			}
			set
			{
				if ((this._C_Rounding != value))
				{
					this.OnC_RoundingChanging(value);
					this.SendPropertyChanging();
					this._C_Rounding = value;
					this.SendPropertyChanged("C_Rounding");
					this.OnC_RoundingChanged();
				}
			}
		}
		
		[Column(Name="c_Direction", Storage="_C_Direction", DbType="NVarChar(255)")]
		public string C_Direction
		{
			get
			{
				return this._C_Direction;
			}
			set
			{
				if ((this._C_Direction != value))
				{
					this.OnC_DirectionChanging(value);
					this.SendPropertyChanging();
					this._C_Direction = value;
					this.SendPropertyChanged("C_Direction");
					this.OnC_DirectionChanged();
				}
			}
		}
		
		[Column(Name="c_RoundingNumDigits", Storage="_C_RoundingNumDigits", DbType="Int")]
		public System.Nullable<int> C_RoundingNumDigits
		{
			get
			{
				return this._C_RoundingNumDigits;
			}
			set
			{
				if ((this._C_RoundingNumDigits != value))
				{
					this.OnC_RoundingNumDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_RoundingNumDigits = value;
					this.SendPropertyChanged("C_RoundingNumDigits");
					this.OnC_RoundingNumDigitsChanged();
				}
			}
		}
		
		[Column(Name="c_Priority", Storage="_C_Priority", DbType="Int NOT NULL")]
		public int C_Priority
		{
			get
			{
				return this._C_Priority;
			}
			set
			{
				if ((this._C_Priority != value))
				{
					this.OnC_PriorityChanging(value);
					this.SendPropertyChanging();
					this._C_Priority = value;
					this.SendPropertyChanged("C_Priority");
					this.OnC_PriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_chargeattribut")]
	public partial class T_amp_chargeattribut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeAttributeMapping_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_TableName;
		
		private string _C_ColumnName;
		
		private string _C_ObjectFieldName;
		
		private string _C_DefaultValue;
		
		private System.Nullable<System.Guid> _C_ChargeDefinition_Id;
		
		private EntityRef<T_amp_chargedefiniti> _T_amp_chargedefiniti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeAttributeMapping_IdChanging(System.Guid value);
    partial void OnC_ChargeAttributeMapping_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_TableNameChanging(string value);
    partial void OnC_TableNameChanged();
    partial void OnC_ColumnNameChanging(string value);
    partial void OnC_ColumnNameChanged();
    partial void OnC_ObjectFieldNameChanging(string value);
    partial void OnC_ObjectFieldNameChanged();
    partial void OnC_DefaultValueChanging(string value);
    partial void OnC_DefaultValueChanged();
    partial void OnC_ChargeDefinition_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_ChargeDefinition_IdChanged();
    #endregion
		
		public T_amp_chargeattribut()
		{
			this._T_amp_chargedefiniti = default(EntityRef<T_amp_chargedefiniti>);
			OnCreated();
		}
		
		[Column(Name="c_ChargeAttributeMapping_Id", Storage="_C_ChargeAttributeMapping_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeAttributeMapping_Id
		{
			get
			{
				return this._C_ChargeAttributeMapping_Id;
			}
			set
			{
				if ((this._C_ChargeAttributeMapping_Id != value))
				{
					this.OnC_ChargeAttributeMapping_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAttributeMapping_Id = value;
					this.SendPropertyChanged("C_ChargeAttributeMapping_Id");
					this.OnC_ChargeAttributeMapping_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_TableName", Storage="_C_TableName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_TableName
		{
			get
			{
				return this._C_TableName;
			}
			set
			{
				if ((this._C_TableName != value))
				{
					this.OnC_TableNameChanging(value);
					this.SendPropertyChanging();
					this._C_TableName = value;
					this.SendPropertyChanged("C_TableName");
					this.OnC_TableNameChanged();
				}
			}
		}
		
		[Column(Name="c_ColumnName", Storage="_C_ColumnName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ColumnName
		{
			get
			{
				return this._C_ColumnName;
			}
			set
			{
				if ((this._C_ColumnName != value))
				{
					this.OnC_ColumnNameChanging(value);
					this.SendPropertyChanging();
					this._C_ColumnName = value;
					this.SendPropertyChanged("C_ColumnName");
					this.OnC_ColumnNameChanged();
				}
			}
		}
		
		[Column(Name="c_ObjectFieldName", Storage="_C_ObjectFieldName", DbType="NVarChar(2000)")]
		public string C_ObjectFieldName
		{
			get
			{
				return this._C_ObjectFieldName;
			}
			set
			{
				if ((this._C_ObjectFieldName != value))
				{
					this.OnC_ObjectFieldNameChanging(value);
					this.SendPropertyChanging();
					this._C_ObjectFieldName = value;
					this.SendPropertyChanged("C_ObjectFieldName");
					this.OnC_ObjectFieldNameChanged();
				}
			}
		}
		
		[Column(Name="c_DefaultValue", Storage="_C_DefaultValue", DbType="NVarChar(255)")]
		public string C_DefaultValue
		{
			get
			{
				return this._C_DefaultValue;
			}
			set
			{
				if ((this._C_DefaultValue != value))
				{
					this.OnC_DefaultValueChanging(value);
					this.SendPropertyChanging();
					this._C_DefaultValue = value;
					this.SendPropertyChanged("C_DefaultValue");
					this.OnC_DefaultValueChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeDefinition_Id", Storage="_C_ChargeDefinition_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_ChargeDefinition_Id
		{
			get
			{
				return this._C_ChargeDefinition_Id;
			}
			set
			{
				if ((this._C_ChargeDefinition_Id != value))
				{
					this.OnC_ChargeDefinition_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeDefinition_Id = value;
					this.SendPropertyChanged("C_ChargeDefinition_Id");
					this.OnC_ChargeDefinition_IdChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_cha__c_Cha__511AFFBC", Storage="_T_amp_chargedefiniti", ThisKey="C_ChargeDefinition_Id", OtherKey="C_ChargeDefinition_Id", IsForeignKey=true)]
		public T_amp_chargedefiniti T_amp_chargedefiniti
		{
			get
			{
				return this._T_amp_chargedefiniti.Entity;
			}
			set
			{
				T_amp_chargedefiniti previousValue = this._T_amp_chargedefiniti.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_chargedefiniti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_chargedefiniti.Entity = null;
						previousValue.T_amp_chargeattribut.Remove(this);
					}
					this._T_amp_chargedefiniti.Entity = value;
					if ((value != null))
					{
						value.T_amp_chargeattribut.Add(this);
						this._C_ChargeDefinition_Id = value.C_ChargeDefinition_Id;
					}
					else
					{
						this._C_ChargeDefinition_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_chargedefiniti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_chargedefiniti")]
	public partial class T_amp_chargedefiniti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeDefinition_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private EntitySet<T_amp_chargeattribut> _T_amp_chargeattribut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeDefinition_IdChanging(System.Guid value);
    partial void OnC_ChargeDefinition_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_amp_chargedefiniti()
		{
			this._T_amp_chargeattribut = new EntitySet<T_amp_chargeattribut>(new Action<T_amp_chargeattribut>(this.attach_T_amp_chargeattribut), new Action<T_amp_chargeattribut>(this.detach_T_amp_chargeattribut));
			OnCreated();
		}
		
		[Column(Name="c_ChargeDefinition_Id", Storage="_C_ChargeDefinition_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeDefinition_Id
		{
			get
			{
				return this._C_ChargeDefinition_Id;
			}
			set
			{
				if ((this._C_ChargeDefinition_Id != value))
				{
					this.OnC_ChargeDefinition_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeDefinition_Id = value;
					this.SendPropertyChanged("C_ChargeDefinition_Id");
					this.OnC_ChargeDefinition_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(1000)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_cha__c_Cha__511AFFBC", Storage="_T_amp_chargeattribut", ThisKey="C_ChargeDefinition_Id", OtherKey="C_ChargeDefinition_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_chargeattribut> T_amp_chargeattribut
		{
			get
			{
				return this._T_amp_chargeattribut;
			}
			set
			{
				this._T_amp_chargeattribut.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_chargeattribut(T_amp_chargeattribut entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_chargedefiniti = this;
		}
		
		private void detach_T_amp_chargeattribut(T_amp_chargeattribut entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_chargedefiniti = null;
		}
	}
	
	[Table(Name="dbo.t_amp_chargequalgroup")]
	public partial class T_amp_chargequalgroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeQualGroup_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private EntitySet<T_amp_chargequalific> _T_amp_chargequalific;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeQualGroup_IdChanging(System.Guid value);
    partial void OnC_ChargeQualGroup_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_amp_chargequalgroup()
		{
			this._T_amp_chargequalific = new EntitySet<T_amp_chargequalific>(new Action<T_amp_chargequalific>(this.attach_T_amp_chargequalific), new Action<T_amp_chargequalific>(this.detach_T_amp_chargequalific));
			OnCreated();
		}
		
		[Column(Name="c_ChargeQualGroup_Id", Storage="_C_ChargeQualGroup_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeQualGroup_Id
		{
			get
			{
				return this._C_ChargeQualGroup_Id;
			}
			set
			{
				if ((this._C_ChargeQualGroup_Id != value))
				{
					this.OnC_ChargeQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeQualGroup_Id = value;
					this.SendPropertyChanged("C_ChargeQualGroup_Id");
					this.OnC_ChargeQualGroup_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_cha__c_Cha__40257DE4", Storage="_T_amp_chargequalific", ThisKey="C_ChargeQualGroup_Id", OtherKey="C_ChargeQualGroup_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_chargequalific> T_amp_chargequalific
		{
			get
			{
				return this._T_amp_chargequalific;
			}
			set
			{
				this._T_amp_chargequalific.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_chargequalific(T_amp_chargequalific entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_chargequalgroup = this;
		}
		
		private void detach_T_amp_chargequalific(T_amp_chargequalific entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_chargequalgroup = null;
		}
	}
	
	[Table(Name="dbo.t_amp_chargequalific")]
	public partial class T_amp_chargequalific : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeQualification_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_ChargeName;
		
		private string _C_ProductViewName;
		
		private System.Nullable<System.Guid> _C_ChargeQualGroup_Id;
		
		private EntityRef<T_amp_chargequalgroup> _T_amp_chargequalgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeQualification_IdChanging(System.Guid value);
    partial void OnC_ChargeQualification_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_ChargeNameChanging(string value);
    partial void OnC_ChargeNameChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_ChargeQualGroup_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_ChargeQualGroup_IdChanged();
    #endregion
		
		public T_amp_chargequalific()
		{
			this._T_amp_chargequalgroup = default(EntityRef<T_amp_chargequalgroup>);
			OnCreated();
		}
		
		[Column(Name="c_ChargeQualification_Id", Storage="_C_ChargeQualification_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeQualification_Id
		{
			get
			{
				return this._C_ChargeQualification_Id;
			}
			set
			{
				if ((this._C_ChargeQualification_Id != value))
				{
					this.OnC_ChargeQualification_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeQualification_Id = value;
					this.SendPropertyChanged("C_ChargeQualification_Id");
					this.OnC_ChargeQualification_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeName", Storage="_C_ChargeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ChargeName
		{
			get
			{
				return this._C_ChargeName;
			}
			set
			{
				if ((this._C_ChargeName != value))
				{
					this.OnC_ChargeNameChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeName = value;
					this.SendPropertyChanged("C_ChargeName");
					this.OnC_ChargeNameChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeQualGroup_Id", Storage="_C_ChargeQualGroup_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_ChargeQualGroup_Id
		{
			get
			{
				return this._C_ChargeQualGroup_Id;
			}
			set
			{
				if ((this._C_ChargeQualGroup_Id != value))
				{
					this.OnC_ChargeQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeQualGroup_Id = value;
					this.SendPropertyChanged("C_ChargeQualGroup_Id");
					this.OnC_ChargeQualGroup_IdChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_cha__c_Cha__40257DE4", Storage="_T_amp_chargequalgroup", ThisKey="C_ChargeQualGroup_Id", OtherKey="C_ChargeQualGroup_Id", IsForeignKey=true)]
		public T_amp_chargequalgroup T_amp_chargequalgroup
		{
			get
			{
				return this._T_amp_chargequalgroup.Entity;
			}
			set
			{
				T_amp_chargequalgroup previousValue = this._T_amp_chargequalgroup.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_chargequalgroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_chargequalgroup.Entity = null;
						previousValue.T_amp_chargequalific.Remove(this);
					}
					this._T_amp_chargequalgroup.Entity = value;
					if ((value != null))
					{
						value.T_amp_chargequalific.Add(this);
						this._C_ChargeQualGroup_Id = value.C_ChargeQualGroup_Id;
					}
					else
					{
						this._C_ChargeQualGroup_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_chargequalgroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_decisionattrib")]
	public partial class T_amp_decisionattrib : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_DecisionAttributeMapping_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_ColumnName;
		
		private string _C_DefaultValue;
		
		private string _C_TableName;
		
		private string _C_AttributeName;
		
		private System.Nullable<System.Guid> _C_DecisionType_Id;
		
		private System.Nullable<int> _C_PushToUsage;
		
		private EntityRef<T_amp_decisiontype> _T_amp_decisiontype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_DecisionAttributeMapping_IdChanging(System.Guid value);
    partial void OnC_DecisionAttributeMapping_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_ColumnNameChanging(string value);
    partial void OnC_ColumnNameChanged();
    partial void OnC_DefaultValueChanging(string value);
    partial void OnC_DefaultValueChanged();
    partial void OnC_TableNameChanging(string value);
    partial void OnC_TableNameChanged();
    partial void OnC_AttributeNameChanging(string value);
    partial void OnC_AttributeNameChanged();
    partial void OnC_DecisionType_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_DecisionType_IdChanged();
    partial void OnC_PushToUsageChanging(System.Nullable<int> value);
    partial void OnC_PushToUsageChanged();
    #endregion
		
		public T_amp_decisionattrib()
		{
			this._T_amp_decisiontype = default(EntityRef<T_amp_decisiontype>);
			OnCreated();
		}
		
		[Column(Name="c_DecisionAttributeMapping_Id", Storage="_C_DecisionAttributeMapping_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_DecisionAttributeMapping_Id
		{
			get
			{
				return this._C_DecisionAttributeMapping_Id;
			}
			set
			{
				if ((this._C_DecisionAttributeMapping_Id != value))
				{
					this.OnC_DecisionAttributeMapping_IdChanging(value);
					this.SendPropertyChanging();
					this._C_DecisionAttributeMapping_Id = value;
					this.SendPropertyChanged("C_DecisionAttributeMapping_Id");
					this.OnC_DecisionAttributeMapping_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_ColumnName", Storage="_C_ColumnName", DbType="NVarChar(255)")]
		public string C_ColumnName
		{
			get
			{
				return this._C_ColumnName;
			}
			set
			{
				if ((this._C_ColumnName != value))
				{
					this.OnC_ColumnNameChanging(value);
					this.SendPropertyChanging();
					this._C_ColumnName = value;
					this.SendPropertyChanged("C_ColumnName");
					this.OnC_ColumnNameChanged();
				}
			}
		}
		
		[Column(Name="c_DefaultValue", Storage="_C_DefaultValue", DbType="NVarChar(1000)")]
		public string C_DefaultValue
		{
			get
			{
				return this._C_DefaultValue;
			}
			set
			{
				if ((this._C_DefaultValue != value))
				{
					this.OnC_DefaultValueChanging(value);
					this.SendPropertyChanging();
					this._C_DefaultValue = value;
					this.SendPropertyChanged("C_DefaultValue");
					this.OnC_DefaultValueChanged();
				}
			}
		}
		
		[Column(Name="c_TableName", Storage="_C_TableName", DbType="NVarChar(255)")]
		public string C_TableName
		{
			get
			{
				return this._C_TableName;
			}
			set
			{
				if ((this._C_TableName != value))
				{
					this.OnC_TableNameChanging(value);
					this.SendPropertyChanging();
					this._C_TableName = value;
					this.SendPropertyChanged("C_TableName");
					this.OnC_TableNameChanged();
				}
			}
		}
		
		[Column(Name="c_AttributeName", Storage="_C_AttributeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AttributeName
		{
			get
			{
				return this._C_AttributeName;
			}
			set
			{
				if ((this._C_AttributeName != value))
				{
					this.OnC_AttributeNameChanging(value);
					this.SendPropertyChanging();
					this._C_AttributeName = value;
					this.SendPropertyChanged("C_AttributeName");
					this.OnC_AttributeNameChanged();
				}
			}
		}
		
		[Column(Name="c_DecisionType_Id", Storage="_C_DecisionType_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_DecisionType_Id
		{
			get
			{
				return this._C_DecisionType_Id;
			}
			set
			{
				if ((this._C_DecisionType_Id != value))
				{
					this.OnC_DecisionType_IdChanging(value);
					this.SendPropertyChanging();
					this._C_DecisionType_Id = value;
					this.SendPropertyChanged("C_DecisionType_Id");
					this.OnC_DecisionType_IdChanged();
				}
			}
		}
		
		[Column(Name="c_PushToUsage", Storage="_C_PushToUsage", DbType="Int")]
		public System.Nullable<int> C_PushToUsage
		{
			get
			{
				return this._C_PushToUsage;
			}
			set
			{
				if ((this._C_PushToUsage != value))
				{
					this.OnC_PushToUsageChanging(value);
					this.SendPropertyChanging();
					this._C_PushToUsage = value;
					this.SendPropertyChanged("C_PushToUsage");
					this.OnC_PushToUsageChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_dec__c_Dec__54EB90A0", Storage="_T_amp_decisiontype", ThisKey="C_DecisionType_Id", OtherKey="C_DecisionType_Id", IsForeignKey=true)]
		public T_amp_decisiontype T_amp_decisiontype
		{
			get
			{
				return this._T_amp_decisiontype.Entity;
			}
			set
			{
				T_amp_decisiontype previousValue = this._T_amp_decisiontype.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_decisiontype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_decisiontype.Entity = null;
						previousValue.T_amp_decisionattrib.Remove(this);
					}
					this._T_amp_decisiontype.Entity = value;
					if ((value != null))
					{
						value.T_amp_decisionattrib.Add(this);
						this._C_DecisionType_Id = value.C_DecisionType_Id;
					}
					else
					{
						this._C_DecisionType_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_decisiontype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_decisionglobal")]
	public partial class T_amp_decisionglobal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_DecisionGlobalDefault_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private string _C_DefaultValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_DecisionGlobalDefault_IdChanging(System.Guid value);
    partial void OnC_DecisionGlobalDefault_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_DefaultValueChanging(string value);
    partial void OnC_DefaultValueChanged();
    #endregion
		
		public T_amp_decisionglobal()
		{
			OnCreated();
		}
		
		[Column(Name="c_DecisionGlobalDefault_Id", Storage="_C_DecisionGlobalDefault_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_DecisionGlobalDefault_Id
		{
			get
			{
				return this._C_DecisionGlobalDefault_Id;
			}
			set
			{
				if ((this._C_DecisionGlobalDefault_Id != value))
				{
					this.OnC_DecisionGlobalDefault_IdChanging(value);
					this.SendPropertyChanging();
					this._C_DecisionGlobalDefault_Id = value;
					this.SendPropertyChanged("C_DecisionGlobalDefault_Id");
					this.OnC_DecisionGlobalDefault_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_DefaultValue", Storage="_C_DefaultValue", DbType="NVarChar(1000)")]
		public string C_DefaultValue
		{
			get
			{
				return this._C_DefaultValue;
			}
			set
			{
				if ((this._C_DefaultValue != value))
				{
					this.OnC_DefaultValueChanging(value);
					this.SendPropertyChanging();
					this._C_DefaultValue = value;
					this.SendPropertyChanged("C_DefaultValue");
					this.OnC_DefaultValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_decisiontype")]
	public partial class T_amp_decisiontype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_DecisionType_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private int _C_Mode;
		
		private int _C_IsActive;
		
		private string _C_TableName;
		
		private EntitySet<T_amp_decisionattrib> _T_amp_decisionattrib;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_DecisionType_IdChanging(System.Guid value);
    partial void OnC_DecisionType_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ModeChanging(int value);
    partial void OnC_ModeChanged();
    partial void OnC_IsActiveChanging(int value);
    partial void OnC_IsActiveChanged();
    partial void OnC_TableNameChanging(string value);
    partial void OnC_TableNameChanged();
    #endregion
		
		public T_amp_decisiontype()
		{
			this._T_amp_decisionattrib = new EntitySet<T_amp_decisionattrib>(new Action<T_amp_decisionattrib>(this.attach_T_amp_decisionattrib), new Action<T_amp_decisionattrib>(this.detach_T_amp_decisionattrib));
			OnCreated();
		}
		
		[Column(Name="c_DecisionType_Id", Storage="_C_DecisionType_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_DecisionType_Id
		{
			get
			{
				return this._C_DecisionType_Id;
			}
			set
			{
				if ((this._C_DecisionType_Id != value))
				{
					this.OnC_DecisionType_IdChanging(value);
					this.SendPropertyChanging();
					this._C_DecisionType_Id = value;
					this.SendPropertyChanged("C_DecisionType_Id");
					this.OnC_DecisionType_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int NOT NULL")]
		public int C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_IsActive", Storage="_C_IsActive", DbType="Int NOT NULL")]
		public int C_IsActive
		{
			get
			{
				return this._C_IsActive;
			}
			set
			{
				if ((this._C_IsActive != value))
				{
					this.OnC_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._C_IsActive = value;
					this.SendPropertyChanged("C_IsActive");
					this.OnC_IsActiveChanged();
				}
			}
		}
		
		[Column(Name="c_TableName", Storage="_C_TableName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_TableName
		{
			get
			{
				return this._C_TableName;
			}
			set
			{
				if ((this._C_TableName != value))
				{
					this.OnC_TableNameChanging(value);
					this.SendPropertyChanging();
					this._C_TableName = value;
					this.SendPropertyChanged("C_TableName");
					this.OnC_TableNameChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_dec__c_Dec__54EB90A0", Storage="_T_amp_decisionattrib", ThisKey="C_DecisionType_Id", OtherKey="C_DecisionType_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_decisionattrib> T_amp_decisionattrib
		{
			get
			{
				return this._T_amp_decisionattrib;
			}
			set
			{
				this._T_amp_decisionattrib.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_decisionattrib(T_amp_decisionattrib entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_decisiontype = this;
		}
		
		private void detach_T_amp_decisionattrib(T_amp_decisionattrib entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_decisiontype = null;
		}
	}
	
	[Table(Name="dbo.t_amp_genchargedirective")]
	public partial class T_amp_genchargedirective : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Directive_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<System.Guid> _C_GenCharge_Id;
		
		private System.Nullable<int> _C_row_num;
		
		private string _C_include_table_name;
		
		private string _C_source_value;
		
		private string _C_target_field;
		
		private string _C_include_predicate;
		
		private string _C_included_field_prefix;
		
		private string _C_field_name;
		
		private string _C_population_string;
		
		private string _C_mvm_procedure;
		
		private string _C_child_charge_name;
		
		private string _C_filter;
		
		private string _C_default_value;
		
		private EntityRef<T_amp_generatedcharge> _T_amp_generatedcharge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Directive_IdChanging(System.Guid value);
    partial void OnC_Directive_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_GenCharge_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_GenCharge_IdChanged();
    partial void OnC_row_numChanging(System.Nullable<int> value);
    partial void OnC_row_numChanged();
    partial void OnC_include_table_nameChanging(string value);
    partial void OnC_include_table_nameChanged();
    partial void OnC_source_valueChanging(string value);
    partial void OnC_source_valueChanged();
    partial void OnC_target_fieldChanging(string value);
    partial void OnC_target_fieldChanged();
    partial void OnC_include_predicateChanging(string value);
    partial void OnC_include_predicateChanged();
    partial void OnC_included_field_prefixChanging(string value);
    partial void OnC_included_field_prefixChanged();
    partial void OnC_field_nameChanging(string value);
    partial void OnC_field_nameChanged();
    partial void OnC_population_stringChanging(string value);
    partial void OnC_population_stringChanged();
    partial void OnC_mvm_procedureChanging(string value);
    partial void OnC_mvm_procedureChanged();
    partial void OnC_child_charge_nameChanging(string value);
    partial void OnC_child_charge_nameChanged();
    partial void OnC_filterChanging(string value);
    partial void OnC_filterChanged();
    partial void OnC_default_valueChanging(string value);
    partial void OnC_default_valueChanged();
    #endregion
		
		public T_amp_genchargedirective()
		{
			this._T_amp_generatedcharge = default(EntityRef<T_amp_generatedcharge>);
			OnCreated();
		}
		
		[Column(Name="c_Directive_Id", Storage="_C_Directive_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Directive_Id
		{
			get
			{
				return this._C_Directive_Id;
			}
			set
			{
				if ((this._C_Directive_Id != value))
				{
					this.OnC_Directive_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Directive_Id = value;
					this.SendPropertyChanged("C_Directive_Id");
					this.OnC_Directive_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_GenCharge_Id", Storage="_C_GenCharge_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_GenCharge_Id
		{
			get
			{
				return this._C_GenCharge_Id;
			}
			set
			{
				if ((this._C_GenCharge_Id != value))
				{
					this.OnC_GenCharge_IdChanging(value);
					this.SendPropertyChanging();
					this._C_GenCharge_Id = value;
					this.SendPropertyChanged("C_GenCharge_Id");
					this.OnC_GenCharge_IdChanged();
				}
			}
		}
		
		[Column(Name="c_row_num", Storage="_C_row_num", DbType="Int")]
		public System.Nullable<int> C_row_num
		{
			get
			{
				return this._C_row_num;
			}
			set
			{
				if ((this._C_row_num != value))
				{
					this.OnC_row_numChanging(value);
					this.SendPropertyChanging();
					this._C_row_num = value;
					this.SendPropertyChanged("C_row_num");
					this.OnC_row_numChanged();
				}
			}
		}
		
		[Column(Name="c_include_table_name", Storage="_C_include_table_name", DbType="VarChar(100)")]
		public string C_include_table_name
		{
			get
			{
				return this._C_include_table_name;
			}
			set
			{
				if ((this._C_include_table_name != value))
				{
					this.OnC_include_table_nameChanging(value);
					this.SendPropertyChanging();
					this._C_include_table_name = value;
					this.SendPropertyChanged("C_include_table_name");
					this.OnC_include_table_nameChanged();
				}
			}
		}
		
		[Column(Name="c_source_value", Storage="_C_source_value", DbType="VarChar(1000)")]
		public string C_source_value
		{
			get
			{
				return this._C_source_value;
			}
			set
			{
				if ((this._C_source_value != value))
				{
					this.OnC_source_valueChanging(value);
					this.SendPropertyChanging();
					this._C_source_value = value;
					this.SendPropertyChanged("C_source_value");
					this.OnC_source_valueChanged();
				}
			}
		}
		
		[Column(Name="c_target_field", Storage="_C_target_field", DbType="VarChar(100)")]
		public string C_target_field
		{
			get
			{
				return this._C_target_field;
			}
			set
			{
				if ((this._C_target_field != value))
				{
					this.OnC_target_fieldChanging(value);
					this.SendPropertyChanging();
					this._C_target_field = value;
					this.SendPropertyChanged("C_target_field");
					this.OnC_target_fieldChanged();
				}
			}
		}
		
		[Column(Name="c_include_predicate", Storage="_C_include_predicate", DbType="VarChar(1000)")]
		public string C_include_predicate
		{
			get
			{
				return this._C_include_predicate;
			}
			set
			{
				if ((this._C_include_predicate != value))
				{
					this.OnC_include_predicateChanging(value);
					this.SendPropertyChanging();
					this._C_include_predicate = value;
					this.SendPropertyChanged("C_include_predicate");
					this.OnC_include_predicateChanged();
				}
			}
		}
		
		[Column(Name="c_included_field_prefix", Storage="_C_included_field_prefix", DbType="VarChar(100)")]
		public string C_included_field_prefix
		{
			get
			{
				return this._C_included_field_prefix;
			}
			set
			{
				if ((this._C_included_field_prefix != value))
				{
					this.OnC_included_field_prefixChanging(value);
					this.SendPropertyChanging();
					this._C_included_field_prefix = value;
					this.SendPropertyChanged("C_included_field_prefix");
					this.OnC_included_field_prefixChanged();
				}
			}
		}
		
		[Column(Name="c_field_name", Storage="_C_field_name", DbType="VarChar(100)")]
		public string C_field_name
		{
			get
			{
				return this._C_field_name;
			}
			set
			{
				if ((this._C_field_name != value))
				{
					this.OnC_field_nameChanging(value);
					this.SendPropertyChanging();
					this._C_field_name = value;
					this.SendPropertyChanged("C_field_name");
					this.OnC_field_nameChanged();
				}
			}
		}
		
		[Column(Name="c_population_string", Storage="_C_population_string", DbType="VarChar(4000)")]
		public string C_population_string
		{
			get
			{
				return this._C_population_string;
			}
			set
			{
				if ((this._C_population_string != value))
				{
					this.OnC_population_stringChanging(value);
					this.SendPropertyChanging();
					this._C_population_string = value;
					this.SendPropertyChanged("C_population_string");
					this.OnC_population_stringChanged();
				}
			}
		}
		
		[Column(Name="c_mvm_procedure", Storage="_C_mvm_procedure", DbType="VarChar(4000)")]
		public string C_mvm_procedure
		{
			get
			{
				return this._C_mvm_procedure;
			}
			set
			{
				if ((this._C_mvm_procedure != value))
				{
					this.OnC_mvm_procedureChanging(value);
					this.SendPropertyChanging();
					this._C_mvm_procedure = value;
					this.SendPropertyChanged("C_mvm_procedure");
					this.OnC_mvm_procedureChanged();
				}
			}
		}
		
		[Column(Name="c_child_charge_name", Storage="_C_child_charge_name", DbType="VarChar(4000)")]
		public string C_child_charge_name
		{
			get
			{
				return this._C_child_charge_name;
			}
			set
			{
				if ((this._C_child_charge_name != value))
				{
					this.OnC_child_charge_nameChanging(value);
					this.SendPropertyChanging();
					this._C_child_charge_name = value;
					this.SendPropertyChanged("C_child_charge_name");
					this.OnC_child_charge_nameChanged();
				}
			}
		}
		
		[Column(Name="c_filter", Storage="_C_filter", DbType="VarChar(4000)")]
		public string C_filter
		{
			get
			{
				return this._C_filter;
			}
			set
			{
				if ((this._C_filter != value))
				{
					this.OnC_filterChanging(value);
					this.SendPropertyChanging();
					this._C_filter = value;
					this.SendPropertyChanged("C_filter");
					this.OnC_filterChanged();
				}
			}
		}
		
		[Column(Name="c_default_value", Storage="_C_default_value", DbType="VarChar(1000)")]
		public string C_default_value
		{
			get
			{
				return this._C_default_value;
			}
			set
			{
				if ((this._C_default_value != value))
				{
					this.OnC_default_valueChanging(value);
					this.SendPropertyChanging();
					this._C_default_value = value;
					this.SendPropertyChanged("C_default_value");
					this.OnC_default_valueChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_gen__c_Gen__58BC2184", Storage="_T_amp_generatedcharge", ThisKey="C_GenCharge_Id", OtherKey="C_GenCharge_Id", IsForeignKey=true)]
		public T_amp_generatedcharge T_amp_generatedcharge
		{
			get
			{
				return this._T_amp_generatedcharge.Entity;
			}
			set
			{
				T_amp_generatedcharge previousValue = this._T_amp_generatedcharge.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_generatedcharge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_generatedcharge.Entity = null;
						previousValue.T_amp_genchargedirective.Remove(this);
					}
					this._T_amp_generatedcharge.Entity = value;
					if ((value != null))
					{
						value.T_amp_genchargedirective.Add(this);
						this._C_GenCharge_Id = value.C_GenCharge_Id;
					}
					else
					{
						this._C_GenCharge_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_generatedcharge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_generatedcharge")]
	public partial class T_amp_generatedcharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_GenCharge_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private string _C_AmountChain;
		
		private string _C_ProductViewName;
		
		private EntitySet<T_amp_genchargedirective> _T_amp_genchargedirective;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_GenCharge_IdChanging(System.Guid value);
    partial void OnC_GenCharge_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_AmountChainChanging(string value);
    partial void OnC_AmountChainChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    #endregion
		
		public T_amp_generatedcharge()
		{
			this._T_amp_genchargedirective = new EntitySet<T_amp_genchargedirective>(new Action<T_amp_genchargedirective>(this.attach_T_amp_genchargedirective), new Action<T_amp_genchargedirective>(this.detach_T_amp_genchargedirective));
			OnCreated();
		}
		
		[Column(Name="c_GenCharge_Id", Storage="_C_GenCharge_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_GenCharge_Id
		{
			get
			{
				return this._C_GenCharge_Id;
			}
			set
			{
				if ((this._C_GenCharge_Id != value))
				{
					this.OnC_GenCharge_IdChanging(value);
					this.SendPropertyChanging();
					this._C_GenCharge_Id = value;
					this.SendPropertyChanged("C_GenCharge_Id");
					this.OnC_GenCharge_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_AmountChain", Storage="_C_AmountChain", DbType="VarChar(100)")]
		public string C_AmountChain
		{
			get
			{
				return this._C_AmountChain;
			}
			set
			{
				if ((this._C_AmountChain != value))
				{
					this.OnC_AmountChainChanging(value);
					this.SendPropertyChanging();
					this._C_AmountChain = value;
					this.SendPropertyChanged("C_AmountChain");
					this.OnC_AmountChainChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="VarChar(100)")]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_gen__c_Gen__58BC2184", Storage="_T_amp_genchargedirective", ThisKey="C_GenCharge_Id", OtherKey="C_GenCharge_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_genchargedirective> T_amp_genchargedirective
		{
			get
			{
				return this._T_amp_genchargedirective;
			}
			set
			{
				this._T_amp_genchargedirective.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_genchargedirective(T_amp_genchargedirective entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_generatedcharge = this;
		}
		
		private void detach_T_amp_genchargedirective(T_amp_genchargedirective entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_generatedcharge = null;
		}
	}
	
	[Table(Name="dbo.t_amp_pvtoamountchain")]
	public partial class T_amp_pvtoamountchain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_PvToAmountChain_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private string _C_ProductViewName;
		
		private System.Guid _C_AmountChain_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_PvToAmountChain_IdChanging(System.Guid value);
    partial void OnC_PvToAmountChain_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_AmountChain_IdChanging(System.Guid value);
    partial void OnC_AmountChain_IdChanged();
    #endregion
		
		public T_amp_pvtoamountchain()
		{
			OnCreated();
		}
		
		[Column(Name="c_PvToAmountChain_Id", Storage="_C_PvToAmountChain_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_PvToAmountChain_Id
		{
			get
			{
				return this._C_PvToAmountChain_Id;
			}
			set
			{
				if ((this._C_PvToAmountChain_Id != value))
				{
					this.OnC_PvToAmountChain_IdChanging(value);
					this.SendPropertyChanging();
					this._C_PvToAmountChain_Id = value;
					this.SendPropertyChanged("C_PvToAmountChain_Id");
					this.OnC_PvToAmountChain_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_AmountChain_Id", Storage="_C_AmountChain_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_AmountChain_Id
		{
			get
			{
				return this._C_AmountChain_Id;
			}
			set
			{
				if ((this._C_AmountChain_Id != value))
				{
					this.OnC_AmountChain_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AmountChain_Id = value;
					this.SendPropertyChanged("C_AmountChain_Id");
					this.OnC_AmountChain_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_usagechargefie")]
	public partial class T_amp_usagechargefie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_UsageChargeField_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_ProductViewName;
		
		private string _C_FieldType;
		
		private string _C_ContributingField;
		
		private string _C_PercentageField;
		
		private string _C_CurrencyField;
		
		private string _C_Precision;
		
		private string _C_Modifier;
		
		private string _C_Filter;
		
		private int _C_FieldOrder;
		
		private string _C_ChargeName;
		
		private string _C_FieldName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_UsageChargeField_IdChanging(System.Guid value);
    partial void OnC_UsageChargeField_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_FieldTypeChanging(string value);
    partial void OnC_FieldTypeChanged();
    partial void OnC_ContributingFieldChanging(string value);
    partial void OnC_ContributingFieldChanged();
    partial void OnC_PercentageFieldChanging(string value);
    partial void OnC_PercentageFieldChanged();
    partial void OnC_CurrencyFieldChanging(string value);
    partial void OnC_CurrencyFieldChanged();
    partial void OnC_PrecisionChanging(string value);
    partial void OnC_PrecisionChanged();
    partial void OnC_ModifierChanging(string value);
    partial void OnC_ModifierChanged();
    partial void OnC_FilterChanging(string value);
    partial void OnC_FilterChanged();
    partial void OnC_FieldOrderChanging(int value);
    partial void OnC_FieldOrderChanged();
    partial void OnC_ChargeNameChanging(string value);
    partial void OnC_ChargeNameChanged();
    partial void OnC_FieldNameChanging(string value);
    partial void OnC_FieldNameChanged();
    #endregion
		
		public T_amp_usagechargefie()
		{
			OnCreated();
		}
		
		[Column(Name="c_UsageChargeField_Id", Storage="_C_UsageChargeField_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_UsageChargeField_Id
		{
			get
			{
				return this._C_UsageChargeField_Id;
			}
			set
			{
				if ((this._C_UsageChargeField_Id != value))
				{
					this.OnC_UsageChargeField_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UsageChargeField_Id = value;
					this.SendPropertyChanged("C_UsageChargeField_Id");
					this.OnC_UsageChargeField_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255)")]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_FieldType", Storage="_C_FieldType", DbType="NVarChar(255)")]
		public string C_FieldType
		{
			get
			{
				return this._C_FieldType;
			}
			set
			{
				if ((this._C_FieldType != value))
				{
					this.OnC_FieldTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FieldType = value;
					this.SendPropertyChanged("C_FieldType");
					this.OnC_FieldTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ContributingField", Storage="_C_ContributingField", DbType="NVarChar(255)")]
		public string C_ContributingField
		{
			get
			{
				return this._C_ContributingField;
			}
			set
			{
				if ((this._C_ContributingField != value))
				{
					this.OnC_ContributingFieldChanging(value);
					this.SendPropertyChanging();
					this._C_ContributingField = value;
					this.SendPropertyChanged("C_ContributingField");
					this.OnC_ContributingFieldChanged();
				}
			}
		}
		
		[Column(Name="c_PercentageField", Storage="_C_PercentageField", DbType="NVarChar(255)")]
		public string C_PercentageField
		{
			get
			{
				return this._C_PercentageField;
			}
			set
			{
				if ((this._C_PercentageField != value))
				{
					this.OnC_PercentageFieldChanging(value);
					this.SendPropertyChanging();
					this._C_PercentageField = value;
					this.SendPropertyChanged("C_PercentageField");
					this.OnC_PercentageFieldChanged();
				}
			}
		}
		
		[Column(Name="c_CurrencyField", Storage="_C_CurrencyField", DbType="NVarChar(255)")]
		public string C_CurrencyField
		{
			get
			{
				return this._C_CurrencyField;
			}
			set
			{
				if ((this._C_CurrencyField != value))
				{
					this.OnC_CurrencyFieldChanging(value);
					this.SendPropertyChanging();
					this._C_CurrencyField = value;
					this.SendPropertyChanged("C_CurrencyField");
					this.OnC_CurrencyFieldChanged();
				}
			}
		}
		
		[Column(Name="c_Precision", Storage="_C_Precision", DbType="NVarChar(255)")]
		public string C_Precision
		{
			get
			{
				return this._C_Precision;
			}
			set
			{
				if ((this._C_Precision != value))
				{
					this.OnC_PrecisionChanging(value);
					this.SendPropertyChanging();
					this._C_Precision = value;
					this.SendPropertyChanged("C_Precision");
					this.OnC_PrecisionChanged();
				}
			}
		}
		
		[Column(Name="c_Modifier", Storage="_C_Modifier", DbType="NVarChar(1000)")]
		public string C_Modifier
		{
			get
			{
				return this._C_Modifier;
			}
			set
			{
				if ((this._C_Modifier != value))
				{
					this.OnC_ModifierChanging(value);
					this.SendPropertyChanging();
					this._C_Modifier = value;
					this.SendPropertyChanged("C_Modifier");
					this.OnC_ModifierChanged();
				}
			}
		}
		
		[Column(Name="c_Filter", Storage="_C_Filter", DbType="NVarChar(1000)")]
		public string C_Filter
		{
			get
			{
				return this._C_Filter;
			}
			set
			{
				if ((this._C_Filter != value))
				{
					this.OnC_FilterChanging(value);
					this.SendPropertyChanging();
					this._C_Filter = value;
					this.SendPropertyChanged("C_Filter");
					this.OnC_FilterChanged();
				}
			}
		}
		
		[Column(Name="c_FieldOrder", Storage="_C_FieldOrder", DbType="Int NOT NULL")]
		public int C_FieldOrder
		{
			get
			{
				return this._C_FieldOrder;
			}
			set
			{
				if ((this._C_FieldOrder != value))
				{
					this.OnC_FieldOrderChanging(value);
					this.SendPropertyChanging();
					this._C_FieldOrder = value;
					this.SendPropertyChanged("C_FieldOrder");
					this.OnC_FieldOrderChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeName", Storage="_C_ChargeName", DbType="NVarChar(255)")]
		public string C_ChargeName
		{
			get
			{
				return this._C_ChargeName;
			}
			set
			{
				if ((this._C_ChargeName != value))
				{
					this.OnC_ChargeNameChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeName = value;
					this.SendPropertyChanged("C_ChargeName");
					this.OnC_ChargeNameChanged();
				}
			}
		}
		
		[Column(Name="c_FieldName", Storage="_C_FieldName", DbType="NVarChar(255)")]
		public string C_FieldName
		{
			get
			{
				return this._C_FieldName;
			}
			set
			{
				if ((this._C_FieldName != value))
				{
					this.OnC_FieldNameChanging(value);
					this.SendPropertyChanging();
					this._C_FieldName = value;
					this.SendPropertyChanged("C_FieldName");
					this.OnC_FieldNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_amp_usagequalgroup")]
	public partial class T_amp_usagequalgroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_UsageQualGroup_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Description;
		
		private EntitySet<T_amp_usagequalifica> _T_amp_usagequalifica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_UsageQualGroup_IdChanging(System.Guid value);
    partial void OnC_UsageQualGroup_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_amp_usagequalgroup()
		{
			this._T_amp_usagequalifica = new EntitySet<T_amp_usagequalifica>(new Action<T_amp_usagequalifica>(this.attach_T_amp_usagequalifica), new Action<T_amp_usagequalifica>(this.detach_T_amp_usagequalifica));
			OnCreated();
		}
		
		[Column(Name="c_UsageQualGroup_Id", Storage="_C_UsageQualGroup_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_UsageQualGroup_Id
		{
			get
			{
				return this._C_UsageQualGroup_Id;
			}
			set
			{
				if ((this._C_UsageQualGroup_Id != value))
				{
					this.OnC_UsageQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UsageQualGroup_Id = value;
					this.SendPropertyChanged("C_UsageQualGroup_Id");
					this.OnC_UsageQualGroup_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_usa__c_Usa__53385258", Storage="_T_amp_usagequalifica", ThisKey="C_UsageQualGroup_Id", OtherKey="C_UsageQualGroup_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_amp_usagequalifica> T_amp_usagequalifica
		{
			get
			{
				return this._T_amp_usagequalifica;
			}
			set
			{
				this._T_amp_usagequalifica.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_amp_usagequalifica(T_amp_usagequalifica entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_usagequalgroup = this;
		}
		
		private void detach_T_amp_usagequalifica(T_amp_usagequalifica entity)
		{
			this.SendPropertyChanging();
			entity.T_amp_usagequalgroup = null;
		}
	}
	
	[Table(Name="dbo.t_amp_usagequalifica")]
	public partial class T_amp_usagequalifica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_UsageQualification_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private string _C_Filter;
		
		private int _C_ExecutionSequence;
		
		private System.Nullable<System.Guid> _C_UsageQualGroup_Id;
		
		private EntityRef<T_amp_usagequalgroup> _T_amp_usagequalgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_UsageQualification_IdChanging(System.Guid value);
    partial void OnC_UsageQualification_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_FilterChanging(string value);
    partial void OnC_FilterChanged();
    partial void OnC_ExecutionSequenceChanging(int value);
    partial void OnC_ExecutionSequenceChanged();
    partial void OnC_UsageQualGroup_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_UsageQualGroup_IdChanged();
    #endregion
		
		public T_amp_usagequalifica()
		{
			this._T_amp_usagequalgroup = default(EntityRef<T_amp_usagequalgroup>);
			OnCreated();
		}
		
		[Column(Name="c_UsageQualification_Id", Storage="_C_UsageQualification_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_UsageQualification_Id
		{
			get
			{
				return this._C_UsageQualification_Id;
			}
			set
			{
				if ((this._C_UsageQualification_Id != value))
				{
					this.OnC_UsageQualification_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UsageQualification_Id = value;
					this.SendPropertyChanged("C_UsageQualification_Id");
					this.OnC_UsageQualification_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_Filter", Storage="_C_Filter", DbType="NVarChar(2000)")]
		public string C_Filter
		{
			get
			{
				return this._C_Filter;
			}
			set
			{
				if ((this._C_Filter != value))
				{
					this.OnC_FilterChanging(value);
					this.SendPropertyChanging();
					this._C_Filter = value;
					this.SendPropertyChanged("C_Filter");
					this.OnC_FilterChanged();
				}
			}
		}
		
		[Column(Name="c_ExecutionSequence", Storage="_C_ExecutionSequence", DbType="Int NOT NULL")]
		public int C_ExecutionSequence
		{
			get
			{
				return this._C_ExecutionSequence;
			}
			set
			{
				if ((this._C_ExecutionSequence != value))
				{
					this.OnC_ExecutionSequenceChanging(value);
					this.SendPropertyChanging();
					this._C_ExecutionSequence = value;
					this.SendPropertyChanged("C_ExecutionSequence");
					this.OnC_ExecutionSequenceChanged();
				}
			}
		}
		
		[Column(Name="c_UsageQualGroup_Id", Storage="_C_UsageQualGroup_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_UsageQualGroup_Id
		{
			get
			{
				return this._C_UsageQualGroup_Id;
			}
			set
			{
				if ((this._C_UsageQualGroup_Id != value))
				{
					this.OnC_UsageQualGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UsageQualGroup_Id = value;
					this.SendPropertyChanged("C_UsageQualGroup_Id");
					this.OnC_UsageQualGroup_IdChanged();
				}
			}
		}
		
		[Association(Name="FK__t_amp_usa__c_Usa__53385258", Storage="_T_amp_usagequalgroup", ThisKey="C_UsageQualGroup_Id", OtherKey="C_UsageQualGroup_Id", IsForeignKey=true)]
		public T_amp_usagequalgroup T_amp_usagequalgroup
		{
			get
			{
				return this._T_amp_usagequalgroup.Entity;
			}
			set
			{
				T_amp_usagequalgroup previousValue = this._T_amp_usagequalgroup.Entity;
				if (((previousValue != value) 
							|| (this._T_amp_usagequalgroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_amp_usagequalgroup.Entity = null;
						previousValue.T_amp_usagequalifica.Remove(this);
					}
					this._T_amp_usagequalgroup.Entity = value;
					if ((value != null))
					{
						value.T_amp_usagequalifica.Add(this);
						this._C_UsageQualGroup_Id = value.C_UsageQualGroup_Id;
					}
					else
					{
						this._C_UsageQualGroup_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_amp_usagequalgroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_applicability_rule")]
	public partial class T_applicability_rule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private int _Id_formula;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnId_formulaChanging(int value);
    partial void OnId_formulaChanged();
    #endregion
		
		public T_applicability_rule()
		{
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="id_formula", Storage="_Id_formula", DbType="Int NOT NULL")]
		public int Id_formula
		{
			get
			{
				return this._Id_formula;
			}
			set
			{
				if ((this._Id_formula != value))
				{
					this.OnId_formulaChanging(value);
					this.SendPropertyChanging();
					this._Id_formula = value;
					this.SendPropertyChanged("Id_formula");
					this.OnId_formulaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_approvals")]
	public partial class T_approvals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_approval;
		
		private System.Nullable<System.DateTime> _C_SubmittedDate;
		
		private int _C_SubmitterId;
		
		private string _C_ChangeType;
		
		private System.Data.Linq.Binary _C_ChangeDetails;
		
		private System.Nullable<int> _C_ApproverId;
		
		private System.Nullable<System.DateTime> _C_ChangeLastModifiedDate;
		
		private string _C_ItemDisplayName;
		
		private string _C_UniqueItemId;
		
		private string _C_Comment;
		
		private string _C_CurrentState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_approvalChanging(int value);
    partial void OnId_approvalChanged();
    partial void OnC_SubmittedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubmittedDateChanged();
    partial void OnC_SubmitterIdChanging(int value);
    partial void OnC_SubmitterIdChanged();
    partial void OnC_ChangeTypeChanging(string value);
    partial void OnC_ChangeTypeChanged();
    partial void OnC_ChangeDetailsChanging(System.Data.Linq.Binary value);
    partial void OnC_ChangeDetailsChanged();
    partial void OnC_ApproverIdChanging(System.Nullable<int> value);
    partial void OnC_ApproverIdChanged();
    partial void OnC_ChangeLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_ChangeLastModifiedDateChanged();
    partial void OnC_ItemDisplayNameChanging(string value);
    partial void OnC_ItemDisplayNameChanged();
    partial void OnC_UniqueItemIdChanging(string value);
    partial void OnC_UniqueItemIdChanged();
    partial void OnC_CommentChanging(string value);
    partial void OnC_CommentChanged();
    partial void OnC_CurrentStateChanging(string value);
    partial void OnC_CurrentStateChanged();
    #endregion
		
		public T_approvals()
		{
			OnCreated();
		}
		
		[Column(Name="id_approval", Storage="_Id_approval", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_approval
		{
			get
			{
				return this._Id_approval;
			}
			set
			{
				if ((this._Id_approval != value))
				{
					this.OnId_approvalChanging(value);
					this.SendPropertyChanging();
					this._Id_approval = value;
					this.SendPropertyChanged("Id_approval");
					this.OnId_approvalChanged();
				}
			}
		}
		
		[Column(Name="c_SubmittedDate", Storage="_C_SubmittedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubmittedDate
		{
			get
			{
				return this._C_SubmittedDate;
			}
			set
			{
				if ((this._C_SubmittedDate != value))
				{
					this.OnC_SubmittedDateChanging(value);
					this.SendPropertyChanging();
					this._C_SubmittedDate = value;
					this.SendPropertyChanged("C_SubmittedDate");
					this.OnC_SubmittedDateChanged();
				}
			}
		}
		
		[Column(Name="c_SubmitterId", Storage="_C_SubmitterId", DbType="Int NOT NULL")]
		public int C_SubmitterId
		{
			get
			{
				return this._C_SubmitterId;
			}
			set
			{
				if ((this._C_SubmitterId != value))
				{
					this.OnC_SubmitterIdChanging(value);
					this.SendPropertyChanging();
					this._C_SubmitterId = value;
					this.SendPropertyChanged("C_SubmitterId");
					this.OnC_SubmitterIdChanged();
				}
			}
		}
		
		[Column(Name="c_ChangeType", Storage="_C_ChangeType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string C_ChangeType
		{
			get
			{
				return this._C_ChangeType;
			}
			set
			{
				if ((this._C_ChangeType != value))
				{
					this.OnC_ChangeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ChangeType = value;
					this.SendPropertyChanged("C_ChangeType");
					this.OnC_ChangeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ChangeDetails", Storage="_C_ChangeDetails", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary C_ChangeDetails
		{
			get
			{
				return this._C_ChangeDetails;
			}
			set
			{
				if ((this._C_ChangeDetails != value))
				{
					this.OnC_ChangeDetailsChanging(value);
					this.SendPropertyChanging();
					this._C_ChangeDetails = value;
					this.SendPropertyChanged("C_ChangeDetails");
					this.OnC_ChangeDetailsChanged();
				}
			}
		}
		
		[Column(Name="c_ApproverId", Storage="_C_ApproverId", DbType="Int")]
		public System.Nullable<int> C_ApproverId
		{
			get
			{
				return this._C_ApproverId;
			}
			set
			{
				if ((this._C_ApproverId != value))
				{
					this.OnC_ApproverIdChanging(value);
					this.SendPropertyChanging();
					this._C_ApproverId = value;
					this.SendPropertyChanged("C_ApproverId");
					this.OnC_ApproverIdChanged();
				}
			}
		}
		
		[Column(Name="c_ChangeLastModifiedDate", Storage="_C_ChangeLastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_ChangeLastModifiedDate
		{
			get
			{
				return this._C_ChangeLastModifiedDate;
			}
			set
			{
				if ((this._C_ChangeLastModifiedDate != value))
				{
					this.OnC_ChangeLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._C_ChangeLastModifiedDate = value;
					this.SendPropertyChanged("C_ChangeLastModifiedDate");
					this.OnC_ChangeLastModifiedDateChanged();
				}
			}
		}
		
		[Column(Name="c_ItemDisplayName", Storage="_C_ItemDisplayName", DbType="VarChar(100)")]
		public string C_ItemDisplayName
		{
			get
			{
				return this._C_ItemDisplayName;
			}
			set
			{
				if ((this._C_ItemDisplayName != value))
				{
					this.OnC_ItemDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._C_ItemDisplayName = value;
					this.SendPropertyChanged("C_ItemDisplayName");
					this.OnC_ItemDisplayNameChanged();
				}
			}
		}
		
		[Column(Name="c_UniqueItemId", Storage="_C_UniqueItemId", DbType="VarChar(100)")]
		public string C_UniqueItemId
		{
			get
			{
				return this._C_UniqueItemId;
			}
			set
			{
				if ((this._C_UniqueItemId != value))
				{
					this.OnC_UniqueItemIdChanging(value);
					this.SendPropertyChanging();
					this._C_UniqueItemId = value;
					this.SendPropertyChanged("C_UniqueItemId");
					this.OnC_UniqueItemIdChanged();
				}
			}
		}
		
		[Column(Name="c_Comment", Storage="_C_Comment", DbType="VarChar(255)")]
		public string C_Comment
		{
			get
			{
				return this._C_Comment;
			}
			set
			{
				if ((this._C_Comment != value))
				{
					this.OnC_CommentChanging(value);
					this.SendPropertyChanging();
					this._C_Comment = value;
					this.SendPropertyChanged("C_Comment");
					this.OnC_CommentChanged();
				}
			}
		}
		
		[Column(Name="c_CurrentState", Storage="_C_CurrentState", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_CurrentState
		{
			get
			{
				return this._C_CurrentState;
			}
			set
			{
				if ((this._C_CurrentState != value))
				{
					this.OnC_CurrentStateChanging(value);
					this.SendPropertyChanging();
					this._C_CurrentState = value;
					this.SendPropertyChanged("C_CurrentState");
					this.OnC_CurrentStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ar_bucket_def")]
	public partial class T_ar_bucket_def
	{
		
		private int _Id_bucket_def;
		
		private int _N_start_day;
		
		private int _N_end_day;
		
		private string _Nm_desc;
		
		public T_ar_bucket_def()
		{
		}
		
		[Column(Name="id_bucket_def", Storage="_Id_bucket_def", DbType="Int NOT NULL")]
		public int Id_bucket_def
		{
			get
			{
				return this._Id_bucket_def;
			}
			set
			{
				if ((this._Id_bucket_def != value))
				{
					this._Id_bucket_def = value;
				}
			}
		}
		
		[Column(Name="n_start_day", Storage="_N_start_day", DbType="Int NOT NULL")]
		public int N_start_day
		{
			get
			{
				return this._N_start_day;
			}
			set
			{
				if ((this._N_start_day != value))
				{
					this._N_start_day = value;
				}
			}
		}
		
		[Column(Name="n_end_day", Storage="_N_end_day", DbType="Int NOT NULL")]
		public int N_end_day
		{
			get
			{
				return this._N_end_day;
			}
			set
			{
				if ((this._N_end_day != value))
				{
					this._N_end_day = value;
				}
			}
		}
		
		[Column(Name="nm_desc", Storage="_Nm_desc", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_desc
		{
			get
			{
				return this._Nm_desc;
			}
			set
			{
				if ((this._Nm_desc != value))
				{
					this._Nm_desc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_ar_buckets")]
	public partial class T_ar_buckets
	{
		
		private int _C_bucket_id;
		
		private decimal _C_amount;
		
		private decimal _C_div_amount;
		
		private System.Guid _C_DebtTreatmentQueue_Id;
		
		public T_ar_buckets()
		{
		}
		
		[Column(Name="c_bucket_id", Storage="_C_bucket_id", DbType="Int NOT NULL")]
		public int C_bucket_id
		{
			get
			{
				return this._C_bucket_id;
			}
			set
			{
				if ((this._C_bucket_id != value))
				{
					this._C_bucket_id = value;
				}
			}
		}
		
		[Column(Name="c_amount", Storage="_C_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_amount
		{
			get
			{
				return this._C_amount;
			}
			set
			{
				if ((this._C_amount != value))
				{
					this._C_amount = value;
				}
			}
		}
		
		[Column(Name="c_div_amount", Storage="_C_div_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_div_amount
		{
			get
			{
				return this._C_div_amount;
			}
			set
			{
				if ((this._C_div_amount != value))
				{
					this._C_div_amount = value;
				}
			}
		}
		
		[Column(Name="c_DebtTreatmentQueue_Id", Storage="_C_DebtTreatmentQueue_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_DebtTreatmentQueue_Id
		{
			get
			{
				return this._C_DebtTreatmentQueue_Id;
			}
			set
			{
				if ((this._C_DebtTreatmentQueue_Id != value))
				{
					this._C_DebtTreatmentQueue_Id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_ar_gl_batch")]
	public partial class T_ar_gl_batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C_BatchId;
		
		private System.DateTime _C_CreateDate;
		
		private System.Nullable<System.DateTime> _C_StatusDate;
		
		private int _C_BatchStatus;
		
		private int _C_BatchType;
		
		private int _C_Currency;
		
		private int _C_DivisionCurrency;
		
		private System.Nullable<decimal> _C_DivisionAmountTotal;
		
		private System.Nullable<decimal> _C_ExchangeRate;
		
		private System.Nullable<decimal> _C_TotalAmount;
		
		private System.Nullable<decimal> _C_GainLossAmount;
		
		private System.Guid _C_DomainId;
		
		private int _C_BatchTransactionType;
		
		private System.Nullable<System.DateTime> _C_IntendedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BatchIdChanging(int value);
    partial void OnC_BatchIdChanged();
    partial void OnC_CreateDateChanging(System.DateTime value);
    partial void OnC_CreateDateChanged();
    partial void OnC_StatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StatusDateChanged();
    partial void OnC_BatchStatusChanging(int value);
    partial void OnC_BatchStatusChanged();
    partial void OnC_BatchTypeChanging(int value);
    partial void OnC_BatchTypeChanged();
    partial void OnC_CurrencyChanging(int value);
    partial void OnC_CurrencyChanged();
    partial void OnC_DivisionCurrencyChanging(int value);
    partial void OnC_DivisionCurrencyChanged();
    partial void OnC_DivisionAmountTotalChanging(System.Nullable<decimal> value);
    partial void OnC_DivisionAmountTotalChanged();
    partial void OnC_ExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnC_ExchangeRateChanged();
    partial void OnC_TotalAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TotalAmountChanged();
    partial void OnC_GainLossAmountChanging(System.Nullable<decimal> value);
    partial void OnC_GainLossAmountChanged();
    partial void OnC_DomainIdChanging(System.Guid value);
    partial void OnC_DomainIdChanged();
    partial void OnC_BatchTransactionTypeChanging(int value);
    partial void OnC_BatchTransactionTypeChanged();
    partial void OnC_IntendedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_IntendedDateChanged();
    #endregion
		
		public T_ar_gl_batch()
		{
			OnCreated();
		}
		
		[Column(Name="c_BatchId", Storage="_C_BatchId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int C_BatchId
		{
			get
			{
				return this._C_BatchId;
			}
			set
			{
				if ((this._C_BatchId != value))
				{
					this.OnC_BatchIdChanging(value);
					this.SendPropertyChanging();
					this._C_BatchId = value;
					this.SendPropertyChanged("C_BatchId");
					this.OnC_BatchIdChanged();
				}
			}
		}
		
		[Column(Name="c_CreateDate", Storage="_C_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_CreateDate
		{
			get
			{
				return this._C_CreateDate;
			}
			set
			{
				if ((this._C_CreateDate != value))
				{
					this.OnC_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreateDate = value;
					this.SendPropertyChanged("C_CreateDate");
					this.OnC_CreateDateChanged();
				}
			}
		}
		
		[Column(Name="c_StatusDate", Storage="_C_StatusDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StatusDate
		{
			get
			{
				return this._C_StatusDate;
			}
			set
			{
				if ((this._C_StatusDate != value))
				{
					this.OnC_StatusDateChanging(value);
					this.SendPropertyChanging();
					this._C_StatusDate = value;
					this.SendPropertyChanged("C_StatusDate");
					this.OnC_StatusDateChanged();
				}
			}
		}
		
		[Column(Name="c_BatchStatus", Storage="_C_BatchStatus", DbType="Int NOT NULL")]
		public int C_BatchStatus
		{
			get
			{
				return this._C_BatchStatus;
			}
			set
			{
				if ((this._C_BatchStatus != value))
				{
					this.OnC_BatchStatusChanging(value);
					this.SendPropertyChanging();
					this._C_BatchStatus = value;
					this.SendPropertyChanged("C_BatchStatus");
					this.OnC_BatchStatusChanged();
				}
			}
		}
		
		[Column(Name="c_BatchType", Storage="_C_BatchType", DbType="Int NOT NULL")]
		public int C_BatchType
		{
			get
			{
				return this._C_BatchType;
			}
			set
			{
				if ((this._C_BatchType != value))
				{
					this.OnC_BatchTypeChanging(value);
					this.SendPropertyChanging();
					this._C_BatchType = value;
					this.SendPropertyChanged("C_BatchType");
					this.OnC_BatchTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="Int NOT NULL")]
		public int C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_DivisionCurrency", Storage="_C_DivisionCurrency", DbType="Int NOT NULL")]
		public int C_DivisionCurrency
		{
			get
			{
				return this._C_DivisionCurrency;
			}
			set
			{
				if ((this._C_DivisionCurrency != value))
				{
					this.OnC_DivisionCurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_DivisionCurrency = value;
					this.SendPropertyChanged("C_DivisionCurrency");
					this.OnC_DivisionCurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_DivisionAmountTotal", Storage="_C_DivisionAmountTotal", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DivisionAmountTotal
		{
			get
			{
				return this._C_DivisionAmountTotal;
			}
			set
			{
				if ((this._C_DivisionAmountTotal != value))
				{
					this.OnC_DivisionAmountTotalChanging(value);
					this.SendPropertyChanging();
					this._C_DivisionAmountTotal = value;
					this.SendPropertyChanged("C_DivisionAmountTotal");
					this.OnC_DivisionAmountTotalChanged();
				}
			}
		}
		
		[Column(Name="c_ExchangeRate", Storage="_C_ExchangeRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_ExchangeRate
		{
			get
			{
				return this._C_ExchangeRate;
			}
			set
			{
				if ((this._C_ExchangeRate != value))
				{
					this.OnC_ExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._C_ExchangeRate = value;
					this.SendPropertyChanged("C_ExchangeRate");
					this.OnC_ExchangeRateChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c_GainLossAmount", Storage="_C_GainLossAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GainLossAmount
		{
			get
			{
				return this._C_GainLossAmount;
			}
			set
			{
				if ((this._C_GainLossAmount != value))
				{
					this.OnC_GainLossAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GainLossAmount = value;
					this.SendPropertyChanged("C_GainLossAmount");
					this.OnC_GainLossAmountChanged();
				}
			}
		}
		
		[Column(Name="c_DomainId", Storage="_C_DomainId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_DomainId
		{
			get
			{
				return this._C_DomainId;
			}
			set
			{
				if ((this._C_DomainId != value))
				{
					this.OnC_DomainIdChanging(value);
					this.SendPropertyChanging();
					this._C_DomainId = value;
					this.SendPropertyChanged("C_DomainId");
					this.OnC_DomainIdChanged();
				}
			}
		}
		
		[Column(Name="c_BatchTransactionType", Storage="_C_BatchTransactionType", DbType="Int NOT NULL")]
		public int C_BatchTransactionType
		{
			get
			{
				return this._C_BatchTransactionType;
			}
			set
			{
				if ((this._C_BatchTransactionType != value))
				{
					this.OnC_BatchTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_BatchTransactionType = value;
					this.SendPropertyChanged("C_BatchTransactionType");
					this.OnC_BatchTransactionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_IntendedDate", Storage="_C_IntendedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_IntendedDate
		{
			get
			{
				return this._C_IntendedDate;
			}
			set
			{
				if ((this._C_IntendedDate != value))
				{
					this.OnC_IntendedDateChanging(value);
					this.SendPropertyChanging();
					this._C_IntendedDate = value;
					this.SendPropertyChanged("C_IntendedDate");
					this.OnC_IntendedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_archive")]
	public partial class T_archive
	{
		
		private System.Nullable<int> _Id_interval;
		
		private System.Nullable<int> _Id_view;
		
		private string _Adj_name;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Tt_start;
		
		private System.Nullable<System.DateTime> _Tt_end;
		
		public T_archive()
		{
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int")]
		public System.Nullable<int> Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this._Id_interval = value;
				}
			}
		}
		
		[Column(Name="id_view", Storage="_Id_view", DbType="Int")]
		public System.Nullable<int> Id_view
		{
			get
			{
				return this._Id_view;
			}
			set
			{
				if ((this._Id_view != value))
				{
					this._Id_view = value;
				}
			}
		}
		
		[Column(Name="adj_name", Storage="_Adj_name", DbType="VarChar(1000)")]
		public string Adj_name
		{
			get
			{
				return this._Adj_name;
			}
			set
			{
				if ((this._Adj_name != value))
				{
					this._Adj_name = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="Char(1)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_archive_partition")]
	public partial class T_archive_partition
	{
		
		private string _Partition_name;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Tt_start;
		
		private System.Nullable<System.DateTime> _Tt_end;
		
		public T_archive_partition()
		{
		}
		
		[Column(Name="partition_name", Storage="_Partition_name", DbType="NVarChar(4000)")]
		public string Partition_name
		{
			get
			{
				return this._Partition_name;
			}
			set
			{
				if ((this._Partition_name != value))
				{
					this._Partition_name = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="Char(1)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_archive_queue")]
	public partial class T_archive_queue
	{
		
		private string _Id_svc;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _Tt_start;
		
		private System.Nullable<System.DateTime> _Tt_end;
		
		public T_archive_queue()
		{
		}
		
		[Column(Name="id_svc", Storage="_Id_svc", DbType="NVarChar(100)")]
		public string Id_svc
		{
			get
			{
				return this._Id_svc;
			}
			set
			{
				if ((this._Id_svc != value))
				{
					this._Id_svc = value;
				}
			}
		}
		
		[Column(Name="status", Storage="_Status", DbType="VarChar(1)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_archive_queue_partition")]
	public partial class T_archive_queue_partition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Current_id_partition;
		
		private System.DateTime _Last_run;
		
		private System.Nullable<System.DateTime> _Next_allow_run;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrent_id_partitionChanging(int value);
    partial void OnCurrent_id_partitionChanged();
    partial void OnLast_runChanging(System.DateTime value);
    partial void OnLast_runChanged();
    partial void OnNext_allow_runChanging(System.Nullable<System.DateTime> value);
    partial void OnNext_allow_runChanged();
    #endregion
		
		public T_archive_queue_partition()
		{
			OnCreated();
		}
		
		[Column(Name="current_id_partition", Storage="_Current_id_partition", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Current_id_partition
		{
			get
			{
				return this._Current_id_partition;
			}
			set
			{
				if ((this._Current_id_partition != value))
				{
					this.OnCurrent_id_partitionChanging(value);
					this.SendPropertyChanging();
					this._Current_id_partition = value;
					this.SendPropertyChanged("Current_id_partition");
					this.OnCurrent_id_partitionChanged();
				}
			}
		}
		
		[Column(Name="last_run", Storage="_Last_run", DbType="DateTime NOT NULL")]
		public System.DateTime Last_run
		{
			get
			{
				return this._Last_run;
			}
			set
			{
				if ((this._Last_run != value))
				{
					this.OnLast_runChanging(value);
					this.SendPropertyChanging();
					this._Last_run = value;
					this.SendPropertyChanged("Last_run");
					this.OnLast_runChanged();
				}
			}
		}
		
		[Column(Name="next_allow_run", Storage="_Next_allow_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Next_allow_run
		{
			get
			{
				return this._Next_allow_run;
			}
			set
			{
				if ((this._Next_allow_run != value))
				{
					this.OnNext_allow_runChanging(value);
					this.SendPropertyChanging();
					this._Next_allow_run = value;
					this.SendPropertyChanged("Next_allow_run");
					this.OnNext_allow_runChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_atomic_capability_type")]
	public partial class T_atomic_capability_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_type;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private string _Tx_progid;
		
		private string _Tx_editor;
		
		private EntitySet<T_compositor> _T_compositor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_typeChanging(int value);
    partial void OnId_cap_typeChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnTx_progidChanging(string value);
    partial void OnTx_progidChanged();
    partial void OnTx_editorChanging(string value);
    partial void OnTx_editorChanged();
    #endregion
		
		public T_atomic_capability_type()
		{
			this._T_compositor = new EntitySet<T_compositor>(new Action<T_compositor>(this.attach_T_compositor), new Action<T_compositor>(this.detach_T_compositor));
			OnCreated();
		}
		
		[Column(Name="id_cap_type", Storage="_Id_cap_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_cap_type
		{
			get
			{
				return this._Id_cap_type;
			}
			set
			{
				if ((this._Id_cap_type != value))
				{
					this.OnId_cap_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_type = value;
					this.SendPropertyChanged("Id_cap_type");
					this.OnId_cap_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="tx_progid", Storage="_Tx_progid", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_progid
		{
			get
			{
				return this._Tx_progid;
			}
			set
			{
				if ((this._Tx_progid != value))
				{
					this.OnTx_progidChanging(value);
					this.SendPropertyChanging();
					this._Tx_progid = value;
					this.SendPropertyChanged("Tx_progid");
					this.OnTx_progidChanged();
				}
			}
		}
		
		[Column(Name="tx_editor", Storage="_Tx_editor", DbType="NVarChar(255)")]
		public string Tx_editor
		{
			get
			{
				return this._Tx_editor;
			}
			set
			{
				if ((this._Tx_editor != value))
				{
					this.OnTx_editorChanging(value);
					this.SendPropertyChanging();
					this._Tx_editor = value;
					this.SendPropertyChanged("Tx_editor");
					this.OnTx_editorChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_COMPOSITOR", Storage="_T_compositor", ThisKey="Id_cap_type", OtherKey="Id_atomic", DeleteRule="NO ACTION")]
		public EntitySet<T_compositor> T_compositor
		{
			get
			{
				return this._T_compositor;
			}
			set
			{
				this._T_compositor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_compositor(T_compositor entity)
		{
			this.SendPropertyChanging();
			entity.T_atomic_capability_type = this;
		}
		
		private void detach_T_compositor(T_compositor entity)
		{
			this.SendPropertyChanging();
			entity.T_atomic_capability_type = null;
		}
	}
	
	[Table(Name="dbo.t_audit")]
	public partial class T_audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_audit;
		
		private System.Nullable<int> _Id_Event;
		
		private System.Nullable<int> _Id_UserId;
		
		private System.Nullable<int> _Id_entitytype;
		
		private System.Nullable<int> _Id_entity;
		
		private string _Tx_logged_in_as;
		
		private string _Tx_application_name;
		
		private System.DateTime _Dt_crt;
		
		private EntityRef<T_audit_events> _T_audit_events;
		
		private EntitySet<T_audit_details> _T_audit_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnId_EventChanging(System.Nullable<int> value);
    partial void OnId_EventChanged();
    partial void OnId_UserIdChanging(System.Nullable<int> value);
    partial void OnId_UserIdChanged();
    partial void OnId_entitytypeChanging(System.Nullable<int> value);
    partial void OnId_entitytypeChanged();
    partial void OnId_entityChanging(System.Nullable<int> value);
    partial void OnId_entityChanged();
    partial void OnTx_logged_in_asChanging(string value);
    partial void OnTx_logged_in_asChanged();
    partial void OnTx_application_nameChanging(string value);
    partial void OnTx_application_nameChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    #endregion
		
		public T_audit()
		{
			this._T_audit_events = default(EntityRef<T_audit_events>);
			this._T_audit_details = new EntitySet<T_audit_details>(new Action<T_audit_details>(this.attach_T_audit_details), new Action<T_audit_details>(this.detach_T_audit_details));
			OnCreated();
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="id_Event", Storage="_Id_Event", DbType="Int")]
		public System.Nullable<int> Id_Event
		{
			get
			{
				return this._Id_Event;
			}
			set
			{
				if ((this._Id_Event != value))
				{
					this.OnId_EventChanging(value);
					this.SendPropertyChanging();
					this._Id_Event = value;
					this.SendPropertyChanged("Id_Event");
					this.OnId_EventChanged();
				}
			}
		}
		
		[Column(Name="id_UserId", Storage="_Id_UserId", DbType="Int")]
		public System.Nullable<int> Id_UserId
		{
			get
			{
				return this._Id_UserId;
			}
			set
			{
				if ((this._Id_UserId != value))
				{
					this.OnId_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Id_UserId = value;
					this.SendPropertyChanged("Id_UserId");
					this.OnId_UserIdChanged();
				}
			}
		}
		
		[Column(Name="id_entitytype", Storage="_Id_entitytype", DbType="Int")]
		public System.Nullable<int> Id_entitytype
		{
			get
			{
				return this._Id_entitytype;
			}
			set
			{
				if ((this._Id_entitytype != value))
				{
					this.OnId_entitytypeChanging(value);
					this.SendPropertyChanging();
					this._Id_entitytype = value;
					this.SendPropertyChanged("Id_entitytype");
					this.OnId_entitytypeChanged();
				}
			}
		}
		
		[Column(Name="id_entity", Storage="_Id_entity", DbType="Int")]
		public System.Nullable<int> Id_entity
		{
			get
			{
				return this._Id_entity;
			}
			set
			{
				if ((this._Id_entity != value))
				{
					this.OnId_entityChanging(value);
					this.SendPropertyChanging();
					this._Id_entity = value;
					this.SendPropertyChanged("Id_entity");
					this.OnId_entityChanged();
				}
			}
		}
		
		[Column(Name="tx_logged_in_as", Storage="_Tx_logged_in_as", DbType="NVarChar(50)")]
		public string Tx_logged_in_as
		{
			get
			{
				return this._Tx_logged_in_as;
			}
			set
			{
				if ((this._Tx_logged_in_as != value))
				{
					this.OnTx_logged_in_asChanging(value);
					this.SendPropertyChanging();
					this._Tx_logged_in_as = value;
					this.SendPropertyChanged("Tx_logged_in_as");
					this.OnTx_logged_in_asChanged();
				}
			}
		}
		
		[Column(Name="tx_application_name", Storage="_Tx_application_name", DbType="NVarChar(50)")]
		public string Tx_application_name
		{
			get
			{
				return this._Tx_application_name;
			}
			set
			{
				if ((this._Tx_application_name != value))
				{
					this.OnTx_application_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_application_name = value;
					this.SendPropertyChanged("Tx_application_name");
					this.OnTx_application_nameChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_AUDIT", Storage="_T_audit_events", ThisKey="Id_Event", OtherKey="Id_Event", IsForeignKey=true)]
		public T_audit_events T_audit_events
		{
			get
			{
				return this._T_audit_events.Entity;
			}
			set
			{
				T_audit_events previousValue = this._T_audit_events.Entity;
				if (((previousValue != value) 
							|| (this._T_audit_events.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_audit_events.Entity = null;
						previousValue.T_audit.Remove(this);
					}
					this._T_audit_events.Entity = value;
					if ((value != null))
					{
						value.T_audit.Add(this);
						this._Id_Event = value.Id_Event;
					}
					else
					{
						this._Id_Event = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_audit_events");
				}
			}
		}
		
		[Association(Name="FK1_T_AUDIT_DETAILS", Storage="_T_audit_details", ThisKey="Id_audit", OtherKey="Id_audit", DeleteRule="CASCADE")]
		public EntitySet<T_audit_details> T_audit_details
		{
			get
			{
				return this._T_audit_details;
			}
			set
			{
				this._T_audit_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_audit_details(T_audit_details entity)
		{
			this.SendPropertyChanging();
			entity.T_audit = this;
		}
		
		private void detach_T_audit_details(T_audit_details entity)
		{
			this.SendPropertyChanging();
			entity.T_audit = null;
		}
	}
	
	[Table(Name="dbo.t_audit_details")]
	public partial class T_audit_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_auditdetails;
		
		private int _Id_audit;
		
		private string _Tx_details;
		
		private EntityRef<T_audit> _T_audit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditdetailsChanging(int value);
    partial void OnId_auditdetailsChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnTx_detailsChanging(string value);
    partial void OnTx_detailsChanged();
    #endregion
		
		public T_audit_details()
		{
			this._T_audit = default(EntityRef<T_audit>);
			OnCreated();
		}
		
		[Column(Name="id_auditdetails", Storage="_Id_auditdetails", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_auditdetails
		{
			get
			{
				return this._Id_auditdetails;
			}
			set
			{
				if ((this._Id_auditdetails != value))
				{
					this.OnId_auditdetailsChanging(value);
					this.SendPropertyChanging();
					this._Id_auditdetails = value;
					this.SendPropertyChanged("Id_auditdetails");
					this.OnId_auditdetailsChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL")]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="tx_details", Storage="_Tx_details", DbType="NVarChar(4000)")]
		public string Tx_details
		{
			get
			{
				return this._Tx_details;
			}
			set
			{
				if ((this._Tx_details != value))
				{
					this.OnTx_detailsChanging(value);
					this.SendPropertyChanging();
					this._Tx_details = value;
					this.SendPropertyChanged("Tx_details");
					this.OnTx_detailsChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_AUDIT_DETAILS", Storage="_T_audit", ThisKey="Id_audit", OtherKey="Id_audit", IsForeignKey=true, DeleteOnNull=true)]
		public T_audit T_audit
		{
			get
			{
				return this._T_audit.Entity;
			}
			set
			{
				T_audit previousValue = this._T_audit.Entity;
				if (((previousValue != value) 
							|| (this._T_audit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_audit.Entity = null;
						previousValue.T_audit_details.Remove(this);
					}
					this._T_audit.Entity = value;
					if ((value != null))
					{
						value.T_audit_details.Add(this);
						this._Id_audit = value.Id_audit;
					}
					else
					{
						this._Id_audit = default(int);
					}
					this.SendPropertyChanged("T_audit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_audit_events")]
	public partial class T_audit_events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_auditevent;
		
		private int _Id_Event;
		
		private System.Nullable<int> _Id_desc;
		
		private EntitySet<T_audit> _T_audit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditeventChanging(int value);
    partial void OnId_auditeventChanged();
    partial void OnId_EventChanging(int value);
    partial void OnId_EventChanged();
    partial void OnId_descChanging(System.Nullable<int> value);
    partial void OnId_descChanged();
    #endregion
		
		public T_audit_events()
		{
			this._T_audit = new EntitySet<T_audit>(new Action<T_audit>(this.attach_T_audit), new Action<T_audit>(this.detach_T_audit));
			OnCreated();
		}
		
		[Column(Name="id_auditevent", Storage="_Id_auditevent", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_auditevent
		{
			get
			{
				return this._Id_auditevent;
			}
			set
			{
				if ((this._Id_auditevent != value))
				{
					this.OnId_auditeventChanging(value);
					this.SendPropertyChanging();
					this._Id_auditevent = value;
					this.SendPropertyChanged("Id_auditevent");
					this.OnId_auditeventChanged();
				}
			}
		}
		
		[Column(Name="id_Event", Storage="_Id_Event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Event
		{
			get
			{
				return this._Id_Event;
			}
			set
			{
				if ((this._Id_Event != value))
				{
					this.OnId_EventChanging(value);
					this.SendPropertyChanging();
					this._Id_Event = value;
					this.SendPropertyChanged("Id_Event");
					this.OnId_EventChanged();
				}
			}
		}
		
		[Column(Name="id_desc", Storage="_Id_desc", DbType="Int")]
		public System.Nullable<int> Id_desc
		{
			get
			{
				return this._Id_desc;
			}
			set
			{
				if ((this._Id_desc != value))
				{
					this.OnId_descChanging(value);
					this.SendPropertyChanging();
					this._Id_desc = value;
					this.SendPropertyChanged("Id_desc");
					this.OnId_descChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_AUDIT", Storage="_T_audit", ThisKey="Id_Event", OtherKey="Id_Event", DeleteRule="NO ACTION")]
		public EntitySet<T_audit> T_audit
		{
			get
			{
				return this._T_audit;
			}
			set
			{
				this._T_audit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_audit(T_audit entity)
		{
			this.SendPropertyChanging();
			entity.T_audit_events = this;
		}
		
		private void detach_T_audit(T_audit entity)
		{
			this.SendPropertyChanging();
			entity.T_audit_events = null;
		}
	}
	
	[Table(Name="dbo.t_av_Contact")]
	public partial class T_av_Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _C_ContactType;
		
		private string _C_FirstName;
		
		private string _C_MiddleInitial;
		
		private string _C_LastName;
		
		private string _C_Email;
		
		private string _C_PhoneNumber;
		
		private string _C_Company;
		
		private string _C_Address1;
		
		private string _C_Address2;
		
		private string _C_Address3;
		
		private string _C_City;
		
		private string _C_State;
		
		private string _C_Zip;
		
		private System.Nullable<int> _C_Country;
		
		private string _C_FacsimileTelephoneNumber;
		
		private EntityRef<T_account> _T_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnC_ContactTypeChanging(int value);
    partial void OnC_ContactTypeChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_MiddleInitialChanging(string value);
    partial void OnC_MiddleInitialChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_EmailChanging(string value);
    partial void OnC_EmailChanged();
    partial void OnC_PhoneNumberChanging(string value);
    partial void OnC_PhoneNumberChanged();
    partial void OnC_CompanyChanging(string value);
    partial void OnC_CompanyChanged();
    partial void OnC_Address1Changing(string value);
    partial void OnC_Address1Changed();
    partial void OnC_Address2Changing(string value);
    partial void OnC_Address2Changed();
    partial void OnC_Address3Changing(string value);
    partial void OnC_Address3Changed();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_StateChanging(string value);
    partial void OnC_StateChanged();
    partial void OnC_ZipChanging(string value);
    partial void OnC_ZipChanged();
    partial void OnC_CountryChanging(System.Nullable<int> value);
    partial void OnC_CountryChanged();
    partial void OnC_FacsimileTelephoneNumberChanging(string value);
    partial void OnC_FacsimileTelephoneNumberChanged();
    #endregion
		
		public T_av_Contact()
		{
			this._T_account = default(EntityRef<T_account>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="c_ContactType", Storage="_C_ContactType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int C_ContactType
		{
			get
			{
				return this._C_ContactType;
			}
			set
			{
				if ((this._C_ContactType != value))
				{
					this.OnC_ContactTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ContactType = value;
					this.SendPropertyChanged("C_ContactType");
					this.OnC_ContactTypeChanged();
				}
			}
		}
		
		[Column(Name="c_FirstName", Storage="_C_FirstName", DbType="NVarChar(40)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[Column(Name="c_MiddleInitial", Storage="_C_MiddleInitial", DbType="NVarChar(1)")]
		public string C_MiddleInitial
		{
			get
			{
				return this._C_MiddleInitial;
			}
			set
			{
				if ((this._C_MiddleInitial != value))
				{
					this.OnC_MiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._C_MiddleInitial = value;
					this.SendPropertyChanged("C_MiddleInitial");
					this.OnC_MiddleInitialChanged();
				}
			}
		}
		
		[Column(Name="c_LastName", Storage="_C_LastName", DbType="NVarChar(40)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[Column(Name="c_Email", Storage="_C_Email", DbType="NVarChar(100)")]
		public string C_Email
		{
			get
			{
				return this._C_Email;
			}
			set
			{
				if ((this._C_Email != value))
				{
					this.OnC_EmailChanging(value);
					this.SendPropertyChanging();
					this._C_Email = value;
					this.SendPropertyChanged("C_Email");
					this.OnC_EmailChanged();
				}
			}
		}
		
		[Column(Name="c_PhoneNumber", Storage="_C_PhoneNumber", DbType="NVarChar(40)")]
		public string C_PhoneNumber
		{
			get
			{
				return this._C_PhoneNumber;
			}
			set
			{
				if ((this._C_PhoneNumber != value))
				{
					this.OnC_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_PhoneNumber = value;
					this.SendPropertyChanged("C_PhoneNumber");
					this.OnC_PhoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_Company", Storage="_C_Company", DbType="NVarChar(255)")]
		public string C_Company
		{
			get
			{
				return this._C_Company;
			}
			set
			{
				if ((this._C_Company != value))
				{
					this.OnC_CompanyChanging(value);
					this.SendPropertyChanging();
					this._C_Company = value;
					this.SendPropertyChanged("C_Company");
					this.OnC_CompanyChanged();
				}
			}
		}
		
		[Column(Name="c_Address1", Storage="_C_Address1", DbType="NVarChar(100)")]
		public string C_Address1
		{
			get
			{
				return this._C_Address1;
			}
			set
			{
				if ((this._C_Address1 != value))
				{
					this.OnC_Address1Changing(value);
					this.SendPropertyChanging();
					this._C_Address1 = value;
					this.SendPropertyChanged("C_Address1");
					this.OnC_Address1Changed();
				}
			}
		}
		
		[Column(Name="c_Address2", Storage="_C_Address2", DbType="NVarChar(100)")]
		public string C_Address2
		{
			get
			{
				return this._C_Address2;
			}
			set
			{
				if ((this._C_Address2 != value))
				{
					this.OnC_Address2Changing(value);
					this.SendPropertyChanging();
					this._C_Address2 = value;
					this.SendPropertyChanged("C_Address2");
					this.OnC_Address2Changed();
				}
			}
		}
		
		[Column(Name="c_Address3", Storage="_C_Address3", DbType="NVarChar(100)")]
		public string C_Address3
		{
			get
			{
				return this._C_Address3;
			}
			set
			{
				if ((this._C_Address3 != value))
				{
					this.OnC_Address3Changing(value);
					this.SendPropertyChanging();
					this._C_Address3 = value;
					this.SendPropertyChanged("C_Address3");
					this.OnC_Address3Changed();
				}
			}
		}
		
		[Column(Name="c_City", Storage="_C_City", DbType="NVarChar(40)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[Column(Name="c_State", Storage="_C_State", DbType="NVarChar(40)")]
		public string C_State
		{
			get
			{
				return this._C_State;
			}
			set
			{
				if ((this._C_State != value))
				{
					this.OnC_StateChanging(value);
					this.SendPropertyChanging();
					this._C_State = value;
					this.SendPropertyChanged("C_State");
					this.OnC_StateChanged();
				}
			}
		}
		
		[Column(Name="c_Zip", Storage="_C_Zip", DbType="NVarChar(40)")]
		public string C_Zip
		{
			get
			{
				return this._C_Zip;
			}
			set
			{
				if ((this._C_Zip != value))
				{
					this.OnC_ZipChanging(value);
					this.SendPropertyChanging();
					this._C_Zip = value;
					this.SendPropertyChanged("C_Zip");
					this.OnC_ZipChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int")]
		public System.Nullable<int> C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c_FacsimileTelephoneNumber", Storage="_C_FacsimileTelephoneNumber", DbType="NVarChar(40)")]
		public string C_FacsimileTelephoneNumber
		{
			get
			{
				return this._C_FacsimileTelephoneNumber;
			}
			set
			{
				if ((this._C_FacsimileTelephoneNumber != value))
				{
					this.OnC_FacsimileTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_FacsimileTelephoneNumber = value;
					this.SendPropertyChanged("C_FacsimileTelephoneNumber");
					this.OnC_FacsimileTelephoneNumberChanged();
				}
			}
		}
		
		[Association(Name="fk_t_av_Contact", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_av_Contact.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_av_Contact.Add(this);
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_av_GSM")]
	public partial class T_av_GSM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private string _C_IMSI;
		
		private string _C_MSISDN;
		
		private string _C_MIN;
		
		private string _C_MDN;
		
		private System.Nullable<int> _C_CellIdentity;
		
		private System.Nullable<int> _C_HomeBID;
		
		private string _C_HomeLocationDesc;
		
		private string _C_IMEI;
		
		private string _C_ESN;
		
		private EntityRef<T_account> _T_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnC_IMSIChanging(string value);
    partial void OnC_IMSIChanged();
    partial void OnC_MSISDNChanging(string value);
    partial void OnC_MSISDNChanged();
    partial void OnC_MINChanging(string value);
    partial void OnC_MINChanged();
    partial void OnC_MDNChanging(string value);
    partial void OnC_MDNChanged();
    partial void OnC_CellIdentityChanging(System.Nullable<int> value);
    partial void OnC_CellIdentityChanged();
    partial void OnC_HomeBIDChanging(System.Nullable<int> value);
    partial void OnC_HomeBIDChanged();
    partial void OnC_HomeLocationDescChanging(string value);
    partial void OnC_HomeLocationDescChanged();
    partial void OnC_IMEIChanging(string value);
    partial void OnC_IMEIChanged();
    partial void OnC_ESNChanging(string value);
    partial void OnC_ESNChanged();
    #endregion
		
		public T_av_GSM()
		{
			this._T_account = default(EntityRef<T_account>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="c_IMSI", Storage="_C_IMSI", DbType="NVarChar(15)")]
		public string C_IMSI
		{
			get
			{
				return this._C_IMSI;
			}
			set
			{
				if ((this._C_IMSI != value))
				{
					this.OnC_IMSIChanging(value);
					this.SendPropertyChanging();
					this._C_IMSI = value;
					this.SendPropertyChanged("C_IMSI");
					this.OnC_IMSIChanged();
				}
			}
		}
		
		[Column(Name="c_MSISDN", Storage="_C_MSISDN", DbType="NVarChar(15)")]
		public string C_MSISDN
		{
			get
			{
				return this._C_MSISDN;
			}
			set
			{
				if ((this._C_MSISDN != value))
				{
					this.OnC_MSISDNChanging(value);
					this.SendPropertyChanging();
					this._C_MSISDN = value;
					this.SendPropertyChanged("C_MSISDN");
					this.OnC_MSISDNChanged();
				}
			}
		}
		
		[Column(Name="c_MIN", Storage="_C_MIN", DbType="NVarChar(15)")]
		public string C_MIN
		{
			get
			{
				return this._C_MIN;
			}
			set
			{
				if ((this._C_MIN != value))
				{
					this.OnC_MINChanging(value);
					this.SendPropertyChanging();
					this._C_MIN = value;
					this.SendPropertyChanged("C_MIN");
					this.OnC_MINChanged();
				}
			}
		}
		
		[Column(Name="c_MDN", Storage="_C_MDN", DbType="NVarChar(15)")]
		public string C_MDN
		{
			get
			{
				return this._C_MDN;
			}
			set
			{
				if ((this._C_MDN != value))
				{
					this.OnC_MDNChanging(value);
					this.SendPropertyChanging();
					this._C_MDN = value;
					this.SendPropertyChanged("C_MDN");
					this.OnC_MDNChanged();
				}
			}
		}
		
		[Column(Name="c_CellIdentity", Storage="_C_CellIdentity", DbType="Int")]
		public System.Nullable<int> C_CellIdentity
		{
			get
			{
				return this._C_CellIdentity;
			}
			set
			{
				if ((this._C_CellIdentity != value))
				{
					this.OnC_CellIdentityChanging(value);
					this.SendPropertyChanging();
					this._C_CellIdentity = value;
					this.SendPropertyChanged("C_CellIdentity");
					this.OnC_CellIdentityChanged();
				}
			}
		}
		
		[Column(Name="c_HomeBID", Storage="_C_HomeBID", DbType="Int")]
		public System.Nullable<int> C_HomeBID
		{
			get
			{
				return this._C_HomeBID;
			}
			set
			{
				if ((this._C_HomeBID != value))
				{
					this.OnC_HomeBIDChanging(value);
					this.SendPropertyChanging();
					this._C_HomeBID = value;
					this.SendPropertyChanged("C_HomeBID");
					this.OnC_HomeBIDChanged();
				}
			}
		}
		
		[Column(Name="c_HomeLocationDesc", Storage="_C_HomeLocationDesc", DbType="NVarChar(30)")]
		public string C_HomeLocationDesc
		{
			get
			{
				return this._C_HomeLocationDesc;
			}
			set
			{
				if ((this._C_HomeLocationDesc != value))
				{
					this.OnC_HomeLocationDescChanging(value);
					this.SendPropertyChanging();
					this._C_HomeLocationDesc = value;
					this.SendPropertyChanged("C_HomeLocationDesc");
					this.OnC_HomeLocationDescChanged();
				}
			}
		}
		
		[Column(Name="c_IMEI", Storage="_C_IMEI", DbType="NVarChar(30)")]
		public string C_IMEI
		{
			get
			{
				return this._C_IMEI;
			}
			set
			{
				if ((this._C_IMEI != value))
				{
					this.OnC_IMEIChanging(value);
					this.SendPropertyChanging();
					this._C_IMEI = value;
					this.SendPropertyChanged("C_IMEI");
					this.OnC_IMEIChanged();
				}
			}
		}
		
		[Column(Name="c_ESN", Storage="_C_ESN", DbType="NVarChar(32)")]
		public string C_ESN
		{
			get
			{
				return this._C_ESN;
			}
			set
			{
				if ((this._C_ESN != value))
				{
					this.OnC_ESNChanging(value);
					this.SendPropertyChanging();
					this._C_ESN = value;
					this.SendPropertyChanged("C_ESN");
					this.OnC_ESNChanged();
				}
			}
		}
		
		[Association(Name="fk_t_av_GSM", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_av_GSM = null;
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_av_GSM = this;
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_av_Internal")]
	public partial class T_av_Internal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private string _C_TaxExempt;
		
		private string _C_TaxExemptID;
		
		private System.Nullable<int> _C_TimezoneID;
		
		private System.Nullable<int> _C_PaymentMethod;
		
		private System.Nullable<int> _C_SecurityQuestion;
		
		private string _C_SecurityQuestionText;
		
		private string _C_SecurityAnswer;
		
		private System.Nullable<int> _C_InvoiceMethod;
		
		private System.Nullable<int> _C_UsageCycleType;
		
		private System.Nullable<int> _C_Language;
		
		private System.Nullable<int> _C_StatusReason;
		
		private string _C_StatusReasonOther;
		
		private string _C_Currency;
		
		private System.Nullable<int> _C_PriceList;
		
		private string _C_Billable;
		
		private string _C_Folder;
		
		private string _C_Division;
		
		private System.Nullable<int> _C_TaxVendor;
		
		private System.Nullable<int> _C_MetraTaxCountryEligibility;
		
		private System.Nullable<int> _C_MetraTaxCountryZone;
		
		private string _C_MetraTaxHasOverrideBand;
		
		private System.Nullable<int> _C_MetraTaxOverrideBand;
		
		private System.Nullable<int> _C_TaxServiceAddressPCode;
		
		private System.Nullable<int> _C_TaxExemptReason;
		
		private System.Nullable<System.DateTime> _C_TaxExemptStartDate;
		
		private System.Nullable<System.DateTime> _C_TaxExemptEndDate;
		
		private string _C_TaxRegistryReference;
		
		private string _C_UseStdImpliedTaxAlg;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_pricelist> _T_pricelist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnC_TaxExemptChanging(string value);
    partial void OnC_TaxExemptChanged();
    partial void OnC_TaxExemptIDChanging(string value);
    partial void OnC_TaxExemptIDChanged();
    partial void OnC_TimezoneIDChanging(System.Nullable<int> value);
    partial void OnC_TimezoneIDChanged();
    partial void OnC_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_SecurityQuestionChanging(System.Nullable<int> value);
    partial void OnC_SecurityQuestionChanged();
    partial void OnC_SecurityQuestionTextChanging(string value);
    partial void OnC_SecurityQuestionTextChanged();
    partial void OnC_SecurityAnswerChanging(string value);
    partial void OnC_SecurityAnswerChanged();
    partial void OnC_InvoiceMethodChanging(System.Nullable<int> value);
    partial void OnC_InvoiceMethodChanged();
    partial void OnC_UsageCycleTypeChanging(System.Nullable<int> value);
    partial void OnC_UsageCycleTypeChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_StatusReasonChanging(System.Nullable<int> value);
    partial void OnC_StatusReasonChanged();
    partial void OnC_StatusReasonOtherChanging(string value);
    partial void OnC_StatusReasonOtherChanged();
    partial void OnC_CurrencyChanging(string value);
    partial void OnC_CurrencyChanged();
    partial void OnC_PriceListChanging(System.Nullable<int> value);
    partial void OnC_PriceListChanged();
    partial void OnC_BillableChanging(string value);
    partial void OnC_BillableChanged();
    partial void OnC_FolderChanging(string value);
    partial void OnC_FolderChanged();
    partial void OnC_DivisionChanging(string value);
    partial void OnC_DivisionChanged();
    partial void OnC_TaxVendorChanging(System.Nullable<int> value);
    partial void OnC_TaxVendorChanged();
    partial void OnC_MetraTaxCountryEligibilityChanging(System.Nullable<int> value);
    partial void OnC_MetraTaxCountryEligibilityChanged();
    partial void OnC_MetraTaxCountryZoneChanging(System.Nullable<int> value);
    partial void OnC_MetraTaxCountryZoneChanged();
    partial void OnC_MetraTaxHasOverrideBandChanging(string value);
    partial void OnC_MetraTaxHasOverrideBandChanged();
    partial void OnC_MetraTaxOverrideBandChanging(System.Nullable<int> value);
    partial void OnC_MetraTaxOverrideBandChanged();
    partial void OnC_TaxServiceAddressPCodeChanging(System.Nullable<int> value);
    partial void OnC_TaxServiceAddressPCodeChanged();
    partial void OnC_TaxExemptReasonChanging(System.Nullable<int> value);
    partial void OnC_TaxExemptReasonChanged();
    partial void OnC_TaxExemptStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_TaxExemptStartDateChanged();
    partial void OnC_TaxExemptEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_TaxExemptEndDateChanged();
    partial void OnC_TaxRegistryReferenceChanging(string value);
    partial void OnC_TaxRegistryReferenceChanged();
    partial void OnC_UseStdImpliedTaxAlgChanging(string value);
    partial void OnC_UseStdImpliedTaxAlgChanged();
    #endregion
		
		public T_av_Internal()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_pricelist = default(EntityRef<T_pricelist>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExempt", Storage="_C_TaxExempt", DbType="Char(1)")]
		public string C_TaxExempt
		{
			get
			{
				return this._C_TaxExempt;
			}
			set
			{
				if ((this._C_TaxExempt != value))
				{
					this.OnC_TaxExemptChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExempt = value;
					this.SendPropertyChanged("C_TaxExempt");
					this.OnC_TaxExemptChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptID", Storage="_C_TaxExemptID", DbType="NVarChar(255)")]
		public string C_TaxExemptID
		{
			get
			{
				return this._C_TaxExemptID;
			}
			set
			{
				if ((this._C_TaxExemptID != value))
				{
					this.OnC_TaxExemptIDChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptID = value;
					this.SendPropertyChanged("C_TaxExemptID");
					this.OnC_TaxExemptIDChanged();
				}
			}
		}
		
		[Column(Name="c_TimezoneID", Storage="_C_TimezoneID", DbType="Int")]
		public System.Nullable<int> C_TimezoneID
		{
			get
			{
				return this._C_TimezoneID;
			}
			set
			{
				if ((this._C_TimezoneID != value))
				{
					this.OnC_TimezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_TimezoneID = value;
					this.SendPropertyChanged("C_TimezoneID");
					this.OnC_TimezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int")]
		public System.Nullable<int> C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityQuestion", Storage="_C_SecurityQuestion", DbType="Int")]
		public System.Nullable<int> C_SecurityQuestion
		{
			get
			{
				return this._C_SecurityQuestion;
			}
			set
			{
				if ((this._C_SecurityQuestion != value))
				{
					this.OnC_SecurityQuestionChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityQuestion = value;
					this.SendPropertyChanged("C_SecurityQuestion");
					this.OnC_SecurityQuestionChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityQuestionText", Storage="_C_SecurityQuestionText", DbType="NVarChar(255)")]
		public string C_SecurityQuestionText
		{
			get
			{
				return this._C_SecurityQuestionText;
			}
			set
			{
				if ((this._C_SecurityQuestionText != value))
				{
					this.OnC_SecurityQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityQuestionText = value;
					this.SendPropertyChanged("C_SecurityQuestionText");
					this.OnC_SecurityQuestionTextChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityAnswer", Storage="_C_SecurityAnswer", DbType="NVarChar(255)")]
		public string C_SecurityAnswer
		{
			get
			{
				return this._C_SecurityAnswer;
			}
			set
			{
				if ((this._C_SecurityAnswer != value))
				{
					this.OnC_SecurityAnswerChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityAnswer = value;
					this.SendPropertyChanged("C_SecurityAnswer");
					this.OnC_SecurityAnswerChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceMethod", Storage="_C_InvoiceMethod", DbType="Int")]
		public System.Nullable<int> C_InvoiceMethod
		{
			get
			{
				return this._C_InvoiceMethod;
			}
			set
			{
				if ((this._C_InvoiceMethod != value))
				{
					this.OnC_InvoiceMethodChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceMethod = value;
					this.SendPropertyChanged("C_InvoiceMethod");
					this.OnC_InvoiceMethodChanged();
				}
			}
		}
		
		[Column(Name="c_UsageCycleType", Storage="_C_UsageCycleType", DbType="Int")]
		public System.Nullable<int> C_UsageCycleType
		{
			get
			{
				return this._C_UsageCycleType;
			}
			set
			{
				if ((this._C_UsageCycleType != value))
				{
					this.OnC_UsageCycleTypeChanging(value);
					this.SendPropertyChanging();
					this._C_UsageCycleType = value;
					this.SendPropertyChanged("C_UsageCycleType");
					this.OnC_UsageCycleTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReason", Storage="_C_StatusReason", DbType="Int")]
		public System.Nullable<int> C_StatusReason
		{
			get
			{
				return this._C_StatusReason;
			}
			set
			{
				if ((this._C_StatusReason != value))
				{
					this.OnC_StatusReasonChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReason = value;
					this.SendPropertyChanged("C_StatusReason");
					this.OnC_StatusReasonChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReasonOther", Storage="_C_StatusReasonOther", DbType="NVarChar(255)")]
		public string C_StatusReasonOther
		{
			get
			{
				return this._C_StatusReasonOther;
			}
			set
			{
				if ((this._C_StatusReasonOther != value))
				{
					this.OnC_StatusReasonOtherChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReasonOther = value;
					this.SendPropertyChanged("C_StatusReasonOther");
					this.OnC_StatusReasonOtherChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="NVarChar(10)")]
		public string C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_PriceList", Storage="_C_PriceList", DbType="Int")]
		public System.Nullable<int> C_PriceList
		{
			get
			{
				return this._C_PriceList;
			}
			set
			{
				if ((this._C_PriceList != value))
				{
					this.OnC_PriceListChanging(value);
					this.SendPropertyChanging();
					this._C_PriceList = value;
					this.SendPropertyChanged("C_PriceList");
					this.OnC_PriceListChanged();
				}
			}
		}
		
		[Column(Name="c_Billable", Storage="_C_Billable", DbType="Char(1)")]
		public string C_Billable
		{
			get
			{
				return this._C_Billable;
			}
			set
			{
				if ((this._C_Billable != value))
				{
					this.OnC_BillableChanging(value);
					this.SendPropertyChanging();
					this._C_Billable = value;
					this.SendPropertyChanged("C_Billable");
					this.OnC_BillableChanged();
				}
			}
		}
		
		[Column(Name="c_Folder", Storage="_C_Folder", DbType="Char(1)")]
		public string C_Folder
		{
			get
			{
				return this._C_Folder;
			}
			set
			{
				if ((this._C_Folder != value))
				{
					this.OnC_FolderChanging(value);
					this.SendPropertyChanging();
					this._C_Folder = value;
					this.SendPropertyChanged("C_Folder");
					this.OnC_FolderChanged();
				}
			}
		}
		
		[Column(Name="c_Division", Storage="_C_Division", DbType="NVarChar(255)")]
		public string C_Division
		{
			get
			{
				return this._C_Division;
			}
			set
			{
				if ((this._C_Division != value))
				{
					this.OnC_DivisionChanging(value);
					this.SendPropertyChanging();
					this._C_Division = value;
					this.SendPropertyChanged("C_Division");
					this.OnC_DivisionChanged();
				}
			}
		}
		
		[Column(Name="c_TaxVendor", Storage="_C_TaxVendor", DbType="Int")]
		public System.Nullable<int> C_TaxVendor
		{
			get
			{
				return this._C_TaxVendor;
			}
			set
			{
				if ((this._C_TaxVendor != value))
				{
					this.OnC_TaxVendorChanging(value);
					this.SendPropertyChanging();
					this._C_TaxVendor = value;
					this.SendPropertyChanged("C_TaxVendor");
					this.OnC_TaxVendorChanged();
				}
			}
		}
		
		[Column(Name="c_MetraTaxCountryEligibility", Storage="_C_MetraTaxCountryEligibility", DbType="Int")]
		public System.Nullable<int> C_MetraTaxCountryEligibility
		{
			get
			{
				return this._C_MetraTaxCountryEligibility;
			}
			set
			{
				if ((this._C_MetraTaxCountryEligibility != value))
				{
					this.OnC_MetraTaxCountryEligibilityChanging(value);
					this.SendPropertyChanging();
					this._C_MetraTaxCountryEligibility = value;
					this.SendPropertyChanged("C_MetraTaxCountryEligibility");
					this.OnC_MetraTaxCountryEligibilityChanged();
				}
			}
		}
		
		[Column(Name="c_MetraTaxCountryZone", Storage="_C_MetraTaxCountryZone", DbType="Int")]
		public System.Nullable<int> C_MetraTaxCountryZone
		{
			get
			{
				return this._C_MetraTaxCountryZone;
			}
			set
			{
				if ((this._C_MetraTaxCountryZone != value))
				{
					this.OnC_MetraTaxCountryZoneChanging(value);
					this.SendPropertyChanging();
					this._C_MetraTaxCountryZone = value;
					this.SendPropertyChanged("C_MetraTaxCountryZone");
					this.OnC_MetraTaxCountryZoneChanged();
				}
			}
		}
		
		[Column(Name="c_MetraTaxHasOverrideBand", Storage="_C_MetraTaxHasOverrideBand", DbType="Char(1)")]
		public string C_MetraTaxHasOverrideBand
		{
			get
			{
				return this._C_MetraTaxHasOverrideBand;
			}
			set
			{
				if ((this._C_MetraTaxHasOverrideBand != value))
				{
					this.OnC_MetraTaxHasOverrideBandChanging(value);
					this.SendPropertyChanging();
					this._C_MetraTaxHasOverrideBand = value;
					this.SendPropertyChanged("C_MetraTaxHasOverrideBand");
					this.OnC_MetraTaxHasOverrideBandChanged();
				}
			}
		}
		
		[Column(Name="c_MetraTaxOverrideBand", Storage="_C_MetraTaxOverrideBand", DbType="Int")]
		public System.Nullable<int> C_MetraTaxOverrideBand
		{
			get
			{
				return this._C_MetraTaxOverrideBand;
			}
			set
			{
				if ((this._C_MetraTaxOverrideBand != value))
				{
					this.OnC_MetraTaxOverrideBandChanging(value);
					this.SendPropertyChanging();
					this._C_MetraTaxOverrideBand = value;
					this.SendPropertyChanged("C_MetraTaxOverrideBand");
					this.OnC_MetraTaxOverrideBandChanged();
				}
			}
		}
		
		[Column(Name="c_TaxServiceAddressPCode", Storage="_C_TaxServiceAddressPCode", DbType="Int")]
		public System.Nullable<int> C_TaxServiceAddressPCode
		{
			get
			{
				return this._C_TaxServiceAddressPCode;
			}
			set
			{
				if ((this._C_TaxServiceAddressPCode != value))
				{
					this.OnC_TaxServiceAddressPCodeChanging(value);
					this.SendPropertyChanging();
					this._C_TaxServiceAddressPCode = value;
					this.SendPropertyChanged("C_TaxServiceAddressPCode");
					this.OnC_TaxServiceAddressPCodeChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptReason", Storage="_C_TaxExemptReason", DbType="Int")]
		public System.Nullable<int> C_TaxExemptReason
		{
			get
			{
				return this._C_TaxExemptReason;
			}
			set
			{
				if ((this._C_TaxExemptReason != value))
				{
					this.OnC_TaxExemptReasonChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptReason = value;
					this.SendPropertyChanged("C_TaxExemptReason");
					this.OnC_TaxExemptReasonChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptStartDate", Storage="_C_TaxExemptStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_TaxExemptStartDate
		{
			get
			{
				return this._C_TaxExemptStartDate;
			}
			set
			{
				if ((this._C_TaxExemptStartDate != value))
				{
					this.OnC_TaxExemptStartDateChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptStartDate = value;
					this.SendPropertyChanged("C_TaxExemptStartDate");
					this.OnC_TaxExemptStartDateChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptEndDate", Storage="_C_TaxExemptEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_TaxExemptEndDate
		{
			get
			{
				return this._C_TaxExemptEndDate;
			}
			set
			{
				if ((this._C_TaxExemptEndDate != value))
				{
					this.OnC_TaxExemptEndDateChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptEndDate = value;
					this.SendPropertyChanged("C_TaxExemptEndDate");
					this.OnC_TaxExemptEndDateChanged();
				}
			}
		}
		
		[Column(Name="c_TaxRegistryReference", Storage="_C_TaxRegistryReference", DbType="NVarChar(255)")]
		public string C_TaxRegistryReference
		{
			get
			{
				return this._C_TaxRegistryReference;
			}
			set
			{
				if ((this._C_TaxRegistryReference != value))
				{
					this.OnC_TaxRegistryReferenceChanging(value);
					this.SendPropertyChanging();
					this._C_TaxRegistryReference = value;
					this.SendPropertyChanged("C_TaxRegistryReference");
					this.OnC_TaxRegistryReferenceChanged();
				}
			}
		}
		
		[Column(Name="c_UseStdImpliedTaxAlg", Storage="_C_UseStdImpliedTaxAlg", DbType="Char(1)")]
		public string C_UseStdImpliedTaxAlg
		{
			get
			{
				return this._C_UseStdImpliedTaxAlg;
			}
			set
			{
				if ((this._C_UseStdImpliedTaxAlg != value))
				{
					this.OnC_UseStdImpliedTaxAlgChanging(value);
					this.SendPropertyChanging();
					this._C_UseStdImpliedTaxAlg = value;
					this.SendPropertyChanged("C_UseStdImpliedTaxAlg");
					this.OnC_UseStdImpliedTaxAlgChanged();
				}
			}
		}
		
		[Association(Name="fk_t_av_Internal", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_av_Internal = null;
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_av_Internal = this;
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="t_av_Internal_FK1", Storage="_T_pricelist", ThisKey="C_PriceList", OtherKey="Id_pricelist", IsForeignKey=true)]
		public T_pricelist T_pricelist
		{
			get
			{
				return this._T_pricelist.Entity;
			}
			set
			{
				T_pricelist previousValue = this._T_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pricelist.Entity = null;
						previousValue.T_av_Internal.Remove(this);
					}
					this._T_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_av_Internal.Add(this);
						this._C_PriceList = value.Id_pricelist;
					}
					else
					{
						this._C_PriceList = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_pricelist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_base_props")]
	public partial class T_base_props : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _N_kind;
		
		private System.Nullable<int> _N_name;
		
		private System.Nullable<int> _N_desc;
		
		private string _Nm_name;
		
		private string _Nm_desc;
		
		private string _B_approved;
		
		private string _B_archive;
		
		private System.Nullable<int> _N_display_name;
		
		private string _Nm_display_name;
		
		private EntityRef<T_adjustment_type> _T_adjustment_type;
		
		private EntityRef<T_adjustment_type_prop> _T_adjustment_type_prop;
		
		private EntityRef<T_ep_aggregate> _T_ep_aggregate;
		
		private EntityRef<T_ep_discount> _T_ep_discount;
		
		private EntityRef<T_ep_nonrecurring> _T_ep_nonrecurring;
		
		private EntityRef<T_ep_po> _T_ep_po;
		
		private EntityRef<T_ep_pricelist> _T_ep_pricelist;
		
		private EntityRef<T_ep_recurring> _T_ep_recurring;
		
		private EntityRef<T_ep_unit_dependent_recurring> _T_ep_unit_dependent_recurring;
		
		private EntityRef<T_ep_usage> _T_ep_usage;
		
		private EntityRef<T_calendar> _T_calendar;
		
		private EntityRef<T_counter> _T_counter;
		
		private EntityRef<T_counter_metadata> _T_counter_metadata;
		
		private EntityRef<T_counterpropdef> _T_counterpropdef;
		
		private EntityRef<T_discount> _T_discount;
		
		private EntityRef<T_nonrecur> _T_nonrecur;
		
		private EntityRef<T_pi> _T_pi;
		
		private EntityRef<T_po> _T_po;
		
		private EntityRef<T_pricelist> _T_pricelist;
		
		private EntityRef<T_recur> _T_recur;
		
		private EntityRef<T_rsched> _T_rsched;
		
		private EntityRef<T_rsched_pub> _T_rsched_pub;
		
		private EntityRef<T_rulesetdefinition> _T_rulesetdefinition;
		
		private EntitySet<T_counter_map> _T_counter_map;
		
		private EntityRef<T_counter_params_metadata> _T_counter_params_metadata;
		
		private EntityRef<T_aggregate> _T_aggregate;
		
		private EntitySet<T_adjustment> _T_adjustment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnN_kindChanging(int value);
    partial void OnN_kindChanged();
    partial void OnN_nameChanging(System.Nullable<int> value);
    partial void OnN_nameChanged();
    partial void OnN_descChanging(System.Nullable<int> value);
    partial void OnN_descChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_descChanging(string value);
    partial void OnNm_descChanged();
    partial void OnB_approvedChanging(string value);
    partial void OnB_approvedChanged();
    partial void OnB_archiveChanging(string value);
    partial void OnB_archiveChanged();
    partial void OnN_display_nameChanging(System.Nullable<int> value);
    partial void OnN_display_nameChanged();
    partial void OnNm_display_nameChanging(string value);
    partial void OnNm_display_nameChanged();
    #endregion
		
		public T_base_props()
		{
			this._T_adjustment_type = default(EntityRef<T_adjustment_type>);
			this._T_adjustment_type_prop = default(EntityRef<T_adjustment_type_prop>);
			this._T_ep_aggregate = default(EntityRef<T_ep_aggregate>);
			this._T_ep_discount = default(EntityRef<T_ep_discount>);
			this._T_ep_nonrecurring = default(EntityRef<T_ep_nonrecurring>);
			this._T_ep_po = default(EntityRef<T_ep_po>);
			this._T_ep_pricelist = default(EntityRef<T_ep_pricelist>);
			this._T_ep_recurring = default(EntityRef<T_ep_recurring>);
			this._T_ep_unit_dependent_recurring = default(EntityRef<T_ep_unit_dependent_recurring>);
			this._T_ep_usage = default(EntityRef<T_ep_usage>);
			this._T_calendar = default(EntityRef<T_calendar>);
			this._T_counter = default(EntityRef<T_counter>);
			this._T_counter_metadata = default(EntityRef<T_counter_metadata>);
			this._T_counterpropdef = default(EntityRef<T_counterpropdef>);
			this._T_discount = default(EntityRef<T_discount>);
			this._T_nonrecur = default(EntityRef<T_nonrecur>);
			this._T_pi = default(EntityRef<T_pi>);
			this._T_po = default(EntityRef<T_po>);
			this._T_pricelist = default(EntityRef<T_pricelist>);
			this._T_recur = default(EntityRef<T_recur>);
			this._T_rsched = default(EntityRef<T_rsched>);
			this._T_rsched_pub = default(EntityRef<T_rsched_pub>);
			this._T_rulesetdefinition = default(EntityRef<T_rulesetdefinition>);
			this._T_counter_map = new EntitySet<T_counter_map>(new Action<T_counter_map>(this.attach_T_counter_map), new Action<T_counter_map>(this.detach_T_counter_map));
			this._T_counter_params_metadata = default(EntityRef<T_counter_params_metadata>);
			this._T_aggregate = default(EntityRef<T_aggregate>);
			this._T_adjustment = new EntitySet<T_adjustment>(new Action<T_adjustment>(this.attach_T_adjustment), new Action<T_adjustment>(this.detach_T_adjustment));
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="n_kind", Storage="_N_kind", DbType="Int NOT NULL")]
		public int N_kind
		{
			get
			{
				return this._N_kind;
			}
			set
			{
				if ((this._N_kind != value))
				{
					this.OnN_kindChanging(value);
					this.SendPropertyChanging();
					this._N_kind = value;
					this.SendPropertyChanged("N_kind");
					this.OnN_kindChanged();
				}
			}
		}
		
		[Column(Name="n_name", Storage="_N_name", DbType="Int")]
		public System.Nullable<int> N_name
		{
			get
			{
				return this._N_name;
			}
			set
			{
				if ((this._N_name != value))
				{
					this.OnN_nameChanging(value);
					this.SendPropertyChanging();
					this._N_name = value;
					this.SendPropertyChanged("N_name");
					this.OnN_nameChanged();
				}
			}
		}
		
		[Column(Name="n_desc", Storage="_N_desc", DbType="Int")]
		public System.Nullable<int> N_desc
		{
			get
			{
				return this._N_desc;
			}
			set
			{
				if ((this._N_desc != value))
				{
					this.OnN_descChanging(value);
					this.SendPropertyChanging();
					this._N_desc = value;
					this.SendPropertyChanged("N_desc");
					this.OnN_descChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255)")]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_desc", Storage="_Nm_desc", DbType="NVarChar(4000)")]
		public string Nm_desc
		{
			get
			{
				return this._Nm_desc;
			}
			set
			{
				if ((this._Nm_desc != value))
				{
					this.OnNm_descChanging(value);
					this.SendPropertyChanging();
					this._Nm_desc = value;
					this.SendPropertyChanged("Nm_desc");
					this.OnNm_descChanged();
				}
			}
		}
		
		[Column(Name="b_approved", Storage="_B_approved", DbType="Char(1)")]
		public string B_approved
		{
			get
			{
				return this._B_approved;
			}
			set
			{
				if ((this._B_approved != value))
				{
					this.OnB_approvedChanging(value);
					this.SendPropertyChanging();
					this._B_approved = value;
					this.SendPropertyChanged("B_approved");
					this.OnB_approvedChanged();
				}
			}
		}
		
		[Column(Name="b_archive", Storage="_B_archive", DbType="Char(1)")]
		public string B_archive
		{
			get
			{
				return this._B_archive;
			}
			set
			{
				if ((this._B_archive != value))
				{
					this.OnB_archiveChanging(value);
					this.SendPropertyChanging();
					this._B_archive = value;
					this.SendPropertyChanged("B_archive");
					this.OnB_archiveChanged();
				}
			}
		}
		
		[Column(Name="n_display_name", Storage="_N_display_name", DbType="Int")]
		public System.Nullable<int> N_display_name
		{
			get
			{
				return this._N_display_name;
			}
			set
			{
				if ((this._N_display_name != value))
				{
					this.OnN_display_nameChanging(value);
					this.SendPropertyChanging();
					this._N_display_name = value;
					this.SendPropertyChanged("N_display_name");
					this.OnN_display_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_display_name", Storage="_Nm_display_name", DbType="NVarChar(255)")]
		public string Nm_display_name
		{
			get
			{
				return this._Nm_display_name;
			}
			set
			{
				if ((this._Nm_display_name != value))
				{
					this.OnNm_display_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_display_name = value;
					this.SendPropertyChanged("Nm_display_name");
					this.OnNm_display_nameChanged();
				}
			}
		}
		
		[Association(Name="adjustment_type_fk1", Storage="_T_adjustment_type", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_adjustment_type T_adjustment_type
		{
			get
			{
				return this._T_adjustment_type.Entity;
			}
			set
			{
				T_adjustment_type previousValue = this._T_adjustment_type.Entity;
				if (((previousValue != value) 
							|| (this._T_adjustment_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_adjustment_type.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_adjustment_type.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_adjustment_type");
				}
			}
		}
		
		[Association(Name="adjustment_type_prop_fk2", Storage="_T_adjustment_type_prop", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_adjustment_type_prop T_adjustment_type_prop
		{
			get
			{
				return this._T_adjustment_type_prop.Entity;
			}
			set
			{
				T_adjustment_type_prop previousValue = this._T_adjustment_type_prop.Entity;
				if (((previousValue != value) 
							|| (this._T_adjustment_type_prop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_adjustment_type_prop.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_adjustment_type_prop.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_adjustment_type_prop");
				}
			}
		}
		
		[Association(Name="FK__t_ep_aggr__id_pr__3C2ACFCE", Storage="_T_ep_aggregate", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_aggregate T_ep_aggregate
		{
			get
			{
				return this._T_ep_aggregate.Entity;
			}
			set
			{
				T_ep_aggregate previousValue = this._T_ep_aggregate.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_aggregate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_aggregate.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_aggregate.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_aggregate");
				}
			}
		}
		
		[Association(Name="FK__t_ep_disc__id_pr__3F073C79", Storage="_T_ep_discount", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_discount T_ep_discount
		{
			get
			{
				return this._T_ep_discount.Entity;
			}
			set
			{
				T_ep_discount previousValue = this._T_ep_discount.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_discount.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_discount.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_discount");
				}
			}
		}
		
		[Association(Name="FK__t_ep_nonr__id_pr__41E3A924", Storage="_T_ep_nonrecurring", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_nonrecurring T_ep_nonrecurring
		{
			get
			{
				return this._T_ep_nonrecurring.Entity;
			}
			set
			{
				T_ep_nonrecurring previousValue = this._T_ep_nonrecurring.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_nonrecurring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_nonrecurring.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_nonrecurring.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_nonrecurring");
				}
			}
		}
		
		[Association(Name="FK__t_ep_po__id_prop__44C015CF", Storage="_T_ep_po", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_po T_ep_po
		{
			get
			{
				return this._T_ep_po.Entity;
			}
			set
			{
				T_ep_po previousValue = this._T_ep_po.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_po.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_po.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_po.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_po");
				}
			}
		}
		
		[Association(Name="FK__t_ep_pric__id_pr__479C827A", Storage="_T_ep_pricelist", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_pricelist T_ep_pricelist
		{
			get
			{
				return this._T_ep_pricelist.Entity;
			}
			set
			{
				T_ep_pricelist previousValue = this._T_ep_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_pricelist.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_pricelist");
				}
			}
		}
		
		[Association(Name="FK__t_ep_recu__id_pr__4A78EF25", Storage="_T_ep_recurring", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_recurring T_ep_recurring
		{
			get
			{
				return this._T_ep_recurring.Entity;
			}
			set
			{
				T_ep_recurring previousValue = this._T_ep_recurring.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_recurring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_recurring.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_recurring.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_recurring");
				}
			}
		}
		
		[Association(Name="FK__t_ep_unit__id_pr__4D555BD0", Storage="_T_ep_unit_dependent_recurring", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_unit_dependent_recurring T_ep_unit_dependent_recurring
		{
			get
			{
				return this._T_ep_unit_dependent_recurring.Entity;
			}
			set
			{
				T_ep_unit_dependent_recurring previousValue = this._T_ep_unit_dependent_recurring.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_unit_dependent_recurring.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_unit_dependent_recurring.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_unit_dependent_recurring.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_unit_dependent_recurring");
				}
			}
		}
		
		[Association(Name="FK__t_ep_usag__id_pr__5031C87B", Storage="_T_ep_usage", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_ep_usage T_ep_usage
		{
			get
			{
				return this._T_ep_usage.Entity;
			}
			set
			{
				T_ep_usage previousValue = this._T_ep_usage.Entity;
				if (((previousValue != value) 
							|| (this._T_ep_usage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_ep_usage.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_ep_usage.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_ep_usage");
				}
			}
		}
		
		[Association(Name="FK1_T_CALENDAR", Storage="_T_calendar", ThisKey="Id_prop", OtherKey="Id_calendar", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_calendar T_calendar
		{
			get
			{
				return this._T_calendar.Entity;
			}
			set
			{
				T_calendar previousValue = this._T_calendar.Entity;
				if (((previousValue != value) 
							|| (this._T_calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_calendar.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_calendar.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_calendar");
				}
			}
		}
		
		[Association(Name="FK1_t_counter", Storage="_T_counter", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_counter T_counter
		{
			get
			{
				return this._T_counter.Entity;
			}
			set
			{
				T_counter previousValue = this._T_counter.Entity;
				if (((previousValue != value) 
							|| (this._T_counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_counter.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_counter");
				}
			}
		}
		
		[Association(Name="fk1_t_counter_metadata", Storage="_T_counter_metadata", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_counter_metadata T_counter_metadata
		{
			get
			{
				return this._T_counter_metadata.Entity;
			}
			set
			{
				T_counter_metadata previousValue = this._T_counter_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_metadata.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_counter_metadata.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_counter_metadata");
				}
			}
		}
		
		[Association(Name="FK1_T_COUNTERPROPDEF", Storage="_T_counterpropdef", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_counterpropdef T_counterpropdef
		{
			get
			{
				return this._T_counterpropdef.Entity;
			}
			set
			{
				T_counterpropdef previousValue = this._T_counterpropdef.Entity;
				if (((previousValue != value) 
							|| (this._T_counterpropdef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counterpropdef.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_counterpropdef.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_counterpropdef");
				}
			}
		}
		
		[Association(Name="FK1_T_DISCOUNT", Storage="_T_discount", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_discount T_discount
		{
			get
			{
				return this._T_discount.Entity;
			}
			set
			{
				T_discount previousValue = this._T_discount.Entity;
				if (((previousValue != value) 
							|| (this._T_discount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_discount.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_discount.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_discount");
				}
			}
		}
		
		[Association(Name="FK1_T_NONRECUR", Storage="_T_nonrecur", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_nonrecur T_nonrecur
		{
			get
			{
				return this._T_nonrecur.Entity;
			}
			set
			{
				T_nonrecur previousValue = this._T_nonrecur.Entity;
				if (((previousValue != value) 
							|| (this._T_nonrecur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_nonrecur.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_nonrecur.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_nonrecur");
				}
			}
		}
		
		[Association(Name="FK1_T_PI", Storage="_T_pi", ThisKey="Id_prop", OtherKey="Id_pi", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_pi T_pi
		{
			get
			{
				return this._T_pi.Entity;
			}
			set
			{
				T_pi previousValue = this._T_pi.Entity;
				if (((previousValue != value) 
							|| (this._T_pi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pi.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_pi.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_pi");
				}
			}
		}
		
		[Association(Name="FK1_T_PO", Storage="_T_po", ThisKey="Id_prop", OtherKey="Id_po", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_po T_po
		{
			get
			{
				return this._T_po.Entity;
			}
			set
			{
				T_po previousValue = this._T_po.Entity;
				if (((previousValue != value) 
							|| (this._T_po.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_po.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_po.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_po");
				}
			}
		}
		
		[Association(Name="FK1_T_PRICELIST", Storage="_T_pricelist", ThisKey="Id_prop", OtherKey="Id_pricelist", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_pricelist T_pricelist
		{
			get
			{
				return this._T_pricelist.Entity;
			}
			set
			{
				T_pricelist previousValue = this._T_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pricelist.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_pricelist");
				}
			}
		}
		
		[Association(Name="FK1_T_RECUR", Storage="_T_recur", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_recur T_recur
		{
			get
			{
				return this._T_recur.Entity;
			}
			set
			{
				T_recur previousValue = this._T_recur.Entity;
				if (((previousValue != value) 
							|| (this._T_recur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recur.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_recur.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_recur");
				}
			}
		}
		
		[Association(Name="FK1_T_RSCHED", Storage="_T_rsched", ThisKey="Id_prop", OtherKey="Id_sched", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_rsched T_rsched
		{
			get
			{
				return this._T_rsched.Entity;
			}
			set
			{
				T_rsched previousValue = this._T_rsched.Entity;
				if (((previousValue != value) 
							|| (this._T_rsched.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rsched.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_rsched.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_rsched");
				}
			}
		}
		
		[Association(Name="fk1_t_rsched_pub", Storage="_T_rsched_pub", ThisKey="Id_prop", OtherKey="Id_sched", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_rsched_pub T_rsched_pub
		{
			get
			{
				return this._T_rsched_pub.Entity;
			}
			set
			{
				T_rsched_pub previousValue = this._T_rsched_pub.Entity;
				if (((previousValue != value) 
							|| (this._T_rsched_pub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rsched_pub.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_rsched_pub.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_rsched_pub");
				}
			}
		}
		
		[Association(Name="FK1_T_RULESETDEFINITION", Storage="_T_rulesetdefinition", ThisKey="Id_prop", OtherKey="Id_paramtable", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_rulesetdefinition T_rulesetdefinition
		{
			get
			{
				return this._T_rulesetdefinition.Entity;
			}
			set
			{
				T_rulesetdefinition previousValue = this._T_rulesetdefinition.Entity;
				if (((previousValue != value) 
							|| (this._T_rulesetdefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rulesetdefinition.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_rulesetdefinition.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_rulesetdefinition");
				}
			}
		}
		
		[Association(Name="fk2_t_counter_map", Storage="_T_counter_map", ThisKey="Id_prop", OtherKey="Id_pi", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_map> T_counter_map
		{
			get
			{
				return this._T_counter_map;
			}
			set
			{
				this._T_counter_map.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_counter_params_metadata", Storage="_T_counter_params_metadata", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_counter_params_metadata T_counter_params_metadata
		{
			get
			{
				return this._T_counter_params_metadata.Entity;
			}
			set
			{
				T_counter_params_metadata previousValue = this._T_counter_params_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_params_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_params_metadata.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_counter_params_metadata.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_counter_params_metadata");
				}
			}
		}
		
		[Association(Name="fk3_t_aggregate", Storage="_T_aggregate", ThisKey="Id_prop", OtherKey="Id_prop", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_aggregate T_aggregate
		{
			get
			{
				return this._T_aggregate.Entity;
			}
			set
			{
				T_aggregate previousValue = this._T_aggregate.Entity;
				if (((previousValue != value) 
							|| (this._T_aggregate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_aggregate.Entity = null;
						previousValue.T_base_props = null;
					}
					this._T_aggregate.Entity = value;
					if ((value != null))
					{
						value.T_base_props = this;
					}
					this.SendPropertyChanged("T_aggregate");
				}
			}
		}
		
		[Association(Name="t_adjustment_fk1", Storage="_T_adjustment", ThisKey="Id_prop", OtherKey="Id_pi_instance", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment> T_adjustment
		{
			get
			{
				return this._T_adjustment;
			}
			set
			{
				this._T_adjustment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_map(T_counter_map entity)
		{
			this.SendPropertyChanging();
			entity.T_base_props = this;
		}
		
		private void detach_T_counter_map(T_counter_map entity)
		{
			this.SendPropertyChanging();
			entity.T_base_props = null;
		}
		
		private void attach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_base_props = this;
		}
		
		private void detach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_base_props = null;
		}
	}
	
	[Table(Name="dbo.t_batch")]
	public partial class T_batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_batch;
		
		private System.Data.Linq.Binary _Tx_batch;
		
		private string _Tx_batch_encoded;
		
		private string _Tx_source;
		
		private string _Tx_sequence;
		
		private string _Tx_name;
		
		private string _Tx_namespace;
		
		private string _Tx_status;
		
		private System.Nullable<System.DateTime> _Dt_crt_source;
		
		private System.DateTime _Dt_crt;
		
		private System.Nullable<System.DateTime> _Dt_first;
		
		private System.Nullable<System.DateTime> _Dt_last;
		
		private int _N_completed;
		
		private int _N_failed;
		
		private System.Nullable<int> _N_dismissed;
		
		private System.Nullable<int> _N_expected;
		
		private System.Nullable<int> _N_metered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_batchChanging(int value);
    partial void OnId_batchChanged();
    partial void OnTx_batchChanging(System.Data.Linq.Binary value);
    partial void OnTx_batchChanged();
    partial void OnTx_batch_encodedChanging(string value);
    partial void OnTx_batch_encodedChanged();
    partial void OnTx_sourceChanging(string value);
    partial void OnTx_sourceChanged();
    partial void OnTx_sequenceChanging(string value);
    partial void OnTx_sequenceChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_namespaceChanging(string value);
    partial void OnTx_namespaceChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    partial void OnDt_crt_sourceChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_crt_sourceChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    partial void OnDt_firstChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_firstChanged();
    partial void OnDt_lastChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_lastChanged();
    partial void OnN_completedChanging(int value);
    partial void OnN_completedChanged();
    partial void OnN_failedChanging(int value);
    partial void OnN_failedChanged();
    partial void OnN_dismissedChanging(System.Nullable<int> value);
    partial void OnN_dismissedChanged();
    partial void OnN_expectedChanging(System.Nullable<int> value);
    partial void OnN_expectedChanged();
    partial void OnN_meteredChanging(System.Nullable<int> value);
    partial void OnN_meteredChanged();
    #endregion
		
		public T_batch()
		{
			OnCreated();
		}
		
		[Column(Name="id_batch", Storage="_Id_batch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_batch
		{
			get
			{
				return this._Id_batch;
			}
			set
			{
				if ((this._Id_batch != value))
				{
					this.OnId_batchChanging(value);
					this.SendPropertyChanging();
					this._Id_batch = value;
					this.SendPropertyChanged("Id_batch");
					this.OnId_batchChanged();
				}
			}
		}
		
		[Column(Name="tx_batch", Storage="_Tx_batch", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Tx_batch
		{
			get
			{
				return this._Tx_batch;
			}
			set
			{
				if ((this._Tx_batch != value))
				{
					this.OnTx_batchChanging(value);
					this.SendPropertyChanging();
					this._Tx_batch = value;
					this.SendPropertyChanged("Tx_batch");
					this.OnTx_batchChanged();
				}
			}
		}
		
		[Column(Name="tx_batch_encoded", Storage="_Tx_batch_encoded", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_batch_encoded
		{
			get
			{
				return this._Tx_batch_encoded;
			}
			set
			{
				if ((this._Tx_batch_encoded != value))
				{
					this.OnTx_batch_encodedChanging(value);
					this.SendPropertyChanging();
					this._Tx_batch_encoded = value;
					this.SendPropertyChanged("Tx_batch_encoded");
					this.OnTx_batch_encodedChanged();
				}
			}
		}
		
		[Column(Name="tx_source", Storage="_Tx_source", DbType="VarChar(255)")]
		public string Tx_source
		{
			get
			{
				return this._Tx_source;
			}
			set
			{
				if ((this._Tx_source != value))
				{
					this.OnTx_sourceChanging(value);
					this.SendPropertyChanging();
					this._Tx_source = value;
					this.SendPropertyChanged("Tx_source");
					this.OnTx_sourceChanged();
				}
			}
		}
		
		[Column(Name="tx_sequence", Storage="_Tx_sequence", DbType="VarChar(255)")]
		public string Tx_sequence
		{
			get
			{
				return this._Tx_sequence;
			}
			set
			{
				if ((this._Tx_sequence != value))
				{
					this.OnTx_sequenceChanging(value);
					this.SendPropertyChanging();
					this._Tx_sequence = value;
					this.SendPropertyChanged("Tx_sequence");
					this.OnTx_sequenceChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_namespace", Storage="_Tx_namespace", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_namespace
		{
			get
			{
				return this._Tx_namespace;
			}
			set
			{
				if ((this._Tx_namespace != value))
				{
					this.OnTx_namespaceChanging(value);
					this.SendPropertyChanging();
					this._Tx_namespace = value;
					this.SendPropertyChanged("Tx_namespace");
					this.OnTx_namespaceChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Column(Name="dt_crt_source", Storage="_Dt_crt_source", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_crt_source
		{
			get
			{
				return this._Dt_crt_source;
			}
			set
			{
				if ((this._Dt_crt_source != value))
				{
					this.OnDt_crt_sourceChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt_source = value;
					this.SendPropertyChanged("Dt_crt_source");
					this.OnDt_crt_sourceChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Column(Name="dt_first", Storage="_Dt_first", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_first
		{
			get
			{
				return this._Dt_first;
			}
			set
			{
				if ((this._Dt_first != value))
				{
					this.OnDt_firstChanging(value);
					this.SendPropertyChanging();
					this._Dt_first = value;
					this.SendPropertyChanged("Dt_first");
					this.OnDt_firstChanged();
				}
			}
		}
		
		[Column(Name="dt_last", Storage="_Dt_last", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_last
		{
			get
			{
				return this._Dt_last;
			}
			set
			{
				if ((this._Dt_last != value))
				{
					this.OnDt_lastChanging(value);
					this.SendPropertyChanging();
					this._Dt_last = value;
					this.SendPropertyChanged("Dt_last");
					this.OnDt_lastChanged();
				}
			}
		}
		
		[Column(Name="n_completed", Storage="_N_completed", DbType="Int NOT NULL")]
		public int N_completed
		{
			get
			{
				return this._N_completed;
			}
			set
			{
				if ((this._N_completed != value))
				{
					this.OnN_completedChanging(value);
					this.SendPropertyChanging();
					this._N_completed = value;
					this.SendPropertyChanged("N_completed");
					this.OnN_completedChanged();
				}
			}
		}
		
		[Column(Name="n_failed", Storage="_N_failed", DbType="Int NOT NULL")]
		public int N_failed
		{
			get
			{
				return this._N_failed;
			}
			set
			{
				if ((this._N_failed != value))
				{
					this.OnN_failedChanging(value);
					this.SendPropertyChanging();
					this._N_failed = value;
					this.SendPropertyChanged("N_failed");
					this.OnN_failedChanged();
				}
			}
		}
		
		[Column(Name="n_dismissed", Storage="_N_dismissed", DbType="Int")]
		public System.Nullable<int> N_dismissed
		{
			get
			{
				return this._N_dismissed;
			}
			set
			{
				if ((this._N_dismissed != value))
				{
					this.OnN_dismissedChanging(value);
					this.SendPropertyChanging();
					this._N_dismissed = value;
					this.SendPropertyChanged("N_dismissed");
					this.OnN_dismissedChanged();
				}
			}
		}
		
		[Column(Name="n_expected", Storage="_N_expected", DbType="Int")]
		public System.Nullable<int> N_expected
		{
			get
			{
				return this._N_expected;
			}
			set
			{
				if ((this._N_expected != value))
				{
					this.OnN_expectedChanging(value);
					this.SendPropertyChanging();
					this._N_expected = value;
					this.SendPropertyChanged("N_expected");
					this.OnN_expectedChanged();
				}
			}
		}
		
		[Column(Name="n_metered", Storage="_N_metered", DbType="Int")]
		public System.Nullable<int> N_metered
		{
			get
			{
				return this._N_metered;
			}
			set
			{
				if ((this._N_metered != value))
				{
					this.OnN_meteredChanging(value);
					this.SendPropertyChanging();
					this._N_metered = value;
					this.SendPropertyChanged("N_metered");
					this.OnN_meteredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_batch_history")]
	public partial class T_batch_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_batch_history;
		
		private System.Data.Linq.Binary _Tx_batch;
		
		private string _Tx_batch_encoded;
		
		private string _Tx_status;
		
		private System.Nullable<System.DateTime> _Dt_first;
		
		private System.Nullable<System.DateTime> _Dt_last;
		
		private int _N_completed;
		
		private int _N_failed;
		
		private System.Nullable<int> _N_dismissed;
		
		private System.Nullable<int> _N_expected;
		
		private System.Nullable<int> _N_metered;
		
		private System.DateTime _Dt_history_crt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_batch_historyChanging(int value);
    partial void OnId_batch_historyChanged();
    partial void OnTx_batchChanging(System.Data.Linq.Binary value);
    partial void OnTx_batchChanged();
    partial void OnTx_batch_encodedChanging(string value);
    partial void OnTx_batch_encodedChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    partial void OnDt_firstChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_firstChanged();
    partial void OnDt_lastChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_lastChanged();
    partial void OnN_completedChanging(int value);
    partial void OnN_completedChanged();
    partial void OnN_failedChanging(int value);
    partial void OnN_failedChanged();
    partial void OnN_dismissedChanging(System.Nullable<int> value);
    partial void OnN_dismissedChanged();
    partial void OnN_expectedChanging(System.Nullable<int> value);
    partial void OnN_expectedChanged();
    partial void OnN_meteredChanging(System.Nullable<int> value);
    partial void OnN_meteredChanged();
    partial void OnDt_history_crtChanging(System.DateTime value);
    partial void OnDt_history_crtChanged();
    #endregion
		
		public T_batch_history()
		{
			OnCreated();
		}
		
		[Column(Name="id_batch_history", Storage="_Id_batch_history", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_batch_history
		{
			get
			{
				return this._Id_batch_history;
			}
			set
			{
				if ((this._Id_batch_history != value))
				{
					this.OnId_batch_historyChanging(value);
					this.SendPropertyChanging();
					this._Id_batch_history = value;
					this.SendPropertyChanged("Id_batch_history");
					this.OnId_batch_historyChanged();
				}
			}
		}
		
		[Column(Name="tx_batch", Storage="_Tx_batch", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Tx_batch
		{
			get
			{
				return this._Tx_batch;
			}
			set
			{
				if ((this._Tx_batch != value))
				{
					this.OnTx_batchChanging(value);
					this.SendPropertyChanging();
					this._Tx_batch = value;
					this.SendPropertyChanged("Tx_batch");
					this.OnTx_batchChanged();
				}
			}
		}
		
		[Column(Name="tx_batch_encoded", Storage="_Tx_batch_encoded", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_batch_encoded
		{
			get
			{
				return this._Tx_batch_encoded;
			}
			set
			{
				if ((this._Tx_batch_encoded != value))
				{
					this.OnTx_batch_encodedChanging(value);
					this.SendPropertyChanging();
					this._Tx_batch_encoded = value;
					this.SendPropertyChanged("Tx_batch_encoded");
					this.OnTx_batch_encodedChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Column(Name="dt_first", Storage="_Dt_first", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_first
		{
			get
			{
				return this._Dt_first;
			}
			set
			{
				if ((this._Dt_first != value))
				{
					this.OnDt_firstChanging(value);
					this.SendPropertyChanging();
					this._Dt_first = value;
					this.SendPropertyChanged("Dt_first");
					this.OnDt_firstChanged();
				}
			}
		}
		
		[Column(Name="dt_last", Storage="_Dt_last", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_last
		{
			get
			{
				return this._Dt_last;
			}
			set
			{
				if ((this._Dt_last != value))
				{
					this.OnDt_lastChanging(value);
					this.SendPropertyChanging();
					this._Dt_last = value;
					this.SendPropertyChanged("Dt_last");
					this.OnDt_lastChanged();
				}
			}
		}
		
		[Column(Name="n_completed", Storage="_N_completed", DbType="Int NOT NULL")]
		public int N_completed
		{
			get
			{
				return this._N_completed;
			}
			set
			{
				if ((this._N_completed != value))
				{
					this.OnN_completedChanging(value);
					this.SendPropertyChanging();
					this._N_completed = value;
					this.SendPropertyChanged("N_completed");
					this.OnN_completedChanged();
				}
			}
		}
		
		[Column(Name="n_failed", Storage="_N_failed", DbType="Int NOT NULL")]
		public int N_failed
		{
			get
			{
				return this._N_failed;
			}
			set
			{
				if ((this._N_failed != value))
				{
					this.OnN_failedChanging(value);
					this.SendPropertyChanging();
					this._N_failed = value;
					this.SendPropertyChanged("N_failed");
					this.OnN_failedChanged();
				}
			}
		}
		
		[Column(Name="n_dismissed", Storage="_N_dismissed", DbType="Int")]
		public System.Nullable<int> N_dismissed
		{
			get
			{
				return this._N_dismissed;
			}
			set
			{
				if ((this._N_dismissed != value))
				{
					this.OnN_dismissedChanging(value);
					this.SendPropertyChanging();
					this._N_dismissed = value;
					this.SendPropertyChanged("N_dismissed");
					this.OnN_dismissedChanged();
				}
			}
		}
		
		[Column(Name="n_expected", Storage="_N_expected", DbType="Int")]
		public System.Nullable<int> N_expected
		{
			get
			{
				return this._N_expected;
			}
			set
			{
				if ((this._N_expected != value))
				{
					this.OnN_expectedChanging(value);
					this.SendPropertyChanging();
					this._N_expected = value;
					this.SendPropertyChanged("N_expected");
					this.OnN_expectedChanged();
				}
			}
		}
		
		[Column(Name="n_metered", Storage="_N_metered", DbType="Int")]
		public System.Nullable<int> N_metered
		{
			get
			{
				return this._N_metered;
			}
			set
			{
				if ((this._N_metered != value))
				{
					this.OnN_meteredChanging(value);
					this.SendPropertyChanging();
					this._N_metered = value;
					this.SendPropertyChanged("N_metered");
					this.OnN_meteredChanged();
				}
			}
		}
		
		[Column(Name="dt_history_crt", Storage="_Dt_history_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_history_crt
		{
			get
			{
				return this._Dt_history_crt;
			}
			set
			{
				if ((this._Dt_history_crt != value))
				{
					this.OnDt_history_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_history_crt = value;
					this.SendPropertyChanged("Dt_history_crt");
					this.OnDt_history_crtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_2090305_alldatatypebm_h")]
	public partial class T_be_2090305_alldatatypebm_h : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AllDataTypeBMEHistory_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_AllDataTypeBME_Id;
		
		private string _C_StringProperty;
		
		private System.Nullable<int> _C_EnumProperty;
		
		private string _C_BooleanProperty;
		
		private System.Nullable<System.DateTime> _C_DateTimeProperty;
		
		private System.Nullable<decimal> _C_DecimalProperty;
		
		private System.Nullable<double> _C_DoubleProperty;
		
		private System.Nullable<int> _C_Int32Property;
		
		private System.Nullable<long> _C_Int64Property;
		
		private System.DateTime _C__StartDate;
		
		private System.DateTime _C__EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AllDataTypeBMEHistory_IdChanging(System.Guid value);
    partial void OnC_AllDataTypeBMEHistory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_AllDataTypeBME_IdChanging(System.Guid value);
    partial void OnC_AllDataTypeBME_IdChanged();
    partial void OnC_StringPropertyChanging(string value);
    partial void OnC_StringPropertyChanged();
    partial void OnC_EnumPropertyChanging(System.Nullable<int> value);
    partial void OnC_EnumPropertyChanged();
    partial void OnC_BooleanPropertyChanging(string value);
    partial void OnC_BooleanPropertyChanged();
    partial void OnC_DateTimePropertyChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DateTimePropertyChanged();
    partial void OnC_DecimalPropertyChanging(System.Nullable<decimal> value);
    partial void OnC_DecimalPropertyChanged();
    partial void OnC_DoublePropertyChanging(System.Nullable<double> value);
    partial void OnC_DoublePropertyChanged();
    partial void OnC_Int32PropertyChanging(System.Nullable<int> value);
    partial void OnC_Int32PropertyChanged();
    partial void OnC_Int64PropertyChanging(System.Nullable<long> value);
    partial void OnC_Int64PropertyChanged();
    partial void OnC__StartDateChanging(System.DateTime value);
    partial void OnC__StartDateChanged();
    partial void OnC__EndDateChanging(System.DateTime value);
    partial void OnC__EndDateChanged();
    #endregion
		
		public T_be_2090305_alldatatypebm_h()
		{
			OnCreated();
		}
		
		[Column(Name="c_AllDataTypeBMEHistory_Id", Storage="_C_AllDataTypeBMEHistory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AllDataTypeBMEHistory_Id
		{
			get
			{
				return this._C_AllDataTypeBMEHistory_Id;
			}
			set
			{
				if ((this._C_AllDataTypeBMEHistory_Id != value))
				{
					this.OnC_AllDataTypeBMEHistory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AllDataTypeBMEHistory_Id = value;
					this.SendPropertyChanged("C_AllDataTypeBMEHistory_Id");
					this.OnC_AllDataTypeBMEHistory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_AllDataTypeBME_Id", Storage="_C_AllDataTypeBME_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_AllDataTypeBME_Id
		{
			get
			{
				return this._C_AllDataTypeBME_Id;
			}
			set
			{
				if ((this._C_AllDataTypeBME_Id != value))
				{
					this.OnC_AllDataTypeBME_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AllDataTypeBME_Id = value;
					this.SendPropertyChanged("C_AllDataTypeBME_Id");
					this.OnC_AllDataTypeBME_IdChanged();
				}
			}
		}
		
		[Column(Name="c_StringProperty", Storage="_C_StringProperty", DbType="NVarChar(255)")]
		public string C_StringProperty
		{
			get
			{
				return this._C_StringProperty;
			}
			set
			{
				if ((this._C_StringProperty != value))
				{
					this.OnC_StringPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_StringProperty = value;
					this.SendPropertyChanged("C_StringProperty");
					this.OnC_StringPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_EnumProperty", Storage="_C_EnumProperty", DbType="Int")]
		public System.Nullable<int> C_EnumProperty
		{
			get
			{
				return this._C_EnumProperty;
			}
			set
			{
				if ((this._C_EnumProperty != value))
				{
					this.OnC_EnumPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_EnumProperty = value;
					this.SendPropertyChanged("C_EnumProperty");
					this.OnC_EnumPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_BooleanProperty", Storage="_C_BooleanProperty", DbType="Char(1)")]
		public string C_BooleanProperty
		{
			get
			{
				return this._C_BooleanProperty;
			}
			set
			{
				if ((this._C_BooleanProperty != value))
				{
					this.OnC_BooleanPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_BooleanProperty = value;
					this.SendPropertyChanged("C_BooleanProperty");
					this.OnC_BooleanPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DateTimeProperty", Storage="_C_DateTimeProperty", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DateTimeProperty
		{
			get
			{
				return this._C_DateTimeProperty;
			}
			set
			{
				if ((this._C_DateTimeProperty != value))
				{
					this.OnC_DateTimePropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DateTimeProperty = value;
					this.SendPropertyChanged("C_DateTimeProperty");
					this.OnC_DateTimePropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DecimalProperty", Storage="_C_DecimalProperty", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecimalProperty
		{
			get
			{
				return this._C_DecimalProperty;
			}
			set
			{
				if ((this._C_DecimalProperty != value))
				{
					this.OnC_DecimalPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DecimalProperty = value;
					this.SendPropertyChanged("C_DecimalProperty");
					this.OnC_DecimalPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DoubleProperty", Storage="_C_DoubleProperty", DbType="Float")]
		public System.Nullable<double> C_DoubleProperty
		{
			get
			{
				return this._C_DoubleProperty;
			}
			set
			{
				if ((this._C_DoubleProperty != value))
				{
					this.OnC_DoublePropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DoubleProperty = value;
					this.SendPropertyChanged("C_DoubleProperty");
					this.OnC_DoublePropertyChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Property", Storage="_C_Int32Property", DbType="Int")]
		public System.Nullable<int> C_Int32Property
		{
			get
			{
				return this._C_Int32Property;
			}
			set
			{
				if ((this._C_Int32Property != value))
				{
					this.OnC_Int32PropertyChanging(value);
					this.SendPropertyChanging();
					this._C_Int32Property = value;
					this.SendPropertyChanged("C_Int32Property");
					this.OnC_Int32PropertyChanged();
				}
			}
		}
		
		[Column(Name="c_Int64Property", Storage="_C_Int64Property", DbType="BigInt")]
		public System.Nullable<long> C_Int64Property
		{
			get
			{
				return this._C_Int64Property;
			}
			set
			{
				if ((this._C_Int64Property != value))
				{
					this.OnC_Int64PropertyChanging(value);
					this.SendPropertyChanging();
					this._C_Int64Property = value;
					this.SendPropertyChanged("C_Int64Property");
					this.OnC_Int64PropertyChanged();
				}
			}
		}
		
		[Column(Name="c__StartDate", Storage="_C__StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__StartDate
		{
			get
			{
				return this._C__StartDate;
			}
			set
			{
				if ((this._C__StartDate != value))
				{
					this.OnC__StartDateChanging(value);
					this.SendPropertyChanging();
					this._C__StartDate = value;
					this.SendPropertyChanged("C__StartDate");
					this.OnC__StartDateChanged();
				}
			}
		}
		
		[Column(Name="c__EndDate", Storage="_C__EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__EndDate
		{
			get
			{
				return this._C__EndDate;
			}
			set
			{
				if ((this._C__EndDate != value))
				{
					this.OnC__EndDateChanging(value);
					this.SendPropertyChanging();
					this._C__EndDate = value;
					this.SendPropertyChanged("C__EndDate");
					this.OnC__EndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_2090305_alldatatypebme")]
	public partial class T_be_2090305_alldatatypebme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AllDataTypeBME_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_StringProperty;
		
		private System.Nullable<int> _C_EnumProperty;
		
		private string _C_BooleanProperty;
		
		private System.Nullable<System.DateTime> _C_DateTimeProperty;
		
		private System.Nullable<decimal> _C_DecimalProperty;
		
		private System.Nullable<double> _C_DoubleProperty;
		
		private System.Nullable<int> _C_Int32Property;
		
		private System.Nullable<long> _C_Int64Property;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AllDataTypeBME_IdChanging(System.Guid value);
    partial void OnC_AllDataTypeBME_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_StringPropertyChanging(string value);
    partial void OnC_StringPropertyChanged();
    partial void OnC_EnumPropertyChanging(System.Nullable<int> value);
    partial void OnC_EnumPropertyChanged();
    partial void OnC_BooleanPropertyChanging(string value);
    partial void OnC_BooleanPropertyChanged();
    partial void OnC_DateTimePropertyChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DateTimePropertyChanged();
    partial void OnC_DecimalPropertyChanging(System.Nullable<decimal> value);
    partial void OnC_DecimalPropertyChanged();
    partial void OnC_DoublePropertyChanging(System.Nullable<double> value);
    partial void OnC_DoublePropertyChanged();
    partial void OnC_Int32PropertyChanging(System.Nullable<int> value);
    partial void OnC_Int32PropertyChanged();
    partial void OnC_Int64PropertyChanging(System.Nullable<long> value);
    partial void OnC_Int64PropertyChanged();
    #endregion
		
		public T_be_2090305_alldatatypebme()
		{
			OnCreated();
		}
		
		[Column(Name="c_AllDataTypeBME_Id", Storage="_C_AllDataTypeBME_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AllDataTypeBME_Id
		{
			get
			{
				return this._C_AllDataTypeBME_Id;
			}
			set
			{
				if ((this._C_AllDataTypeBME_Id != value))
				{
					this.OnC_AllDataTypeBME_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AllDataTypeBME_Id = value;
					this.SendPropertyChanged("C_AllDataTypeBME_Id");
					this.OnC_AllDataTypeBME_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_StringProperty", Storage="_C_StringProperty", DbType="NVarChar(255)")]
		public string C_StringProperty
		{
			get
			{
				return this._C_StringProperty;
			}
			set
			{
				if ((this._C_StringProperty != value))
				{
					this.OnC_StringPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_StringProperty = value;
					this.SendPropertyChanged("C_StringProperty");
					this.OnC_StringPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_EnumProperty", Storage="_C_EnumProperty", DbType="Int")]
		public System.Nullable<int> C_EnumProperty
		{
			get
			{
				return this._C_EnumProperty;
			}
			set
			{
				if ((this._C_EnumProperty != value))
				{
					this.OnC_EnumPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_EnumProperty = value;
					this.SendPropertyChanged("C_EnumProperty");
					this.OnC_EnumPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_BooleanProperty", Storage="_C_BooleanProperty", DbType="Char(1)")]
		public string C_BooleanProperty
		{
			get
			{
				return this._C_BooleanProperty;
			}
			set
			{
				if ((this._C_BooleanProperty != value))
				{
					this.OnC_BooleanPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_BooleanProperty = value;
					this.SendPropertyChanged("C_BooleanProperty");
					this.OnC_BooleanPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DateTimeProperty", Storage="_C_DateTimeProperty", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DateTimeProperty
		{
			get
			{
				return this._C_DateTimeProperty;
			}
			set
			{
				if ((this._C_DateTimeProperty != value))
				{
					this.OnC_DateTimePropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DateTimeProperty = value;
					this.SendPropertyChanged("C_DateTimeProperty");
					this.OnC_DateTimePropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DecimalProperty", Storage="_C_DecimalProperty", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecimalProperty
		{
			get
			{
				return this._C_DecimalProperty;
			}
			set
			{
				if ((this._C_DecimalProperty != value))
				{
					this.OnC_DecimalPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DecimalProperty = value;
					this.SendPropertyChanged("C_DecimalProperty");
					this.OnC_DecimalPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DoubleProperty", Storage="_C_DoubleProperty", DbType="Float")]
		public System.Nullable<double> C_DoubleProperty
		{
			get
			{
				return this._C_DoubleProperty;
			}
			set
			{
				if ((this._C_DoubleProperty != value))
				{
					this.OnC_DoublePropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DoubleProperty = value;
					this.SendPropertyChanged("C_DoubleProperty");
					this.OnC_DoublePropertyChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Property", Storage="_C_Int32Property", DbType="Int")]
		public System.Nullable<int> C_Int32Property
		{
			get
			{
				return this._C_Int32Property;
			}
			set
			{
				if ((this._C_Int32Property != value))
				{
					this.OnC_Int32PropertyChanging(value);
					this.SendPropertyChanging();
					this._C_Int32Property = value;
					this.SendPropertyChanged("C_Int32Property");
					this.OnC_Int32PropertyChanged();
				}
			}
		}
		
		[Column(Name="c_Int64Property", Storage="_C_Int64Property", DbType="BigInt")]
		public System.Nullable<long> C_Int64Property
		{
			get
			{
				return this._C_Int64Property;
			}
			set
			{
				if ((this._C_Int64Property != value))
				{
					this.OnC_Int64PropertyChanging(value);
					this.SendPropertyChanging();
					this._C_Int64Property = value;
					this.SendPropertyChanged("C_Int64Property");
					this.OnC_Int64PropertyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_bil_billmessage")]
	public partial class T_be_cor_bil_billmessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_BillMessage_Id;
		
		private int _C__version;
		
		private string _C_MessageCode;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private int _C_MessageType;
		
		private string _C_MessageText;
		
		private string _C_MessageFormat;
		
		private EntitySet<T_be_cor_bil_billmessageacc> _T_be_cor_bil_billmessageacc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BillMessage_IdChanging(System.Guid value);
    partial void OnC_BillMessage_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_MessageCodeChanging(string value);
    partial void OnC_MessageCodeChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_MessageTypeChanging(int value);
    partial void OnC_MessageTypeChanged();
    partial void OnC_MessageTextChanging(string value);
    partial void OnC_MessageTextChanged();
    partial void OnC_MessageFormatChanging(string value);
    partial void OnC_MessageFormatChanged();
    #endregion
		
		public T_be_cor_bil_billmessage()
		{
			this._T_be_cor_bil_billmessageacc = new EntitySet<T_be_cor_bil_billmessageacc>(new Action<T_be_cor_bil_billmessageacc>(this.attach_T_be_cor_bil_billmessageacc), new Action<T_be_cor_bil_billmessageacc>(this.detach_T_be_cor_bil_billmessageacc));
			OnCreated();
		}
		
		[Column(Name="c_BillMessage_Id", Storage="_C_BillMessage_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_BillMessage_Id
		{
			get
			{
				return this._C_BillMessage_Id;
			}
			set
			{
				if ((this._C_BillMessage_Id != value))
				{
					this.OnC_BillMessage_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessage_Id = value;
					this.SendPropertyChanged("C_BillMessage_Id");
					this.OnC_BillMessage_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_MessageCode", Storage="_C_MessageCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string C_MessageCode
		{
			get
			{
				return this._C_MessageCode;
			}
			set
			{
				if ((this._C_MessageCode != value))
				{
					this.OnC_MessageCodeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageCode = value;
					this.SendPropertyChanged("C_MessageCode");
					this.OnC_MessageCodeChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_MessageType", Storage="_C_MessageType", DbType="Int NOT NULL")]
		public int C_MessageType
		{
			get
			{
				return this._C_MessageType;
			}
			set
			{
				if ((this._C_MessageType != value))
				{
					this.OnC_MessageTypeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageType = value;
					this.SendPropertyChanged("C_MessageType");
					this.OnC_MessageTypeChanged();
				}
			}
		}
		
		[Column(Name="c_MessageText", Storage="_C_MessageText", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_MessageText
		{
			get
			{
				return this._C_MessageText;
			}
			set
			{
				if ((this._C_MessageText != value))
				{
					this.OnC_MessageTextChanging(value);
					this.SendPropertyChanging();
					this._C_MessageText = value;
					this.SendPropertyChanged("C_MessageText");
					this.OnC_MessageTextChanged();
				}
			}
		}
		
		[Column(Name="c_MessageFormat", Storage="_C_MessageFormat", DbType="NVarChar(20)")]
		public string C_MessageFormat
		{
			get
			{
				return this._C_MessageFormat;
			}
			set
			{
				if ((this._C_MessageFormat != value))
				{
					this.OnC_MessageFormatChanging(value);
					this.SendPropertyChanging();
					this._C_MessageFormat = value;
					this.SendPropertyChanged("C_MessageFormat");
					this.OnC_MessageFormatChanged();
				}
			}
		}
		
		[Association(Name="FKC3D2CEB6CE386231", Storage="_T_be_cor_bil_billmessageacc", ThisKey="C_BillMessage_Id", OtherKey="C_BillMessage_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_bil_billmessageacc> T_be_cor_bil_billmessageacc
		{
			get
			{
				return this._T_be_cor_bil_billmessageacc;
			}
			set
			{
				this._T_be_cor_bil_billmessageacc.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_bil_billmessageacc(T_be_cor_bil_billmessageacc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_bil_billmessage = this;
		}
		
		private void detach_T_be_cor_bil_billmessageacc(T_be_cor_bil_billmessageacc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_bil_billmessage = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_bil_billmessage_h")]
	public partial class T_be_cor_bil_billmessage_h : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_BillMessageHistory_Id;
		
		private int _C__version;
		
		private string _C_MessageCode;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_BillMessage_Id;
		
		private int _C_MessageType;
		
		private string _C_MessageText;
		
		private string _C_MessageFormat;
		
		private System.DateTime _C__StartDate;
		
		private System.DateTime _C__EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BillMessageHistory_IdChanging(System.Guid value);
    partial void OnC_BillMessageHistory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_MessageCodeChanging(string value);
    partial void OnC_MessageCodeChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_BillMessage_IdChanging(System.Guid value);
    partial void OnC_BillMessage_IdChanged();
    partial void OnC_MessageTypeChanging(int value);
    partial void OnC_MessageTypeChanged();
    partial void OnC_MessageTextChanging(string value);
    partial void OnC_MessageTextChanged();
    partial void OnC_MessageFormatChanging(string value);
    partial void OnC_MessageFormatChanged();
    partial void OnC__StartDateChanging(System.DateTime value);
    partial void OnC__StartDateChanged();
    partial void OnC__EndDateChanging(System.DateTime value);
    partial void OnC__EndDateChanged();
    #endregion
		
		public T_be_cor_bil_billmessage_h()
		{
			OnCreated();
		}
		
		[Column(Name="c_BillMessageHistory_Id", Storage="_C_BillMessageHistory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_BillMessageHistory_Id
		{
			get
			{
				return this._C_BillMessageHistory_Id;
			}
			set
			{
				if ((this._C_BillMessageHistory_Id != value))
				{
					this.OnC_BillMessageHistory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessageHistory_Id = value;
					this.SendPropertyChanged("C_BillMessageHistory_Id");
					this.OnC_BillMessageHistory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_MessageCode", Storage="_C_MessageCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string C_MessageCode
		{
			get
			{
				return this._C_MessageCode;
			}
			set
			{
				if ((this._C_MessageCode != value))
				{
					this.OnC_MessageCodeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageCode = value;
					this.SendPropertyChanged("C_MessageCode");
					this.OnC_MessageCodeChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_BillMessage_Id", Storage="_C_BillMessage_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_BillMessage_Id
		{
			get
			{
				return this._C_BillMessage_Id;
			}
			set
			{
				if ((this._C_BillMessage_Id != value))
				{
					this.OnC_BillMessage_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessage_Id = value;
					this.SendPropertyChanged("C_BillMessage_Id");
					this.OnC_BillMessage_IdChanged();
				}
			}
		}
		
		[Column(Name="c_MessageType", Storage="_C_MessageType", DbType="Int NOT NULL")]
		public int C_MessageType
		{
			get
			{
				return this._C_MessageType;
			}
			set
			{
				if ((this._C_MessageType != value))
				{
					this.OnC_MessageTypeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageType = value;
					this.SendPropertyChanged("C_MessageType");
					this.OnC_MessageTypeChanged();
				}
			}
		}
		
		[Column(Name="c_MessageText", Storage="_C_MessageText", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C_MessageText
		{
			get
			{
				return this._C_MessageText;
			}
			set
			{
				if ((this._C_MessageText != value))
				{
					this.OnC_MessageTextChanging(value);
					this.SendPropertyChanging();
					this._C_MessageText = value;
					this.SendPropertyChanged("C_MessageText");
					this.OnC_MessageTextChanged();
				}
			}
		}
		
		[Column(Name="c_MessageFormat", Storage="_C_MessageFormat", DbType="NVarChar(20)")]
		public string C_MessageFormat
		{
			get
			{
				return this._C_MessageFormat;
			}
			set
			{
				if ((this._C_MessageFormat != value))
				{
					this.OnC_MessageFormatChanging(value);
					this.SendPropertyChanging();
					this._C_MessageFormat = value;
					this.SendPropertyChanged("C_MessageFormat");
					this.OnC_MessageFormatChanged();
				}
			}
		}
		
		[Column(Name="c__StartDate", Storage="_C__StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__StartDate
		{
			get
			{
				return this._C__StartDate;
			}
			set
			{
				if ((this._C__StartDate != value))
				{
					this.OnC__StartDateChanging(value);
					this.SendPropertyChanging();
					this._C__StartDate = value;
					this.SendPropertyChanged("C__StartDate");
					this.OnC__StartDateChanged();
				}
			}
		}
		
		[Column(Name="c__EndDate", Storage="_C__EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__EndDate
		{
			get
			{
				return this._C__EndDate;
			}
			set
			{
				if ((this._C__EndDate != value))
				{
					this.OnC__EndDateChanging(value);
					this.SendPropertyChanging();
					this._C__EndDate = value;
					this.SendPropertyChanged("C__EndDate");
					this.OnC__EndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_bil_billmessageac_h")]
	public partial class T_be_cor_bil_billmessageac_h : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_BillMessageAccountHistor_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_BillMessageAccount_Id;
		
		private System.DateTime _C_StartDate;
		
		private System.Nullable<System.DateTime> _C_EndDate;
		
		private string _C_MessageCode;
		
		private System.Nullable<int> _C_AccountId;
		
		private System.Nullable<System.Guid> _C_BillMessage_Id;
		
		private System.DateTime _C__StartDate;
		
		private System.DateTime _C__EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BillMessageAccountHistor_IdChanging(System.Guid value);
    partial void OnC_BillMessageAccountHistor_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_BillMessageAccount_IdChanging(System.Guid value);
    partial void OnC_BillMessageAccount_IdChanged();
    partial void OnC_StartDateChanging(System.DateTime value);
    partial void OnC_StartDateChanged();
    partial void OnC_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndDateChanged();
    partial void OnC_MessageCodeChanging(string value);
    partial void OnC_MessageCodeChanged();
    partial void OnC_AccountIdChanging(System.Nullable<int> value);
    partial void OnC_AccountIdChanged();
    partial void OnC_BillMessage_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_BillMessage_IdChanged();
    partial void OnC__StartDateChanging(System.DateTime value);
    partial void OnC__StartDateChanged();
    partial void OnC__EndDateChanging(System.DateTime value);
    partial void OnC__EndDateChanged();
    #endregion
		
		public T_be_cor_bil_billmessageac_h()
		{
			OnCreated();
		}
		
		[Column(Name="c_BillMessageAccountHistor_Id", Storage="_C_BillMessageAccountHistor_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_BillMessageAccountHistor_Id
		{
			get
			{
				return this._C_BillMessageAccountHistor_Id;
			}
			set
			{
				if ((this._C_BillMessageAccountHistor_Id != value))
				{
					this.OnC_BillMessageAccountHistor_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessageAccountHistor_Id = value;
					this.SendPropertyChanged("C_BillMessageAccountHistor_Id");
					this.OnC_BillMessageAccountHistor_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_BillMessageAccount_Id", Storage="_C_BillMessageAccount_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_BillMessageAccount_Id
		{
			get
			{
				return this._C_BillMessageAccount_Id;
			}
			set
			{
				if ((this._C_BillMessageAccount_Id != value))
				{
					this.OnC_BillMessageAccount_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessageAccount_Id = value;
					this.SendPropertyChanged("C_BillMessageAccount_Id");
					this.OnC_BillMessageAccount_IdChanged();
				}
			}
		}
		
		[Column(Name="c_StartDate", Storage="_C_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_StartDate
		{
			get
			{
				return this._C_StartDate;
			}
			set
			{
				if ((this._C_StartDate != value))
				{
					this.OnC_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_StartDate = value;
					this.SendPropertyChanged("C_StartDate");
					this.OnC_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_EndDate", Storage="_C_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndDate
		{
			get
			{
				return this._C_EndDate;
			}
			set
			{
				if ((this._C_EndDate != value))
				{
					this.OnC_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_EndDate = value;
					this.SendPropertyChanged("C_EndDate");
					this.OnC_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_MessageCode", Storage="_C_MessageCode", DbType="NVarChar(40)")]
		public string C_MessageCode
		{
			get
			{
				return this._C_MessageCode;
			}
			set
			{
				if ((this._C_MessageCode != value))
				{
					this.OnC_MessageCodeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageCode = value;
					this.SendPropertyChanged("C_MessageCode");
					this.OnC_MessageCodeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="Int")]
		public System.Nullable<int> C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_BillMessage_Id", Storage="_C_BillMessage_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_BillMessage_Id
		{
			get
			{
				return this._C_BillMessage_Id;
			}
			set
			{
				if ((this._C_BillMessage_Id != value))
				{
					this.OnC_BillMessage_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessage_Id = value;
					this.SendPropertyChanged("C_BillMessage_Id");
					this.OnC_BillMessage_IdChanged();
				}
			}
		}
		
		[Column(Name="c__StartDate", Storage="_C__StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__StartDate
		{
			get
			{
				return this._C__StartDate;
			}
			set
			{
				if ((this._C__StartDate != value))
				{
					this.OnC__StartDateChanging(value);
					this.SendPropertyChanging();
					this._C__StartDate = value;
					this.SendPropertyChanged("C__StartDate");
					this.OnC__StartDateChanged();
				}
			}
		}
		
		[Column(Name="c__EndDate", Storage="_C__EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__EndDate
		{
			get
			{
				return this._C__EndDate;
			}
			set
			{
				if ((this._C__EndDate != value))
				{
					this.OnC__EndDateChanging(value);
					this.SendPropertyChanging();
					this._C__EndDate = value;
					this.SendPropertyChanged("C__EndDate");
					this.OnC__EndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_bil_billmessageacc")]
	public partial class T_be_cor_bil_billmessageacc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_BillMessageAccount_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.DateTime _C_StartDate;
		
		private System.Nullable<System.DateTime> _C_EndDate;
		
		private string _C_MessageCode;
		
		private System.Nullable<int> _C_AccountId;
		
		private System.Nullable<System.Guid> _C_BillMessage_Id;
		
		private EntityRef<T_be_cor_bil_billmessage> _T_be_cor_bil_billmessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BillMessageAccount_IdChanging(System.Guid value);
    partial void OnC_BillMessageAccount_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_StartDateChanging(System.DateTime value);
    partial void OnC_StartDateChanged();
    partial void OnC_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndDateChanged();
    partial void OnC_MessageCodeChanging(string value);
    partial void OnC_MessageCodeChanged();
    partial void OnC_AccountIdChanging(System.Nullable<int> value);
    partial void OnC_AccountIdChanged();
    partial void OnC_BillMessage_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_BillMessage_IdChanged();
    #endregion
		
		public T_be_cor_bil_billmessageacc()
		{
			this._T_be_cor_bil_billmessage = default(EntityRef<T_be_cor_bil_billmessage>);
			OnCreated();
		}
		
		[Column(Name="c_BillMessageAccount_Id", Storage="_C_BillMessageAccount_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_BillMessageAccount_Id
		{
			get
			{
				return this._C_BillMessageAccount_Id;
			}
			set
			{
				if ((this._C_BillMessageAccount_Id != value))
				{
					this.OnC_BillMessageAccount_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessageAccount_Id = value;
					this.SendPropertyChanged("C_BillMessageAccount_Id");
					this.OnC_BillMessageAccount_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_StartDate", Storage="_C_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_StartDate
		{
			get
			{
				return this._C_StartDate;
			}
			set
			{
				if ((this._C_StartDate != value))
				{
					this.OnC_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_StartDate = value;
					this.SendPropertyChanged("C_StartDate");
					this.OnC_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_EndDate", Storage="_C_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndDate
		{
			get
			{
				return this._C_EndDate;
			}
			set
			{
				if ((this._C_EndDate != value))
				{
					this.OnC_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_EndDate = value;
					this.SendPropertyChanged("C_EndDate");
					this.OnC_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_MessageCode", Storage="_C_MessageCode", DbType="NVarChar(40)")]
		public string C_MessageCode
		{
			get
			{
				return this._C_MessageCode;
			}
			set
			{
				if ((this._C_MessageCode != value))
				{
					this.OnC_MessageCodeChanging(value);
					this.SendPropertyChanging();
					this._C_MessageCode = value;
					this.SendPropertyChanged("C_MessageCode");
					this.OnC_MessageCodeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="Int")]
		public System.Nullable<int> C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_BillMessage_Id", Storage="_C_BillMessage_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_BillMessage_Id
		{
			get
			{
				return this._C_BillMessage_Id;
			}
			set
			{
				if ((this._C_BillMessage_Id != value))
				{
					this.OnC_BillMessage_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillMessage_Id = value;
					this.SendPropertyChanged("C_BillMessage_Id");
					this.OnC_BillMessage_IdChanged();
				}
			}
		}
		
		[Association(Name="FKC3D2CEB6CE386231", Storage="_T_be_cor_bil_billmessage", ThisKey="C_BillMessage_Id", OtherKey="C_BillMessage_Id", IsForeignKey=true)]
		public T_be_cor_bil_billmessage T_be_cor_bil_billmessage
		{
			get
			{
				return this._T_be_cor_bil_billmessage.Entity;
			}
			set
			{
				T_be_cor_bil_billmessage previousValue = this._T_be_cor_bil_billmessage.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_bil_billmessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_bil_billmessage.Entity = null;
						previousValue.T_be_cor_bil_billmessageacc.Remove(this);
					}
					this._T_be_cor_bil_billmessage.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_bil_billmessageacc.Add(this);
						this._C_BillMessage_Id = value.C_BillMessage_Id;
					}
					else
					{
						this._C_BillMessage_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_bil_billmessage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_chargeadj735343")]
	public partial class T_be_cor_cor_chargeadj735343 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeAdjustmentSession_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private int _C_SessionId;
		
		private System.Nullable<System.Guid> _C_ChargeAdjustment_Id;
		
		private EntityRef<T_be_cor_cor_chargeadjustme> _T_be_cor_cor_chargeadjustme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeAdjustmentSession_IdChanging(System.Guid value);
    partial void OnC_ChargeAdjustmentSession_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_SessionIdChanging(int value);
    partial void OnC_SessionIdChanged();
    partial void OnC_ChargeAdjustment_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_ChargeAdjustment_IdChanged();
    #endregion
		
		public T_be_cor_cor_chargeadj735343()
		{
			this._T_be_cor_cor_chargeadjustme = default(EntityRef<T_be_cor_cor_chargeadjustme>);
			OnCreated();
		}
		
		[Column(Name="c_ChargeAdjustmentSession_Id", Storage="_C_ChargeAdjustmentSession_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeAdjustmentSession_Id
		{
			get
			{
				return this._C_ChargeAdjustmentSession_Id;
			}
			set
			{
				if ((this._C_ChargeAdjustmentSession_Id != value))
				{
					this.OnC_ChargeAdjustmentSession_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAdjustmentSession_Id = value;
					this.SendPropertyChanged("C_ChargeAdjustmentSession_Id");
					this.OnC_ChargeAdjustmentSession_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_SessionId", Storage="_C_SessionId", DbType="Int NOT NULL")]
		public int C_SessionId
		{
			get
			{
				return this._C_SessionId;
			}
			set
			{
				if ((this._C_SessionId != value))
				{
					this.OnC_SessionIdChanging(value);
					this.SendPropertyChanging();
					this._C_SessionId = value;
					this.SendPropertyChanged("C_SessionId");
					this.OnC_SessionIdChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeAdjustment_Id", Storage="_C_ChargeAdjustment_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_ChargeAdjustment_Id
		{
			get
			{
				return this._C_ChargeAdjustment_Id;
			}
			set
			{
				if ((this._C_ChargeAdjustment_Id != value))
				{
					this.OnC_ChargeAdjustment_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAdjustment_Id = value;
					this.SendPropertyChanged("C_ChargeAdjustment_Id");
					this.OnC_ChargeAdjustment_IdChanged();
				}
			}
		}
		
		[Association(Name="FKF85D1B8A2326DEF8", Storage="_T_be_cor_cor_chargeadjustme", ThisKey="C_ChargeAdjustment_Id", OtherKey="C_ChargeAdjustment_Id", IsForeignKey=true)]
		public T_be_cor_cor_chargeadjustme T_be_cor_cor_chargeadjustme
		{
			get
			{
				return this._T_be_cor_cor_chargeadjustme.Entity;
			}
			set
			{
				T_be_cor_cor_chargeadjustme previousValue = this._T_be_cor_cor_chargeadjustme.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_cor_chargeadjustme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_cor_chargeadjustme.Entity = null;
						previousValue.T_be_cor_cor_chargeadj735343.Remove(this);
					}
					this._T_be_cor_cor_chargeadjustme.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_cor_chargeadj735343.Add(this);
						this._C_ChargeAdjustment_Id = value.C_ChargeAdjustment_Id;
					}
					else
					{
						this._C_ChargeAdjustment_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_cor_chargeadjustme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_chargeadjustme")]
	public partial class T_be_cor_cor_chargeadjustme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ChargeAdjustment_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private int _C_AdjustmentType;
		
		private string _C_Description;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private System.Nullable<int> _C_internalID;
		
		private System.Nullable<System.Guid> _C_Dispute_Id;
		
		private EntityRef<T_be_cor_cor_dispute> _T_be_cor_cor_dispute;
		
		private EntitySet<T_be_cor_cor_chargeadj735343> _T_be_cor_cor_chargeadj735343;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ChargeAdjustment_IdChanging(System.Guid value);
    partial void OnC_ChargeAdjustment_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_AdjustmentTypeChanging(int value);
    partial void OnC_AdjustmentTypeChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_internalIDChanging(System.Nullable<int> value);
    partial void OnC_internalIDChanged();
    partial void OnC_Dispute_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_Dispute_IdChanged();
    #endregion
		
		public T_be_cor_cor_chargeadjustme()
		{
			this._T_be_cor_cor_dispute = default(EntityRef<T_be_cor_cor_dispute>);
			this._T_be_cor_cor_chargeadj735343 = new EntitySet<T_be_cor_cor_chargeadj735343>(new Action<T_be_cor_cor_chargeadj735343>(this.attach_T_be_cor_cor_chargeadj735343), new Action<T_be_cor_cor_chargeadj735343>(this.detach_T_be_cor_cor_chargeadj735343));
			OnCreated();
		}
		
		[Column(Name="c_ChargeAdjustment_Id", Storage="_C_ChargeAdjustment_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ChargeAdjustment_Id
		{
			get
			{
				return this._C_ChargeAdjustment_Id;
			}
			set
			{
				if ((this._C_ChargeAdjustment_Id != value))
				{
					this.OnC_ChargeAdjustment_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAdjustment_Id = value;
					this.SendPropertyChanged("C_ChargeAdjustment_Id");
					this.OnC_ChargeAdjustment_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_AdjustmentType", Storage="_C_AdjustmentType", DbType="Int NOT NULL")]
		public int C_AdjustmentType
		{
			get
			{
				return this._C_AdjustmentType;
			}
			set
			{
				if ((this._C_AdjustmentType != value))
				{
					this.OnC_AdjustmentTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AdjustmentType = value;
					this.SendPropertyChanged("C_AdjustmentType");
					this.OnC_AdjustmentTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_internalID", Storage="_C_internalID", DbType="Int")]
		public System.Nullable<int> C_internalID
		{
			get
			{
				return this._C_internalID;
			}
			set
			{
				if ((this._C_internalID != value))
				{
					this.OnC_internalIDChanging(value);
					this.SendPropertyChanging();
					this._C_internalID = value;
					this.SendPropertyChanged("C_internalID");
					this.OnC_internalIDChanged();
				}
			}
		}
		
		[Column(Name="c_Dispute_Id", Storage="_C_Dispute_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_Dispute_Id
		{
			get
			{
				return this._C_Dispute_Id;
			}
			set
			{
				if ((this._C_Dispute_Id != value))
				{
					this.OnC_Dispute_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dispute_Id = value;
					this.SendPropertyChanged("C_Dispute_Id");
					this.OnC_Dispute_IdChanged();
				}
			}
		}
		
		[Association(Name="FK64309022ED4EB850", Storage="_T_be_cor_cor_dispute", ThisKey="C_Dispute_Id", OtherKey="C_Dispute_Id", IsForeignKey=true)]
		public T_be_cor_cor_dispute T_be_cor_cor_dispute
		{
			get
			{
				return this._T_be_cor_cor_dispute.Entity;
			}
			set
			{
				T_be_cor_cor_dispute previousValue = this._T_be_cor_cor_dispute.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_cor_dispute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_cor_dispute.Entity = null;
						previousValue.T_be_cor_cor_chargeadjustme.Remove(this);
					}
					this._T_be_cor_cor_dispute.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_cor_chargeadjustme.Add(this);
						this._C_Dispute_Id = value.C_Dispute_Id;
					}
					else
					{
						this._C_Dispute_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_cor_dispute");
				}
			}
		}
		
		[Association(Name="FKF85D1B8A2326DEF8", Storage="_T_be_cor_cor_chargeadj735343", ThisKey="C_ChargeAdjustment_Id", OtherKey="C_ChargeAdjustment_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_cor_chargeadj735343> T_be_cor_cor_chargeadj735343
		{
			get
			{
				return this._T_be_cor_cor_chargeadj735343;
			}
			set
			{
				this._T_be_cor_cor_chargeadj735343.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_cor_chargeadj735343(T_be_cor_cor_chargeadj735343 entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_chargeadjustme = this;
		}
		
		private void detach_T_be_cor_cor_chargeadj735343(T_be_cor_cor_chargeadj735343 entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_chargeadjustme = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_dispute")]
	public partial class T_be_cor_cor_dispute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Dispute_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<int> _C_invoiceId;
		
		private string _C_invoiceNum;
		
		private int _C_status;
		
		private string _C_title;
		
		private string _C_description;
		
		private string _C_NewProperty;
		
		private EntitySet<T_be_cor_cor_invoiceadjustm> _T_be_cor_cor_invoiceadjustm;
		
		private EntitySet<T_be_cor_cor_chargeadjustme> _T_be_cor_cor_chargeadjustme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Dispute_IdChanging(System.Guid value);
    partial void OnC_Dispute_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_invoiceIdChanging(System.Nullable<int> value);
    partial void OnC_invoiceIdChanged();
    partial void OnC_invoiceNumChanging(string value);
    partial void OnC_invoiceNumChanged();
    partial void OnC_statusChanging(int value);
    partial void OnC_statusChanged();
    partial void OnC_titleChanging(string value);
    partial void OnC_titleChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_NewPropertyChanging(string value);
    partial void OnC_NewPropertyChanged();
    #endregion
		
		public T_be_cor_cor_dispute()
		{
			this._T_be_cor_cor_invoiceadjustm = new EntitySet<T_be_cor_cor_invoiceadjustm>(new Action<T_be_cor_cor_invoiceadjustm>(this.attach_T_be_cor_cor_invoiceadjustm), new Action<T_be_cor_cor_invoiceadjustm>(this.detach_T_be_cor_cor_invoiceadjustm));
			this._T_be_cor_cor_chargeadjustme = new EntitySet<T_be_cor_cor_chargeadjustme>(new Action<T_be_cor_cor_chargeadjustme>(this.attach_T_be_cor_cor_chargeadjustme), new Action<T_be_cor_cor_chargeadjustme>(this.detach_T_be_cor_cor_chargeadjustme));
			OnCreated();
		}
		
		[Column(Name="c_Dispute_Id", Storage="_C_Dispute_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Dispute_Id
		{
			get
			{
				return this._C_Dispute_Id;
			}
			set
			{
				if ((this._C_Dispute_Id != value))
				{
					this.OnC_Dispute_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dispute_Id = value;
					this.SendPropertyChanged("C_Dispute_Id");
					this.OnC_Dispute_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_invoiceId", Storage="_C_invoiceId", DbType="Int")]
		public System.Nullable<int> C_invoiceId
		{
			get
			{
				return this._C_invoiceId;
			}
			set
			{
				if ((this._C_invoiceId != value))
				{
					this.OnC_invoiceIdChanging(value);
					this.SendPropertyChanging();
					this._C_invoiceId = value;
					this.SendPropertyChanged("C_invoiceId");
					this.OnC_invoiceIdChanged();
				}
			}
		}
		
		[Column(Name="c_invoiceNum", Storage="_C_invoiceNum", DbType="NVarChar(255)")]
		public string C_invoiceNum
		{
			get
			{
				return this._C_invoiceNum;
			}
			set
			{
				if ((this._C_invoiceNum != value))
				{
					this.OnC_invoiceNumChanging(value);
					this.SendPropertyChanging();
					this._C_invoiceNum = value;
					this.SendPropertyChanged("C_invoiceNum");
					this.OnC_invoiceNumChanged();
				}
			}
		}
		
		[Column(Name="c_status", Storage="_C_status", DbType="Int NOT NULL")]
		public int C_status
		{
			get
			{
				return this._C_status;
			}
			set
			{
				if ((this._C_status != value))
				{
					this.OnC_statusChanging(value);
					this.SendPropertyChanging();
					this._C_status = value;
					this.SendPropertyChanged("C_status");
					this.OnC_statusChanged();
				}
			}
		}
		
		[Column(Name="c_title", Storage="_C_title", DbType="NVarChar(255)")]
		public string C_title
		{
			get
			{
				return this._C_title;
			}
			set
			{
				if ((this._C_title != value))
				{
					this.OnC_titleChanging(value);
					this.SendPropertyChanging();
					this._C_title = value;
					this.SendPropertyChanged("C_title");
					this.OnC_titleChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255)")]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_NewProperty", Storage="_C_NewProperty", DbType="NVarChar(255)")]
		public string C_NewProperty
		{
			get
			{
				return this._C_NewProperty;
			}
			set
			{
				if ((this._C_NewProperty != value))
				{
					this.OnC_NewPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_NewProperty = value;
					this.SendPropertyChanged("C_NewProperty");
					this.OnC_NewPropertyChanged();
				}
			}
		}
		
		[Association(Name="FK223B6613ED4EB850", Storage="_T_be_cor_cor_invoiceadjustm", ThisKey="C_Dispute_Id", OtherKey="C_Dispute_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_cor_invoiceadjustm> T_be_cor_cor_invoiceadjustm
		{
			get
			{
				return this._T_be_cor_cor_invoiceadjustm;
			}
			set
			{
				this._T_be_cor_cor_invoiceadjustm.Assign(value);
			}
		}
		
		[Association(Name="FK64309022ED4EB850", Storage="_T_be_cor_cor_chargeadjustme", ThisKey="C_Dispute_Id", OtherKey="C_Dispute_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_cor_chargeadjustme> T_be_cor_cor_chargeadjustme
		{
			get
			{
				return this._T_be_cor_cor_chargeadjustme;
			}
			set
			{
				this._T_be_cor_cor_chargeadjustme.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_cor_invoiceadjustm(T_be_cor_cor_invoiceadjustm entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_dispute = this;
		}
		
		private void detach_T_be_cor_cor_invoiceadjustm(T_be_cor_cor_invoiceadjustm entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_dispute = null;
		}
		
		private void attach_T_be_cor_cor_chargeadjustme(T_be_cor_cor_chargeadjustme entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_dispute = this;
		}
		
		private void detach_T_be_cor_cor_chargeadjustme(T_be_cor_cor_chargeadjustme entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_cor_dispute = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_dispute_h")]
	public partial class T_be_cor_cor_dispute_h : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_DisputeHistory_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Dispute_Id;
		
		private System.Nullable<int> _C_invoiceId;
		
		private string _C_invoiceNum;
		
		private int _C_status;
		
		private string _C_title;
		
		private string _C_description;
		
		private string _C_NewProperty;
		
		private System.DateTime _C__StartDate;
		
		private System.DateTime _C__EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_DisputeHistory_IdChanging(System.Guid value);
    partial void OnC_DisputeHistory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Dispute_IdChanging(System.Guid value);
    partial void OnC_Dispute_IdChanged();
    partial void OnC_invoiceIdChanging(System.Nullable<int> value);
    partial void OnC_invoiceIdChanged();
    partial void OnC_invoiceNumChanging(string value);
    partial void OnC_invoiceNumChanged();
    partial void OnC_statusChanging(int value);
    partial void OnC_statusChanged();
    partial void OnC_titleChanging(string value);
    partial void OnC_titleChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_NewPropertyChanging(string value);
    partial void OnC_NewPropertyChanged();
    partial void OnC__StartDateChanging(System.DateTime value);
    partial void OnC__StartDateChanged();
    partial void OnC__EndDateChanging(System.DateTime value);
    partial void OnC__EndDateChanged();
    #endregion
		
		public T_be_cor_cor_dispute_h()
		{
			OnCreated();
		}
		
		[Column(Name="c_DisputeHistory_Id", Storage="_C_DisputeHistory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_DisputeHistory_Id
		{
			get
			{
				return this._C_DisputeHistory_Id;
			}
			set
			{
				if ((this._C_DisputeHistory_Id != value))
				{
					this.OnC_DisputeHistory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_DisputeHistory_Id = value;
					this.SendPropertyChanged("C_DisputeHistory_Id");
					this.OnC_DisputeHistory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Dispute_Id", Storage="_C_Dispute_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Dispute_Id
		{
			get
			{
				return this._C_Dispute_Id;
			}
			set
			{
				if ((this._C_Dispute_Id != value))
				{
					this.OnC_Dispute_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dispute_Id = value;
					this.SendPropertyChanged("C_Dispute_Id");
					this.OnC_Dispute_IdChanged();
				}
			}
		}
		
		[Column(Name="c_invoiceId", Storage="_C_invoiceId", DbType="Int")]
		public System.Nullable<int> C_invoiceId
		{
			get
			{
				return this._C_invoiceId;
			}
			set
			{
				if ((this._C_invoiceId != value))
				{
					this.OnC_invoiceIdChanging(value);
					this.SendPropertyChanging();
					this._C_invoiceId = value;
					this.SendPropertyChanged("C_invoiceId");
					this.OnC_invoiceIdChanged();
				}
			}
		}
		
		[Column(Name="c_invoiceNum", Storage="_C_invoiceNum", DbType="NVarChar(255)")]
		public string C_invoiceNum
		{
			get
			{
				return this._C_invoiceNum;
			}
			set
			{
				if ((this._C_invoiceNum != value))
				{
					this.OnC_invoiceNumChanging(value);
					this.SendPropertyChanging();
					this._C_invoiceNum = value;
					this.SendPropertyChanged("C_invoiceNum");
					this.OnC_invoiceNumChanged();
				}
			}
		}
		
		[Column(Name="c_status", Storage="_C_status", DbType="Int NOT NULL")]
		public int C_status
		{
			get
			{
				return this._C_status;
			}
			set
			{
				if ((this._C_status != value))
				{
					this.OnC_statusChanging(value);
					this.SendPropertyChanging();
					this._C_status = value;
					this.SendPropertyChanged("C_status");
					this.OnC_statusChanged();
				}
			}
		}
		
		[Column(Name="c_title", Storage="_C_title", DbType="NVarChar(255)")]
		public string C_title
		{
			get
			{
				return this._C_title;
			}
			set
			{
				if ((this._C_title != value))
				{
					this.OnC_titleChanging(value);
					this.SendPropertyChanging();
					this._C_title = value;
					this.SendPropertyChanged("C_title");
					this.OnC_titleChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255)")]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_NewProperty", Storage="_C_NewProperty", DbType="NVarChar(255)")]
		public string C_NewProperty
		{
			get
			{
				return this._C_NewProperty;
			}
			set
			{
				if ((this._C_NewProperty != value))
				{
					this.OnC_NewPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_NewProperty = value;
					this.SendPropertyChanged("C_NewProperty");
					this.OnC_NewPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__StartDate", Storage="_C__StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__StartDate
		{
			get
			{
				return this._C__StartDate;
			}
			set
			{
				if ((this._C__StartDate != value))
				{
					this.OnC__StartDateChanging(value);
					this.SendPropertyChanging();
					this._C__StartDate = value;
					this.SendPropertyChanged("C__StartDate");
					this.OnC__StartDateChanged();
				}
			}
		}
		
		[Column(Name="c__EndDate", Storage="_C__EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__EndDate
		{
			get
			{
				return this._C__EndDate;
			}
			set
			{
				if ((this._C__EndDate != value))
				{
					this.OnC__EndDateChanging(value);
					this.SendPropertyChanging();
					this._C__EndDate = value;
					this.SendPropertyChanged("C__EndDate");
					this.OnC__EndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_division")]
	public partial class T_be_cor_cor_division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Division_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private int _C_Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Division_IdChanging(System.Guid value);
    partial void OnC_Division_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_CurrencyChanging(int value);
    partial void OnC_CurrencyChanged();
    #endregion
		
		public T_be_cor_cor_division()
		{
			OnCreated();
		}
		
		[Column(Name="c_Division_Id", Storage="_C_Division_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Division_Id
		{
			get
			{
				return this._C_Division_Id;
			}
			set
			{
				if ((this._C_Division_Id != value))
				{
					this.OnC_Division_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Division_Id = value;
					this.SendPropertyChanged("C_Division_Id");
					this.OnC_Division_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="Int NOT NULL")]
		public int C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_cor_invoiceadjustm")]
	public partial class T_be_cor_cor_invoiceadjustm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_InvoiceAdjustment_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Currency;
		
		private System.Nullable<decimal> _C_Amount;
		
		private string _C_Description;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private System.Nullable<int> _C_internalID;
		
		private System.Nullable<System.Guid> _C_Dispute_Id;
		
		private int _Id_prop;
		
		private EntityRef<T_be_cor_cor_dispute> _T_be_cor_cor_dispute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_InvoiceAdjustment_IdChanging(System.Guid value);
    partial void OnC_InvoiceAdjustment_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_CurrencyChanging(string value);
    partial void OnC_CurrencyChanged();
    partial void OnC_AmountChanging(System.Nullable<decimal> value);
    partial void OnC_AmountChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_internalIDChanging(System.Nullable<int> value);
    partial void OnC_internalIDChanged();
    partial void OnC_Dispute_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_Dispute_IdChanged();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    #endregion
		
		public T_be_cor_cor_invoiceadjustm()
		{
			this._T_be_cor_cor_dispute = default(EntityRef<T_be_cor_cor_dispute>);
			OnCreated();
		}
		
		[Column(Name="c_InvoiceAdjustment_Id", Storage="_C_InvoiceAdjustment_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_InvoiceAdjustment_Id
		{
			get
			{
				return this._C_InvoiceAdjustment_Id;
			}
			set
			{
				if ((this._C_InvoiceAdjustment_Id != value))
				{
					this.OnC_InvoiceAdjustment_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceAdjustment_Id = value;
					this.SendPropertyChanged("C_InvoiceAdjustment_Id");
					this.OnC_InvoiceAdjustment_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_Amount", Storage="_C_Amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Amount
		{
			get
			{
				return this._C_Amount;
			}
			set
			{
				if ((this._C_Amount != value))
				{
					this.OnC_AmountChanging(value);
					this.SendPropertyChanging();
					this._C_Amount = value;
					this.SendPropertyChanged("C_Amount");
					this.OnC_AmountChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_internalID", Storage="_C_internalID", DbType="Int")]
		public System.Nullable<int> C_internalID
		{
			get
			{
				return this._C_internalID;
			}
			set
			{
				if ((this._C_internalID != value))
				{
					this.OnC_internalIDChanging(value);
					this.SendPropertyChanging();
					this._C_internalID = value;
					this.SendPropertyChanged("C_internalID");
					this.OnC_internalIDChanged();
				}
			}
		}
		
		[Column(Name="c_Dispute_Id", Storage="_C_Dispute_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_Dispute_Id
		{
			get
			{
				return this._C_Dispute_Id;
			}
			set
			{
				if ((this._C_Dispute_Id != value))
				{
					this.OnC_Dispute_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dispute_Id = value;
					this.SendPropertyChanged("C_Dispute_Id");
					this.OnC_Dispute_IdChanged();
				}
			}
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL")]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Association(Name="FK223B6613ED4EB850", Storage="_T_be_cor_cor_dispute", ThisKey="C_Dispute_Id", OtherKey="C_Dispute_Id", IsForeignKey=true)]
		public T_be_cor_cor_dispute T_be_cor_cor_dispute
		{
			get
			{
				return this._T_be_cor_cor_dispute.Entity;
			}
			set
			{
				T_be_cor_cor_dispute previousValue = this._T_be_cor_cor_dispute.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_cor_dispute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_cor_dispute.Entity = null;
						previousValue.T_be_cor_cor_invoiceadjustm.Remove(this);
					}
					this._T_be_cor_cor_dispute.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_cor_invoiceadjustm.Add(this);
						this._C_Dispute_Id = value.C_Dispute_Id;
					}
					else
					{
						this._C_Dispute_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_cor_dispute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_argumentbe")]
	public partial class T_be_cor_fil_argumentbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ArgumentBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Regex;
		
		private int _C__ConditionalFlag;
		
		private string _C__Format;
		
		private int _C__Order;
		
		private EntitySet<T_be_cor_fil_r_target_argume> _T_be_cor_fil_r_target_argume;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ArgumentBE_IdChanging(System.Guid value);
    partial void OnC_ArgumentBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__RegexChanging(string value);
    partial void OnC__RegexChanged();
    partial void OnC__ConditionalFlagChanging(int value);
    partial void OnC__ConditionalFlagChanged();
    partial void OnC__FormatChanging(string value);
    partial void OnC__FormatChanged();
    partial void OnC__OrderChanging(int value);
    partial void OnC__OrderChanged();
    #endregion
		
		public T_be_cor_fil_argumentbe()
		{
			this._T_be_cor_fil_r_target_argume = new EntitySet<T_be_cor_fil_r_target_argume>(new Action<T_be_cor_fil_r_target_argume>(this.attach_T_be_cor_fil_r_target_argume), new Action<T_be_cor_fil_r_target_argume>(this.detach_T_be_cor_fil_r_target_argume));
			OnCreated();
		}
		
		[Column(Name="c_ArgumentBE_Id", Storage="_C_ArgumentBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ArgumentBE_Id
		{
			get
			{
				return this._C_ArgumentBE_Id;
			}
			set
			{
				if ((this._C_ArgumentBE_Id != value))
				{
					this.OnC_ArgumentBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ArgumentBE_Id = value;
					this.SendPropertyChanged("C_ArgumentBE_Id");
					this.OnC_ArgumentBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Regex", Storage="_C__Regex", DbType="NVarChar(255)")]
		public string C__Regex
		{
			get
			{
				return this._C__Regex;
			}
			set
			{
				if ((this._C__Regex != value))
				{
					this.OnC__RegexChanging(value);
					this.SendPropertyChanging();
					this._C__Regex = value;
					this.SendPropertyChanged("C__Regex");
					this.OnC__RegexChanged();
				}
			}
		}
		
		[Column(Name="c__ConditionalFlag", Storage="_C__ConditionalFlag", DbType="Int NOT NULL")]
		public int C__ConditionalFlag
		{
			get
			{
				return this._C__ConditionalFlag;
			}
			set
			{
				if ((this._C__ConditionalFlag != value))
				{
					this.OnC__ConditionalFlagChanging(value);
					this.SendPropertyChanging();
					this._C__ConditionalFlag = value;
					this.SendPropertyChanged("C__ConditionalFlag");
					this.OnC__ConditionalFlagChanged();
				}
			}
		}
		
		[Column(Name="c__Format", Storage="_C__Format", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Format
		{
			get
			{
				return this._C__Format;
			}
			set
			{
				if ((this._C__Format != value))
				{
					this.OnC__FormatChanging(value);
					this.SendPropertyChanging();
					this._C__Format = value;
					this.SendPropertyChanged("C__Format");
					this.OnC__FormatChanged();
				}
			}
		}
		
		[Column(Name="c__Order", Storage="_C__Order", DbType="Int NOT NULL")]
		public int C__Order
		{
			get
			{
				return this._C__Order;
			}
			set
			{
				if ((this._C__Order != value))
				{
					this.OnC__OrderChanging(value);
					this.SendPropertyChanging();
					this._C__Order = value;
					this.SendPropertyChanged("C__Order");
					this.OnC__OrderChanged();
				}
			}
		}
		
		[Association(Name="FK715CFF2F6CCCAD37", Storage="_T_be_cor_fil_r_target_argume", ThisKey="C_ArgumentBE_Id", OtherKey="C_ArgumentBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_argume> T_be_cor_fil_r_target_argume
		{
			get
			{
				return this._T_be_cor_fil_r_target_argume;
			}
			set
			{
				this._T_be_cor_fil_r_target_argume.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_argumentbe = this;
		}
		
		private void detach_T_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_argumentbe = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_assemblyrefere")]
	public partial class T_be_cor_fil_assemblyrefere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AssemblyReferenceBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Name;
		
		private EntitySet<T_be_cor_fil_r_progra_assemb> _T_be_cor_fil_r_progra_assemb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AssemblyReferenceBE_IdChanging(System.Guid value);
    partial void OnC_AssemblyReferenceBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__NameChanging(string value);
    partial void OnC__NameChanged();
    #endregion
		
		public T_be_cor_fil_assemblyrefere()
		{
			this._T_be_cor_fil_r_progra_assemb = new EntitySet<T_be_cor_fil_r_progra_assemb>(new Action<T_be_cor_fil_r_progra_assemb>(this.attach_T_be_cor_fil_r_progra_assemb), new Action<T_be_cor_fil_r_progra_assemb>(this.detach_T_be_cor_fil_r_progra_assemb));
			OnCreated();
		}
		
		[Column(Name="c_AssemblyReferenceBE_Id", Storage="_C_AssemblyReferenceBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AssemblyReferenceBE_Id
		{
			get
			{
				return this._C_AssemblyReferenceBE_Id;
			}
			set
			{
				if ((this._C_AssemblyReferenceBE_Id != value))
				{
					this.OnC_AssemblyReferenceBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AssemblyReferenceBE_Id = value;
					this.SendPropertyChanged("C_AssemblyReferenceBE_Id");
					this.OnC_AssemblyReferenceBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Name", Storage="_C__Name", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Name
		{
			get
			{
				return this._C__Name;
			}
			set
			{
				if ((this._C__Name != value))
				{
					this.OnC__NameChanging(value);
					this.SendPropertyChanging();
					this._C__Name = value;
					this.SendPropertyChanged("C__Name");
					this.OnC__NameChanged();
				}
			}
		}
		
		[Association(Name="FKA563E2DAA260F339", Storage="_T_be_cor_fil_r_progra_assemb", ThisKey="C_AssemblyReferenceBE_Id", OtherKey="C_AssemblyReferenceBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_progra_assemb> T_be_cor_fil_r_progra_assemb
		{
			get
			{
				return this._T_be_cor_fil_r_progra_assemb;
			}
			set
			{
				this._T_be_cor_fil_r_progra_assemb.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_assemblyrefere = this;
		}
		
		private void detach_T_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_assemblyrefere = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_configurationbe")]
	public partial class T_be_cor_fil_configurationbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ConfigurationBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__UseToken;
		
		private string _C__UseSHA1;
		
		private string _C__UseMD5;
		
		private int _C__MaximumActiveTargets;
		
		private string _C__CompletedDirectory;
		
		private string _C__ActiveDirectory;
		
		private int _C__ConfRefreshIntervalInMS;
		
		private string _C__UseDescriptorFile;
		
		private string _C__FailedDirectory;
		
		private string _C__IncomingDirectory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ConfigurationBE_IdChanging(System.Guid value);
    partial void OnC_ConfigurationBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__UseTokenChanging(string value);
    partial void OnC__UseTokenChanged();
    partial void OnC__UseSHA1Changing(string value);
    partial void OnC__UseSHA1Changed();
    partial void OnC__UseMD5Changing(string value);
    partial void OnC__UseMD5Changed();
    partial void OnC__MaximumActiveTargetsChanging(int value);
    partial void OnC__MaximumActiveTargetsChanged();
    partial void OnC__CompletedDirectoryChanging(string value);
    partial void OnC__CompletedDirectoryChanged();
    partial void OnC__ActiveDirectoryChanging(string value);
    partial void OnC__ActiveDirectoryChanged();
    partial void OnC__ConfRefreshIntervalInMSChanging(int value);
    partial void OnC__ConfRefreshIntervalInMSChanged();
    partial void OnC__UseDescriptorFileChanging(string value);
    partial void OnC__UseDescriptorFileChanged();
    partial void OnC__FailedDirectoryChanging(string value);
    partial void OnC__FailedDirectoryChanged();
    partial void OnC__IncomingDirectoryChanging(string value);
    partial void OnC__IncomingDirectoryChanged();
    #endregion
		
		public T_be_cor_fil_configurationbe()
		{
			OnCreated();
		}
		
		[Column(Name="c_ConfigurationBE_Id", Storage="_C_ConfigurationBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ConfigurationBE_Id
		{
			get
			{
				return this._C_ConfigurationBE_Id;
			}
			set
			{
				if ((this._C_ConfigurationBE_Id != value))
				{
					this.OnC_ConfigurationBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ConfigurationBE_Id = value;
					this.SendPropertyChanged("C_ConfigurationBE_Id");
					this.OnC_ConfigurationBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__UseToken", Storage="_C__UseToken", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C__UseToken
		{
			get
			{
				return this._C__UseToken;
			}
			set
			{
				if ((this._C__UseToken != value))
				{
					this.OnC__UseTokenChanging(value);
					this.SendPropertyChanging();
					this._C__UseToken = value;
					this.SendPropertyChanged("C__UseToken");
					this.OnC__UseTokenChanged();
				}
			}
		}
		
		[Column(Name="c__UseSHA1", Storage="_C__UseSHA1", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C__UseSHA1
		{
			get
			{
				return this._C__UseSHA1;
			}
			set
			{
				if ((this._C__UseSHA1 != value))
				{
					this.OnC__UseSHA1Changing(value);
					this.SendPropertyChanging();
					this._C__UseSHA1 = value;
					this.SendPropertyChanged("C__UseSHA1");
					this.OnC__UseSHA1Changed();
				}
			}
		}
		
		[Column(Name="c__UseMD5", Storage="_C__UseMD5", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C__UseMD5
		{
			get
			{
				return this._C__UseMD5;
			}
			set
			{
				if ((this._C__UseMD5 != value))
				{
					this.OnC__UseMD5Changing(value);
					this.SendPropertyChanging();
					this._C__UseMD5 = value;
					this.SendPropertyChanged("C__UseMD5");
					this.OnC__UseMD5Changed();
				}
			}
		}
		
		[Column(Name="c__MaximumActiveTargets", Storage="_C__MaximumActiveTargets", DbType="Int NOT NULL")]
		public int C__MaximumActiveTargets
		{
			get
			{
				return this._C__MaximumActiveTargets;
			}
			set
			{
				if ((this._C__MaximumActiveTargets != value))
				{
					this.OnC__MaximumActiveTargetsChanging(value);
					this.SendPropertyChanging();
					this._C__MaximumActiveTargets = value;
					this.SendPropertyChanged("C__MaximumActiveTargets");
					this.OnC__MaximumActiveTargetsChanged();
				}
			}
		}
		
		[Column(Name="c__CompletedDirectory", Storage="_C__CompletedDirectory", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__CompletedDirectory
		{
			get
			{
				return this._C__CompletedDirectory;
			}
			set
			{
				if ((this._C__CompletedDirectory != value))
				{
					this.OnC__CompletedDirectoryChanging(value);
					this.SendPropertyChanging();
					this._C__CompletedDirectory = value;
					this.SendPropertyChanged("C__CompletedDirectory");
					this.OnC__CompletedDirectoryChanged();
				}
			}
		}
		
		[Column(Name="c__ActiveDirectory", Storage="_C__ActiveDirectory", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__ActiveDirectory
		{
			get
			{
				return this._C__ActiveDirectory;
			}
			set
			{
				if ((this._C__ActiveDirectory != value))
				{
					this.OnC__ActiveDirectoryChanging(value);
					this.SendPropertyChanging();
					this._C__ActiveDirectory = value;
					this.SendPropertyChanged("C__ActiveDirectory");
					this.OnC__ActiveDirectoryChanged();
				}
			}
		}
		
		[Column(Name="c__ConfRefreshIntervalInMS", Storage="_C__ConfRefreshIntervalInMS", DbType="Int NOT NULL")]
		public int C__ConfRefreshIntervalInMS
		{
			get
			{
				return this._C__ConfRefreshIntervalInMS;
			}
			set
			{
				if ((this._C__ConfRefreshIntervalInMS != value))
				{
					this.OnC__ConfRefreshIntervalInMSChanging(value);
					this.SendPropertyChanging();
					this._C__ConfRefreshIntervalInMS = value;
					this.SendPropertyChanged("C__ConfRefreshIntervalInMS");
					this.OnC__ConfRefreshIntervalInMSChanged();
				}
			}
		}
		
		[Column(Name="c__UseDescriptorFile", Storage="_C__UseDescriptorFile", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C__UseDescriptorFile
		{
			get
			{
				return this._C__UseDescriptorFile;
			}
			set
			{
				if ((this._C__UseDescriptorFile != value))
				{
					this.OnC__UseDescriptorFileChanging(value);
					this.SendPropertyChanging();
					this._C__UseDescriptorFile = value;
					this.SendPropertyChanged("C__UseDescriptorFile");
					this.OnC__UseDescriptorFileChanged();
				}
			}
		}
		
		[Column(Name="c__FailedDirectory", Storage="_C__FailedDirectory", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__FailedDirectory
		{
			get
			{
				return this._C__FailedDirectory;
			}
			set
			{
				if ((this._C__FailedDirectory != value))
				{
					this.OnC__FailedDirectoryChanging(value);
					this.SendPropertyChanging();
					this._C__FailedDirectory = value;
					this.SendPropertyChanged("C__FailedDirectory");
					this.OnC__FailedDirectoryChanged();
				}
			}
		}
		
		[Column(Name="c__IncomingDirectory", Storage="_C__IncomingDirectory", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__IncomingDirectory
		{
			get
			{
				return this._C__IncomingDirectory;
			}
			set
			{
				if ((this._C__IncomingDirectory != value))
				{
					this.OnC__IncomingDirectoryChanging(value);
					this.SendPropertyChanging();
					this._C__IncomingDirectory = value;
					this.SendPropertyChanged("C__IncomingDirectory");
					this.OnC__IncomingDirectoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_filebe")]
	public partial class T_be_cor_fil_filebe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_FileBE_Id;
		
		private int _C__version;
		
		private string _C__FullName;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Path;
		
		private string _C__Name;
		
		private System.Nullable<int> _C__State;
		
		private System.Nullable<System.DateTime> _C__CreationDate;
		
		private System.Nullable<int> _C__RejectReason;
		
		private System.Nullable<int> _C__Retry;
		
		private string _C__ErrorMessage;
		
		private EntitySet<T_be_cor_fil_r_invoca_filebe> _T_be_cor_fil_r_invoca_filebe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_FileBE_IdChanging(System.Guid value);
    partial void OnC_FileBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC__FullNameChanging(string value);
    partial void OnC__FullNameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__PathChanging(string value);
    partial void OnC__PathChanged();
    partial void OnC__NameChanging(string value);
    partial void OnC__NameChanged();
    partial void OnC__StateChanging(System.Nullable<int> value);
    partial void OnC__StateChanged();
    partial void OnC__CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC__CreationDateChanged();
    partial void OnC__RejectReasonChanging(System.Nullable<int> value);
    partial void OnC__RejectReasonChanged();
    partial void OnC__RetryChanging(System.Nullable<int> value);
    partial void OnC__RetryChanged();
    partial void OnC__ErrorMessageChanging(string value);
    partial void OnC__ErrorMessageChanged();
    #endregion
		
		public T_be_cor_fil_filebe()
		{
			this._T_be_cor_fil_r_invoca_filebe = new EntitySet<T_be_cor_fil_r_invoca_filebe>(new Action<T_be_cor_fil_r_invoca_filebe>(this.attach_T_be_cor_fil_r_invoca_filebe), new Action<T_be_cor_fil_r_invoca_filebe>(this.detach_T_be_cor_fil_r_invoca_filebe));
			OnCreated();
		}
		
		[Column(Name="c_FileBE_Id", Storage="_C_FileBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_FileBE_Id
		{
			get
			{
				return this._C_FileBE_Id;
			}
			set
			{
				if ((this._C_FileBE_Id != value))
				{
					this.OnC_FileBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_FileBE_Id = value;
					this.SendPropertyChanged("C_FileBE_Id");
					this.OnC_FileBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c__FullName", Storage="_C__FullName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__FullName
		{
			get
			{
				return this._C__FullName;
			}
			set
			{
				if ((this._C__FullName != value))
				{
					this.OnC__FullNameChanging(value);
					this.SendPropertyChanging();
					this._C__FullName = value;
					this.SendPropertyChanged("C__FullName");
					this.OnC__FullNameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Path", Storage="_C__Path", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Path
		{
			get
			{
				return this._C__Path;
			}
			set
			{
				if ((this._C__Path != value))
				{
					this.OnC__PathChanging(value);
					this.SendPropertyChanging();
					this._C__Path = value;
					this.SendPropertyChanged("C__Path");
					this.OnC__PathChanged();
				}
			}
		}
		
		[Column(Name="c__Name", Storage="_C__Name", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Name
		{
			get
			{
				return this._C__Name;
			}
			set
			{
				if ((this._C__Name != value))
				{
					this.OnC__NameChanging(value);
					this.SendPropertyChanging();
					this._C__Name = value;
					this.SendPropertyChanged("C__Name");
					this.OnC__NameChanged();
				}
			}
		}
		
		[Column(Name="c__State", Storage="_C__State", DbType="Int")]
		public System.Nullable<int> C__State
		{
			get
			{
				return this._C__State;
			}
			set
			{
				if ((this._C__State != value))
				{
					this.OnC__StateChanging(value);
					this.SendPropertyChanging();
					this._C__State = value;
					this.SendPropertyChanged("C__State");
					this.OnC__StateChanged();
				}
			}
		}
		
		[Column(Name="c__CreationDate", Storage="_C__CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C__CreationDate
		{
			get
			{
				return this._C__CreationDate;
			}
			set
			{
				if ((this._C__CreationDate != value))
				{
					this.OnC__CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C__CreationDate = value;
					this.SendPropertyChanged("C__CreationDate");
					this.OnC__CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c__RejectReason", Storage="_C__RejectReason", DbType="Int")]
		public System.Nullable<int> C__RejectReason
		{
			get
			{
				return this._C__RejectReason;
			}
			set
			{
				if ((this._C__RejectReason != value))
				{
					this.OnC__RejectReasonChanging(value);
					this.SendPropertyChanging();
					this._C__RejectReason = value;
					this.SendPropertyChanged("C__RejectReason");
					this.OnC__RejectReasonChanged();
				}
			}
		}
		
		[Column(Name="c__Retry", Storage="_C__Retry", DbType="Int")]
		public System.Nullable<int> C__Retry
		{
			get
			{
				return this._C__Retry;
			}
			set
			{
				if ((this._C__Retry != value))
				{
					this.OnC__RetryChanging(value);
					this.SendPropertyChanging();
					this._C__Retry = value;
					this.SendPropertyChanged("C__Retry");
					this.OnC__RetryChanged();
				}
			}
		}
		
		[Column(Name="c__ErrorMessage", Storage="_C__ErrorMessage", DbType="NVarChar(2000)")]
		public string C__ErrorMessage
		{
			get
			{
				return this._C__ErrorMessage;
			}
			set
			{
				if ((this._C__ErrorMessage != value))
				{
					this.OnC__ErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._C__ErrorMessage = value;
					this.SendPropertyChanged("C__ErrorMessage");
					this.OnC__ErrorMessageChanged();
				}
			}
		}
		
		[Association(Name="FKC2912D0FC1661E1", Storage="_T_be_cor_fil_r_invoca_filebe", ThisKey="C_FileBE_Id", OtherKey="C_FileBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_invoca_filebe> T_be_cor_fil_r_invoca_filebe
		{
			get
			{
				return this._T_be_cor_fil_r_invoca_filebe;
			}
			set
			{
				this._T_be_cor_fil_r_invoca_filebe.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_filebe = this;
		}
		
		private void detach_T_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_filebe = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_invocationrec_h")]
	public partial class T_be_cor_fil_invocationrec_h : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_InvocationRecordBEHistory_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_InvocationRecordBE_Id;
		
		private string _C__Command;
		
		private long _C__ErrorCode;
		
		private int _C__State;
		
		private string _C__ControlNumber;
		
		private System.DateTime _C__DateTime;
		
		private string _C__BatchId;
		
		private string _C__TrackingId;
		
		private System.DateTime _C__StartDate;
		
		private System.DateTime _C__EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_InvocationRecordBEHistory_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBEHistory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_InvocationRecordBE_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBE_IdChanged();
    partial void OnC__CommandChanging(string value);
    partial void OnC__CommandChanged();
    partial void OnC__ErrorCodeChanging(long value);
    partial void OnC__ErrorCodeChanged();
    partial void OnC__StateChanging(int value);
    partial void OnC__StateChanged();
    partial void OnC__ControlNumberChanging(string value);
    partial void OnC__ControlNumberChanged();
    partial void OnC__DateTimeChanging(System.DateTime value);
    partial void OnC__DateTimeChanged();
    partial void OnC__BatchIdChanging(string value);
    partial void OnC__BatchIdChanged();
    partial void OnC__TrackingIdChanging(string value);
    partial void OnC__TrackingIdChanged();
    partial void OnC__StartDateChanging(System.DateTime value);
    partial void OnC__StartDateChanged();
    partial void OnC__EndDateChanging(System.DateTime value);
    partial void OnC__EndDateChanged();
    #endregion
		
		public T_be_cor_fil_invocationrec_h()
		{
			OnCreated();
		}
		
		[Column(Name="c_InvocationRecordBEHistory_Id", Storage="_C_InvocationRecordBEHistory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_InvocationRecordBEHistory_Id
		{
			get
			{
				return this._C_InvocationRecordBEHistory_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBEHistory_Id != value))
				{
					this.OnC_InvocationRecordBEHistory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBEHistory_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBEHistory_Id");
					this.OnC_InvocationRecordBEHistory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_InvocationRecordBE_Id", Storage="_C_InvocationRecordBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_InvocationRecordBE_Id
		{
			get
			{
				return this._C_InvocationRecordBE_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBE_Id != value))
				{
					this.OnC_InvocationRecordBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBE_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBE_Id");
					this.OnC_InvocationRecordBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__Command", Storage="_C__Command", DbType="NVarChar(2000)")]
		public string C__Command
		{
			get
			{
				return this._C__Command;
			}
			set
			{
				if ((this._C__Command != value))
				{
					this.OnC__CommandChanging(value);
					this.SendPropertyChanging();
					this._C__Command = value;
					this.SendPropertyChanged("C__Command");
					this.OnC__CommandChanged();
				}
			}
		}
		
		[Column(Name="c__ErrorCode", Storage="_C__ErrorCode", DbType="BigInt NOT NULL")]
		public long C__ErrorCode
		{
			get
			{
				return this._C__ErrorCode;
			}
			set
			{
				if ((this._C__ErrorCode != value))
				{
					this.OnC__ErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._C__ErrorCode = value;
					this.SendPropertyChanged("C__ErrorCode");
					this.OnC__ErrorCodeChanged();
				}
			}
		}
		
		[Column(Name="c__State", Storage="_C__State", DbType="Int NOT NULL")]
		public int C__State
		{
			get
			{
				return this._C__State;
			}
			set
			{
				if ((this._C__State != value))
				{
					this.OnC__StateChanging(value);
					this.SendPropertyChanging();
					this._C__State = value;
					this.SendPropertyChanged("C__State");
					this.OnC__StateChanged();
				}
			}
		}
		
		[Column(Name="c__ControlNumber", Storage="_C__ControlNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__ControlNumber
		{
			get
			{
				return this._C__ControlNumber;
			}
			set
			{
				if ((this._C__ControlNumber != value))
				{
					this.OnC__ControlNumberChanging(value);
					this.SendPropertyChanging();
					this._C__ControlNumber = value;
					this.SendPropertyChanged("C__ControlNumber");
					this.OnC__ControlNumberChanged();
				}
			}
		}
		
		[Column(Name="c__DateTime", Storage="_C__DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime C__DateTime
		{
			get
			{
				return this._C__DateTime;
			}
			set
			{
				if ((this._C__DateTime != value))
				{
					this.OnC__DateTimeChanging(value);
					this.SendPropertyChanging();
					this._C__DateTime = value;
					this.SendPropertyChanged("C__DateTime");
					this.OnC__DateTimeChanged();
				}
			}
		}
		
		[Column(Name="c__BatchId", Storage="_C__BatchId", DbType="NVarChar(255)")]
		public string C__BatchId
		{
			get
			{
				return this._C__BatchId;
			}
			set
			{
				if ((this._C__BatchId != value))
				{
					this.OnC__BatchIdChanging(value);
					this.SendPropertyChanging();
					this._C__BatchId = value;
					this.SendPropertyChanged("C__BatchId");
					this.OnC__BatchIdChanged();
				}
			}
		}
		
		[Column(Name="c__TrackingId", Storage="_C__TrackingId", DbType="NVarChar(255)")]
		public string C__TrackingId
		{
			get
			{
				return this._C__TrackingId;
			}
			set
			{
				if ((this._C__TrackingId != value))
				{
					this.OnC__TrackingIdChanging(value);
					this.SendPropertyChanging();
					this._C__TrackingId = value;
					this.SendPropertyChanged("C__TrackingId");
					this.OnC__TrackingIdChanged();
				}
			}
		}
		
		[Column(Name="c__StartDate", Storage="_C__StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__StartDate
		{
			get
			{
				return this._C__StartDate;
			}
			set
			{
				if ((this._C__StartDate != value))
				{
					this.OnC__StartDateChanging(value);
					this.SendPropertyChanging();
					this._C__StartDate = value;
					this.SendPropertyChanged("C__StartDate");
					this.OnC__StartDateChanged();
				}
			}
		}
		
		[Column(Name="c__EndDate", Storage="_C__EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime C__EndDate
		{
			get
			{
				return this._C__EndDate;
			}
			set
			{
				if ((this._C__EndDate != value))
				{
					this.OnC__EndDateChanging(value);
					this.SendPropertyChanging();
					this._C__EndDate = value;
					this.SendPropertyChanged("C__EndDate");
					this.OnC__EndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_invocationreco")]
	public partial class T_be_cor_fil_invocationreco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_InvocationRecordBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Command;
		
		private long _C__ErrorCode;
		
		private int _C__State;
		
		private string _C__ControlNumber;
		
		private System.DateTime _C__DateTime;
		
		private string _C__BatchId;
		
		private string _C__TrackingId;
		
		private EntitySet<T_be_cor_fil_r_target_invoca> _T_be_cor_fil_r_target_invoca;
		
		private EntitySet<T_be_cor_fil_r_invoca_filebe> _T_be_cor_fil_r_invoca_filebe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_InvocationRecordBE_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__CommandChanging(string value);
    partial void OnC__CommandChanged();
    partial void OnC__ErrorCodeChanging(long value);
    partial void OnC__ErrorCodeChanged();
    partial void OnC__StateChanging(int value);
    partial void OnC__StateChanged();
    partial void OnC__ControlNumberChanging(string value);
    partial void OnC__ControlNumberChanged();
    partial void OnC__DateTimeChanging(System.DateTime value);
    partial void OnC__DateTimeChanged();
    partial void OnC__BatchIdChanging(string value);
    partial void OnC__BatchIdChanged();
    partial void OnC__TrackingIdChanging(string value);
    partial void OnC__TrackingIdChanged();
    #endregion
		
		public T_be_cor_fil_invocationreco()
		{
			this._T_be_cor_fil_r_target_invoca = new EntitySet<T_be_cor_fil_r_target_invoca>(new Action<T_be_cor_fil_r_target_invoca>(this.attach_T_be_cor_fil_r_target_invoca), new Action<T_be_cor_fil_r_target_invoca>(this.detach_T_be_cor_fil_r_target_invoca));
			this._T_be_cor_fil_r_invoca_filebe = new EntitySet<T_be_cor_fil_r_invoca_filebe>(new Action<T_be_cor_fil_r_invoca_filebe>(this.attach_T_be_cor_fil_r_invoca_filebe), new Action<T_be_cor_fil_r_invoca_filebe>(this.detach_T_be_cor_fil_r_invoca_filebe));
			OnCreated();
		}
		
		[Column(Name="c_InvocationRecordBE_Id", Storage="_C_InvocationRecordBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_InvocationRecordBE_Id
		{
			get
			{
				return this._C_InvocationRecordBE_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBE_Id != value))
				{
					this.OnC_InvocationRecordBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBE_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBE_Id");
					this.OnC_InvocationRecordBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Command", Storage="_C__Command", DbType="NVarChar(2000)")]
		public string C__Command
		{
			get
			{
				return this._C__Command;
			}
			set
			{
				if ((this._C__Command != value))
				{
					this.OnC__CommandChanging(value);
					this.SendPropertyChanging();
					this._C__Command = value;
					this.SendPropertyChanged("C__Command");
					this.OnC__CommandChanged();
				}
			}
		}
		
		[Column(Name="c__ErrorCode", Storage="_C__ErrorCode", DbType="BigInt NOT NULL")]
		public long C__ErrorCode
		{
			get
			{
				return this._C__ErrorCode;
			}
			set
			{
				if ((this._C__ErrorCode != value))
				{
					this.OnC__ErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._C__ErrorCode = value;
					this.SendPropertyChanged("C__ErrorCode");
					this.OnC__ErrorCodeChanged();
				}
			}
		}
		
		[Column(Name="c__State", Storage="_C__State", DbType="Int NOT NULL")]
		public int C__State
		{
			get
			{
				return this._C__State;
			}
			set
			{
				if ((this._C__State != value))
				{
					this.OnC__StateChanging(value);
					this.SendPropertyChanging();
					this._C__State = value;
					this.SendPropertyChanged("C__State");
					this.OnC__StateChanged();
				}
			}
		}
		
		[Column(Name="c__ControlNumber", Storage="_C__ControlNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__ControlNumber
		{
			get
			{
				return this._C__ControlNumber;
			}
			set
			{
				if ((this._C__ControlNumber != value))
				{
					this.OnC__ControlNumberChanging(value);
					this.SendPropertyChanging();
					this._C__ControlNumber = value;
					this.SendPropertyChanged("C__ControlNumber");
					this.OnC__ControlNumberChanged();
				}
			}
		}
		
		[Column(Name="c__DateTime", Storage="_C__DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime C__DateTime
		{
			get
			{
				return this._C__DateTime;
			}
			set
			{
				if ((this._C__DateTime != value))
				{
					this.OnC__DateTimeChanging(value);
					this.SendPropertyChanging();
					this._C__DateTime = value;
					this.SendPropertyChanged("C__DateTime");
					this.OnC__DateTimeChanged();
				}
			}
		}
		
		[Column(Name="c__BatchId", Storage="_C__BatchId", DbType="NVarChar(255)")]
		public string C__BatchId
		{
			get
			{
				return this._C__BatchId;
			}
			set
			{
				if ((this._C__BatchId != value))
				{
					this.OnC__BatchIdChanging(value);
					this.SendPropertyChanging();
					this._C__BatchId = value;
					this.SendPropertyChanged("C__BatchId");
					this.OnC__BatchIdChanged();
				}
			}
		}
		
		[Column(Name="c__TrackingId", Storage="_C__TrackingId", DbType="NVarChar(255)")]
		public string C__TrackingId
		{
			get
			{
				return this._C__TrackingId;
			}
			set
			{
				if ((this._C__TrackingId != value))
				{
					this.OnC__TrackingIdChanging(value);
					this.SendPropertyChanging();
					this._C__TrackingId = value;
					this.SendPropertyChanged("C__TrackingId");
					this.OnC__TrackingIdChanged();
				}
			}
		}
		
		[Association(Name="FK1C394D542F02B46F", Storage="_T_be_cor_fil_r_target_invoca", ThisKey="C_InvocationRecordBE_Id", OtherKey="C_InvocationRecordBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_invoca> T_be_cor_fil_r_target_invoca
		{
			get
			{
				return this._T_be_cor_fil_r_target_invoca;
			}
			set
			{
				this._T_be_cor_fil_r_target_invoca.Assign(value);
			}
		}
		
		[Association(Name="FKC2912D02F02B46F", Storage="_T_be_cor_fil_r_invoca_filebe", ThisKey="C_InvocationRecordBE_Id", OtherKey="C_InvocationRecordBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_invoca_filebe> T_be_cor_fil_r_invoca_filebe
		{
			get
			{
				return this._T_be_cor_fil_r_invoca_filebe;
			}
			set
			{
				this._T_be_cor_fil_r_invoca_filebe.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_invocationreco = this;
		}
		
		private void detach_T_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_invocationreco = null;
		}
		
		private void attach_T_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_invocationreco = this;
		}
		
		private void detach_T_be_cor_fil_r_invoca_filebe(T_be_cor_fil_r_invoca_filebe entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_invocationreco = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_programcodebe")]
	public partial class T_be_cor_fil_programcodebe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ProgramCodeBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private int _C__Language;
		
		private string _C__Text;
		
		private EntitySet<T_be_cor_fil_r_target_progra> _T_be_cor_fil_r_target_progra;
		
		private EntitySet<T_be_cor_fil_r_progra_assemb> _T_be_cor_fil_r_progra_assemb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ProgramCodeBE_IdChanging(System.Guid value);
    partial void OnC_ProgramCodeBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__LanguageChanging(int value);
    partial void OnC__LanguageChanged();
    partial void OnC__TextChanging(string value);
    partial void OnC__TextChanged();
    #endregion
		
		public T_be_cor_fil_programcodebe()
		{
			this._T_be_cor_fil_r_target_progra = new EntitySet<T_be_cor_fil_r_target_progra>(new Action<T_be_cor_fil_r_target_progra>(this.attach_T_be_cor_fil_r_target_progra), new Action<T_be_cor_fil_r_target_progra>(this.detach_T_be_cor_fil_r_target_progra));
			this._T_be_cor_fil_r_progra_assemb = new EntitySet<T_be_cor_fil_r_progra_assemb>(new Action<T_be_cor_fil_r_progra_assemb>(this.attach_T_be_cor_fil_r_progra_assemb), new Action<T_be_cor_fil_r_progra_assemb>(this.detach_T_be_cor_fil_r_progra_assemb));
			OnCreated();
		}
		
		[Column(Name="c_ProgramCodeBE_Id", Storage="_C_ProgramCodeBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ProgramCodeBE_Id
		{
			get
			{
				return this._C_ProgramCodeBE_Id;
			}
			set
			{
				if ((this._C_ProgramCodeBE_Id != value))
				{
					this.OnC_ProgramCodeBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProgramCodeBE_Id = value;
					this.SendPropertyChanged("C_ProgramCodeBE_Id");
					this.OnC_ProgramCodeBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Language", Storage="_C__Language", DbType="Int NOT NULL")]
		public int C__Language
		{
			get
			{
				return this._C__Language;
			}
			set
			{
				if ((this._C__Language != value))
				{
					this.OnC__LanguageChanging(value);
					this.SendPropertyChanging();
					this._C__Language = value;
					this.SendPropertyChanged("C__Language");
					this.OnC__LanguageChanged();
				}
			}
		}
		
		[Column(Name="c__Text", Storage="_C__Text", DbType="NVarChar(2000)")]
		public string C__Text
		{
			get
			{
				return this._C__Text;
			}
			set
			{
				if ((this._C__Text != value))
				{
					this.OnC__TextChanging(value);
					this.SendPropertyChanging();
					this._C__Text = value;
					this.SendPropertyChanged("C__Text");
					this.OnC__TextChanged();
				}
			}
		}
		
		[Association(Name="FK5595C3E5C3F32C3E", Storage="_T_be_cor_fil_r_target_progra", ThisKey="C_ProgramCodeBE_Id", OtherKey="C_ProgramCodeBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_progra> T_be_cor_fil_r_target_progra
		{
			get
			{
				return this._T_be_cor_fil_r_target_progra;
			}
			set
			{
				this._T_be_cor_fil_r_target_progra.Assign(value);
			}
		}
		
		[Association(Name="FKA563E2DAC3F32C3E", Storage="_T_be_cor_fil_r_progra_assemb", ThisKey="C_ProgramCodeBE_Id", OtherKey="C_ProgramCodeBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_progra_assemb> T_be_cor_fil_r_progra_assemb
		{
			get
			{
				return this._T_be_cor_fil_r_progra_assemb;
			}
			set
			{
				this._T_be_cor_fil_r_progra_assemb.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_programcodebe = this;
		}
		
		private void detach_T_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_programcodebe = null;
		}
		
		private void attach_T_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_programcodebe = this;
		}
		
		private void detach_T_be_cor_fil_r_progra_assemb(T_be_cor_fil_r_progra_assemb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_programcodebe = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_r_invoca_filebe")]
	public partial class T_be_cor_fil_r_invoca_filebe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_InvocationRecordBE_FileB_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_InvocationRecordBE_Id;
		
		private System.Guid _C_FileBE_Id;
		
		private EntityRef<T_be_cor_fil_invocationreco> _T_be_cor_fil_invocationreco;
		
		private EntityRef<T_be_cor_fil_filebe> _T_be_cor_fil_filebe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_InvocationRecordBE_FileB_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBE_FileB_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_InvocationRecordBE_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBE_IdChanged();
    partial void OnC_FileBE_IdChanging(System.Guid value);
    partial void OnC_FileBE_IdChanged();
    #endregion
		
		public T_be_cor_fil_r_invoca_filebe()
		{
			this._T_be_cor_fil_invocationreco = default(EntityRef<T_be_cor_fil_invocationreco>);
			this._T_be_cor_fil_filebe = default(EntityRef<T_be_cor_fil_filebe>);
			OnCreated();
		}
		
		[Column(Name="c_InvocationRecordBE_FileB_Id", Storage="_C_InvocationRecordBE_FileB_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_InvocationRecordBE_FileB_Id
		{
			get
			{
				return this._C_InvocationRecordBE_FileB_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBE_FileB_Id != value))
				{
					this.OnC_InvocationRecordBE_FileB_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBE_FileB_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBE_FileB_Id");
					this.OnC_InvocationRecordBE_FileB_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_InvocationRecordBE_Id", Storage="_C_InvocationRecordBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_InvocationRecordBE_Id
		{
			get
			{
				return this._C_InvocationRecordBE_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBE_Id != value))
				{
					this.OnC_InvocationRecordBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBE_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBE_Id");
					this.OnC_InvocationRecordBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c_FileBE_Id", Storage="_C_FileBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_FileBE_Id
		{
			get
			{
				return this._C_FileBE_Id;
			}
			set
			{
				if ((this._C_FileBE_Id != value))
				{
					this.OnC_FileBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_FileBE_Id = value;
					this.SendPropertyChanged("C_FileBE_Id");
					this.OnC_FileBE_IdChanged();
				}
			}
		}
		
		[Association(Name="FKC2912D02F02B46F", Storage="_T_be_cor_fil_invocationreco", ThisKey="C_InvocationRecordBE_Id", OtherKey="C_InvocationRecordBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_invocationreco T_be_cor_fil_invocationreco
		{
			get
			{
				return this._T_be_cor_fil_invocationreco.Entity;
			}
			set
			{
				T_be_cor_fil_invocationreco previousValue = this._T_be_cor_fil_invocationreco.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_invocationreco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_invocationreco.Entity = null;
						previousValue.T_be_cor_fil_r_invoca_filebe.Remove(this);
					}
					this._T_be_cor_fil_invocationreco.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_invoca_filebe.Add(this);
						this._C_InvocationRecordBE_Id = value.C_InvocationRecordBE_Id;
					}
					else
					{
						this._C_InvocationRecordBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_invocationreco");
				}
			}
		}
		
		[Association(Name="FKC2912D0FC1661E1", Storage="_T_be_cor_fil_filebe", ThisKey="C_FileBE_Id", OtherKey="C_FileBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_filebe T_be_cor_fil_filebe
		{
			get
			{
				return this._T_be_cor_fil_filebe.Entity;
			}
			set
			{
				T_be_cor_fil_filebe previousValue = this._T_be_cor_fil_filebe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_filebe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_filebe.Entity = null;
						previousValue.T_be_cor_fil_r_invoca_filebe.Remove(this);
					}
					this._T_be_cor_fil_filebe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_invoca_filebe.Add(this);
						this._C_FileBE_Id = value.C_FileBE_Id;
					}
					else
					{
						this._C_FileBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_filebe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_r_progra_assemb")]
	public partial class T_be_cor_fil_r_progra_assemb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ProgramCodeBE_AssemblyRe_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_ProgramCodeBE_Id;
		
		private System.Guid _C_AssemblyReferenceBE_Id;
		
		private EntityRef<T_be_cor_fil_assemblyrefere> _T_be_cor_fil_assemblyrefere;
		
		private EntityRef<T_be_cor_fil_programcodebe> _T_be_cor_fil_programcodebe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ProgramCodeBE_AssemblyRe_IdChanging(System.Guid value);
    partial void OnC_ProgramCodeBE_AssemblyRe_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_ProgramCodeBE_IdChanging(System.Guid value);
    partial void OnC_ProgramCodeBE_IdChanged();
    partial void OnC_AssemblyReferenceBE_IdChanging(System.Guid value);
    partial void OnC_AssemblyReferenceBE_IdChanged();
    #endregion
		
		public T_be_cor_fil_r_progra_assemb()
		{
			this._T_be_cor_fil_assemblyrefere = default(EntityRef<T_be_cor_fil_assemblyrefere>);
			this._T_be_cor_fil_programcodebe = default(EntityRef<T_be_cor_fil_programcodebe>);
			OnCreated();
		}
		
		[Column(Name="c_ProgramCodeBE_AssemblyRe_Id", Storage="_C_ProgramCodeBE_AssemblyRe_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ProgramCodeBE_AssemblyRe_Id
		{
			get
			{
				return this._C_ProgramCodeBE_AssemblyRe_Id;
			}
			set
			{
				if ((this._C_ProgramCodeBE_AssemblyRe_Id != value))
				{
					this.OnC_ProgramCodeBE_AssemblyRe_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProgramCodeBE_AssemblyRe_Id = value;
					this.SendPropertyChanged("C_ProgramCodeBE_AssemblyRe_Id");
					this.OnC_ProgramCodeBE_AssemblyRe_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_ProgramCodeBE_Id", Storage="_C_ProgramCodeBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_ProgramCodeBE_Id
		{
			get
			{
				return this._C_ProgramCodeBE_Id;
			}
			set
			{
				if ((this._C_ProgramCodeBE_Id != value))
				{
					this.OnC_ProgramCodeBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProgramCodeBE_Id = value;
					this.SendPropertyChanged("C_ProgramCodeBE_Id");
					this.OnC_ProgramCodeBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c_AssemblyReferenceBE_Id", Storage="_C_AssemblyReferenceBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_AssemblyReferenceBE_Id
		{
			get
			{
				return this._C_AssemblyReferenceBE_Id;
			}
			set
			{
				if ((this._C_AssemblyReferenceBE_Id != value))
				{
					this.OnC_AssemblyReferenceBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AssemblyReferenceBE_Id = value;
					this.SendPropertyChanged("C_AssemblyReferenceBE_Id");
					this.OnC_AssemblyReferenceBE_IdChanged();
				}
			}
		}
		
		[Association(Name="FKA563E2DAA260F339", Storage="_T_be_cor_fil_assemblyrefere", ThisKey="C_AssemblyReferenceBE_Id", OtherKey="C_AssemblyReferenceBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_assemblyrefere T_be_cor_fil_assemblyrefere
		{
			get
			{
				return this._T_be_cor_fil_assemblyrefere.Entity;
			}
			set
			{
				T_be_cor_fil_assemblyrefere previousValue = this._T_be_cor_fil_assemblyrefere.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_assemblyrefere.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_assemblyrefere.Entity = null;
						previousValue.T_be_cor_fil_r_progra_assemb.Remove(this);
					}
					this._T_be_cor_fil_assemblyrefere.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_progra_assemb.Add(this);
						this._C_AssemblyReferenceBE_Id = value.C_AssemblyReferenceBE_Id;
					}
					else
					{
						this._C_AssemblyReferenceBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_assemblyrefere");
				}
			}
		}
		
		[Association(Name="FKA563E2DAC3F32C3E", Storage="_T_be_cor_fil_programcodebe", ThisKey="C_ProgramCodeBE_Id", OtherKey="C_ProgramCodeBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_programcodebe T_be_cor_fil_programcodebe
		{
			get
			{
				return this._T_be_cor_fil_programcodebe.Entity;
			}
			set
			{
				T_be_cor_fil_programcodebe previousValue = this._T_be_cor_fil_programcodebe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_programcodebe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_programcodebe.Entity = null;
						previousValue.T_be_cor_fil_r_progra_assemb.Remove(this);
					}
					this._T_be_cor_fil_programcodebe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_progra_assemb.Add(this);
						this._C_ProgramCodeBE_Id = value.C_ProgramCodeBE_Id;
					}
					else
					{
						this._C_ProgramCodeBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_programcodebe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_r_target_argume")]
	public partial class T_be_cor_fil_r_target_argume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_TargetBE_ArgumentBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_TargetBE_Id;
		
		private System.Guid _C_ArgumentBE_Id;
		
		private EntityRef<T_be_cor_fil_argumentbe> _T_be_cor_fil_argumentbe;
		
		private EntityRef<T_be_cor_fil_targetbe> _T_be_cor_fil_targetbe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_TargetBE_ArgumentBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_ArgumentBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_TargetBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_IdChanged();
    partial void OnC_ArgumentBE_IdChanging(System.Guid value);
    partial void OnC_ArgumentBE_IdChanged();
    #endregion
		
		public T_be_cor_fil_r_target_argume()
		{
			this._T_be_cor_fil_argumentbe = default(EntityRef<T_be_cor_fil_argumentbe>);
			this._T_be_cor_fil_targetbe = default(EntityRef<T_be_cor_fil_targetbe>);
			OnCreated();
		}
		
		[Column(Name="c_TargetBE_ArgumentBE_Id", Storage="_C_TargetBE_ArgumentBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_TargetBE_ArgumentBE_Id
		{
			get
			{
				return this._C_TargetBE_ArgumentBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_ArgumentBE_Id != value))
				{
					this.OnC_TargetBE_ArgumentBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_ArgumentBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_ArgumentBE_Id");
					this.OnC_TargetBE_ArgumentBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetBE_Id", Storage="_C_TargetBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_TargetBE_Id
		{
			get
			{
				return this._C_TargetBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_Id != value))
				{
					this.OnC_TargetBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_Id");
					this.OnC_TargetBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c_ArgumentBE_Id", Storage="_C_ArgumentBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_ArgumentBE_Id
		{
			get
			{
				return this._C_ArgumentBE_Id;
			}
			set
			{
				if ((this._C_ArgumentBE_Id != value))
				{
					this.OnC_ArgumentBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ArgumentBE_Id = value;
					this.SendPropertyChanged("C_ArgumentBE_Id");
					this.OnC_ArgumentBE_IdChanged();
				}
			}
		}
		
		[Association(Name="FK715CFF2F6CCCAD37", Storage="_T_be_cor_fil_argumentbe", ThisKey="C_ArgumentBE_Id", OtherKey="C_ArgumentBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_argumentbe T_be_cor_fil_argumentbe
		{
			get
			{
				return this._T_be_cor_fil_argumentbe.Entity;
			}
			set
			{
				T_be_cor_fil_argumentbe previousValue = this._T_be_cor_fil_argumentbe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_argumentbe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_argumentbe.Entity = null;
						previousValue.T_be_cor_fil_r_target_argume.Remove(this);
					}
					this._T_be_cor_fil_argumentbe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_argume.Add(this);
						this._C_ArgumentBE_Id = value.C_ArgumentBE_Id;
					}
					else
					{
						this._C_ArgumentBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_argumentbe");
				}
			}
		}
		
		[Association(Name="FK715CFF2F8FE654D4", Storage="_T_be_cor_fil_targetbe", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_targetbe T_be_cor_fil_targetbe
		{
			get
			{
				return this._T_be_cor_fil_targetbe.Entity;
			}
			set
			{
				T_be_cor_fil_targetbe previousValue = this._T_be_cor_fil_targetbe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_targetbe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_targetbe.Entity = null;
						previousValue.T_be_cor_fil_r_target_argume.Remove(this);
					}
					this._T_be_cor_fil_targetbe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_argume.Add(this);
						this._C_TargetBE_Id = value.C_TargetBE_Id;
					}
					else
					{
						this._C_TargetBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_targetbe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_r_target_invoca")]
	public partial class T_be_cor_fil_r_target_invoca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_TargetBE_InvocationRecor_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_TargetBE_Id;
		
		private System.Guid _C_InvocationRecordBE_Id;
		
		private EntityRef<T_be_cor_fil_invocationreco> _T_be_cor_fil_invocationreco;
		
		private EntityRef<T_be_cor_fil_targetbe> _T_be_cor_fil_targetbe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_TargetBE_InvocationRecor_IdChanging(System.Guid value);
    partial void OnC_TargetBE_InvocationRecor_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_TargetBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_IdChanged();
    partial void OnC_InvocationRecordBE_IdChanging(System.Guid value);
    partial void OnC_InvocationRecordBE_IdChanged();
    #endregion
		
		public T_be_cor_fil_r_target_invoca()
		{
			this._T_be_cor_fil_invocationreco = default(EntityRef<T_be_cor_fil_invocationreco>);
			this._T_be_cor_fil_targetbe = default(EntityRef<T_be_cor_fil_targetbe>);
			OnCreated();
		}
		
		[Column(Name="c_TargetBE_InvocationRecor_Id", Storage="_C_TargetBE_InvocationRecor_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_TargetBE_InvocationRecor_Id
		{
			get
			{
				return this._C_TargetBE_InvocationRecor_Id;
			}
			set
			{
				if ((this._C_TargetBE_InvocationRecor_Id != value))
				{
					this.OnC_TargetBE_InvocationRecor_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_InvocationRecor_Id = value;
					this.SendPropertyChanged("C_TargetBE_InvocationRecor_Id");
					this.OnC_TargetBE_InvocationRecor_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetBE_Id", Storage="_C_TargetBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_TargetBE_Id
		{
			get
			{
				return this._C_TargetBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_Id != value))
				{
					this.OnC_TargetBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_Id");
					this.OnC_TargetBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c_InvocationRecordBE_Id", Storage="_C_InvocationRecordBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_InvocationRecordBE_Id
		{
			get
			{
				return this._C_InvocationRecordBE_Id;
			}
			set
			{
				if ((this._C_InvocationRecordBE_Id != value))
				{
					this.OnC_InvocationRecordBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_InvocationRecordBE_Id = value;
					this.SendPropertyChanged("C_InvocationRecordBE_Id");
					this.OnC_InvocationRecordBE_IdChanged();
				}
			}
		}
		
		[Association(Name="FK1C394D542F02B46F", Storage="_T_be_cor_fil_invocationreco", ThisKey="C_InvocationRecordBE_Id", OtherKey="C_InvocationRecordBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_invocationreco T_be_cor_fil_invocationreco
		{
			get
			{
				return this._T_be_cor_fil_invocationreco.Entity;
			}
			set
			{
				T_be_cor_fil_invocationreco previousValue = this._T_be_cor_fil_invocationreco.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_invocationreco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_invocationreco.Entity = null;
						previousValue.T_be_cor_fil_r_target_invoca.Remove(this);
					}
					this._T_be_cor_fil_invocationreco.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_invoca.Add(this);
						this._C_InvocationRecordBE_Id = value.C_InvocationRecordBE_Id;
					}
					else
					{
						this._C_InvocationRecordBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_invocationreco");
				}
			}
		}
		
		[Association(Name="FK1C394D548FE654D4", Storage="_T_be_cor_fil_targetbe", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_targetbe T_be_cor_fil_targetbe
		{
			get
			{
				return this._T_be_cor_fil_targetbe.Entity;
			}
			set
			{
				T_be_cor_fil_targetbe previousValue = this._T_be_cor_fil_targetbe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_targetbe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_targetbe.Entity = null;
						previousValue.T_be_cor_fil_r_target_invoca.Remove(this);
					}
					this._T_be_cor_fil_targetbe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_invoca.Add(this);
						this._C_TargetBE_Id = value.C_TargetBE_Id;
					}
					else
					{
						this._C_TargetBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_targetbe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_r_target_progra")]
	public partial class T_be_cor_fil_r_target_progra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_TargetBE_ProgramCodeBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_TargetBE_Id;
		
		private System.Guid _C_ProgramCodeBE_Id;
		
		private EntityRef<T_be_cor_fil_targetbe> _T_be_cor_fil_targetbe;
		
		private EntityRef<T_be_cor_fil_programcodebe> _T_be_cor_fil_programcodebe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_TargetBE_ProgramCodeBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_ProgramCodeBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_TargetBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_IdChanged();
    partial void OnC_ProgramCodeBE_IdChanging(System.Guid value);
    partial void OnC_ProgramCodeBE_IdChanged();
    #endregion
		
		public T_be_cor_fil_r_target_progra()
		{
			this._T_be_cor_fil_targetbe = default(EntityRef<T_be_cor_fil_targetbe>);
			this._T_be_cor_fil_programcodebe = default(EntityRef<T_be_cor_fil_programcodebe>);
			OnCreated();
		}
		
		[Column(Name="c_TargetBE_ProgramCodeBE_Id", Storage="_C_TargetBE_ProgramCodeBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_TargetBE_ProgramCodeBE_Id
		{
			get
			{
				return this._C_TargetBE_ProgramCodeBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_ProgramCodeBE_Id != value))
				{
					this.OnC_TargetBE_ProgramCodeBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_ProgramCodeBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_ProgramCodeBE_Id");
					this.OnC_TargetBE_ProgramCodeBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetBE_Id", Storage="_C_TargetBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_TargetBE_Id
		{
			get
			{
				return this._C_TargetBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_Id != value))
				{
					this.OnC_TargetBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_Id");
					this.OnC_TargetBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c_ProgramCodeBE_Id", Storage="_C_ProgramCodeBE_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_ProgramCodeBE_Id
		{
			get
			{
				return this._C_ProgramCodeBE_Id;
			}
			set
			{
				if ((this._C_ProgramCodeBE_Id != value))
				{
					this.OnC_ProgramCodeBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProgramCodeBE_Id = value;
					this.SendPropertyChanged("C_ProgramCodeBE_Id");
					this.OnC_ProgramCodeBE_IdChanged();
				}
			}
		}
		
		[Association(Name="FK5595C3E58FE654D4", Storage="_T_be_cor_fil_targetbe", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_targetbe T_be_cor_fil_targetbe
		{
			get
			{
				return this._T_be_cor_fil_targetbe.Entity;
			}
			set
			{
				T_be_cor_fil_targetbe previousValue = this._T_be_cor_fil_targetbe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_targetbe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_targetbe.Entity = null;
						previousValue.T_be_cor_fil_r_target_progra.Remove(this);
					}
					this._T_be_cor_fil_targetbe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_progra.Add(this);
						this._C_TargetBE_Id = value.C_TargetBE_Id;
					}
					else
					{
						this._C_TargetBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_targetbe");
				}
			}
		}
		
		[Association(Name="FK5595C3E5C3F32C3E", Storage="_T_be_cor_fil_programcodebe", ThisKey="C_ProgramCodeBE_Id", OtherKey="C_ProgramCodeBE_Id", IsForeignKey=true)]
		public T_be_cor_fil_programcodebe T_be_cor_fil_programcodebe
		{
			get
			{
				return this._T_be_cor_fil_programcodebe.Entity;
			}
			set
			{
				T_be_cor_fil_programcodebe previousValue = this._T_be_cor_fil_programcodebe.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_fil_programcodebe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_fil_programcodebe.Entity = null;
						previousValue.T_be_cor_fil_r_target_progra.Remove(this);
					}
					this._T_be_cor_fil_programcodebe.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_fil_r_target_progra.Add(this);
						this._C_ProgramCodeBE_Id = value.C_ProgramCodeBE_Id;
					}
					else
					{
						this._C_ProgramCodeBE_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_fil_programcodebe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_servicehostbe")]
	public partial class T_be_cor_fil_servicehostbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ServiceHostBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Name;
		
		private string _C__Address;
		
		private int _C__State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ServiceHostBE_IdChanging(System.Guid value);
    partial void OnC_ServiceHostBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__NameChanging(string value);
    partial void OnC__NameChanged();
    partial void OnC__AddressChanging(string value);
    partial void OnC__AddressChanged();
    partial void OnC__StateChanging(int value);
    partial void OnC__StateChanged();
    #endregion
		
		public T_be_cor_fil_servicehostbe()
		{
			OnCreated();
		}
		
		[Column(Name="c_ServiceHostBE_Id", Storage="_C_ServiceHostBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ServiceHostBE_Id
		{
			get
			{
				return this._C_ServiceHostBE_Id;
			}
			set
			{
				if ((this._C_ServiceHostBE_Id != value))
				{
					this.OnC_ServiceHostBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceHostBE_Id = value;
					this.SendPropertyChanged("C_ServiceHostBE_Id");
					this.OnC_ServiceHostBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Name", Storage="_C__Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Name
		{
			get
			{
				return this._C__Name;
			}
			set
			{
				if ((this._C__Name != value))
				{
					this.OnC__NameChanging(value);
					this.SendPropertyChanging();
					this._C__Name = value;
					this.SendPropertyChanged("C__Name");
					this.OnC__NameChanged();
				}
			}
		}
		
		[Column(Name="c__Address", Storage="_C__Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Address
		{
			get
			{
				return this._C__Address;
			}
			set
			{
				if ((this._C__Address != value))
				{
					this.OnC__AddressChanging(value);
					this.SendPropertyChanging();
					this._C__Address = value;
					this.SendPropertyChanged("C__Address");
					this.OnC__AddressChanged();
				}
			}
		}
		
		[Column(Name="c__State", Storage="_C__State", DbType="Int NOT NULL")]
		public int C__State
		{
			get
			{
				return this._C__State;
			}
			set
			{
				if ((this._C__State != value))
				{
					this.OnC__StateChanging(value);
					this.SendPropertyChanging();
					this._C__State = value;
					this.SendPropertyChanged("C__State");
					this.OnC__StateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_fil_targetbe")]
	public partial class T_be_cor_fil_targetbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_TargetBE_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C__Description;
		
		private string _C__Executable;
		
		private string _C__Name;
		
		private string _C__RedirectFileToStdin;
		
		private string _C__Regex;
		
		private int _C__Type;
		
		private EntitySet<T_be_cor_fil_r_target_invoca> _T_be_cor_fil_r_target_invoca;
		
		private EntitySet<T_be_cor_fil_r_target_progra> _T_be_cor_fil_r_target_progra;
		
		private EntitySet<T_be_cor_fil_r_target_argume> _T_be_cor_fil_r_target_argume;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_TargetBE_IdChanging(System.Guid value);
    partial void OnC_TargetBE_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC__DescriptionChanging(string value);
    partial void OnC__DescriptionChanged();
    partial void OnC__ExecutableChanging(string value);
    partial void OnC__ExecutableChanged();
    partial void OnC__NameChanging(string value);
    partial void OnC__NameChanged();
    partial void OnC__RedirectFileToStdinChanging(string value);
    partial void OnC__RedirectFileToStdinChanged();
    partial void OnC__RegexChanging(string value);
    partial void OnC__RegexChanged();
    partial void OnC__TypeChanging(int value);
    partial void OnC__TypeChanged();
    #endregion
		
		public T_be_cor_fil_targetbe()
		{
			this._T_be_cor_fil_r_target_invoca = new EntitySet<T_be_cor_fil_r_target_invoca>(new Action<T_be_cor_fil_r_target_invoca>(this.attach_T_be_cor_fil_r_target_invoca), new Action<T_be_cor_fil_r_target_invoca>(this.detach_T_be_cor_fil_r_target_invoca));
			this._T_be_cor_fil_r_target_progra = new EntitySet<T_be_cor_fil_r_target_progra>(new Action<T_be_cor_fil_r_target_progra>(this.attach_T_be_cor_fil_r_target_progra), new Action<T_be_cor_fil_r_target_progra>(this.detach_T_be_cor_fil_r_target_progra));
			this._T_be_cor_fil_r_target_argume = new EntitySet<T_be_cor_fil_r_target_argume>(new Action<T_be_cor_fil_r_target_argume>(this.attach_T_be_cor_fil_r_target_argume), new Action<T_be_cor_fil_r_target_argume>(this.detach_T_be_cor_fil_r_target_argume));
			OnCreated();
		}
		
		[Column(Name="c_TargetBE_Id", Storage="_C_TargetBE_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_TargetBE_Id
		{
			get
			{
				return this._C_TargetBE_Id;
			}
			set
			{
				if ((this._C_TargetBE_Id != value))
				{
					this.OnC_TargetBE_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TargetBE_Id = value;
					this.SendPropertyChanged("C_TargetBE_Id");
					this.OnC_TargetBE_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c__Description", Storage="_C__Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Description
		{
			get
			{
				return this._C__Description;
			}
			set
			{
				if ((this._C__Description != value))
				{
					this.OnC__DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C__Description = value;
					this.SendPropertyChanged("C__Description");
					this.OnC__DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c__Executable", Storage="_C__Executable", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Executable
		{
			get
			{
				return this._C__Executable;
			}
			set
			{
				if ((this._C__Executable != value))
				{
					this.OnC__ExecutableChanging(value);
					this.SendPropertyChanging();
					this._C__Executable = value;
					this.SendPropertyChanged("C__Executable");
					this.OnC__ExecutableChanged();
				}
			}
		}
		
		[Column(Name="c__Name", Storage="_C__Name", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string C__Name
		{
			get
			{
				return this._C__Name;
			}
			set
			{
				if ((this._C__Name != value))
				{
					this.OnC__NameChanging(value);
					this.SendPropertyChanging();
					this._C__Name = value;
					this.SendPropertyChanged("C__Name");
					this.OnC__NameChanged();
				}
			}
		}
		
		[Column(Name="c__RedirectFileToStdin", Storage="_C__RedirectFileToStdin", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C__RedirectFileToStdin
		{
			get
			{
				return this._C__RedirectFileToStdin;
			}
			set
			{
				if ((this._C__RedirectFileToStdin != value))
				{
					this.OnC__RedirectFileToStdinChanging(value);
					this.SendPropertyChanging();
					this._C__RedirectFileToStdin = value;
					this.SendPropertyChanged("C__RedirectFileToStdin");
					this.OnC__RedirectFileToStdinChanged();
				}
			}
		}
		
		[Column(Name="c__Regex", Storage="_C__Regex", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Regex
		{
			get
			{
				return this._C__Regex;
			}
			set
			{
				if ((this._C__Regex != value))
				{
					this.OnC__RegexChanging(value);
					this.SendPropertyChanging();
					this._C__Regex = value;
					this.SendPropertyChanged("C__Regex");
					this.OnC__RegexChanged();
				}
			}
		}
		
		[Column(Name="c__Type", Storage="_C__Type", DbType="Int NOT NULL")]
		public int C__Type
		{
			get
			{
				return this._C__Type;
			}
			set
			{
				if ((this._C__Type != value))
				{
					this.OnC__TypeChanging(value);
					this.SendPropertyChanging();
					this._C__Type = value;
					this.SendPropertyChanged("C__Type");
					this.OnC__TypeChanged();
				}
			}
		}
		
		[Association(Name="FK1C394D548FE654D4", Storage="_T_be_cor_fil_r_target_invoca", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_invoca> T_be_cor_fil_r_target_invoca
		{
			get
			{
				return this._T_be_cor_fil_r_target_invoca;
			}
			set
			{
				this._T_be_cor_fil_r_target_invoca.Assign(value);
			}
		}
		
		[Association(Name="FK5595C3E58FE654D4", Storage="_T_be_cor_fil_r_target_progra", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_progra> T_be_cor_fil_r_target_progra
		{
			get
			{
				return this._T_be_cor_fil_r_target_progra;
			}
			set
			{
				this._T_be_cor_fil_r_target_progra.Assign(value);
			}
		}
		
		[Association(Name="FK715CFF2F8FE654D4", Storage="_T_be_cor_fil_r_target_argume", ThisKey="C_TargetBE_Id", OtherKey="C_TargetBE_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_fil_r_target_argume> T_be_cor_fil_r_target_argume
		{
			get
			{
				return this._T_be_cor_fil_r_target_argume;
			}
			set
			{
				this._T_be_cor_fil_r_target_argume.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = this;
		}
		
		private void detach_T_be_cor_fil_r_target_invoca(T_be_cor_fil_r_target_invoca entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = null;
		}
		
		private void attach_T_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = this;
		}
		
		private void detach_T_be_cor_fil_r_target_progra(T_be_cor_fil_r_target_progra entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = null;
		}
		
		private void attach_T_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = this;
		}
		
		private void detach_T_be_cor_fil_r_target_argume(T_be_cor_fil_r_target_argume entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_fil_targetbe = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_mr_machine")]
	public partial class T_be_cor_mr_machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Machine_Id;
		
		private int _C__version;
		
		private string _C_MachineIdentifier;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private EntitySet<T_be_cor_mr_r_machin_machin> _T_be_cor_mr_r_machin_machin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Machine_IdChanging(System.Guid value);
    partial void OnC_Machine_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_MachineIdentifierChanging(string value);
    partial void OnC_MachineIdentifierChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_be_cor_mr_machine()
		{
			this._T_be_cor_mr_r_machin_machin = new EntitySet<T_be_cor_mr_r_machin_machin>(new Action<T_be_cor_mr_r_machin_machin>(this.attach_T_be_cor_mr_r_machin_machin), new Action<T_be_cor_mr_r_machin_machin>(this.detach_T_be_cor_mr_r_machin_machin));
			OnCreated();
		}
		
		[Column(Name="c_Machine_Id", Storage="_C_Machine_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Machine_Id
		{
			get
			{
				return this._C_Machine_Id;
			}
			set
			{
				if ((this._C_Machine_Id != value))
				{
					this.OnC_Machine_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Machine_Id = value;
					this.SendPropertyChanged("C_Machine_Id");
					this.OnC_Machine_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_MachineIdentifier", Storage="_C_MachineIdentifier", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string C_MachineIdentifier
		{
			get
			{
				return this._C_MachineIdentifier;
			}
			set
			{
				if ((this._C_MachineIdentifier != value))
				{
					this.OnC_MachineIdentifierChanging(value);
					this.SendPropertyChanging();
					this._C_MachineIdentifier = value;
					this.SendPropertyChanged("C_MachineIdentifier");
					this.OnC_MachineIdentifierChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FKB9DA71B95BAD365B", Storage="_T_be_cor_mr_r_machin_machin", ThisKey="C_Machine_Id", OtherKey="C_Machine_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_mr_r_machin_machin> T_be_cor_mr_r_machin_machin
		{
			get
			{
				return this._T_be_cor_mr_r_machin_machin;
			}
			set
			{
				this._T_be_cor_mr_r_machin_machin.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_mr_machine = this;
		}
		
		private void detach_T_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_mr_machine = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_mr_machinerole")]
	public partial class T_be_cor_mr_machinerole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_MachineRole_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private EntitySet<T_be_cor_mr_r_machin_machin> _T_be_cor_mr_r_machin_machin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_MachineRole_IdChanging(System.Guid value);
    partial void OnC_MachineRole_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_be_cor_mr_machinerole()
		{
			this._T_be_cor_mr_r_machin_machin = new EntitySet<T_be_cor_mr_r_machin_machin>(new Action<T_be_cor_mr_r_machin_machin>(this.attach_T_be_cor_mr_r_machin_machin), new Action<T_be_cor_mr_r_machin_machin>(this.detach_T_be_cor_mr_r_machin_machin));
			OnCreated();
		}
		
		[Column(Name="c_MachineRole_Id", Storage="_C_MachineRole_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_MachineRole_Id
		{
			get
			{
				return this._C_MachineRole_Id;
			}
			set
			{
				if ((this._C_MachineRole_Id != value))
				{
					this.OnC_MachineRole_IdChanging(value);
					this.SendPropertyChanging();
					this._C_MachineRole_Id = value;
					this.SendPropertyChanged("C_MachineRole_Id");
					this.OnC_MachineRole_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FKB9DA71B9FE7400DB", Storage="_T_be_cor_mr_r_machin_machin", ThisKey="C_MachineRole_Id", OtherKey="C_MachineRole_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_mr_r_machin_machin> T_be_cor_mr_r_machin_machin
		{
			get
			{
				return this._T_be_cor_mr_r_machin_machin;
			}
			set
			{
				this._T_be_cor_mr_r_machin_machin.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_mr_machinerole = this;
		}
		
		private void detach_T_be_cor_mr_r_machin_machin(T_be_cor_mr_r_machin_machin entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_mr_machinerole = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_mr_r_machin_machin")]
	public partial class T_be_cor_mr_r_machin_machin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Machine_MachineRole_Mach_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Machine_Id;
		
		private System.Guid _C_MachineRole_Id;
		
		private EntityRef<T_be_cor_mr_machine> _T_be_cor_mr_machine;
		
		private EntityRef<T_be_cor_mr_machinerole> _T_be_cor_mr_machinerole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Machine_MachineRole_Mach_IdChanging(System.Guid value);
    partial void OnC_Machine_MachineRole_Mach_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Machine_IdChanging(System.Guid value);
    partial void OnC_Machine_IdChanged();
    partial void OnC_MachineRole_IdChanging(System.Guid value);
    partial void OnC_MachineRole_IdChanged();
    #endregion
		
		public T_be_cor_mr_r_machin_machin()
		{
			this._T_be_cor_mr_machine = default(EntityRef<T_be_cor_mr_machine>);
			this._T_be_cor_mr_machinerole = default(EntityRef<T_be_cor_mr_machinerole>);
			OnCreated();
		}
		
		[Column(Name="c_Machine_MachineRole_Mach_Id", Storage="_C_Machine_MachineRole_Mach_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Machine_MachineRole_Mach_Id
		{
			get
			{
				return this._C_Machine_MachineRole_Mach_Id;
			}
			set
			{
				if ((this._C_Machine_MachineRole_Mach_Id != value))
				{
					this.OnC_Machine_MachineRole_Mach_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Machine_MachineRole_Mach_Id = value;
					this.SendPropertyChanged("C_Machine_MachineRole_Mach_Id");
					this.OnC_Machine_MachineRole_Mach_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Machine_Id", Storage="_C_Machine_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Machine_Id
		{
			get
			{
				return this._C_Machine_Id;
			}
			set
			{
				if ((this._C_Machine_Id != value))
				{
					this.OnC_Machine_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Machine_Id = value;
					this.SendPropertyChanged("C_Machine_Id");
					this.OnC_Machine_IdChanged();
				}
			}
		}
		
		[Column(Name="c_MachineRole_Id", Storage="_C_MachineRole_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_MachineRole_Id
		{
			get
			{
				return this._C_MachineRole_Id;
			}
			set
			{
				if ((this._C_MachineRole_Id != value))
				{
					this.OnC_MachineRole_IdChanging(value);
					this.SendPropertyChanging();
					this._C_MachineRole_Id = value;
					this.SendPropertyChanged("C_MachineRole_Id");
					this.OnC_MachineRole_IdChanged();
				}
			}
		}
		
		[Association(Name="FKB9DA71B95BAD365B", Storage="_T_be_cor_mr_machine", ThisKey="C_Machine_Id", OtherKey="C_Machine_Id", IsForeignKey=true)]
		public T_be_cor_mr_machine T_be_cor_mr_machine
		{
			get
			{
				return this._T_be_cor_mr_machine.Entity;
			}
			set
			{
				T_be_cor_mr_machine previousValue = this._T_be_cor_mr_machine.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_mr_machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_mr_machine.Entity = null;
						previousValue.T_be_cor_mr_r_machin_machin.Remove(this);
					}
					this._T_be_cor_mr_machine.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_mr_r_machin_machin.Add(this);
						this._C_Machine_Id = value.C_Machine_Id;
					}
					else
					{
						this._C_Machine_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_mr_machine");
				}
			}
		}
		
		[Association(Name="FKB9DA71B9FE7400DB", Storage="_T_be_cor_mr_machinerole", ThisKey="C_MachineRole_Id", OtherKey="C_MachineRole_Id", IsForeignKey=true)]
		public T_be_cor_mr_machinerole T_be_cor_mr_machinerole
		{
			get
			{
				return this._T_be_cor_mr_machinerole.Entity;
			}
			set
			{
				T_be_cor_mr_machinerole previousValue = this._T_be_cor_mr_machinerole.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_mr_machinerole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_mr_machinerole.Entity = null;
						previousValue.T_be_cor_mr_r_machin_machin.Remove(this);
					}
					this._T_be_cor_mr_machinerole.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_mr_r_machin_machin.Add(this);
						this._C_MachineRole_Id = value.C_MachineRole_Id;
					}
					else
					{
						this._C_MachineRole_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_mr_machinerole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_accountforquote")]
	public partial class T_be_cor_qu_accountforquote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_AccountForQuote_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<long> _C_AccountID;
		
		private System.Nullable<System.Guid> _C_QuoteHeader_Id;
		
		private EntityRef<T_be_cor_qu_quoteheader> _T_be_cor_qu_quoteheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_AccountForQuote_IdChanging(System.Guid value);
    partial void OnC_AccountForQuote_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_AccountIDChanging(System.Nullable<long> value);
    partial void OnC_AccountIDChanged();
    partial void OnC_QuoteHeader_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_QuoteHeader_IdChanged();
    #endregion
		
		public T_be_cor_qu_accountforquote()
		{
			this._T_be_cor_qu_quoteheader = default(EntityRef<T_be_cor_qu_quoteheader>);
			OnCreated();
		}
		
		[Column(Name="c_AccountForQuote_Id", Storage="_C_AccountForQuote_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_AccountForQuote_Id
		{
			get
			{
				return this._C_AccountForQuote_Id;
			}
			set
			{
				if ((this._C_AccountForQuote_Id != value))
				{
					this.OnC_AccountForQuote_IdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountForQuote_Id = value;
					this.SendPropertyChanged("C_AccountForQuote_Id");
					this.OnC_AccountForQuote_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_AccountID", Storage="_C_AccountID", DbType="BigInt")]
		public System.Nullable<long> C_AccountID
		{
			get
			{
				return this._C_AccountID;
			}
			set
			{
				if ((this._C_AccountID != value))
				{
					this.OnC_AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_AccountID = value;
					this.SendPropertyChanged("C_AccountID");
					this.OnC_AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteHeader_Id", Storage="_C_QuoteHeader_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_QuoteHeader_Id
		{
			get
			{
				return this._C_QuoteHeader_Id;
			}
			set
			{
				if ((this._C_QuoteHeader_Id != value))
				{
					this.OnC_QuoteHeader_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteHeader_Id = value;
					this.SendPropertyChanged("C_QuoteHeader_Id");
					this.OnC_QuoteHeader_IdChanged();
				}
			}
		}
		
		[Association(Name="FK72F3DB6E4018C0CD", Storage="_T_be_cor_qu_quoteheader", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", IsForeignKey=true)]
		public T_be_cor_qu_quoteheader T_be_cor_qu_quoteheader
		{
			get
			{
				return this._T_be_cor_qu_quoteheader.Entity;
			}
			set
			{
				T_be_cor_qu_quoteheader previousValue = this._T_be_cor_qu_quoteheader.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_quoteheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_quoteheader.Entity = null;
						previousValue.T_be_cor_qu_accountforquote.Remove(this);
					}
					this._T_be_cor_qu_quoteheader.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_accountforquote.Add(this);
						this._C_QuoteHeader_Id = value.C_QuoteHeader_Id;
					}
					else
					{
						this._C_QuoteHeader_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_quoteheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_poforquote")]
	public partial class T_be_cor_qu_poforquote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_POforQuote_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<long> _C_POID;
		
		private System.Nullable<long> _C_Order;
		
		private System.Nullable<System.Guid> _C_QuoteHeader_Id;
		
		private EntityRef<T_be_cor_qu_quoteheader> _T_be_cor_qu_quoteheader;
		
		private EntitySet<T_be_cor_qu_quoteicb> _T_be_cor_qu_quoteicb;
		
		private EntitySet<T_be_cor_qu_udrcforquoting> _T_be_cor_qu_udrcforquoting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_POforQuote_IdChanging(System.Guid value);
    partial void OnC_POforQuote_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_POIDChanging(System.Nullable<long> value);
    partial void OnC_POIDChanged();
    partial void OnC_OrderChanging(System.Nullable<long> value);
    partial void OnC_OrderChanged();
    partial void OnC_QuoteHeader_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_QuoteHeader_IdChanged();
    #endregion
		
		public T_be_cor_qu_poforquote()
		{
			this._T_be_cor_qu_quoteheader = default(EntityRef<T_be_cor_qu_quoteheader>);
			this._T_be_cor_qu_quoteicb = new EntitySet<T_be_cor_qu_quoteicb>(new Action<T_be_cor_qu_quoteicb>(this.attach_T_be_cor_qu_quoteicb), new Action<T_be_cor_qu_quoteicb>(this.detach_T_be_cor_qu_quoteicb));
			this._T_be_cor_qu_udrcforquoting = new EntitySet<T_be_cor_qu_udrcforquoting>(new Action<T_be_cor_qu_udrcforquoting>(this.attach_T_be_cor_qu_udrcforquoting), new Action<T_be_cor_qu_udrcforquoting>(this.detach_T_be_cor_qu_udrcforquoting));
			OnCreated();
		}
		
		[Column(Name="c_POforQuote_Id", Storage="_C_POforQuote_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_POforQuote_Id
		{
			get
			{
				return this._C_POforQuote_Id;
			}
			set
			{
				if ((this._C_POforQuote_Id != value))
				{
					this.OnC_POforQuote_IdChanging(value);
					this.SendPropertyChanging();
					this._C_POforQuote_Id = value;
					this.SendPropertyChanged("C_POforQuote_Id");
					this.OnC_POforQuote_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_POID", Storage="_C_POID", DbType="BigInt")]
		public System.Nullable<long> C_POID
		{
			get
			{
				return this._C_POID;
			}
			set
			{
				if ((this._C_POID != value))
				{
					this.OnC_POIDChanging(value);
					this.SendPropertyChanging();
					this._C_POID = value;
					this.SendPropertyChanged("C_POID");
					this.OnC_POIDChanged();
				}
			}
		}
		
		[Column(Name="c_Order", Storage="_C_Order", DbType="BigInt")]
		public System.Nullable<long> C_Order
		{
			get
			{
				return this._C_Order;
			}
			set
			{
				if ((this._C_Order != value))
				{
					this.OnC_OrderChanging(value);
					this.SendPropertyChanging();
					this._C_Order = value;
					this.SendPropertyChanged("C_Order");
					this.OnC_OrderChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteHeader_Id", Storage="_C_QuoteHeader_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_QuoteHeader_Id
		{
			get
			{
				return this._C_QuoteHeader_Id;
			}
			set
			{
				if ((this._C_QuoteHeader_Id != value))
				{
					this.OnC_QuoteHeader_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteHeader_Id = value;
					this.SendPropertyChanged("C_QuoteHeader_Id");
					this.OnC_QuoteHeader_IdChanged();
				}
			}
		}
		
		[Association(Name="FK4D75E5624018C0CD", Storage="_T_be_cor_qu_quoteheader", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", IsForeignKey=true)]
		public T_be_cor_qu_quoteheader T_be_cor_qu_quoteheader
		{
			get
			{
				return this._T_be_cor_qu_quoteheader.Entity;
			}
			set
			{
				T_be_cor_qu_quoteheader previousValue = this._T_be_cor_qu_quoteheader.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_quoteheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_quoteheader.Entity = null;
						previousValue.T_be_cor_qu_poforquote.Remove(this);
					}
					this._T_be_cor_qu_quoteheader.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_poforquote.Add(this);
						this._C_QuoteHeader_Id = value.C_QuoteHeader_Id;
					}
					else
					{
						this._C_QuoteHeader_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_quoteheader");
				}
			}
		}
		
		[Association(Name="FK78CC1DCB1956655E", Storage="_T_be_cor_qu_quoteicb", ThisKey="C_POforQuote_Id", OtherKey="C_POforQuote_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_quoteicb> T_be_cor_qu_quoteicb
		{
			get
			{
				return this._T_be_cor_qu_quoteicb;
			}
			set
			{
				this._T_be_cor_qu_quoteicb.Assign(value);
			}
		}
		
		[Association(Name="FKD99B29231956655E", Storage="_T_be_cor_qu_udrcforquoting", ThisKey="C_POforQuote_Id", OtherKey="C_POforQuote_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_udrcforquoting> T_be_cor_qu_udrcforquoting
		{
			get
			{
				return this._T_be_cor_qu_udrcforquoting;
			}
			set
			{
				this._T_be_cor_qu_udrcforquoting.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_poforquote = this;
		}
		
		private void detach_T_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_poforquote = null;
		}
		
		private void attach_T_be_cor_qu_udrcforquoting(T_be_cor_qu_udrcforquoting entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_poforquote = this;
		}
		
		private void detach_T_be_cor_qu_udrcforquoting(T_be_cor_qu_udrcforquoting entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_poforquote = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_quotecontent")]
	public partial class T_be_cor_qu_quotecontent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_QuoteContent_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_ReportLink;
		
		private System.Data.Linq.Binary _C_ReportContent;
		
		private System.Nullable<decimal> _C_Total;
		
		private System.Nullable<decimal> _C_TotalTax;
		
		private string _C_Currency;
		
		private string _C_BatchIDs;
		
		private string _C_FailedMessage;
		
		private System.Nullable<int> _C_Status;
		
		private System.Nullable<System.Guid> _C_QuoteHeader_Id;
		
		private EntityRef<T_be_cor_qu_quoteheader> _T_be_cor_qu_quoteheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_QuoteContent_IdChanging(System.Guid value);
    partial void OnC_QuoteContent_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_ReportLinkChanging(string value);
    partial void OnC_ReportLinkChanged();
    partial void OnC_ReportContentChanging(System.Data.Linq.Binary value);
    partial void OnC_ReportContentChanged();
    partial void OnC_TotalChanging(System.Nullable<decimal> value);
    partial void OnC_TotalChanged();
    partial void OnC_TotalTaxChanging(System.Nullable<decimal> value);
    partial void OnC_TotalTaxChanged();
    partial void OnC_CurrencyChanging(string value);
    partial void OnC_CurrencyChanged();
    partial void OnC_BatchIDsChanging(string value);
    partial void OnC_BatchIDsChanged();
    partial void OnC_FailedMessageChanging(string value);
    partial void OnC_FailedMessageChanged();
    partial void OnC_StatusChanging(System.Nullable<int> value);
    partial void OnC_StatusChanged();
    partial void OnC_QuoteHeader_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_QuoteHeader_IdChanged();
    #endregion
		
		public T_be_cor_qu_quotecontent()
		{
			this._T_be_cor_qu_quoteheader = default(EntityRef<T_be_cor_qu_quoteheader>);
			OnCreated();
		}
		
		[Column(Name="c_QuoteContent_Id", Storage="_C_QuoteContent_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_QuoteContent_Id
		{
			get
			{
				return this._C_QuoteContent_Id;
			}
			set
			{
				if ((this._C_QuoteContent_Id != value))
				{
					this.OnC_QuoteContent_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteContent_Id = value;
					this.SendPropertyChanged("C_QuoteContent_Id");
					this.OnC_QuoteContent_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_ReportLink", Storage="_C_ReportLink", DbType="NVarChar(255)")]
		public string C_ReportLink
		{
			get
			{
				return this._C_ReportLink;
			}
			set
			{
				if ((this._C_ReportLink != value))
				{
					this.OnC_ReportLinkChanging(value);
					this.SendPropertyChanging();
					this._C_ReportLink = value;
					this.SendPropertyChanged("C_ReportLink");
					this.OnC_ReportLinkChanged();
				}
			}
		}
		
		[Column(Name="c_ReportContent", Storage="_C_ReportContent", DbType="VarBinary(8000)", CanBeNull=true)]
		public System.Data.Linq.Binary C_ReportContent
		{
			get
			{
				return this._C_ReportContent;
			}
			set
			{
				if ((this._C_ReportContent != value))
				{
					this.OnC_ReportContentChanging(value);
					this.SendPropertyChanging();
					this._C_ReportContent = value;
					this.SendPropertyChanged("C_ReportContent");
					this.OnC_ReportContentChanged();
				}
			}
		}
		
		[Column(Name="c_Total", Storage="_C_Total", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Total
		{
			get
			{
				return this._C_Total;
			}
			set
			{
				if ((this._C_Total != value))
				{
					this.OnC_TotalChanging(value);
					this.SendPropertyChanging();
					this._C_Total = value;
					this.SendPropertyChanged("C_Total");
					this.OnC_TotalChanged();
				}
			}
		}
		
		[Column(Name="c_TotalTax", Storage="_C_TotalTax", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalTax
		{
			get
			{
				return this._C_TotalTax;
			}
			set
			{
				if ((this._C_TotalTax != value))
				{
					this.OnC_TotalTaxChanging(value);
					this.SendPropertyChanging();
					this._C_TotalTax = value;
					this.SendPropertyChanged("C_TotalTax");
					this.OnC_TotalTaxChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="NVarChar(255)")]
		public string C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_BatchIDs", Storage="_C_BatchIDs", DbType="NVarChar(255)")]
		public string C_BatchIDs
		{
			get
			{
				return this._C_BatchIDs;
			}
			set
			{
				if ((this._C_BatchIDs != value))
				{
					this.OnC_BatchIDsChanging(value);
					this.SendPropertyChanging();
					this._C_BatchIDs = value;
					this.SendPropertyChanged("C_BatchIDs");
					this.OnC_BatchIDsChanged();
				}
			}
		}
		
		[Column(Name="c_FailedMessage", Storage="_C_FailedMessage", DbType="NVarChar(2000)")]
		public string C_FailedMessage
		{
			get
			{
				return this._C_FailedMessage;
			}
			set
			{
				if ((this._C_FailedMessage != value))
				{
					this.OnC_FailedMessageChanging(value);
					this.SendPropertyChanging();
					this._C_FailedMessage = value;
					this.SendPropertyChanged("C_FailedMessage");
					this.OnC_FailedMessageChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="Int")]
		public System.Nullable<int> C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteHeader_Id", Storage="_C_QuoteHeader_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_QuoteHeader_Id
		{
			get
			{
				return this._C_QuoteHeader_Id;
			}
			set
			{
				if ((this._C_QuoteHeader_Id != value))
				{
					this.OnC_QuoteHeader_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteHeader_Id = value;
					this.SendPropertyChanged("C_QuoteHeader_Id");
					this.OnC_QuoteHeader_IdChanged();
				}
			}
		}
		
		[Association(Name="FK11F4836B4018C0CD", Storage="_T_be_cor_qu_quoteheader", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", IsForeignKey=true)]
		public T_be_cor_qu_quoteheader T_be_cor_qu_quoteheader
		{
			get
			{
				return this._T_be_cor_qu_quoteheader.Entity;
			}
			set
			{
				T_be_cor_qu_quoteheader previousValue = this._T_be_cor_qu_quoteheader.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_quoteheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_quoteheader.Entity = null;
						previousValue.T_be_cor_qu_quotecontent.Remove(this);
					}
					this._T_be_cor_qu_quoteheader.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_quotecontent.Add(this);
						this._C_QuoteHeader_Id = value.C_QuoteHeader_Id;
					}
					else
					{
						this._C_QuoteHeader_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_quoteheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_quoteheader")]
	public partial class T_be_cor_qu_quoteheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_QuoteHeader_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<System.DateTime> _C_StartDate;
		
		private System.Nullable<System.DateTime> _C_EndDate;
		
		private string _C_CustomIdentifier;
		
		private string _C_CustomDescription;
		
		private int _C_QuoteID;
		
		private EntitySet<T_be_cor_qu_quotecontent> _T_be_cor_qu_quotecontent;
		
		private EntitySet<T_be_cor_qu_poforquote> _T_be_cor_qu_poforquote;
		
		private EntitySet<T_be_cor_qu_accountforquote> _T_be_cor_qu_accountforquote;
		
		private EntitySet<T_be_cor_qu_quoteicb> _T_be_cor_qu_quoteicb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_QuoteHeader_IdChanging(System.Guid value);
    partial void OnC_QuoteHeader_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartDateChanged();
    partial void OnC_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndDateChanged();
    partial void OnC_CustomIdentifierChanging(string value);
    partial void OnC_CustomIdentifierChanged();
    partial void OnC_CustomDescriptionChanging(string value);
    partial void OnC_CustomDescriptionChanged();
    partial void OnC_QuoteIDChanging(int value);
    partial void OnC_QuoteIDChanged();
    #endregion
		
		public T_be_cor_qu_quoteheader()
		{
			this._T_be_cor_qu_quotecontent = new EntitySet<T_be_cor_qu_quotecontent>(new Action<T_be_cor_qu_quotecontent>(this.attach_T_be_cor_qu_quotecontent), new Action<T_be_cor_qu_quotecontent>(this.detach_T_be_cor_qu_quotecontent));
			this._T_be_cor_qu_poforquote = new EntitySet<T_be_cor_qu_poforquote>(new Action<T_be_cor_qu_poforquote>(this.attach_T_be_cor_qu_poforquote), new Action<T_be_cor_qu_poforquote>(this.detach_T_be_cor_qu_poforquote));
			this._T_be_cor_qu_accountforquote = new EntitySet<T_be_cor_qu_accountforquote>(new Action<T_be_cor_qu_accountforquote>(this.attach_T_be_cor_qu_accountforquote), new Action<T_be_cor_qu_accountforquote>(this.detach_T_be_cor_qu_accountforquote));
			this._T_be_cor_qu_quoteicb = new EntitySet<T_be_cor_qu_quoteicb>(new Action<T_be_cor_qu_quoteicb>(this.attach_T_be_cor_qu_quoteicb), new Action<T_be_cor_qu_quoteicb>(this.detach_T_be_cor_qu_quoteicb));
			OnCreated();
		}
		
		[Column(Name="c_QuoteHeader_Id", Storage="_C_QuoteHeader_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_QuoteHeader_Id
		{
			get
			{
				return this._C_QuoteHeader_Id;
			}
			set
			{
				if ((this._C_QuoteHeader_Id != value))
				{
					this.OnC_QuoteHeader_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteHeader_Id = value;
					this.SendPropertyChanged("C_QuoteHeader_Id");
					this.OnC_QuoteHeader_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_StartDate", Storage="_C_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartDate
		{
			get
			{
				return this._C_StartDate;
			}
			set
			{
				if ((this._C_StartDate != value))
				{
					this.OnC_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_StartDate = value;
					this.SendPropertyChanged("C_StartDate");
					this.OnC_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_EndDate", Storage="_C_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndDate
		{
			get
			{
				return this._C_EndDate;
			}
			set
			{
				if ((this._C_EndDate != value))
				{
					this.OnC_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_EndDate = value;
					this.SendPropertyChanged("C_EndDate");
					this.OnC_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_CustomIdentifier", Storage="_C_CustomIdentifier", DbType="NVarChar(1024)")]
		public string C_CustomIdentifier
		{
			get
			{
				return this._C_CustomIdentifier;
			}
			set
			{
				if ((this._C_CustomIdentifier != value))
				{
					this.OnC_CustomIdentifierChanging(value);
					this.SendPropertyChanging();
					this._C_CustomIdentifier = value;
					this.SendPropertyChanged("C_CustomIdentifier");
					this.OnC_CustomIdentifierChanged();
				}
			}
		}
		
		[Column(Name="c_CustomDescription", Storage="_C_CustomDescription", DbType="NVarChar(255)")]
		public string C_CustomDescription
		{
			get
			{
				return this._C_CustomDescription;
			}
			set
			{
				if ((this._C_CustomDescription != value))
				{
					this.OnC_CustomDescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_CustomDescription = value;
					this.SendPropertyChanged("C_CustomDescription");
					this.OnC_CustomDescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteID", Storage="_C_QuoteID", DbType="Int NOT NULL")]
		public int C_QuoteID
		{
			get
			{
				return this._C_QuoteID;
			}
			set
			{
				if ((this._C_QuoteID != value))
				{
					this.OnC_QuoteIDChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteID = value;
					this.SendPropertyChanged("C_QuoteID");
					this.OnC_QuoteIDChanged();
				}
			}
		}
		
		[Association(Name="FK11F4836B4018C0CD", Storage="_T_be_cor_qu_quotecontent", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_quotecontent> T_be_cor_qu_quotecontent
		{
			get
			{
				return this._T_be_cor_qu_quotecontent;
			}
			set
			{
				this._T_be_cor_qu_quotecontent.Assign(value);
			}
		}
		
		[Association(Name="FK4D75E5624018C0CD", Storage="_T_be_cor_qu_poforquote", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_poforquote> T_be_cor_qu_poforquote
		{
			get
			{
				return this._T_be_cor_qu_poforquote;
			}
			set
			{
				this._T_be_cor_qu_poforquote.Assign(value);
			}
		}
		
		[Association(Name="FK72F3DB6E4018C0CD", Storage="_T_be_cor_qu_accountforquote", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_accountforquote> T_be_cor_qu_accountforquote
		{
			get
			{
				return this._T_be_cor_qu_accountforquote;
			}
			set
			{
				this._T_be_cor_qu_accountforquote.Assign(value);
			}
		}
		
		[Association(Name="FK78CC1DCB4018C0CD", Storage="_T_be_cor_qu_quoteicb", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_qu_quoteicb> T_be_cor_qu_quoteicb
		{
			get
			{
				return this._T_be_cor_qu_quoteicb;
			}
			set
			{
				this._T_be_cor_qu_quoteicb.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_qu_quotecontent(T_be_cor_qu_quotecontent entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = this;
		}
		
		private void detach_T_be_cor_qu_quotecontent(T_be_cor_qu_quotecontent entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = null;
		}
		
		private void attach_T_be_cor_qu_poforquote(T_be_cor_qu_poforquote entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = this;
		}
		
		private void detach_T_be_cor_qu_poforquote(T_be_cor_qu_poforquote entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = null;
		}
		
		private void attach_T_be_cor_qu_accountforquote(T_be_cor_qu_accountforquote entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = this;
		}
		
		private void detach_T_be_cor_qu_accountforquote(T_be_cor_qu_accountforquote entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = null;
		}
		
		private void attach_T_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = this;
		}
		
		private void detach_T_be_cor_qu_quoteicb(T_be_cor_qu_quoteicb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_qu_quoteheader = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_quoteicb")]
	public partial class T_be_cor_qu_quoteicb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_QuoteICB_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_CurrentChargeType;
		
		private System.Nullable<int> _C_PriceableItemId;
		
		private System.Data.Linq.Binary _C_ChargesRates;
		
		private System.Nullable<System.Guid> _C_POforQuote_Id;
		
		private System.Nullable<System.Guid> _C_QuoteHeader_Id;
		
		private EntityRef<T_be_cor_qu_poforquote> _T_be_cor_qu_poforquote;
		
		private EntityRef<T_be_cor_qu_quoteheader> _T_be_cor_qu_quoteheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_QuoteICB_IdChanging(System.Guid value);
    partial void OnC_QuoteICB_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_CurrentChargeTypeChanging(string value);
    partial void OnC_CurrentChargeTypeChanged();
    partial void OnC_PriceableItemIdChanging(System.Nullable<int> value);
    partial void OnC_PriceableItemIdChanged();
    partial void OnC_ChargesRatesChanging(System.Data.Linq.Binary value);
    partial void OnC_ChargesRatesChanged();
    partial void OnC_POforQuote_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_POforQuote_IdChanged();
    partial void OnC_QuoteHeader_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_QuoteHeader_IdChanged();
    #endregion
		
		public T_be_cor_qu_quoteicb()
		{
			this._T_be_cor_qu_poforquote = default(EntityRef<T_be_cor_qu_poforquote>);
			this._T_be_cor_qu_quoteheader = default(EntityRef<T_be_cor_qu_quoteheader>);
			OnCreated();
		}
		
		[Column(Name="c_QuoteICB_Id", Storage="_C_QuoteICB_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_QuoteICB_Id
		{
			get
			{
				return this._C_QuoteICB_Id;
			}
			set
			{
				if ((this._C_QuoteICB_Id != value))
				{
					this.OnC_QuoteICB_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteICB_Id = value;
					this.SendPropertyChanged("C_QuoteICB_Id");
					this.OnC_QuoteICB_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_CurrentChargeType", Storage="_C_CurrentChargeType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_CurrentChargeType
		{
			get
			{
				return this._C_CurrentChargeType;
			}
			set
			{
				if ((this._C_CurrentChargeType != value))
				{
					this.OnC_CurrentChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CurrentChargeType = value;
					this.SendPropertyChanged("C_CurrentChargeType");
					this.OnC_CurrentChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_PriceableItemId", Storage="_C_PriceableItemId", DbType="Int")]
		public System.Nullable<int> C_PriceableItemId
		{
			get
			{
				return this._C_PriceableItemId;
			}
			set
			{
				if ((this._C_PriceableItemId != value))
				{
					this.OnC_PriceableItemIdChanging(value);
					this.SendPropertyChanging();
					this._C_PriceableItemId = value;
					this.SendPropertyChanged("C_PriceableItemId");
					this.OnC_PriceableItemIdChanged();
				}
			}
		}
		
		[Column(Name="c_ChargesRates", Storage="_C_ChargesRates", DbType="VarBinary(8000)", CanBeNull=true)]
		public System.Data.Linq.Binary C_ChargesRates
		{
			get
			{
				return this._C_ChargesRates;
			}
			set
			{
				if ((this._C_ChargesRates != value))
				{
					this.OnC_ChargesRatesChanging(value);
					this.SendPropertyChanging();
					this._C_ChargesRates = value;
					this.SendPropertyChanged("C_ChargesRates");
					this.OnC_ChargesRatesChanged();
				}
			}
		}
		
		[Column(Name="c_POforQuote_Id", Storage="_C_POforQuote_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_POforQuote_Id
		{
			get
			{
				return this._C_POforQuote_Id;
			}
			set
			{
				if ((this._C_POforQuote_Id != value))
				{
					this.OnC_POforQuote_IdChanging(value);
					this.SendPropertyChanging();
					this._C_POforQuote_Id = value;
					this.SendPropertyChanged("C_POforQuote_Id");
					this.OnC_POforQuote_IdChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteHeader_Id", Storage="_C_QuoteHeader_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_QuoteHeader_Id
		{
			get
			{
				return this._C_QuoteHeader_Id;
			}
			set
			{
				if ((this._C_QuoteHeader_Id != value))
				{
					this.OnC_QuoteHeader_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteHeader_Id = value;
					this.SendPropertyChanged("C_QuoteHeader_Id");
					this.OnC_QuoteHeader_IdChanged();
				}
			}
		}
		
		[Association(Name="FK78CC1DCB1956655E", Storage="_T_be_cor_qu_poforquote", ThisKey="C_POforQuote_Id", OtherKey="C_POforQuote_Id", IsForeignKey=true)]
		public T_be_cor_qu_poforquote T_be_cor_qu_poforquote
		{
			get
			{
				return this._T_be_cor_qu_poforquote.Entity;
			}
			set
			{
				T_be_cor_qu_poforquote previousValue = this._T_be_cor_qu_poforquote.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_poforquote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_poforquote.Entity = null;
						previousValue.T_be_cor_qu_quoteicb.Remove(this);
					}
					this._T_be_cor_qu_poforquote.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_quoteicb.Add(this);
						this._C_POforQuote_Id = value.C_POforQuote_Id;
					}
					else
					{
						this._C_POforQuote_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_poforquote");
				}
			}
		}
		
		[Association(Name="FK78CC1DCB4018C0CD", Storage="_T_be_cor_qu_quoteheader", ThisKey="C_QuoteHeader_Id", OtherKey="C_QuoteHeader_Id", IsForeignKey=true)]
		public T_be_cor_qu_quoteheader T_be_cor_qu_quoteheader
		{
			get
			{
				return this._T_be_cor_qu_quoteheader.Entity;
			}
			set
			{
				T_be_cor_qu_quoteheader previousValue = this._T_be_cor_qu_quoteheader.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_quoteheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_quoteheader.Entity = null;
						previousValue.T_be_cor_qu_quoteicb.Remove(this);
					}
					this._T_be_cor_qu_quoteheader.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_quoteicb.Add(this);
						this._C_QuoteHeader_Id = value.C_QuoteHeader_Id;
					}
					else
					{
						this._C_QuoteHeader_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_quoteheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_quotelog")]
	public partial class T_be_cor_qu_quotelog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_QuoteLog_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<System.DateTime> _C_DateAdded;
		
		private string _C_Message;
		
		private string _C_QuoteIdentifier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_QuoteLog_IdChanging(System.Guid value);
    partial void OnC_QuoteLog_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DateAddedChanged();
    partial void OnC_MessageChanging(string value);
    partial void OnC_MessageChanged();
    partial void OnC_QuoteIdentifierChanging(string value);
    partial void OnC_QuoteIdentifierChanged();
    #endregion
		
		public T_be_cor_qu_quotelog()
		{
			OnCreated();
		}
		
		[Column(Name="c_QuoteLog_Id", Storage="_C_QuoteLog_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_QuoteLog_Id
		{
			get
			{
				return this._C_QuoteLog_Id;
			}
			set
			{
				if ((this._C_QuoteLog_Id != value))
				{
					this.OnC_QuoteLog_IdChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteLog_Id = value;
					this.SendPropertyChanged("C_QuoteLog_Id");
					this.OnC_QuoteLog_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_DateAdded", Storage="_C_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DateAdded
		{
			get
			{
				return this._C_DateAdded;
			}
			set
			{
				if ((this._C_DateAdded != value))
				{
					this.OnC_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._C_DateAdded = value;
					this.SendPropertyChanged("C_DateAdded");
					this.OnC_DateAddedChanged();
				}
			}
		}
		
		[Column(Name="c_Message", Storage="_C_Message", DbType="NVarChar(2000)")]
		public string C_Message
		{
			get
			{
				return this._C_Message;
			}
			set
			{
				if ((this._C_Message != value))
				{
					this.OnC_MessageChanging(value);
					this.SendPropertyChanging();
					this._C_Message = value;
					this.SendPropertyChanged("C_Message");
					this.OnC_MessageChanged();
				}
			}
		}
		
		[Column(Name="c_QuoteIdentifier", Storage="_C_QuoteIdentifier", DbType="NVarChar(512)")]
		public string C_QuoteIdentifier
		{
			get
			{
				return this._C_QuoteIdentifier;
			}
			set
			{
				if ((this._C_QuoteIdentifier != value))
				{
					this.OnC_QuoteIdentifierChanging(value);
					this.SendPropertyChanging();
					this._C_QuoteIdentifier = value;
					this.SendPropertyChanged("C_QuoteIdentifier");
					this.OnC_QuoteIdentifierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_qu_udrcforquoting")]
	public partial class T_be_cor_qu_udrcforquoting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_UDRCForQuoting_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<int> _C_PI_Id;
		
		private string _C_PI_Name;
		
		private System.Nullable<System.DateTime> _C_StartDate;
		
		private System.Nullable<System.DateTime> _C_EndDate;
		
		private System.Nullable<decimal> _C_Value;
		
		private System.Nullable<System.Guid> _C_POforQuote_Id;
		
		private EntityRef<T_be_cor_qu_poforquote> _T_be_cor_qu_poforquote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_UDRCForQuoting_IdChanging(System.Guid value);
    partial void OnC_UDRCForQuoting_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_PI_IdChanging(System.Nullable<int> value);
    partial void OnC_PI_IdChanged();
    partial void OnC_PI_NameChanging(string value);
    partial void OnC_PI_NameChanged();
    partial void OnC_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartDateChanged();
    partial void OnC_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndDateChanged();
    partial void OnC_ValueChanging(System.Nullable<decimal> value);
    partial void OnC_ValueChanged();
    partial void OnC_POforQuote_IdChanging(System.Nullable<System.Guid> value);
    partial void OnC_POforQuote_IdChanged();
    #endregion
		
		public T_be_cor_qu_udrcforquoting()
		{
			this._T_be_cor_qu_poforquote = default(EntityRef<T_be_cor_qu_poforquote>);
			OnCreated();
		}
		
		[Column(Name="c_UDRCForQuoting_Id", Storage="_C_UDRCForQuoting_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_UDRCForQuoting_Id
		{
			get
			{
				return this._C_UDRCForQuoting_Id;
			}
			set
			{
				if ((this._C_UDRCForQuoting_Id != value))
				{
					this.OnC_UDRCForQuoting_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UDRCForQuoting_Id = value;
					this.SendPropertyChanged("C_UDRCForQuoting_Id");
					this.OnC_UDRCForQuoting_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_PI_Id", Storage="_C_PI_Id", DbType="Int")]
		public System.Nullable<int> C_PI_Id
		{
			get
			{
				return this._C_PI_Id;
			}
			set
			{
				if ((this._C_PI_Id != value))
				{
					this.OnC_PI_IdChanging(value);
					this.SendPropertyChanging();
					this._C_PI_Id = value;
					this.SendPropertyChanged("C_PI_Id");
					this.OnC_PI_IdChanged();
				}
			}
		}
		
		[Column(Name="c_PI_Name", Storage="_C_PI_Name", DbType="NVarChar(255)")]
		public string C_PI_Name
		{
			get
			{
				return this._C_PI_Name;
			}
			set
			{
				if ((this._C_PI_Name != value))
				{
					this.OnC_PI_NameChanging(value);
					this.SendPropertyChanging();
					this._C_PI_Name = value;
					this.SendPropertyChanged("C_PI_Name");
					this.OnC_PI_NameChanged();
				}
			}
		}
		
		[Column(Name="c_StartDate", Storage="_C_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartDate
		{
			get
			{
				return this._C_StartDate;
			}
			set
			{
				if ((this._C_StartDate != value))
				{
					this.OnC_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_StartDate = value;
					this.SendPropertyChanged("C_StartDate");
					this.OnC_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_EndDate", Storage="_C_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndDate
		{
			get
			{
				return this._C_EndDate;
			}
			set
			{
				if ((this._C_EndDate != value))
				{
					this.OnC_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_EndDate = value;
					this.SendPropertyChanged("C_EndDate");
					this.OnC_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_Value", Storage="_C_Value", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Value
		{
			get
			{
				return this._C_Value;
			}
			set
			{
				if ((this._C_Value != value))
				{
					this.OnC_ValueChanging(value);
					this.SendPropertyChanging();
					this._C_Value = value;
					this.SendPropertyChanged("C_Value");
					this.OnC_ValueChanged();
				}
			}
		}
		
		[Column(Name="c_POforQuote_Id", Storage="_C_POforQuote_Id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_POforQuote_Id
		{
			get
			{
				return this._C_POforQuote_Id;
			}
			set
			{
				if ((this._C_POforQuote_Id != value))
				{
					this.OnC_POforQuote_IdChanging(value);
					this.SendPropertyChanging();
					this._C_POforQuote_Id = value;
					this.SendPropertyChanged("C_POforQuote_Id");
					this.OnC_POforQuote_IdChanged();
				}
			}
		}
		
		[Association(Name="FKD99B29231956655E", Storage="_T_be_cor_qu_poforquote", ThisKey="C_POforQuote_Id", OtherKey="C_POforQuote_Id", IsForeignKey=true)]
		public T_be_cor_qu_poforquote T_be_cor_qu_poforquote
		{
			get
			{
				return this._T_be_cor_qu_poforquote.Entity;
			}
			set
			{
				T_be_cor_qu_poforquote previousValue = this._T_be_cor_qu_poforquote.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_qu_poforquote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_qu_poforquote.Entity = null;
						previousValue.T_be_cor_qu_udrcforquoting.Remove(this);
					}
					this._T_be_cor_qu_poforquote.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_qu_udrcforquoting.Add(this);
						this._C_POforQuote_Id = value.C_POforQuote_Id;
					}
					else
					{
						this._C_POforQuote_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("T_be_cor_qu_poforquote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_BillSetting")]
	public partial class T_be_cor_ui_BillSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_BillSetting_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_InlineTax;
		
		private string _C_InlineAdjustments;
		
		private string _C_AllowSelfCare;
		
		private string _C_AllowOnlinePayment;
		
		private string _C_AllowSavedReports;
		
		private string _C_ShowSecondPassData;
		
		private string _C_AllowSharedReports;
		
		private string _C_ShowOnlyHardClosedIntervals;
		
		private EntitySet<T_be_cor_ui_r_Site_BillS> _T_be_cor_ui_r_Site_BillS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_BillSetting_IdChanging(System.Guid value);
    partial void OnC_BillSetting_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_InlineTaxChanging(string value);
    partial void OnC_InlineTaxChanged();
    partial void OnC_InlineAdjustmentsChanging(string value);
    partial void OnC_InlineAdjustmentsChanged();
    partial void OnC_AllowSelfCareChanging(string value);
    partial void OnC_AllowSelfCareChanged();
    partial void OnC_AllowOnlinePaymentChanging(string value);
    partial void OnC_AllowOnlinePaymentChanged();
    partial void OnC_AllowSavedReportsChanging(string value);
    partial void OnC_AllowSavedReportsChanged();
    partial void OnC_ShowSecondPassDataChanging(string value);
    partial void OnC_ShowSecondPassDataChanged();
    partial void OnC_AllowSharedReportsChanging(string value);
    partial void OnC_AllowSharedReportsChanged();
    partial void OnC_ShowOnlyHardClosedIntervalsChanging(string value);
    partial void OnC_ShowOnlyHardClosedIntervalsChanged();
    #endregion
		
		public T_be_cor_ui_BillSetting()
		{
			this._T_be_cor_ui_r_Site_BillS = new EntitySet<T_be_cor_ui_r_Site_BillS>(new Action<T_be_cor_ui_r_Site_BillS>(this.attach_T_be_cor_ui_r_Site_BillS), new Action<T_be_cor_ui_r_Site_BillS>(this.detach_T_be_cor_ui_r_Site_BillS));
			OnCreated();
		}
		
		[Column(Name="c_BillSetting_Id", Storage="_C_BillSetting_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_BillSetting_Id
		{
			get
			{
				return this._C_BillSetting_Id;
			}
			set
			{
				if ((this._C_BillSetting_Id != value))
				{
					this.OnC_BillSetting_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillSetting_Id = value;
					this.SendPropertyChanged("C_BillSetting_Id");
					this.OnC_BillSetting_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_InlineTax", Storage="_C_InlineTax", DbType="Char(1)")]
		public string C_InlineTax
		{
			get
			{
				return this._C_InlineTax;
			}
			set
			{
				if ((this._C_InlineTax != value))
				{
					this.OnC_InlineTaxChanging(value);
					this.SendPropertyChanging();
					this._C_InlineTax = value;
					this.SendPropertyChanged("C_InlineTax");
					this.OnC_InlineTaxChanged();
				}
			}
		}
		
		[Column(Name="c_InlineAdjustments", Storage="_C_InlineAdjustments", DbType="Char(1)")]
		public string C_InlineAdjustments
		{
			get
			{
				return this._C_InlineAdjustments;
			}
			set
			{
				if ((this._C_InlineAdjustments != value))
				{
					this.OnC_InlineAdjustmentsChanging(value);
					this.SendPropertyChanging();
					this._C_InlineAdjustments = value;
					this.SendPropertyChanged("C_InlineAdjustments");
					this.OnC_InlineAdjustmentsChanged();
				}
			}
		}
		
		[Column(Name="c_AllowSelfCare", Storage="_C_AllowSelfCare", DbType="Char(1)")]
		public string C_AllowSelfCare
		{
			get
			{
				return this._C_AllowSelfCare;
			}
			set
			{
				if ((this._C_AllowSelfCare != value))
				{
					this.OnC_AllowSelfCareChanging(value);
					this.SendPropertyChanging();
					this._C_AllowSelfCare = value;
					this.SendPropertyChanged("C_AllowSelfCare");
					this.OnC_AllowSelfCareChanged();
				}
			}
		}
		
		[Column(Name="c_AllowOnlinePayment", Storage="_C_AllowOnlinePayment", DbType="Char(1)")]
		public string C_AllowOnlinePayment
		{
			get
			{
				return this._C_AllowOnlinePayment;
			}
			set
			{
				if ((this._C_AllowOnlinePayment != value))
				{
					this.OnC_AllowOnlinePaymentChanging(value);
					this.SendPropertyChanging();
					this._C_AllowOnlinePayment = value;
					this.SendPropertyChanged("C_AllowOnlinePayment");
					this.OnC_AllowOnlinePaymentChanged();
				}
			}
		}
		
		[Column(Name="c_AllowSavedReports", Storage="_C_AllowSavedReports", DbType="Char(1)")]
		public string C_AllowSavedReports
		{
			get
			{
				return this._C_AllowSavedReports;
			}
			set
			{
				if ((this._C_AllowSavedReports != value))
				{
					this.OnC_AllowSavedReportsChanging(value);
					this.SendPropertyChanging();
					this._C_AllowSavedReports = value;
					this.SendPropertyChanged("C_AllowSavedReports");
					this.OnC_AllowSavedReportsChanged();
				}
			}
		}
		
		[Column(Name="c_ShowSecondPassData", Storage="_C_ShowSecondPassData", DbType="Char(1)")]
		public string C_ShowSecondPassData
		{
			get
			{
				return this._C_ShowSecondPassData;
			}
			set
			{
				if ((this._C_ShowSecondPassData != value))
				{
					this.OnC_ShowSecondPassDataChanging(value);
					this.SendPropertyChanging();
					this._C_ShowSecondPassData = value;
					this.SendPropertyChanged("C_ShowSecondPassData");
					this.OnC_ShowSecondPassDataChanged();
				}
			}
		}
		
		[Column(Name="c_AllowSharedReports", Storage="_C_AllowSharedReports", DbType="Char(1)")]
		public string C_AllowSharedReports
		{
			get
			{
				return this._C_AllowSharedReports;
			}
			set
			{
				if ((this._C_AllowSharedReports != value))
				{
					this.OnC_AllowSharedReportsChanging(value);
					this.SendPropertyChanging();
					this._C_AllowSharedReports = value;
					this.SendPropertyChanged("C_AllowSharedReports");
					this.OnC_AllowSharedReportsChanged();
				}
			}
		}
		
		[Column(Name="c_ShowOnlyHardClosedIntervals", Storage="_C_ShowOnlyHardClosedIntervals", DbType="Char(1)")]
		public string C_ShowOnlyHardClosedIntervals
		{
			get
			{
				return this._C_ShowOnlyHardClosedIntervals;
			}
			set
			{
				if ((this._C_ShowOnlyHardClosedIntervals != value))
				{
					this.OnC_ShowOnlyHardClosedIntervalsChanging(value);
					this.SendPropertyChanging();
					this._C_ShowOnlyHardClosedIntervals = value;
					this.SendPropertyChanged("C_ShowOnlyHardClosedIntervals");
					this.OnC_ShowOnlyHardClosedIntervalsChanged();
				}
			}
		}
		
		[Association(Name="FK84B207BFF0387E4C", Storage="_T_be_cor_ui_r_Site_BillS", ThisKey="C_BillSetting_Id", OtherKey="C_BillSetting_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_BillS> T_be_cor_ui_r_Site_BillS
		{
			get
			{
				return this._T_be_cor_ui_r_Site_BillS;
			}
			set
			{
				this._T_be_cor_ui_r_Site_BillS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_BillSetting = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_BillSetting = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_Column")]
	public partial class T_be_cor_ui_Column : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Column_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Name;
		
		private string _C_Description;
		
		private string _C_CssClass;
		
		private string _C_Style;
		
		private string _C_Title;
		
		private int _C_Position;
		
		private int _C_Width;
		
		private EntitySet<T_be_cor_ui_r_Column_Widget> _T_be_cor_ui_r_Column_Widget;
		
		private EntitySet<T_be_cor_ui_r_Dashbo_Column> _T_be_cor_ui_r_Dashbo_Column;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Column_IdChanging(System.Guid value);
    partial void OnC_Column_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_CssClassChanging(string value);
    partial void OnC_CssClassChanged();
    partial void OnC_StyleChanging(string value);
    partial void OnC_StyleChanged();
    partial void OnC_TitleChanging(string value);
    partial void OnC_TitleChanged();
    partial void OnC_PositionChanging(int value);
    partial void OnC_PositionChanged();
    partial void OnC_WidthChanging(int value);
    partial void OnC_WidthChanged();
    #endregion
		
		public T_be_cor_ui_Column()
		{
			this._T_be_cor_ui_r_Column_Widget = new EntitySet<T_be_cor_ui_r_Column_Widget>(new Action<T_be_cor_ui_r_Column_Widget>(this.attach_T_be_cor_ui_r_Column_Widget), new Action<T_be_cor_ui_r_Column_Widget>(this.detach_T_be_cor_ui_r_Column_Widget));
			this._T_be_cor_ui_r_Dashbo_Column = new EntitySet<T_be_cor_ui_r_Dashbo_Column>(new Action<T_be_cor_ui_r_Dashbo_Column>(this.attach_T_be_cor_ui_r_Dashbo_Column), new Action<T_be_cor_ui_r_Dashbo_Column>(this.detach_T_be_cor_ui_r_Dashbo_Column));
			OnCreated();
		}
		
		[Column(Name="c_Column_Id", Storage="_C_Column_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Column_Id
		{
			get
			{
				return this._C_Column_Id;
			}
			set
			{
				if ((this._C_Column_Id != value))
				{
					this.OnC_Column_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Column_Id = value;
					this.SendPropertyChanged("C_Column_Id");
					this.OnC_Column_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_CssClass", Storage="_C_CssClass", DbType="NVarChar(255)")]
		public string C_CssClass
		{
			get
			{
				return this._C_CssClass;
			}
			set
			{
				if ((this._C_CssClass != value))
				{
					this.OnC_CssClassChanging(value);
					this.SendPropertyChanging();
					this._C_CssClass = value;
					this.SendPropertyChanged("C_CssClass");
					this.OnC_CssClassChanged();
				}
			}
		}
		
		[Column(Name="c_Style", Storage="_C_Style", DbType="NVarChar(255)")]
		public string C_Style
		{
			get
			{
				return this._C_Style;
			}
			set
			{
				if ((this._C_Style != value))
				{
					this.OnC_StyleChanging(value);
					this.SendPropertyChanging();
					this._C_Style = value;
					this.SendPropertyChanged("C_Style");
					this.OnC_StyleChanged();
				}
			}
		}
		
		[Column(Name="c_Title", Storage="_C_Title", DbType="NVarChar(255)")]
		public string C_Title
		{
			get
			{
				return this._C_Title;
			}
			set
			{
				if ((this._C_Title != value))
				{
					this.OnC_TitleChanging(value);
					this.SendPropertyChanging();
					this._C_Title = value;
					this.SendPropertyChanged("C_Title");
					this.OnC_TitleChanged();
				}
			}
		}
		
		[Column(Name="c_Position", Storage="_C_Position", DbType="Int NOT NULL")]
		public int C_Position
		{
			get
			{
				return this._C_Position;
			}
			set
			{
				if ((this._C_Position != value))
				{
					this.OnC_PositionChanging(value);
					this.SendPropertyChanging();
					this._C_Position = value;
					this.SendPropertyChanged("C_Position");
					this.OnC_PositionChanged();
				}
			}
		}
		
		[Column(Name="c_Width", Storage="_C_Width", DbType="Int NOT NULL")]
		public int C_Width
		{
			get
			{
				return this._C_Width;
			}
			set
			{
				if ((this._C_Width != value))
				{
					this.OnC_WidthChanging(value);
					this.SendPropertyChanging();
					this._C_Width = value;
					this.SendPropertyChanged("C_Width");
					this.OnC_WidthChanged();
				}
			}
		}
		
		[Association(Name="FK4266DABE2132732D", Storage="_T_be_cor_ui_r_Column_Widget", ThisKey="C_Column_Id", OtherKey="C_Column_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Column_Widget> T_be_cor_ui_r_Column_Widget
		{
			get
			{
				return this._T_be_cor_ui_r_Column_Widget;
			}
			set
			{
				this._T_be_cor_ui_r_Column_Widget.Assign(value);
			}
		}
		
		[Association(Name="FK681EC3DE2132732D", Storage="_T_be_cor_ui_r_Dashbo_Column", ThisKey="C_Column_Id", OtherKey="C_Column_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Dashbo_Column> T_be_cor_ui_r_Dashbo_Column
		{
			get
			{
				return this._T_be_cor_ui_r_Dashbo_Column;
			}
			set
			{
				this._T_be_cor_ui_r_Dashbo_Column.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Column = this;
		}
		
		private void detach_T_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Column = null;
		}
		
		private void attach_T_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Column = this;
		}
		
		private void detach_T_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Column = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_Dashboard")]
	public partial class T_be_cor_ui_Dashboard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Dashboard_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private string _C_Title;
		
		private string _C_CssClass;
		
		private string _C_Style;
		
		private EntitySet<T_be_cor_ui_r_Site_Dashb> _T_be_cor_ui_r_Site_Dashb;
		
		private EntitySet<T_be_cor_ui_r_Dashbo_Column> _T_be_cor_ui_r_Dashbo_Column;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Dashboard_IdChanging(System.Guid value);
    partial void OnC_Dashboard_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TitleChanging(string value);
    partial void OnC_TitleChanged();
    partial void OnC_CssClassChanging(string value);
    partial void OnC_CssClassChanged();
    partial void OnC_StyleChanging(string value);
    partial void OnC_StyleChanged();
    #endregion
		
		public T_be_cor_ui_Dashboard()
		{
			this._T_be_cor_ui_r_Site_Dashb = new EntitySet<T_be_cor_ui_r_Site_Dashb>(new Action<T_be_cor_ui_r_Site_Dashb>(this.attach_T_be_cor_ui_r_Site_Dashb), new Action<T_be_cor_ui_r_Site_Dashb>(this.detach_T_be_cor_ui_r_Site_Dashb));
			this._T_be_cor_ui_r_Dashbo_Column = new EntitySet<T_be_cor_ui_r_Dashbo_Column>(new Action<T_be_cor_ui_r_Dashbo_Column>(this.attach_T_be_cor_ui_r_Dashbo_Column), new Action<T_be_cor_ui_r_Dashbo_Column>(this.detach_T_be_cor_ui_r_Dashbo_Column));
			OnCreated();
		}
		
		[Column(Name="c_Dashboard_Id", Storage="_C_Dashboard_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Dashboard_Id
		{
			get
			{
				return this._C_Dashboard_Id;
			}
			set
			{
				if ((this._C_Dashboard_Id != value))
				{
					this.OnC_Dashboard_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dashboard_Id = value;
					this.SendPropertyChanged("C_Dashboard_Id");
					this.OnC_Dashboard_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Title", Storage="_C_Title", DbType="NVarChar(255)")]
		public string C_Title
		{
			get
			{
				return this._C_Title;
			}
			set
			{
				if ((this._C_Title != value))
				{
					this.OnC_TitleChanging(value);
					this.SendPropertyChanging();
					this._C_Title = value;
					this.SendPropertyChanged("C_Title");
					this.OnC_TitleChanged();
				}
			}
		}
		
		[Column(Name="c_CssClass", Storage="_C_CssClass", DbType="NVarChar(255)")]
		public string C_CssClass
		{
			get
			{
				return this._C_CssClass;
			}
			set
			{
				if ((this._C_CssClass != value))
				{
					this.OnC_CssClassChanging(value);
					this.SendPropertyChanging();
					this._C_CssClass = value;
					this.SendPropertyChanged("C_CssClass");
					this.OnC_CssClassChanged();
				}
			}
		}
		
		[Column(Name="c_Style", Storage="_C_Style", DbType="NVarChar(255)")]
		public string C_Style
		{
			get
			{
				return this._C_Style;
			}
			set
			{
				if ((this._C_Style != value))
				{
					this.OnC_StyleChanging(value);
					this.SendPropertyChanging();
					this._C_Style = value;
					this.SendPropertyChanged("C_Style");
					this.OnC_StyleChanged();
				}
			}
		}
		
		[Association(Name="FK4364355BD31D9D5", Storage="_T_be_cor_ui_r_Site_Dashb", ThisKey="C_Dashboard_Id", OtherKey="C_Dashboard_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Dashb> T_be_cor_ui_r_Site_Dashb
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Dashb;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Dashb.Assign(value);
			}
		}
		
		[Association(Name="FK681EC3DED31D9D5", Storage="_T_be_cor_ui_r_Dashbo_Column", ThisKey="C_Dashboard_Id", OtherKey="C_Dashboard_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Dashbo_Column> T_be_cor_ui_r_Dashbo_Column
		{
			get
			{
				return this._T_be_cor_ui_r_Dashbo_Column;
			}
			set
			{
				this._T_be_cor_ui_r_Dashbo_Column.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Dashboard = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Dashboard = null;
		}
		
		private void attach_T_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Dashboard = this;
		}
		
		private void detach_T_be_cor_ui_r_Dashbo_Column(T_be_cor_ui_r_Dashbo_Column entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Dashboard = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_EntryPoint")]
	public partial class T_be_cor_ui_EntryPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_EntryPoint_Id;
		
		private int _C__version;
		
		private string _C_EntryPointName;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Url;
		
		private string _C_Description;
		
		private EntitySet<T_be_cor_ui_r_Site_Entry> _T_be_cor_ui_r_Site_Entry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_EntryPoint_IdChanging(System.Guid value);
    partial void OnC_EntryPoint_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_EntryPointNameChanging(string value);
    partial void OnC_EntryPointNameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_UrlChanging(string value);
    partial void OnC_UrlChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_be_cor_ui_EntryPoint()
		{
			this._T_be_cor_ui_r_Site_Entry = new EntitySet<T_be_cor_ui_r_Site_Entry>(new Action<T_be_cor_ui_r_Site_Entry>(this.attach_T_be_cor_ui_r_Site_Entry), new Action<T_be_cor_ui_r_Site_Entry>(this.detach_T_be_cor_ui_r_Site_Entry));
			OnCreated();
		}
		
		[Column(Name="c_EntryPoint_Id", Storage="_C_EntryPoint_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_EntryPoint_Id
		{
			get
			{
				return this._C_EntryPoint_Id;
			}
			set
			{
				if ((this._C_EntryPoint_Id != value))
				{
					this.OnC_EntryPoint_IdChanging(value);
					this.SendPropertyChanging();
					this._C_EntryPoint_Id = value;
					this.SendPropertyChanged("C_EntryPoint_Id");
					this.OnC_EntryPoint_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_EntryPointName", Storage="_C_EntryPointName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_EntryPointName
		{
			get
			{
				return this._C_EntryPointName;
			}
			set
			{
				if ((this._C_EntryPointName != value))
				{
					this.OnC_EntryPointNameChanging(value);
					this.SendPropertyChanging();
					this._C_EntryPointName = value;
					this.SendPropertyChanged("C_EntryPointName");
					this.OnC_EntryPointNameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Url", Storage="_C_Url", DbType="NVarChar(255)")]
		public string C_Url
		{
			get
			{
				return this._C_Url;
			}
			set
			{
				if ((this._C_Url != value))
				{
					this.OnC_UrlChanging(value);
					this.SendPropertyChanging();
					this._C_Url = value;
					this.SendPropertyChanged("C_Url");
					this.OnC_UrlChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK6B593A9EF237B3CA", Storage="_T_be_cor_ui_r_Site_Entry", ThisKey="C_EntryPoint_Id", OtherKey="C_EntryPoint_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Entry> T_be_cor_ui_r_Site_Entry
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Entry;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Entry.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_EntryPoint = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_EntryPoint = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_Parameter")]
	public partial class T_be_cor_ui_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Parameter_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Name;
		
		private string _C_Value;
		
		private string _C_Description;
		
		private string _C_IsRequired;
		
		private EntitySet<T_be_cor_ui_r_Widget_Param> _T_be_cor_ui_r_Widget_Param;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Parameter_IdChanging(System.Guid value);
    partial void OnC_Parameter_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_ValueChanging(string value);
    partial void OnC_ValueChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_IsRequiredChanging(string value);
    partial void OnC_IsRequiredChanged();
    #endregion
		
		public T_be_cor_ui_Parameter()
		{
			this._T_be_cor_ui_r_Widget_Param = new EntitySet<T_be_cor_ui_r_Widget_Param>(new Action<T_be_cor_ui_r_Widget_Param>(this.attach_T_be_cor_ui_r_Widget_Param), new Action<T_be_cor_ui_r_Widget_Param>(this.detach_T_be_cor_ui_r_Widget_Param));
			OnCreated();
		}
		
		[Column(Name="c_Parameter_Id", Storage="_C_Parameter_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Parameter_Id
		{
			get
			{
				return this._C_Parameter_Id;
			}
			set
			{
				if ((this._C_Parameter_Id != value))
				{
					this.OnC_Parameter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Parameter_Id = value;
					this.SendPropertyChanged("C_Parameter_Id");
					this.OnC_Parameter_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Value", Storage="_C_Value", DbType="NVarChar(255)")]
		public string C_Value
		{
			get
			{
				return this._C_Value;
			}
			set
			{
				if ((this._C_Value != value))
				{
					this.OnC_ValueChanging(value);
					this.SendPropertyChanging();
					this._C_Value = value;
					this.SendPropertyChanged("C_Value");
					this.OnC_ValueChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_IsRequired", Storage="_C_IsRequired", DbType="Char(1)")]
		public string C_IsRequired
		{
			get
			{
				return this._C_IsRequired;
			}
			set
			{
				if ((this._C_IsRequired != value))
				{
					this.OnC_IsRequiredChanging(value);
					this.SendPropertyChanging();
					this._C_IsRequired = value;
					this.SendPropertyChanged("C_IsRequired");
					this.OnC_IsRequiredChanged();
				}
			}
		}
		
		[Association(Name="FK38F61CAB7231A6B3", Storage="_T_be_cor_ui_r_Widget_Param", ThisKey="C_Parameter_Id", OtherKey="C_Parameter_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Widget_Param> T_be_cor_ui_r_Widget_Param
		{
			get
			{
				return this._T_be_cor_ui_r_Widget_Param;
			}
			set
			{
				this._T_be_cor_ui_r_Widget_Param.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Parameter = this;
		}
		
		private void detach_T_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Parameter = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_ProductViewMap")]
	public partial class T_be_cor_ui_ProductViewMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ProductViewMapping_Id;
		
		private int _C__version;
		
		private string _C_ProductViewName;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_CustomPage;
		
		private string _C_CustomLayout;
		
		private EntitySet<T_be_cor_ui_r_Site_Produ> _T_be_cor_ui_r_Site_Produ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ProductViewMapping_IdChanging(System.Guid value);
    partial void OnC_ProductViewMapping_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_ProductViewNameChanging(string value);
    partial void OnC_ProductViewNameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_CustomPageChanging(string value);
    partial void OnC_CustomPageChanged();
    partial void OnC_CustomLayoutChanging(string value);
    partial void OnC_CustomLayoutChanged();
    #endregion
		
		public T_be_cor_ui_ProductViewMap()
		{
			this._T_be_cor_ui_r_Site_Produ = new EntitySet<T_be_cor_ui_r_Site_Produ>(new Action<T_be_cor_ui_r_Site_Produ>(this.attach_T_be_cor_ui_r_Site_Produ), new Action<T_be_cor_ui_r_Site_Produ>(this.detach_T_be_cor_ui_r_Site_Produ));
			OnCreated();
		}
		
		[Column(Name="c_ProductViewMapping_Id", Storage="_C_ProductViewMapping_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ProductViewMapping_Id
		{
			get
			{
				return this._C_ProductViewMapping_Id;
			}
			set
			{
				if ((this._C_ProductViewMapping_Id != value))
				{
					this.OnC_ProductViewMapping_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewMapping_Id = value;
					this.SendPropertyChanged("C_ProductViewMapping_Id");
					this.OnC_ProductViewMapping_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewName", Storage="_C_ProductViewName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ProductViewName
		{
			get
			{
				return this._C_ProductViewName;
			}
			set
			{
				if ((this._C_ProductViewName != value))
				{
					this.OnC_ProductViewNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewName = value;
					this.SendPropertyChanged("C_ProductViewName");
					this.OnC_ProductViewNameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_CustomPage", Storage="_C_CustomPage", DbType="NVarChar(255)")]
		public string C_CustomPage
		{
			get
			{
				return this._C_CustomPage;
			}
			set
			{
				if ((this._C_CustomPage != value))
				{
					this.OnC_CustomPageChanging(value);
					this.SendPropertyChanging();
					this._C_CustomPage = value;
					this.SendPropertyChanged("C_CustomPage");
					this.OnC_CustomPageChanged();
				}
			}
		}
		
		[Column(Name="c_CustomLayout", Storage="_C_CustomLayout", DbType="NVarChar(255)")]
		public string C_CustomLayout
		{
			get
			{
				return this._C_CustomLayout;
			}
			set
			{
				if ((this._C_CustomLayout != value))
				{
					this.OnC_CustomLayoutChanging(value);
					this.SendPropertyChanging();
					this._C_CustomLayout = value;
					this.SendPropertyChanged("C_CustomLayout");
					this.OnC_CustomLayoutChanged();
				}
			}
		}
		
		[Association(Name="FK2EE4ACACFCBF9B9", Storage="_T_be_cor_ui_r_Site_Produ", ThisKey="C_ProductViewMapping_Id", OtherKey="C_ProductViewMapping_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Produ> T_be_cor_ui_r_Site_Produ
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Produ;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Produ.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_ProductViewMap = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_ProductViewMap = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Column_Widget")]
	public partial class T_be_cor_ui_r_Column_Widget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Column_Widget_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Column_Id;
		
		private System.Guid _C_Widget_Id;
		
		private EntityRef<T_be_cor_ui_Column> _T_be_cor_ui_Column;
		
		private EntityRef<T_be_cor_ui_Widget> _T_be_cor_ui_Widget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Column_Widget_IdChanging(System.Guid value);
    partial void OnC_Column_Widget_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Column_IdChanging(System.Guid value);
    partial void OnC_Column_IdChanged();
    partial void OnC_Widget_IdChanging(System.Guid value);
    partial void OnC_Widget_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Column_Widget()
		{
			this._T_be_cor_ui_Column = default(EntityRef<T_be_cor_ui_Column>);
			this._T_be_cor_ui_Widget = default(EntityRef<T_be_cor_ui_Widget>);
			OnCreated();
		}
		
		[Column(Name="c_Column_Widget_Id", Storage="_C_Column_Widget_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Column_Widget_Id
		{
			get
			{
				return this._C_Column_Widget_Id;
			}
			set
			{
				if ((this._C_Column_Widget_Id != value))
				{
					this.OnC_Column_Widget_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Column_Widget_Id = value;
					this.SendPropertyChanged("C_Column_Widget_Id");
					this.OnC_Column_Widget_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Column_Id", Storage="_C_Column_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Column_Id
		{
			get
			{
				return this._C_Column_Id;
			}
			set
			{
				if ((this._C_Column_Id != value))
				{
					this.OnC_Column_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Column_Id = value;
					this.SendPropertyChanged("C_Column_Id");
					this.OnC_Column_IdChanged();
				}
			}
		}
		
		[Column(Name="c_Widget_Id", Storage="_C_Widget_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Widget_Id
		{
			get
			{
				return this._C_Widget_Id;
			}
			set
			{
				if ((this._C_Widget_Id != value))
				{
					this.OnC_Widget_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Widget_Id = value;
					this.SendPropertyChanged("C_Widget_Id");
					this.OnC_Widget_IdChanged();
				}
			}
		}
		
		[Association(Name="FK4266DABE2132732D", Storage="_T_be_cor_ui_Column", ThisKey="C_Column_Id", OtherKey="C_Column_Id", IsForeignKey=true)]
		public T_be_cor_ui_Column T_be_cor_ui_Column
		{
			get
			{
				return this._T_be_cor_ui_Column.Entity;
			}
			set
			{
				T_be_cor_ui_Column previousValue = this._T_be_cor_ui_Column.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Column.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Column.Entity = null;
						previousValue.T_be_cor_ui_r_Column_Widget.Remove(this);
					}
					this._T_be_cor_ui_Column.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Column_Widget.Add(this);
						this._C_Column_Id = value.C_Column_Id;
					}
					else
					{
						this._C_Column_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Column");
				}
			}
		}
		
		[Association(Name="FK4266DABE7BD375DD", Storage="_T_be_cor_ui_Widget", ThisKey="C_Widget_Id", OtherKey="C_Widget_Id", IsForeignKey=true)]
		public T_be_cor_ui_Widget T_be_cor_ui_Widget
		{
			get
			{
				return this._T_be_cor_ui_Widget.Entity;
			}
			set
			{
				T_be_cor_ui_Widget previousValue = this._T_be_cor_ui_Widget.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Widget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Widget.Entity = null;
						previousValue.T_be_cor_ui_r_Column_Widget.Remove(this);
					}
					this._T_be_cor_ui_Widget.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Column_Widget.Add(this);
						this._C_Widget_Id = value.C_Widget_Id;
					}
					else
					{
						this._C_Widget_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Widget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Dashbo_Column")]
	public partial class T_be_cor_ui_r_Dashbo_Column : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Dashboard_Column_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Dashboard_Id;
		
		private System.Guid _C_Column_Id;
		
		private EntityRef<T_be_cor_ui_Column> _T_be_cor_ui_Column;
		
		private EntityRef<T_be_cor_ui_Dashboard> _T_be_cor_ui_Dashboard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Dashboard_Column_IdChanging(System.Guid value);
    partial void OnC_Dashboard_Column_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Dashboard_IdChanging(System.Guid value);
    partial void OnC_Dashboard_IdChanged();
    partial void OnC_Column_IdChanging(System.Guid value);
    partial void OnC_Column_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Dashbo_Column()
		{
			this._T_be_cor_ui_Column = default(EntityRef<T_be_cor_ui_Column>);
			this._T_be_cor_ui_Dashboard = default(EntityRef<T_be_cor_ui_Dashboard>);
			OnCreated();
		}
		
		[Column(Name="c_Dashboard_Column_Id", Storage="_C_Dashboard_Column_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Dashboard_Column_Id
		{
			get
			{
				return this._C_Dashboard_Column_Id;
			}
			set
			{
				if ((this._C_Dashboard_Column_Id != value))
				{
					this.OnC_Dashboard_Column_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dashboard_Column_Id = value;
					this.SendPropertyChanged("C_Dashboard_Column_Id");
					this.OnC_Dashboard_Column_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Dashboard_Id", Storage="_C_Dashboard_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Dashboard_Id
		{
			get
			{
				return this._C_Dashboard_Id;
			}
			set
			{
				if ((this._C_Dashboard_Id != value))
				{
					this.OnC_Dashboard_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dashboard_Id = value;
					this.SendPropertyChanged("C_Dashboard_Id");
					this.OnC_Dashboard_IdChanged();
				}
			}
		}
		
		[Column(Name="c_Column_Id", Storage="_C_Column_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Column_Id
		{
			get
			{
				return this._C_Column_Id;
			}
			set
			{
				if ((this._C_Column_Id != value))
				{
					this.OnC_Column_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Column_Id = value;
					this.SendPropertyChanged("C_Column_Id");
					this.OnC_Column_IdChanged();
				}
			}
		}
		
		[Association(Name="FK681EC3DE2132732D", Storage="_T_be_cor_ui_Column", ThisKey="C_Column_Id", OtherKey="C_Column_Id", IsForeignKey=true)]
		public T_be_cor_ui_Column T_be_cor_ui_Column
		{
			get
			{
				return this._T_be_cor_ui_Column.Entity;
			}
			set
			{
				T_be_cor_ui_Column previousValue = this._T_be_cor_ui_Column.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Column.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Column.Entity = null;
						previousValue.T_be_cor_ui_r_Dashbo_Column.Remove(this);
					}
					this._T_be_cor_ui_Column.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Dashbo_Column.Add(this);
						this._C_Column_Id = value.C_Column_Id;
					}
					else
					{
						this._C_Column_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Column");
				}
			}
		}
		
		[Association(Name="FK681EC3DED31D9D5", Storage="_T_be_cor_ui_Dashboard", ThisKey="C_Dashboard_Id", OtherKey="C_Dashboard_Id", IsForeignKey=true)]
		public T_be_cor_ui_Dashboard T_be_cor_ui_Dashboard
		{
			get
			{
				return this._T_be_cor_ui_Dashboard.Entity;
			}
			set
			{
				T_be_cor_ui_Dashboard previousValue = this._T_be_cor_ui_Dashboard.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Dashboard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Dashboard.Entity = null;
						previousValue.T_be_cor_ui_r_Dashbo_Column.Remove(this);
					}
					this._T_be_cor_ui_Dashboard.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Dashbo_Column.Add(this);
						this._C_Dashboard_Id = value.C_Dashboard_Id;
					}
					else
					{
						this._C_Dashboard_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Dashboard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_SavedS_Searc")]
	public partial class T_be_cor_ui_r_SavedS_Searc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_SavedSearch_SearchFilter_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_SavedSearch_Id;
		
		private System.Guid _C_SearchFilter_Id;
		
		private EntityRef<T_be_cor_ui_SavedSearch> _T_be_cor_ui_SavedSearch;
		
		private EntityRef<T_be_cor_ui_SearchFilter> _T_be_cor_ui_SearchFilter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_SavedSearch_SearchFilter_IdChanging(System.Guid value);
    partial void OnC_SavedSearch_SearchFilter_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_SavedSearch_IdChanging(System.Guid value);
    partial void OnC_SavedSearch_IdChanged();
    partial void OnC_SearchFilter_IdChanging(System.Guid value);
    partial void OnC_SearchFilter_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_SavedS_Searc()
		{
			this._T_be_cor_ui_SavedSearch = default(EntityRef<T_be_cor_ui_SavedSearch>);
			this._T_be_cor_ui_SearchFilter = default(EntityRef<T_be_cor_ui_SearchFilter>);
			OnCreated();
		}
		
		[Column(Name="c_SavedSearch_SearchFilter_Id", Storage="_C_SavedSearch_SearchFilter_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_SavedSearch_SearchFilter_Id
		{
			get
			{
				return this._C_SavedSearch_SearchFilter_Id;
			}
			set
			{
				if ((this._C_SavedSearch_SearchFilter_Id != value))
				{
					this.OnC_SavedSearch_SearchFilter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_SavedSearch_SearchFilter_Id = value;
					this.SendPropertyChanged("C_SavedSearch_SearchFilter_Id");
					this.OnC_SavedSearch_SearchFilter_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_SavedSearch_Id", Storage="_C_SavedSearch_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_SavedSearch_Id
		{
			get
			{
				return this._C_SavedSearch_Id;
			}
			set
			{
				if ((this._C_SavedSearch_Id != value))
				{
					this.OnC_SavedSearch_IdChanging(value);
					this.SendPropertyChanging();
					this._C_SavedSearch_Id = value;
					this.SendPropertyChanged("C_SavedSearch_Id");
					this.OnC_SavedSearch_IdChanged();
				}
			}
		}
		
		[Column(Name="c_SearchFilter_Id", Storage="_C_SearchFilter_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_SearchFilter_Id
		{
			get
			{
				return this._C_SearchFilter_Id;
			}
			set
			{
				if ((this._C_SearchFilter_Id != value))
				{
					this.OnC_SearchFilter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_SearchFilter_Id = value;
					this.SendPropertyChanged("C_SearchFilter_Id");
					this.OnC_SearchFilter_IdChanged();
				}
			}
		}
		
		[Association(Name="FKBE0A9C77A4FB35B5", Storage="_T_be_cor_ui_SavedSearch", ThisKey="C_SavedSearch_Id", OtherKey="C_SavedSearch_Id", IsForeignKey=true)]
		public T_be_cor_ui_SavedSearch T_be_cor_ui_SavedSearch
		{
			get
			{
				return this._T_be_cor_ui_SavedSearch.Entity;
			}
			set
			{
				T_be_cor_ui_SavedSearch previousValue = this._T_be_cor_ui_SavedSearch.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_SavedSearch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_SavedSearch.Entity = null;
						previousValue.T_be_cor_ui_r_SavedS_Searc.Remove(this);
					}
					this._T_be_cor_ui_SavedSearch.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_SavedS_Searc.Add(this);
						this._C_SavedSearch_Id = value.C_SavedSearch_Id;
					}
					else
					{
						this._C_SavedSearch_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_SavedSearch");
				}
			}
		}
		
		[Association(Name="FKBE0A9C77BA5036E7", Storage="_T_be_cor_ui_SearchFilter", ThisKey="C_SearchFilter_Id", OtherKey="C_SearchFilter_Id", IsForeignKey=true)]
		public T_be_cor_ui_SearchFilter T_be_cor_ui_SearchFilter
		{
			get
			{
				return this._T_be_cor_ui_SearchFilter.Entity;
			}
			set
			{
				T_be_cor_ui_SearchFilter previousValue = this._T_be_cor_ui_SearchFilter.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_SearchFilter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_SearchFilter.Entity = null;
						previousValue.T_be_cor_ui_r_SavedS_Searc.Remove(this);
					}
					this._T_be_cor_ui_SearchFilter.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_SavedS_Searc.Add(this);
						this._C_SearchFilter_Id = value.C_SearchFilter_Id;
					}
					else
					{
						this._C_SearchFilter_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_SearchFilter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Site_BillS")]
	public partial class T_be_cor_ui_r_Site_BillS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_BillSetting_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Site_Id;
		
		private System.Guid _C_BillSetting_Id;
		
		private EntityRef<T_be_cor_ui_Site> _T_be_cor_ui_Site;
		
		private EntityRef<T_be_cor_ui_BillSetting> _T_be_cor_ui_BillSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_BillSetting_IdChanging(System.Guid value);
    partial void OnC_Site_BillSetting_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC_BillSetting_IdChanging(System.Guid value);
    partial void OnC_BillSetting_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Site_BillS()
		{
			this._T_be_cor_ui_Site = default(EntityRef<T_be_cor_ui_Site>);
			this._T_be_cor_ui_BillSetting = default(EntityRef<T_be_cor_ui_BillSetting>);
			OnCreated();
		}
		
		[Column(Name="c_Site_BillSetting_Id", Storage="_C_Site_BillSetting_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_BillSetting_Id
		{
			get
			{
				return this._C_Site_BillSetting_Id;
			}
			set
			{
				if ((this._C_Site_BillSetting_Id != value))
				{
					this.OnC_Site_BillSetting_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_BillSetting_Id = value;
					this.SendPropertyChanged("C_Site_BillSetting_Id");
					this.OnC_Site_BillSetting_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c_BillSetting_Id", Storage="_C_BillSetting_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_BillSetting_Id
		{
			get
			{
				return this._C_BillSetting_Id;
			}
			set
			{
				if ((this._C_BillSetting_Id != value))
				{
					this.OnC_BillSetting_IdChanging(value);
					this.SendPropertyChanging();
					this._C_BillSetting_Id = value;
					this.SendPropertyChanged("C_BillSetting_Id");
					this.OnC_BillSetting_IdChanged();
				}
			}
		}
		
		[Association(Name="FK84B207BF9E01EF1D", Storage="_T_be_cor_ui_Site", ThisKey="C_Site_Id", OtherKey="C_Site_Id", IsForeignKey=true)]
		public T_be_cor_ui_Site T_be_cor_ui_Site
		{
			get
			{
				return this._T_be_cor_ui_Site.Entity;
			}
			set
			{
				T_be_cor_ui_Site previousValue = this._T_be_cor_ui_Site.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Site.Entity = null;
						previousValue.T_be_cor_ui_r_Site_BillS.Remove(this);
					}
					this._T_be_cor_ui_Site.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_BillS.Add(this);
						this._C_Site_Id = value.C_Site_Id;
					}
					else
					{
						this._C_Site_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Site");
				}
			}
		}
		
		[Association(Name="FK84B207BFF0387E4C", Storage="_T_be_cor_ui_BillSetting", ThisKey="C_BillSetting_Id", OtherKey="C_BillSetting_Id", IsForeignKey=true)]
		public T_be_cor_ui_BillSetting T_be_cor_ui_BillSetting
		{
			get
			{
				return this._T_be_cor_ui_BillSetting.Entity;
			}
			set
			{
				T_be_cor_ui_BillSetting previousValue = this._T_be_cor_ui_BillSetting.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_BillSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_BillSetting.Entity = null;
						previousValue.T_be_cor_ui_r_Site_BillS.Remove(this);
					}
					this._T_be_cor_ui_BillSetting.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_BillS.Add(this);
						this._C_BillSetting_Id = value.C_BillSetting_Id;
					}
					else
					{
						this._C_BillSetting_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_BillSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Site_Dashb")]
	public partial class T_be_cor_ui_r_Site_Dashb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_Dashboard_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Site_Id;
		
		private System.Guid _C_Dashboard_Id;
		
		private EntityRef<T_be_cor_ui_Site> _T_be_cor_ui_Site;
		
		private EntityRef<T_be_cor_ui_Dashboard> _T_be_cor_ui_Dashboard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_Dashboard_IdChanging(System.Guid value);
    partial void OnC_Site_Dashboard_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC_Dashboard_IdChanging(System.Guid value);
    partial void OnC_Dashboard_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Site_Dashb()
		{
			this._T_be_cor_ui_Site = default(EntityRef<T_be_cor_ui_Site>);
			this._T_be_cor_ui_Dashboard = default(EntityRef<T_be_cor_ui_Dashboard>);
			OnCreated();
		}
		
		[Column(Name="c_Site_Dashboard_Id", Storage="_C_Site_Dashboard_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_Dashboard_Id
		{
			get
			{
				return this._C_Site_Dashboard_Id;
			}
			set
			{
				if ((this._C_Site_Dashboard_Id != value))
				{
					this.OnC_Site_Dashboard_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Dashboard_Id = value;
					this.SendPropertyChanged("C_Site_Dashboard_Id");
					this.OnC_Site_Dashboard_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c_Dashboard_Id", Storage="_C_Dashboard_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Dashboard_Id
		{
			get
			{
				return this._C_Dashboard_Id;
			}
			set
			{
				if ((this._C_Dashboard_Id != value))
				{
					this.OnC_Dashboard_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Dashboard_Id = value;
					this.SendPropertyChanged("C_Dashboard_Id");
					this.OnC_Dashboard_IdChanged();
				}
			}
		}
		
		[Association(Name="FK4364355B9E01EF1D", Storage="_T_be_cor_ui_Site", ThisKey="C_Site_Id", OtherKey="C_Site_Id", IsForeignKey=true)]
		public T_be_cor_ui_Site T_be_cor_ui_Site
		{
			get
			{
				return this._T_be_cor_ui_Site.Entity;
			}
			set
			{
				T_be_cor_ui_Site previousValue = this._T_be_cor_ui_Site.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Site.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Dashb.Remove(this);
					}
					this._T_be_cor_ui_Site.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Dashb.Add(this);
						this._C_Site_Id = value.C_Site_Id;
					}
					else
					{
						this._C_Site_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Site");
				}
			}
		}
		
		[Association(Name="FK4364355BD31D9D5", Storage="_T_be_cor_ui_Dashboard", ThisKey="C_Dashboard_Id", OtherKey="C_Dashboard_Id", IsForeignKey=true)]
		public T_be_cor_ui_Dashboard T_be_cor_ui_Dashboard
		{
			get
			{
				return this._T_be_cor_ui_Dashboard.Entity;
			}
			set
			{
				T_be_cor_ui_Dashboard previousValue = this._T_be_cor_ui_Dashboard.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Dashboard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Dashboard.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Dashb.Remove(this);
					}
					this._T_be_cor_ui_Dashboard.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Dashb.Add(this);
						this._C_Dashboard_Id = value.C_Dashboard_Id;
					}
					else
					{
						this._C_Dashboard_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Dashboard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Site_Entry")]
	public partial class T_be_cor_ui_r_Site_Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_EntryPoint_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Site_Id;
		
		private System.Guid _C_EntryPoint_Id;
		
		private EntityRef<T_be_cor_ui_Site> _T_be_cor_ui_Site;
		
		private EntityRef<T_be_cor_ui_EntryPoint> _T_be_cor_ui_EntryPoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_EntryPoint_IdChanging(System.Guid value);
    partial void OnC_Site_EntryPoint_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC_EntryPoint_IdChanging(System.Guid value);
    partial void OnC_EntryPoint_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Site_Entry()
		{
			this._T_be_cor_ui_Site = default(EntityRef<T_be_cor_ui_Site>);
			this._T_be_cor_ui_EntryPoint = default(EntityRef<T_be_cor_ui_EntryPoint>);
			OnCreated();
		}
		
		[Column(Name="c_Site_EntryPoint_Id", Storage="_C_Site_EntryPoint_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_EntryPoint_Id
		{
			get
			{
				return this._C_Site_EntryPoint_Id;
			}
			set
			{
				if ((this._C_Site_EntryPoint_Id != value))
				{
					this.OnC_Site_EntryPoint_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_EntryPoint_Id = value;
					this.SendPropertyChanged("C_Site_EntryPoint_Id");
					this.OnC_Site_EntryPoint_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c_EntryPoint_Id", Storage="_C_EntryPoint_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_EntryPoint_Id
		{
			get
			{
				return this._C_EntryPoint_Id;
			}
			set
			{
				if ((this._C_EntryPoint_Id != value))
				{
					this.OnC_EntryPoint_IdChanging(value);
					this.SendPropertyChanging();
					this._C_EntryPoint_Id = value;
					this.SendPropertyChanged("C_EntryPoint_Id");
					this.OnC_EntryPoint_IdChanged();
				}
			}
		}
		
		[Association(Name="FK6B593A9E9E01EF1D", Storage="_T_be_cor_ui_Site", ThisKey="C_Site_Id", OtherKey="C_Site_Id", IsForeignKey=true)]
		public T_be_cor_ui_Site T_be_cor_ui_Site
		{
			get
			{
				return this._T_be_cor_ui_Site.Entity;
			}
			set
			{
				T_be_cor_ui_Site previousValue = this._T_be_cor_ui_Site.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Site.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Entry.Remove(this);
					}
					this._T_be_cor_ui_Site.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Entry.Add(this);
						this._C_Site_Id = value.C_Site_Id;
					}
					else
					{
						this._C_Site_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Site");
				}
			}
		}
		
		[Association(Name="FK6B593A9EF237B3CA", Storage="_T_be_cor_ui_EntryPoint", ThisKey="C_EntryPoint_Id", OtherKey="C_EntryPoint_Id", IsForeignKey=true)]
		public T_be_cor_ui_EntryPoint T_be_cor_ui_EntryPoint
		{
			get
			{
				return this._T_be_cor_ui_EntryPoint.Entity;
			}
			set
			{
				T_be_cor_ui_EntryPoint previousValue = this._T_be_cor_ui_EntryPoint.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_EntryPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_EntryPoint.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Entry.Remove(this);
					}
					this._T_be_cor_ui_EntryPoint.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Entry.Add(this);
						this._C_EntryPoint_Id = value.C_EntryPoint_Id;
					}
					else
					{
						this._C_EntryPoint_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_EntryPoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Site_Produ")]
	public partial class T_be_cor_ui_r_Site_Produ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_ProductViewMapping_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Site_Id;
		
		private System.Guid _C_ProductViewMapping_Id;
		
		private EntityRef<T_be_cor_ui_Site> _T_be_cor_ui_Site;
		
		private EntityRef<T_be_cor_ui_ProductViewMap> _T_be_cor_ui_ProductViewMap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_ProductViewMapping_IdChanging(System.Guid value);
    partial void OnC_Site_ProductViewMapping_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC_ProductViewMapping_IdChanging(System.Guid value);
    partial void OnC_ProductViewMapping_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Site_Produ()
		{
			this._T_be_cor_ui_Site = default(EntityRef<T_be_cor_ui_Site>);
			this._T_be_cor_ui_ProductViewMap = default(EntityRef<T_be_cor_ui_ProductViewMap>);
			OnCreated();
		}
		
		[Column(Name="c_Site_ProductViewMapping_Id", Storage="_C_Site_ProductViewMapping_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_ProductViewMapping_Id
		{
			get
			{
				return this._C_Site_ProductViewMapping_Id;
			}
			set
			{
				if ((this._C_Site_ProductViewMapping_Id != value))
				{
					this.OnC_Site_ProductViewMapping_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_ProductViewMapping_Id = value;
					this.SendPropertyChanged("C_Site_ProductViewMapping_Id");
					this.OnC_Site_ProductViewMapping_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c_ProductViewMapping_Id", Storage="_C_ProductViewMapping_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_ProductViewMapping_Id
		{
			get
			{
				return this._C_ProductViewMapping_Id;
			}
			set
			{
				if ((this._C_ProductViewMapping_Id != value))
				{
					this.OnC_ProductViewMapping_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ProductViewMapping_Id = value;
					this.SendPropertyChanged("C_ProductViewMapping_Id");
					this.OnC_ProductViewMapping_IdChanged();
				}
			}
		}
		
		[Association(Name="FK2EE4ACAC9E01EF1D", Storage="_T_be_cor_ui_Site", ThisKey="C_Site_Id", OtherKey="C_Site_Id", IsForeignKey=true)]
		public T_be_cor_ui_Site T_be_cor_ui_Site
		{
			get
			{
				return this._T_be_cor_ui_Site.Entity;
			}
			set
			{
				T_be_cor_ui_Site previousValue = this._T_be_cor_ui_Site.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Site.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Produ.Remove(this);
					}
					this._T_be_cor_ui_Site.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Produ.Add(this);
						this._C_Site_Id = value.C_Site_Id;
					}
					else
					{
						this._C_Site_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Site");
				}
			}
		}
		
		[Association(Name="FK2EE4ACACFCBF9B9", Storage="_T_be_cor_ui_ProductViewMap", ThisKey="C_ProductViewMapping_Id", OtherKey="C_ProductViewMapping_Id", IsForeignKey=true)]
		public T_be_cor_ui_ProductViewMap T_be_cor_ui_ProductViewMap
		{
			get
			{
				return this._T_be_cor_ui_ProductViewMap.Entity;
			}
			set
			{
				T_be_cor_ui_ProductViewMap previousValue = this._T_be_cor_ui_ProductViewMap.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_ProductViewMap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_ProductViewMap.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Produ.Remove(this);
					}
					this._T_be_cor_ui_ProductViewMap.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Produ.Add(this);
						this._C_ProductViewMapping_Id = value.C_ProductViewMapping_Id;
					}
					else
					{
						this._C_ProductViewMapping_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_ProductViewMap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Site_Repor")]
	public partial class T_be_cor_ui_r_Site_Repor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_ReportInventory_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Site_Id;
		
		private System.Guid _C_ReportInventory_Id;
		
		private EntityRef<T_be_cor_ui_ReportInventory> _T_be_cor_ui_ReportInventory;
		
		private EntityRef<T_be_cor_ui_Site> _T_be_cor_ui_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_ReportInventory_IdChanging(System.Guid value);
    partial void OnC_Site_ReportInventory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC_ReportInventory_IdChanging(System.Guid value);
    partial void OnC_ReportInventory_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Site_Repor()
		{
			this._T_be_cor_ui_ReportInventory = default(EntityRef<T_be_cor_ui_ReportInventory>);
			this._T_be_cor_ui_Site = default(EntityRef<T_be_cor_ui_Site>);
			OnCreated();
		}
		
		[Column(Name="c_Site_ReportInventory_Id", Storage="_C_Site_ReportInventory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_ReportInventory_Id
		{
			get
			{
				return this._C_Site_ReportInventory_Id;
			}
			set
			{
				if ((this._C_Site_ReportInventory_Id != value))
				{
					this.OnC_Site_ReportInventory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_ReportInventory_Id = value;
					this.SendPropertyChanged("C_Site_ReportInventory_Id");
					this.OnC_Site_ReportInventory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c_ReportInventory_Id", Storage="_C_ReportInventory_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_ReportInventory_Id
		{
			get
			{
				return this._C_ReportInventory_Id;
			}
			set
			{
				if ((this._C_ReportInventory_Id != value))
				{
					this.OnC_ReportInventory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ReportInventory_Id = value;
					this.SendPropertyChanged("C_ReportInventory_Id");
					this.OnC_ReportInventory_IdChanged();
				}
			}
		}
		
		[Association(Name="FK9102A9F235A41245", Storage="_T_be_cor_ui_ReportInventory", ThisKey="C_ReportInventory_Id", OtherKey="C_ReportInventory_Id", IsForeignKey=true)]
		public T_be_cor_ui_ReportInventory T_be_cor_ui_ReportInventory
		{
			get
			{
				return this._T_be_cor_ui_ReportInventory.Entity;
			}
			set
			{
				T_be_cor_ui_ReportInventory previousValue = this._T_be_cor_ui_ReportInventory.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_ReportInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_ReportInventory.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Repor.Remove(this);
					}
					this._T_be_cor_ui_ReportInventory.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Repor.Add(this);
						this._C_ReportInventory_Id = value.C_ReportInventory_Id;
					}
					else
					{
						this._C_ReportInventory_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_ReportInventory");
				}
			}
		}
		
		[Association(Name="FK9102A9F29E01EF1D", Storage="_T_be_cor_ui_Site", ThisKey="C_Site_Id", OtherKey="C_Site_Id", IsForeignKey=true)]
		public T_be_cor_ui_Site T_be_cor_ui_Site
		{
			get
			{
				return this._T_be_cor_ui_Site.Entity;
			}
			set
			{
				T_be_cor_ui_Site previousValue = this._T_be_cor_ui_Site.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Site.Entity = null;
						previousValue.T_be_cor_ui_r_Site_Repor.Remove(this);
					}
					this._T_be_cor_ui_Site.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Site_Repor.Add(this);
						this._C_Site_Id = value.C_Site_Id;
					}
					else
					{
						this._C_Site_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_r_Widget_Param")]
	public partial class T_be_cor_ui_r_Widget_Param : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Widget_Parameter_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Guid _C_Widget_Id;
		
		private System.Guid _C_Parameter_Id;
		
		private EntityRef<T_be_cor_ui_Parameter> _T_be_cor_ui_Parameter;
		
		private EntityRef<T_be_cor_ui_Widget> _T_be_cor_ui_Widget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Widget_Parameter_IdChanging(System.Guid value);
    partial void OnC_Widget_Parameter_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_Widget_IdChanging(System.Guid value);
    partial void OnC_Widget_IdChanged();
    partial void OnC_Parameter_IdChanging(System.Guid value);
    partial void OnC_Parameter_IdChanged();
    #endregion
		
		public T_be_cor_ui_r_Widget_Param()
		{
			this._T_be_cor_ui_Parameter = default(EntityRef<T_be_cor_ui_Parameter>);
			this._T_be_cor_ui_Widget = default(EntityRef<T_be_cor_ui_Widget>);
			OnCreated();
		}
		
		[Column(Name="c_Widget_Parameter_Id", Storage="_C_Widget_Parameter_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Widget_Parameter_Id
		{
			get
			{
				return this._C_Widget_Parameter_Id;
			}
			set
			{
				if ((this._C_Widget_Parameter_Id != value))
				{
					this.OnC_Widget_Parameter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Widget_Parameter_Id = value;
					this.SendPropertyChanged("C_Widget_Parameter_Id");
					this.OnC_Widget_Parameter_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Widget_Id", Storage="_C_Widget_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Widget_Id
		{
			get
			{
				return this._C_Widget_Id;
			}
			set
			{
				if ((this._C_Widget_Id != value))
				{
					this.OnC_Widget_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Widget_Id = value;
					this.SendPropertyChanged("C_Widget_Id");
					this.OnC_Widget_IdChanged();
				}
			}
		}
		
		[Column(Name="c_Parameter_Id", Storage="_C_Parameter_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_Parameter_Id
		{
			get
			{
				return this._C_Parameter_Id;
			}
			set
			{
				if ((this._C_Parameter_Id != value))
				{
					this.OnC_Parameter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Parameter_Id = value;
					this.SendPropertyChanged("C_Parameter_Id");
					this.OnC_Parameter_IdChanged();
				}
			}
		}
		
		[Association(Name="FK38F61CAB7231A6B3", Storage="_T_be_cor_ui_Parameter", ThisKey="C_Parameter_Id", OtherKey="C_Parameter_Id", IsForeignKey=true)]
		public T_be_cor_ui_Parameter T_be_cor_ui_Parameter
		{
			get
			{
				return this._T_be_cor_ui_Parameter.Entity;
			}
			set
			{
				T_be_cor_ui_Parameter previousValue = this._T_be_cor_ui_Parameter.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Parameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Parameter.Entity = null;
						previousValue.T_be_cor_ui_r_Widget_Param.Remove(this);
					}
					this._T_be_cor_ui_Parameter.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Widget_Param.Add(this);
						this._C_Parameter_Id = value.C_Parameter_Id;
					}
					else
					{
						this._C_Parameter_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Parameter");
				}
			}
		}
		
		[Association(Name="FK38F61CAB7BD375DD", Storage="_T_be_cor_ui_Widget", ThisKey="C_Widget_Id", OtherKey="C_Widget_Id", IsForeignKey=true)]
		public T_be_cor_ui_Widget T_be_cor_ui_Widget
		{
			get
			{
				return this._T_be_cor_ui_Widget.Entity;
			}
			set
			{
				T_be_cor_ui_Widget previousValue = this._T_be_cor_ui_Widget.Entity;
				if (((previousValue != value) 
							|| (this._T_be_cor_ui_Widget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_be_cor_ui_Widget.Entity = null;
						previousValue.T_be_cor_ui_r_Widget_Param.Remove(this);
					}
					this._T_be_cor_ui_Widget.Entity = value;
					if ((value != null))
					{
						value.T_be_cor_ui_r_Widget_Param.Add(this);
						this._C_Widget_Id = value.C_Widget_Id;
					}
					else
					{
						this._C_Widget_Id = default(System.Guid);
					}
					this.SendPropertyChanged("T_be_cor_ui_Widget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_ReportInventory")]
	public partial class T_be_cor_ui_ReportInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_ReportInventory_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private string _C_LayoutName;
		
		private string _C_Capabilities;
		
		private string _C_Category;
		
		private System.Nullable<int> _C_Priority;
		
		private string _C_IsVisible;
		
		private string _C_CreatorId;
		
		private string _C_ReportType;
		
		private string _C_LayoutExtensionName;
		
		private EntitySet<T_be_cor_ui_r_Site_Repor> _T_be_cor_ui_r_Site_Repor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_ReportInventory_IdChanging(System.Guid value);
    partial void OnC_ReportInventory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_LayoutNameChanging(string value);
    partial void OnC_LayoutNameChanged();
    partial void OnC_CapabilitiesChanging(string value);
    partial void OnC_CapabilitiesChanged();
    partial void OnC_CategoryChanging(string value);
    partial void OnC_CategoryChanged();
    partial void OnC_PriorityChanging(System.Nullable<int> value);
    partial void OnC_PriorityChanged();
    partial void OnC_IsVisibleChanging(string value);
    partial void OnC_IsVisibleChanged();
    partial void OnC_CreatorIdChanging(string value);
    partial void OnC_CreatorIdChanged();
    partial void OnC_ReportTypeChanging(string value);
    partial void OnC_ReportTypeChanged();
    partial void OnC_LayoutExtensionNameChanging(string value);
    partial void OnC_LayoutExtensionNameChanged();
    #endregion
		
		public T_be_cor_ui_ReportInventory()
		{
			this._T_be_cor_ui_r_Site_Repor = new EntitySet<T_be_cor_ui_r_Site_Repor>(new Action<T_be_cor_ui_r_Site_Repor>(this.attach_T_be_cor_ui_r_Site_Repor), new Action<T_be_cor_ui_r_Site_Repor>(this.detach_T_be_cor_ui_r_Site_Repor));
			OnCreated();
		}
		
		[Column(Name="c_ReportInventory_Id", Storage="_C_ReportInventory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_ReportInventory_Id
		{
			get
			{
				return this._C_ReportInventory_Id;
			}
			set
			{
				if ((this._C_ReportInventory_Id != value))
				{
					this.OnC_ReportInventory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_ReportInventory_Id = value;
					this.SendPropertyChanged("C_ReportInventory_Id");
					this.OnC_ReportInventory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_LayoutName", Storage="_C_LayoutName", DbType="NVarChar(255)")]
		public string C_LayoutName
		{
			get
			{
				return this._C_LayoutName;
			}
			set
			{
				if ((this._C_LayoutName != value))
				{
					this.OnC_LayoutNameChanging(value);
					this.SendPropertyChanging();
					this._C_LayoutName = value;
					this.SendPropertyChanged("C_LayoutName");
					this.OnC_LayoutNameChanged();
				}
			}
		}
		
		[Column(Name="c_Capabilities", Storage="_C_Capabilities", DbType="NVarChar(255)")]
		public string C_Capabilities
		{
			get
			{
				return this._C_Capabilities;
			}
			set
			{
				if ((this._C_Capabilities != value))
				{
					this.OnC_CapabilitiesChanging(value);
					this.SendPropertyChanging();
					this._C_Capabilities = value;
					this.SendPropertyChanged("C_Capabilities");
					this.OnC_CapabilitiesChanged();
				}
			}
		}
		
		[Column(Name="c_Category", Storage="_C_Category", DbType="NVarChar(255)")]
		public string C_Category
		{
			get
			{
				return this._C_Category;
			}
			set
			{
				if ((this._C_Category != value))
				{
					this.OnC_CategoryChanging(value);
					this.SendPropertyChanging();
					this._C_Category = value;
					this.SendPropertyChanged("C_Category");
					this.OnC_CategoryChanged();
				}
			}
		}
		
		[Column(Name="c_Priority", Storage="_C_Priority", DbType="Int")]
		public System.Nullable<int> C_Priority
		{
			get
			{
				return this._C_Priority;
			}
			set
			{
				if ((this._C_Priority != value))
				{
					this.OnC_PriorityChanging(value);
					this.SendPropertyChanging();
					this._C_Priority = value;
					this.SendPropertyChanged("C_Priority");
					this.OnC_PriorityChanged();
				}
			}
		}
		
		[Column(Name="c_IsVisible", Storage="_C_IsVisible", DbType="Char(1)")]
		public string C_IsVisible
		{
			get
			{
				return this._C_IsVisible;
			}
			set
			{
				if ((this._C_IsVisible != value))
				{
					this.OnC_IsVisibleChanging(value);
					this.SendPropertyChanging();
					this._C_IsVisible = value;
					this.SendPropertyChanged("C_IsVisible");
					this.OnC_IsVisibleChanged();
				}
			}
		}
		
		[Column(Name="c_CreatorId", Storage="_C_CreatorId", DbType="NVarChar(255)")]
		public string C_CreatorId
		{
			get
			{
				return this._C_CreatorId;
			}
			set
			{
				if ((this._C_CreatorId != value))
				{
					this.OnC_CreatorIdChanging(value);
					this.SendPropertyChanging();
					this._C_CreatorId = value;
					this.SendPropertyChanged("C_CreatorId");
					this.OnC_CreatorIdChanged();
				}
			}
		}
		
		[Column(Name="c_ReportType", Storage="_C_ReportType", DbType="NVarChar(255)")]
		public string C_ReportType
		{
			get
			{
				return this._C_ReportType;
			}
			set
			{
				if ((this._C_ReportType != value))
				{
					this.OnC_ReportTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ReportType = value;
					this.SendPropertyChanged("C_ReportType");
					this.OnC_ReportTypeChanged();
				}
			}
		}
		
		[Column(Name="c_LayoutExtensionName", Storage="_C_LayoutExtensionName", DbType="NVarChar(255)")]
		public string C_LayoutExtensionName
		{
			get
			{
				return this._C_LayoutExtensionName;
			}
			set
			{
				if ((this._C_LayoutExtensionName != value))
				{
					this.OnC_LayoutExtensionNameChanging(value);
					this.SendPropertyChanging();
					this._C_LayoutExtensionName = value;
					this.SendPropertyChanged("C_LayoutExtensionName");
					this.OnC_LayoutExtensionNameChanged();
				}
			}
		}
		
		[Association(Name="FK9102A9F235A41245", Storage="_T_be_cor_ui_r_Site_Repor", ThisKey="C_ReportInventory_Id", OtherKey="C_ReportInventory_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Repor> T_be_cor_ui_r_Site_Repor
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Repor;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Repor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_ReportInventory = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_ReportInventory = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_SavedSearch")]
	public partial class T_be_cor_ui_SavedSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_SavedSearch_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Name;
		
		private string _C_Description;
		
		private int _C_CreatedBy;
		
		private System.DateTime _C_CreatedDate;
		
		private string _C_IsShared;
		
		private string _C_PageUrl;
		
		private string _C_GridId;
		
		private System.Nullable<int> _C_AccountId;
		
		private string _C_SearchLayout;
		
		private EntitySet<T_be_cor_ui_r_SavedS_Searc> _T_be_cor_ui_r_SavedS_Searc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_SavedSearch_IdChanging(System.Guid value);
    partial void OnC_SavedSearch_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_CreatedByChanging(int value);
    partial void OnC_CreatedByChanged();
    partial void OnC_CreatedDateChanging(System.DateTime value);
    partial void OnC_CreatedDateChanged();
    partial void OnC_IsSharedChanging(string value);
    partial void OnC_IsSharedChanged();
    partial void OnC_PageUrlChanging(string value);
    partial void OnC_PageUrlChanged();
    partial void OnC_GridIdChanging(string value);
    partial void OnC_GridIdChanged();
    partial void OnC_AccountIdChanging(System.Nullable<int> value);
    partial void OnC_AccountIdChanged();
    partial void OnC_SearchLayoutChanging(string value);
    partial void OnC_SearchLayoutChanged();
    #endregion
		
		public T_be_cor_ui_SavedSearch()
		{
			this._T_be_cor_ui_r_SavedS_Searc = new EntitySet<T_be_cor_ui_r_SavedS_Searc>(new Action<T_be_cor_ui_r_SavedS_Searc>(this.attach_T_be_cor_ui_r_SavedS_Searc), new Action<T_be_cor_ui_r_SavedS_Searc>(this.detach_T_be_cor_ui_r_SavedS_Searc));
			OnCreated();
		}
		
		[Column(Name="c_SavedSearch_Id", Storage="_C_SavedSearch_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_SavedSearch_Id
		{
			get
			{
				return this._C_SavedSearch_Id;
			}
			set
			{
				if ((this._C_SavedSearch_Id != value))
				{
					this.OnC_SavedSearch_IdChanging(value);
					this.SendPropertyChanging();
					this._C_SavedSearch_Id = value;
					this.SendPropertyChanged("C_SavedSearch_Id");
					this.OnC_SavedSearch_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_CreatedBy", Storage="_C_CreatedBy", DbType="Int NOT NULL")]
		public int C_CreatedBy
		{
			get
			{
				return this._C_CreatedBy;
			}
			set
			{
				if ((this._C_CreatedBy != value))
				{
					this.OnC_CreatedByChanging(value);
					this.SendPropertyChanging();
					this._C_CreatedBy = value;
					this.SendPropertyChanged("C_CreatedBy");
					this.OnC_CreatedByChanged();
				}
			}
		}
		
		[Column(Name="c_CreatedDate", Storage="_C_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_CreatedDate
		{
			get
			{
				return this._C_CreatedDate;
			}
			set
			{
				if ((this._C_CreatedDate != value))
				{
					this.OnC_CreatedDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreatedDate = value;
					this.SendPropertyChanged("C_CreatedDate");
					this.OnC_CreatedDateChanged();
				}
			}
		}
		
		[Column(Name="c_IsShared", Storage="_C_IsShared", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_IsShared
		{
			get
			{
				return this._C_IsShared;
			}
			set
			{
				if ((this._C_IsShared != value))
				{
					this.OnC_IsSharedChanging(value);
					this.SendPropertyChanging();
					this._C_IsShared = value;
					this.SendPropertyChanged("C_IsShared");
					this.OnC_IsSharedChanged();
				}
			}
		}
		
		[Column(Name="c_PageUrl", Storage="_C_PageUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_PageUrl
		{
			get
			{
				return this._C_PageUrl;
			}
			set
			{
				if ((this._C_PageUrl != value))
				{
					this.OnC_PageUrlChanging(value);
					this.SendPropertyChanging();
					this._C_PageUrl = value;
					this.SendPropertyChanged("C_PageUrl");
					this.OnC_PageUrlChanged();
				}
			}
		}
		
		[Column(Name="c_GridId", Storage="_C_GridId", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_GridId
		{
			get
			{
				return this._C_GridId;
			}
			set
			{
				if ((this._C_GridId != value))
				{
					this.OnC_GridIdChanging(value);
					this.SendPropertyChanging();
					this._C_GridId = value;
					this.SendPropertyChanged("C_GridId");
					this.OnC_GridIdChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="Int")]
		public System.Nullable<int> C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_SearchLayout", Storage="_C_SearchLayout", DbType="NVarChar(255)")]
		public string C_SearchLayout
		{
			get
			{
				return this._C_SearchLayout;
			}
			set
			{
				if ((this._C_SearchLayout != value))
				{
					this.OnC_SearchLayoutChanging(value);
					this.SendPropertyChanging();
					this._C_SearchLayout = value;
					this.SendPropertyChanged("C_SearchLayout");
					this.OnC_SearchLayoutChanged();
				}
			}
		}
		
		[Association(Name="FKBE0A9C77A4FB35B5", Storage="_T_be_cor_ui_r_SavedS_Searc", ThisKey="C_SavedSearch_Id", OtherKey="C_SavedSearch_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_SavedS_Searc> T_be_cor_ui_r_SavedS_Searc
		{
			get
			{
				return this._T_be_cor_ui_r_SavedS_Searc;
			}
			set
			{
				this._T_be_cor_ui_r_SavedS_Searc.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_SavedSearch = this;
		}
		
		private void detach_T_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_SavedSearch = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_SearchFilter")]
	public partial class T_be_cor_ui_SearchFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_SearchFilter_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Name;
		
		private string _C_Value;
		
		private string _C_Value2;
		
		private string _C_IsVisible;
		
		private string _C_Operation;
		
		private int _C_Position;
		
		private EntitySet<T_be_cor_ui_r_SavedS_Searc> _T_be_cor_ui_r_SavedS_Searc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_SearchFilter_IdChanging(System.Guid value);
    partial void OnC_SearchFilter_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_ValueChanging(string value);
    partial void OnC_ValueChanged();
    partial void OnC_Value2Changing(string value);
    partial void OnC_Value2Changed();
    partial void OnC_IsVisibleChanging(string value);
    partial void OnC_IsVisibleChanged();
    partial void OnC_OperationChanging(string value);
    partial void OnC_OperationChanged();
    partial void OnC_PositionChanging(int value);
    partial void OnC_PositionChanged();
    #endregion
		
		public T_be_cor_ui_SearchFilter()
		{
			this._T_be_cor_ui_r_SavedS_Searc = new EntitySet<T_be_cor_ui_r_SavedS_Searc>(new Action<T_be_cor_ui_r_SavedS_Searc>(this.attach_T_be_cor_ui_r_SavedS_Searc), new Action<T_be_cor_ui_r_SavedS_Searc>(this.detach_T_be_cor_ui_r_SavedS_Searc));
			OnCreated();
		}
		
		[Column(Name="c_SearchFilter_Id", Storage="_C_SearchFilter_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_SearchFilter_Id
		{
			get
			{
				return this._C_SearchFilter_Id;
			}
			set
			{
				if ((this._C_SearchFilter_Id != value))
				{
					this.OnC_SearchFilter_IdChanging(value);
					this.SendPropertyChanging();
					this._C_SearchFilter_Id = value;
					this.SendPropertyChanged("C_SearchFilter_Id");
					this.OnC_SearchFilter_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Value", Storage="_C_Value", DbType="NVarChar(255)")]
		public string C_Value
		{
			get
			{
				return this._C_Value;
			}
			set
			{
				if ((this._C_Value != value))
				{
					this.OnC_ValueChanging(value);
					this.SendPropertyChanging();
					this._C_Value = value;
					this.SendPropertyChanged("C_Value");
					this.OnC_ValueChanged();
				}
			}
		}
		
		[Column(Name="c_Value2", Storage="_C_Value2", DbType="NVarChar(255)")]
		public string C_Value2
		{
			get
			{
				return this._C_Value2;
			}
			set
			{
				if ((this._C_Value2 != value))
				{
					this.OnC_Value2Changing(value);
					this.SendPropertyChanging();
					this._C_Value2 = value;
					this.SendPropertyChanged("C_Value2");
					this.OnC_Value2Changed();
				}
			}
		}
		
		[Column(Name="c_IsVisible", Storage="_C_IsVisible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_IsVisible
		{
			get
			{
				return this._C_IsVisible;
			}
			set
			{
				if ((this._C_IsVisible != value))
				{
					this.OnC_IsVisibleChanging(value);
					this.SendPropertyChanging();
					this._C_IsVisible = value;
					this.SendPropertyChanged("C_IsVisible");
					this.OnC_IsVisibleChanged();
				}
			}
		}
		
		[Column(Name="c_Operation", Storage="_C_Operation", DbType="NVarChar(255)")]
		public string C_Operation
		{
			get
			{
				return this._C_Operation;
			}
			set
			{
				if ((this._C_Operation != value))
				{
					this.OnC_OperationChanging(value);
					this.SendPropertyChanging();
					this._C_Operation = value;
					this.SendPropertyChanged("C_Operation");
					this.OnC_OperationChanged();
				}
			}
		}
		
		[Column(Name="c_Position", Storage="_C_Position", DbType="Int NOT NULL")]
		public int C_Position
		{
			get
			{
				return this._C_Position;
			}
			set
			{
				if ((this._C_Position != value))
				{
					this.OnC_PositionChanging(value);
					this.SendPropertyChanging();
					this._C_Position = value;
					this.SendPropertyChanged("C_Position");
					this.OnC_PositionChanged();
				}
			}
		}
		
		[Association(Name="FKBE0A9C77BA5036E7", Storage="_T_be_cor_ui_r_SavedS_Searc", ThisKey="C_SearchFilter_Id", OtherKey="C_SearchFilter_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_SavedS_Searc> T_be_cor_ui_r_SavedS_Searc
		{
			get
			{
				return this._T_be_cor_ui_r_SavedS_Searc;
			}
			set
			{
				this._T_be_cor_ui_r_SavedS_Searc.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_SearchFilter = this;
		}
		
		private void detach_T_be_cor_ui_r_SavedS_Searc(T_be_cor_ui_r_SavedS_Searc entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_SearchFilter = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_Site")]
	public partial class T_be_cor_ui_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Site_Id;
		
		private int _C__version;
		
		private string _C_SiteName;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private string _C_RootUrl;
		
		private string _C_IsSiteDownForMaintenance;
		
		private System.Nullable<int> _C_Timezone;
		
		private string _C_LogoImage;
		
		private string _C_Theme;
		
		private string _C_Culture;
		
		private EntitySet<T_be_cor_ui_r_Site_Produ> _T_be_cor_ui_r_Site_Produ;
		
		private EntitySet<T_be_cor_ui_r_Site_Dashb> _T_be_cor_ui_r_Site_Dashb;
		
		private EntitySet<T_be_cor_ui_r_Site_Entry> _T_be_cor_ui_r_Site_Entry;
		
		private EntitySet<T_be_cor_ui_r_Site_BillS> _T_be_cor_ui_r_Site_BillS;
		
		private EntitySet<T_be_cor_ui_r_Site_Repor> _T_be_cor_ui_r_Site_Repor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Site_IdChanging(System.Guid value);
    partial void OnC_Site_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_SiteNameChanging(string value);
    partial void OnC_SiteNameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_RootUrlChanging(string value);
    partial void OnC_RootUrlChanged();
    partial void OnC_IsSiteDownForMaintenanceChanging(string value);
    partial void OnC_IsSiteDownForMaintenanceChanged();
    partial void OnC_TimezoneChanging(System.Nullable<int> value);
    partial void OnC_TimezoneChanged();
    partial void OnC_LogoImageChanging(string value);
    partial void OnC_LogoImageChanged();
    partial void OnC_ThemeChanging(string value);
    partial void OnC_ThemeChanged();
    partial void OnC_CultureChanging(string value);
    partial void OnC_CultureChanged();
    #endregion
		
		public T_be_cor_ui_Site()
		{
			this._T_be_cor_ui_r_Site_Produ = new EntitySet<T_be_cor_ui_r_Site_Produ>(new Action<T_be_cor_ui_r_Site_Produ>(this.attach_T_be_cor_ui_r_Site_Produ), new Action<T_be_cor_ui_r_Site_Produ>(this.detach_T_be_cor_ui_r_Site_Produ));
			this._T_be_cor_ui_r_Site_Dashb = new EntitySet<T_be_cor_ui_r_Site_Dashb>(new Action<T_be_cor_ui_r_Site_Dashb>(this.attach_T_be_cor_ui_r_Site_Dashb), new Action<T_be_cor_ui_r_Site_Dashb>(this.detach_T_be_cor_ui_r_Site_Dashb));
			this._T_be_cor_ui_r_Site_Entry = new EntitySet<T_be_cor_ui_r_Site_Entry>(new Action<T_be_cor_ui_r_Site_Entry>(this.attach_T_be_cor_ui_r_Site_Entry), new Action<T_be_cor_ui_r_Site_Entry>(this.detach_T_be_cor_ui_r_Site_Entry));
			this._T_be_cor_ui_r_Site_BillS = new EntitySet<T_be_cor_ui_r_Site_BillS>(new Action<T_be_cor_ui_r_Site_BillS>(this.attach_T_be_cor_ui_r_Site_BillS), new Action<T_be_cor_ui_r_Site_BillS>(this.detach_T_be_cor_ui_r_Site_BillS));
			this._T_be_cor_ui_r_Site_Repor = new EntitySet<T_be_cor_ui_r_Site_Repor>(new Action<T_be_cor_ui_r_Site_Repor>(this.attach_T_be_cor_ui_r_Site_Repor), new Action<T_be_cor_ui_r_Site_Repor>(this.detach_T_be_cor_ui_r_Site_Repor));
			OnCreated();
		}
		
		[Column(Name="c_Site_Id", Storage="_C_Site_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Site_Id
		{
			get
			{
				return this._C_Site_Id;
			}
			set
			{
				if ((this._C_Site_Id != value))
				{
					this.OnC_Site_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Site_Id = value;
					this.SendPropertyChanged("C_Site_Id");
					this.OnC_Site_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_SiteName", Storage="_C_SiteName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_SiteName
		{
			get
			{
				return this._C_SiteName;
			}
			set
			{
				if ((this._C_SiteName != value))
				{
					this.OnC_SiteNameChanging(value);
					this.SendPropertyChanging();
					this._C_SiteName = value;
					this.SendPropertyChanged("C_SiteName");
					this.OnC_SiteNameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_RootUrl", Storage="_C_RootUrl", DbType="NVarChar(255)")]
		public string C_RootUrl
		{
			get
			{
				return this._C_RootUrl;
			}
			set
			{
				if ((this._C_RootUrl != value))
				{
					this.OnC_RootUrlChanging(value);
					this.SendPropertyChanging();
					this._C_RootUrl = value;
					this.SendPropertyChanged("C_RootUrl");
					this.OnC_RootUrlChanged();
				}
			}
		}
		
		[Column(Name="c_IsSiteDownForMaintenance", Storage="_C_IsSiteDownForMaintenance", DbType="Char(1)")]
		public string C_IsSiteDownForMaintenance
		{
			get
			{
				return this._C_IsSiteDownForMaintenance;
			}
			set
			{
				if ((this._C_IsSiteDownForMaintenance != value))
				{
					this.OnC_IsSiteDownForMaintenanceChanging(value);
					this.SendPropertyChanging();
					this._C_IsSiteDownForMaintenance = value;
					this.SendPropertyChanged("C_IsSiteDownForMaintenance");
					this.OnC_IsSiteDownForMaintenanceChanged();
				}
			}
		}
		
		[Column(Name="c_Timezone", Storage="_C_Timezone", DbType="Int")]
		public System.Nullable<int> C_Timezone
		{
			get
			{
				return this._C_Timezone;
			}
			set
			{
				if ((this._C_Timezone != value))
				{
					this.OnC_TimezoneChanging(value);
					this.SendPropertyChanging();
					this._C_Timezone = value;
					this.SendPropertyChanged("C_Timezone");
					this.OnC_TimezoneChanged();
				}
			}
		}
		
		[Column(Name="c_LogoImage", Storage="_C_LogoImage", DbType="NVarChar(255)")]
		public string C_LogoImage
		{
			get
			{
				return this._C_LogoImage;
			}
			set
			{
				if ((this._C_LogoImage != value))
				{
					this.OnC_LogoImageChanging(value);
					this.SendPropertyChanging();
					this._C_LogoImage = value;
					this.SendPropertyChanged("C_LogoImage");
					this.OnC_LogoImageChanged();
				}
			}
		}
		
		[Column(Name="c_Theme", Storage="_C_Theme", DbType="NVarChar(255)")]
		public string C_Theme
		{
			get
			{
				return this._C_Theme;
			}
			set
			{
				if ((this._C_Theme != value))
				{
					this.OnC_ThemeChanging(value);
					this.SendPropertyChanging();
					this._C_Theme = value;
					this.SendPropertyChanged("C_Theme");
					this.OnC_ThemeChanged();
				}
			}
		}
		
		[Column(Name="c_Culture", Storage="_C_Culture", DbType="NVarChar(255)")]
		public string C_Culture
		{
			get
			{
				return this._C_Culture;
			}
			set
			{
				if ((this._C_Culture != value))
				{
					this.OnC_CultureChanging(value);
					this.SendPropertyChanging();
					this._C_Culture = value;
					this.SendPropertyChanged("C_Culture");
					this.OnC_CultureChanged();
				}
			}
		}
		
		[Association(Name="FK2EE4ACAC9E01EF1D", Storage="_T_be_cor_ui_r_Site_Produ", ThisKey="C_Site_Id", OtherKey="C_Site_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Produ> T_be_cor_ui_r_Site_Produ
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Produ;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Produ.Assign(value);
			}
		}
		
		[Association(Name="FK4364355B9E01EF1D", Storage="_T_be_cor_ui_r_Site_Dashb", ThisKey="C_Site_Id", OtherKey="C_Site_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Dashb> T_be_cor_ui_r_Site_Dashb
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Dashb;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Dashb.Assign(value);
			}
		}
		
		[Association(Name="FK6B593A9E9E01EF1D", Storage="_T_be_cor_ui_r_Site_Entry", ThisKey="C_Site_Id", OtherKey="C_Site_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Entry> T_be_cor_ui_r_Site_Entry
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Entry;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Entry.Assign(value);
			}
		}
		
		[Association(Name="FK84B207BF9E01EF1D", Storage="_T_be_cor_ui_r_Site_BillS", ThisKey="C_Site_Id", OtherKey="C_Site_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_BillS> T_be_cor_ui_r_Site_BillS
		{
			get
			{
				return this._T_be_cor_ui_r_Site_BillS;
			}
			set
			{
				this._T_be_cor_ui_r_Site_BillS.Assign(value);
			}
		}
		
		[Association(Name="FK9102A9F29E01EF1D", Storage="_T_be_cor_ui_r_Site_Repor", ThisKey="C_Site_Id", OtherKey="C_Site_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Site_Repor> T_be_cor_ui_r_Site_Repor
		{
			get
			{
				return this._T_be_cor_ui_r_Site_Repor;
			}
			set
			{
				this._T_be_cor_ui_r_Site_Repor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Produ(T_be_cor_ui_r_Site_Produ entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = null;
		}
		
		private void attach_T_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Dashb(T_be_cor_ui_r_Site_Dashb entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = null;
		}
		
		private void attach_T_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Entry(T_be_cor_ui_r_Site_Entry entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = null;
		}
		
		private void attach_T_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_BillS(T_be_cor_ui_r_Site_BillS entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = null;
		}
		
		private void attach_T_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = this;
		}
		
		private void detach_T_be_cor_ui_r_Site_Repor(T_be_cor_ui_r_Site_Repor entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Site = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_UserProfile")]
	public partial class T_be_cor_ui_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_UserProfile_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private System.Nullable<int> _C_AccountId;
		
		private System.Nullable<int> _C_Timezone;
		
		private string _C_Culture;
		
		private string _C_Theme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_UserProfile_IdChanging(System.Guid value);
    partial void OnC_UserProfile_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_AccountIdChanging(System.Nullable<int> value);
    partial void OnC_AccountIdChanged();
    partial void OnC_TimezoneChanging(System.Nullable<int> value);
    partial void OnC_TimezoneChanged();
    partial void OnC_CultureChanging(string value);
    partial void OnC_CultureChanged();
    partial void OnC_ThemeChanging(string value);
    partial void OnC_ThemeChanged();
    #endregion
		
		public T_be_cor_ui_UserProfile()
		{
			OnCreated();
		}
		
		[Column(Name="c_UserProfile_Id", Storage="_C_UserProfile_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_UserProfile_Id
		{
			get
			{
				return this._C_UserProfile_Id;
			}
			set
			{
				if ((this._C_UserProfile_Id != value))
				{
					this.OnC_UserProfile_IdChanging(value);
					this.SendPropertyChanging();
					this._C_UserProfile_Id = value;
					this.SendPropertyChanged("C_UserProfile_Id");
					this.OnC_UserProfile_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="Int")]
		public System.Nullable<int> C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_Timezone", Storage="_C_Timezone", DbType="Int")]
		public System.Nullable<int> C_Timezone
		{
			get
			{
				return this._C_Timezone;
			}
			set
			{
				if ((this._C_Timezone != value))
				{
					this.OnC_TimezoneChanging(value);
					this.SendPropertyChanging();
					this._C_Timezone = value;
					this.SendPropertyChanged("C_Timezone");
					this.OnC_TimezoneChanged();
				}
			}
		}
		
		[Column(Name="c_Culture", Storage="_C_Culture", DbType="NVarChar(255)")]
		public string C_Culture
		{
			get
			{
				return this._C_Culture;
			}
			set
			{
				if ((this._C_Culture != value))
				{
					this.OnC_CultureChanging(value);
					this.SendPropertyChanging();
					this._C_Culture = value;
					this.SendPropertyChanged("C_Culture");
					this.OnC_CultureChanged();
				}
			}
		}
		
		[Column(Name="c_Theme", Storage="_C_Theme", DbType="NVarChar(255)")]
		public string C_Theme
		{
			get
			{
				return this._C_Theme;
			}
			set
			{
				if ((this._C_Theme != value))
				{
					this.OnC_ThemeChanging(value);
					this.SendPropertyChanging();
					this._C_Theme = value;
					this.SendPropertyChanged("C_Theme");
					this.OnC_ThemeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_Widget")]
	public partial class T_be_cor_ui_Widget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_Widget_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Name;
		
		private string _C_Description;
		
		private string _C_Title;
		
		private string _C_Style;
		
		private string _C_CssClass;
		
		private string _C_Height;
		
		private string _C_WidgetType;
		
		private string _C_WidgetPath;
		
		private int _C_Position;
		
		private EntitySet<T_be_cor_ui_r_Widget_Param> _T_be_cor_ui_r_Widget_Param;
		
		private EntitySet<T_be_cor_ui_r_Column_Widget> _T_be_cor_ui_r_Column_Widget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_Widget_IdChanging(System.Guid value);
    partial void OnC_Widget_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TitleChanging(string value);
    partial void OnC_TitleChanged();
    partial void OnC_StyleChanging(string value);
    partial void OnC_StyleChanged();
    partial void OnC_CssClassChanging(string value);
    partial void OnC_CssClassChanged();
    partial void OnC_HeightChanging(string value);
    partial void OnC_HeightChanged();
    partial void OnC_WidgetTypeChanging(string value);
    partial void OnC_WidgetTypeChanged();
    partial void OnC_WidgetPathChanging(string value);
    partial void OnC_WidgetPathChanged();
    partial void OnC_PositionChanging(int value);
    partial void OnC_PositionChanged();
    #endregion
		
		public T_be_cor_ui_Widget()
		{
			this._T_be_cor_ui_r_Widget_Param = new EntitySet<T_be_cor_ui_r_Widget_Param>(new Action<T_be_cor_ui_r_Widget_Param>(this.attach_T_be_cor_ui_r_Widget_Param), new Action<T_be_cor_ui_r_Widget_Param>(this.detach_T_be_cor_ui_r_Widget_Param));
			this._T_be_cor_ui_r_Column_Widget = new EntitySet<T_be_cor_ui_r_Column_Widget>(new Action<T_be_cor_ui_r_Column_Widget>(this.attach_T_be_cor_ui_r_Column_Widget), new Action<T_be_cor_ui_r_Column_Widget>(this.detach_T_be_cor_ui_r_Column_Widget));
			OnCreated();
		}
		
		[Column(Name="c_Widget_Id", Storage="_C_Widget_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_Widget_Id
		{
			get
			{
				return this._C_Widget_Id;
			}
			set
			{
				if ((this._C_Widget_Id != value))
				{
					this.OnC_Widget_IdChanging(value);
					this.SendPropertyChanging();
					this._C_Widget_Id = value;
					this.SendPropertyChanged("C_Widget_Id");
					this.OnC_Widget_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Title", Storage="_C_Title", DbType="NVarChar(255)")]
		public string C_Title
		{
			get
			{
				return this._C_Title;
			}
			set
			{
				if ((this._C_Title != value))
				{
					this.OnC_TitleChanging(value);
					this.SendPropertyChanging();
					this._C_Title = value;
					this.SendPropertyChanged("C_Title");
					this.OnC_TitleChanged();
				}
			}
		}
		
		[Column(Name="c_Style", Storage="_C_Style", DbType="NVarChar(255)")]
		public string C_Style
		{
			get
			{
				return this._C_Style;
			}
			set
			{
				if ((this._C_Style != value))
				{
					this.OnC_StyleChanging(value);
					this.SendPropertyChanging();
					this._C_Style = value;
					this.SendPropertyChanged("C_Style");
					this.OnC_StyleChanged();
				}
			}
		}
		
		[Column(Name="c_CssClass", Storage="_C_CssClass", DbType="NVarChar(255)")]
		public string C_CssClass
		{
			get
			{
				return this._C_CssClass;
			}
			set
			{
				if ((this._C_CssClass != value))
				{
					this.OnC_CssClassChanging(value);
					this.SendPropertyChanging();
					this._C_CssClass = value;
					this.SendPropertyChanged("C_CssClass");
					this.OnC_CssClassChanged();
				}
			}
		}
		
		[Column(Name="c_Height", Storage="_C_Height", DbType="NVarChar(255)")]
		public string C_Height
		{
			get
			{
				return this._C_Height;
			}
			set
			{
				if ((this._C_Height != value))
				{
					this.OnC_HeightChanging(value);
					this.SendPropertyChanging();
					this._C_Height = value;
					this.SendPropertyChanged("C_Height");
					this.OnC_HeightChanged();
				}
			}
		}
		
		[Column(Name="c_WidgetType", Storage="_C_WidgetType", DbType="NVarChar(255)")]
		public string C_WidgetType
		{
			get
			{
				return this._C_WidgetType;
			}
			set
			{
				if ((this._C_WidgetType != value))
				{
					this.OnC_WidgetTypeChanging(value);
					this.SendPropertyChanging();
					this._C_WidgetType = value;
					this.SendPropertyChanged("C_WidgetType");
					this.OnC_WidgetTypeChanged();
				}
			}
		}
		
		[Column(Name="c_WidgetPath", Storage="_C_WidgetPath", DbType="NVarChar(255)")]
		public string C_WidgetPath
		{
			get
			{
				return this._C_WidgetPath;
			}
			set
			{
				if ((this._C_WidgetPath != value))
				{
					this.OnC_WidgetPathChanging(value);
					this.SendPropertyChanging();
					this._C_WidgetPath = value;
					this.SendPropertyChanged("C_WidgetPath");
					this.OnC_WidgetPathChanged();
				}
			}
		}
		
		[Column(Name="c_Position", Storage="_C_Position", DbType="Int NOT NULL")]
		public int C_Position
		{
			get
			{
				return this._C_Position;
			}
			set
			{
				if ((this._C_Position != value))
				{
					this.OnC_PositionChanging(value);
					this.SendPropertyChanging();
					this._C_Position = value;
					this.SendPropertyChanged("C_Position");
					this.OnC_PositionChanged();
				}
			}
		}
		
		[Association(Name="FK38F61CAB7BD375DD", Storage="_T_be_cor_ui_r_Widget_Param", ThisKey="C_Widget_Id", OtherKey="C_Widget_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Widget_Param> T_be_cor_ui_r_Widget_Param
		{
			get
			{
				return this._T_be_cor_ui_r_Widget_Param;
			}
			set
			{
				this._T_be_cor_ui_r_Widget_Param.Assign(value);
			}
		}
		
		[Association(Name="FK4266DABE7BD375DD", Storage="_T_be_cor_ui_r_Column_Widget", ThisKey="C_Widget_Id", OtherKey="C_Widget_Id", DeleteRule="NO ACTION")]
		public EntitySet<T_be_cor_ui_r_Column_Widget> T_be_cor_ui_r_Column_Widget
		{
			get
			{
				return this._T_be_cor_ui_r_Column_Widget;
			}
			set
			{
				this._T_be_cor_ui_r_Column_Widget.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Widget = this;
		}
		
		private void detach_T_be_cor_ui_r_Widget_Param(T_be_cor_ui_r_Widget_Param entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Widget = null;
		}
		
		private void attach_T_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Widget = this;
		}
		
		private void detach_T_be_cor_ui_r_Column_Widget(T_be_cor_ui_r_Column_Widget entity)
		{
			this.SendPropertyChanging();
			entity.T_be_cor_ui_Widget = null;
		}
	}
	
	[Table(Name="dbo.t_be_cor_ui_WidgetInventory")]
	public partial class T_be_cor_ui_WidgetInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_WidgetInventory_Id;
		
		private int _C__version;
		
		private string _C_Name;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Description;
		
		private string _C_WidgetPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_WidgetInventory_IdChanging(System.Guid value);
    partial void OnC_WidgetInventory_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_WidgetPathChanging(string value);
    partial void OnC_WidgetPathChanged();
    #endregion
		
		public T_be_cor_ui_WidgetInventory()
		{
			OnCreated();
		}
		
		[Column(Name="c_WidgetInventory_Id", Storage="_C_WidgetInventory_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_WidgetInventory_Id
		{
			get
			{
				return this._C_WidgetInventory_Id;
			}
			set
			{
				if ((this._C_WidgetInventory_Id != value))
				{
					this.OnC_WidgetInventory_IdChanging(value);
					this.SendPropertyChanging();
					this._C_WidgetInventory_Id = value;
					this.SendPropertyChanged("C_WidgetInventory_Id");
					this.OnC_WidgetInventory_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_WidgetPath", Storage="_C_WidgetPath", DbType="NVarChar(255)")]
		public string C_WidgetPath
		{
			get
			{
				return this._C_WidgetPath;
			}
			set
			{
				if ((this._C_WidgetPath != value))
				{
					this.OnC_WidgetPathChanging(value);
					this.SendPropertyChanging();
					this._C_WidgetPath = value;
					this.SendPropertyChanged("C_WidgetPath");
					this.OnC_WidgetPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_entity_sync_data")]
	public partial class T_be_entity_sync_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Tx_entity_name;
		
		private string _Tx_hbm_checksum;
		
		private System.DateTime _Dt_sync_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTx_entity_nameChanging(string value);
    partial void OnTx_entity_nameChanged();
    partial void OnTx_hbm_checksumChanging(string value);
    partial void OnTx_hbm_checksumChanged();
    partial void OnDt_sync_dateChanging(System.DateTime value);
    partial void OnDt_sync_dateChanged();
    #endregion
		
		public T_be_entity_sync_data()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="tx_entity_name", Storage="_Tx_entity_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_entity_name
		{
			get
			{
				return this._Tx_entity_name;
			}
			set
			{
				if ((this._Tx_entity_name != value))
				{
					this.OnTx_entity_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_entity_name = value;
					this.SendPropertyChanged("Tx_entity_name");
					this.OnTx_entity_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_hbm_checksum", Storage="_Tx_hbm_checksum", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_hbm_checksum
		{
			get
			{
				return this._Tx_hbm_checksum;
			}
			set
			{
				if ((this._Tx_hbm_checksum != value))
				{
					this.OnTx_hbm_checksumChanging(value);
					this.SendPropertyChanging();
					this._Tx_hbm_checksum = value;
					this.SendPropertyChanged("Tx_hbm_checksum");
					this.OnTx_hbm_checksumChanged();
				}
			}
		}
		
		[Column(Name="dt_sync_date", Storage="_Dt_sync_date", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_sync_date
		{
			get
			{
				return this._Dt_sync_date;
			}
			set
			{
				if ((this._Dt_sync_date != value))
				{
					this.OnDt_sync_dateChanging(value);
					this.SendPropertyChanging();
					this._Dt_sync_date = value;
					this.SendPropertyChanged("Dt_sync_date");
					this.OnDt_sync_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_tes_testbmeperfoma")]
	public partial class T_be_smo_tes_testbmeperfoma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_TestBMEPerfomance_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_Address;
		
		private string _C_City;
		
		private string _C_Name;
		
		private string _C_State;
		
		private string _C_ZipCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_TestBMEPerfomance_IdChanging(System.Guid value);
    partial void OnC_TestBMEPerfomance_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_AddressChanging(string value);
    partial void OnC_AddressChanged();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_StateChanging(string value);
    partial void OnC_StateChanged();
    partial void OnC_ZipCodeChanging(string value);
    partial void OnC_ZipCodeChanged();
    #endregion
		
		public T_be_smo_tes_testbmeperfoma()
		{
			OnCreated();
		}
		
		[Column(Name="c_TestBMEPerfomance_Id", Storage="_C_TestBMEPerfomance_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_TestBMEPerfomance_Id
		{
			get
			{
				return this._C_TestBMEPerfomance_Id;
			}
			set
			{
				if ((this._C_TestBMEPerfomance_Id != value))
				{
					this.OnC_TestBMEPerfomance_IdChanging(value);
					this.SendPropertyChanging();
					this._C_TestBMEPerfomance_Id = value;
					this.SendPropertyChanged("C_TestBMEPerfomance_Id");
					this.OnC_TestBMEPerfomance_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_Address", Storage="_C_Address", DbType="NVarChar(255)")]
		public string C_Address
		{
			get
			{
				return this._C_Address;
			}
			set
			{
				if ((this._C_Address != value))
				{
					this.OnC_AddressChanging(value);
					this.SendPropertyChanging();
					this._C_Address = value;
					this.SendPropertyChanged("C_Address");
					this.OnC_AddressChanged();
				}
			}
		}
		
		[Column(Name="c_City", Storage="_C_City", DbType="NVarChar(255)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[Column(Name="c_Name", Storage="_C_Name", DbType="NVarChar(255)")]
		public string C_Name
		{
			get
			{
				return this._C_Name;
			}
			set
			{
				if ((this._C_Name != value))
				{
					this.OnC_NameChanging(value);
					this.SendPropertyChanging();
					this._C_Name = value;
					this.SendPropertyChanged("C_Name");
					this.OnC_NameChanged();
				}
			}
		}
		
		[Column(Name="c_State", Storage="_C_State", DbType="NVarChar(255)")]
		public string C_State
		{
			get
			{
				return this._C_State;
			}
			set
			{
				if ((this._C_State != value))
				{
					this.OnC_StateChanging(value);
					this.SendPropertyChanging();
					this._C_State = value;
					this.SendPropertyChanged("C_State");
					this.OnC_StateChanged();
				}
			}
		}
		
		[Column(Name="c_ZipCode", Storage="_C_ZipCode", DbType="NVarChar(255)")]
		public string C_ZipCode
		{
			get
			{
				return this._C_ZipCode;
			}
			set
			{
				if ((this._C_ZipCode != value))
				{
					this.OnC_ZipCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ZipCode = value;
					this.SendPropertyChanged("C_ZipCode");
					this.OnC_ZipCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_thi_a")]
	public partial class T_be_smo_thi_a : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_A_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_BooleanProp;
		
		private System.Nullable<System.DateTime> _C_DateTimeProp;
		
		private System.Nullable<double> _C_DoubleProp;
		
		private System.Nullable<System.Guid> _C_GuidProp;
		
		private System.Nullable<int> _C_Int32Prop;
		
		private System.Nullable<int> _C_Int32Prop1;
		
		private string _C_Int64Prop;
		
		private string _C_StringProp;
		
		private string _C_StringProp1;
		
		private string _C_StringProp2;
		
		private System.Nullable<int> _C_EnumProp;
		
		private System.Nullable<decimal> _C_DecimalProp;
		
		private System.Nullable<int> _C_AccountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_A_IdChanging(System.Guid value);
    partial void OnC_A_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_BooleanPropChanging(string value);
    partial void OnC_BooleanPropChanged();
    partial void OnC_DateTimePropChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DateTimePropChanged();
    partial void OnC_DoublePropChanging(System.Nullable<double> value);
    partial void OnC_DoublePropChanged();
    partial void OnC_GuidPropChanging(System.Nullable<System.Guid> value);
    partial void OnC_GuidPropChanged();
    partial void OnC_Int32PropChanging(System.Nullable<int> value);
    partial void OnC_Int32PropChanged();
    partial void OnC_Int32Prop1Changing(System.Nullable<int> value);
    partial void OnC_Int32Prop1Changed();
    partial void OnC_Int64PropChanging(string value);
    partial void OnC_Int64PropChanged();
    partial void OnC_StringPropChanging(string value);
    partial void OnC_StringPropChanged();
    partial void OnC_StringProp1Changing(string value);
    partial void OnC_StringProp1Changed();
    partial void OnC_StringProp2Changing(string value);
    partial void OnC_StringProp2Changed();
    partial void OnC_EnumPropChanging(System.Nullable<int> value);
    partial void OnC_EnumPropChanged();
    partial void OnC_DecimalPropChanging(System.Nullable<decimal> value);
    partial void OnC_DecimalPropChanged();
    partial void OnC_AccountIdChanging(System.Nullable<int> value);
    partial void OnC_AccountIdChanged();
    #endregion
		
		public T_be_smo_thi_a()
		{
			OnCreated();
		}
		
		[Column(Name="c_A_Id", Storage="_C_A_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_A_Id
		{
			get
			{
				return this._C_A_Id;
			}
			set
			{
				if ((this._C_A_Id != value))
				{
					this.OnC_A_IdChanging(value);
					this.SendPropertyChanging();
					this._C_A_Id = value;
					this.SendPropertyChanged("C_A_Id");
					this.OnC_A_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_BooleanProp", Storage="_C_BooleanProp", DbType="Char(1)")]
		public string C_BooleanProp
		{
			get
			{
				return this._C_BooleanProp;
			}
			set
			{
				if ((this._C_BooleanProp != value))
				{
					this.OnC_BooleanPropChanging(value);
					this.SendPropertyChanging();
					this._C_BooleanProp = value;
					this.SendPropertyChanged("C_BooleanProp");
					this.OnC_BooleanPropChanged();
				}
			}
		}
		
		[Column(Name="c_DateTimeProp", Storage="_C_DateTimeProp", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DateTimeProp
		{
			get
			{
				return this._C_DateTimeProp;
			}
			set
			{
				if ((this._C_DateTimeProp != value))
				{
					this.OnC_DateTimePropChanging(value);
					this.SendPropertyChanging();
					this._C_DateTimeProp = value;
					this.SendPropertyChanged("C_DateTimeProp");
					this.OnC_DateTimePropChanged();
				}
			}
		}
		
		[Column(Name="c_DoubleProp", Storage="_C_DoubleProp", DbType="Float")]
		public System.Nullable<double> C_DoubleProp
		{
			get
			{
				return this._C_DoubleProp;
			}
			set
			{
				if ((this._C_DoubleProp != value))
				{
					this.OnC_DoublePropChanging(value);
					this.SendPropertyChanging();
					this._C_DoubleProp = value;
					this.SendPropertyChanged("C_DoubleProp");
					this.OnC_DoublePropChanged();
				}
			}
		}
		
		[Column(Name="c_GuidProp", Storage="_C_GuidProp", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_GuidProp
		{
			get
			{
				return this._C_GuidProp;
			}
			set
			{
				if ((this._C_GuidProp != value))
				{
					this.OnC_GuidPropChanging(value);
					this.SendPropertyChanging();
					this._C_GuidProp = value;
					this.SendPropertyChanged("C_GuidProp");
					this.OnC_GuidPropChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Prop", Storage="_C_Int32Prop", DbType="Int")]
		public System.Nullable<int> C_Int32Prop
		{
			get
			{
				return this._C_Int32Prop;
			}
			set
			{
				if ((this._C_Int32Prop != value))
				{
					this.OnC_Int32PropChanging(value);
					this.SendPropertyChanging();
					this._C_Int32Prop = value;
					this.SendPropertyChanged("C_Int32Prop");
					this.OnC_Int32PropChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Prop1", Storage="_C_Int32Prop1", DbType="Int")]
		public System.Nullable<int> C_Int32Prop1
		{
			get
			{
				return this._C_Int32Prop1;
			}
			set
			{
				if ((this._C_Int32Prop1 != value))
				{
					this.OnC_Int32Prop1Changing(value);
					this.SendPropertyChanging();
					this._C_Int32Prop1 = value;
					this.SendPropertyChanged("C_Int32Prop1");
					this.OnC_Int32Prop1Changed();
				}
			}
		}
		
		[Column(Name="c_Int64Prop", Storage="_C_Int64Prop", DbType="NVarChar(255)")]
		public string C_Int64Prop
		{
			get
			{
				return this._C_Int64Prop;
			}
			set
			{
				if ((this._C_Int64Prop != value))
				{
					this.OnC_Int64PropChanging(value);
					this.SendPropertyChanging();
					this._C_Int64Prop = value;
					this.SendPropertyChanged("C_Int64Prop");
					this.OnC_Int64PropChanged();
				}
			}
		}
		
		[Column(Name="c_StringProp", Storage="_C_StringProp", DbType="NVarChar(255)")]
		public string C_StringProp
		{
			get
			{
				return this._C_StringProp;
			}
			set
			{
				if ((this._C_StringProp != value))
				{
					this.OnC_StringPropChanging(value);
					this.SendPropertyChanging();
					this._C_StringProp = value;
					this.SendPropertyChanged("C_StringProp");
					this.OnC_StringPropChanged();
				}
			}
		}
		
		[Column(Name="c_StringProp1", Storage="_C_StringProp1", DbType="NVarChar(255)")]
		public string C_StringProp1
		{
			get
			{
				return this._C_StringProp1;
			}
			set
			{
				if ((this._C_StringProp1 != value))
				{
					this.OnC_StringProp1Changing(value);
					this.SendPropertyChanging();
					this._C_StringProp1 = value;
					this.SendPropertyChanged("C_StringProp1");
					this.OnC_StringProp1Changed();
				}
			}
		}
		
		[Column(Name="c_StringProp2", Storage="_C_StringProp2", DbType="NVarChar(255)")]
		public string C_StringProp2
		{
			get
			{
				return this._C_StringProp2;
			}
			set
			{
				if ((this._C_StringProp2 != value))
				{
					this.OnC_StringProp2Changing(value);
					this.SendPropertyChanging();
					this._C_StringProp2 = value;
					this.SendPropertyChanged("C_StringProp2");
					this.OnC_StringProp2Changed();
				}
			}
		}
		
		[Column(Name="c_EnumProp", Storage="_C_EnumProp", DbType="Int")]
		public System.Nullable<int> C_EnumProp
		{
			get
			{
				return this._C_EnumProp;
			}
			set
			{
				if ((this._C_EnumProp != value))
				{
					this.OnC_EnumPropChanging(value);
					this.SendPropertyChanging();
					this._C_EnumProp = value;
					this.SendPropertyChanged("C_EnumProp");
					this.OnC_EnumPropChanged();
				}
			}
		}
		
		[Column(Name="c_DecimalProp", Storage="_C_DecimalProp", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecimalProp
		{
			get
			{
				return this._C_DecimalProp;
			}
			set
			{
				if ((this._C_DecimalProp != value))
				{
					this.OnC_DecimalPropChanging(value);
					this.SendPropertyChanging();
					this._C_DecimalProp = value;
					this.SendPropertyChanged("C_DecimalProp");
					this.OnC_DecimalPropChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="Int")]
		public System.Nullable<int> C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_thi_b")]
	public partial class T_be_smo_thi_b : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_B_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_B_IdChanging(System.Guid value);
    partial void OnC_B_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    #endregion
		
		public T_be_smo_thi_b()
		{
			OnCreated();
		}
		
		[Column(Name="c_B_Id", Storage="_C_B_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_B_Id
		{
			get
			{
				return this._C_B_Id;
			}
			set
			{
				if ((this._C_B_Id != value))
				{
					this.OnC_B_IdChanging(value);
					this.SendPropertyChanging();
					this._C_B_Id = value;
					this.SendPropertyChanged("C_B_Id");
					this.OnC_B_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_thi_c")]
	public partial class T_be_smo_thi_c : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_C_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_C_IdChanging(System.Guid value);
    partial void OnC_C_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    #endregion
		
		public T_be_smo_thi_c()
		{
			OnCreated();
		}
		
		[Column(Name="c_C_Id", Storage="_C_C_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_C_Id
		{
			get
			{
				return this._C_C_Id;
			}
			set
			{
				if ((this._C_C_Id != value))
				{
					this.OnC_C_IdChanging(value);
					this.SendPropertyChanging();
					this._C_C_Id = value;
					this.SendPropertyChanged("C_C_Id");
					this.OnC_C_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_thi_d")]
	public partial class T_be_smo_thi_d : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_D_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
		private string _C_BooleanProp;
		
		private System.Nullable<System.DateTime> _C_DateTimeProp;
		
		private System.Nullable<decimal> _C_DecimalProp;
		
		private System.Nullable<double> _C_DoubleProp;
		
		private System.Nullable<System.Guid> _C_GuidProp;
		
		private string _C_Int32Prop;
		
		private System.Nullable<long> _C_Int64Prop;
		
		private System.Nullable<int> _C_Int32Prop1;
		
		private string _C_StringProp;
		
		private string _C_StringProp1;
		
		private string _C_StringProp2;
		
		private System.Nullable<int> _C_EnumProp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_D_IdChanging(System.Guid value);
    partial void OnC_D_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    partial void OnC_BooleanPropChanging(string value);
    partial void OnC_BooleanPropChanged();
    partial void OnC_DateTimePropChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DateTimePropChanged();
    partial void OnC_DecimalPropChanging(System.Nullable<decimal> value);
    partial void OnC_DecimalPropChanged();
    partial void OnC_DoublePropChanging(System.Nullable<double> value);
    partial void OnC_DoublePropChanged();
    partial void OnC_GuidPropChanging(System.Nullable<System.Guid> value);
    partial void OnC_GuidPropChanged();
    partial void OnC_Int32PropChanging(string value);
    partial void OnC_Int32PropChanged();
    partial void OnC_Int64PropChanging(System.Nullable<long> value);
    partial void OnC_Int64PropChanged();
    partial void OnC_Int32Prop1Changing(System.Nullable<int> value);
    partial void OnC_Int32Prop1Changed();
    partial void OnC_StringPropChanging(string value);
    partial void OnC_StringPropChanged();
    partial void OnC_StringProp1Changing(string value);
    partial void OnC_StringProp1Changed();
    partial void OnC_StringProp2Changing(string value);
    partial void OnC_StringProp2Changed();
    partial void OnC_EnumPropChanging(System.Nullable<int> value);
    partial void OnC_EnumPropChanged();
    #endregion
		
		public T_be_smo_thi_d()
		{
			OnCreated();
		}
		
		[Column(Name="c_D_Id", Storage="_C_D_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_D_Id
		{
			get
			{
				return this._C_D_Id;
			}
			set
			{
				if ((this._C_D_Id != value))
				{
					this.OnC_D_IdChanging(value);
					this.SendPropertyChanging();
					this._C_D_Id = value;
					this.SendPropertyChanged("C_D_Id");
					this.OnC_D_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		[Column(Name="c_BooleanProp", Storage="_C_BooleanProp", DbType="Char(1)")]
		public string C_BooleanProp
		{
			get
			{
				return this._C_BooleanProp;
			}
			set
			{
				if ((this._C_BooleanProp != value))
				{
					this.OnC_BooleanPropChanging(value);
					this.SendPropertyChanging();
					this._C_BooleanProp = value;
					this.SendPropertyChanged("C_BooleanProp");
					this.OnC_BooleanPropChanged();
				}
			}
		}
		
		[Column(Name="c_DateTimeProp", Storage="_C_DateTimeProp", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DateTimeProp
		{
			get
			{
				return this._C_DateTimeProp;
			}
			set
			{
				if ((this._C_DateTimeProp != value))
				{
					this.OnC_DateTimePropChanging(value);
					this.SendPropertyChanging();
					this._C_DateTimeProp = value;
					this.SendPropertyChanged("C_DateTimeProp");
					this.OnC_DateTimePropChanged();
				}
			}
		}
		
		[Column(Name="c_DecimalProp", Storage="_C_DecimalProp", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecimalProp
		{
			get
			{
				return this._C_DecimalProp;
			}
			set
			{
				if ((this._C_DecimalProp != value))
				{
					this.OnC_DecimalPropChanging(value);
					this.SendPropertyChanging();
					this._C_DecimalProp = value;
					this.SendPropertyChanged("C_DecimalProp");
					this.OnC_DecimalPropChanged();
				}
			}
		}
		
		[Column(Name="c_DoubleProp", Storage="_C_DoubleProp", DbType="Float")]
		public System.Nullable<double> C_DoubleProp
		{
			get
			{
				return this._C_DoubleProp;
			}
			set
			{
				if ((this._C_DoubleProp != value))
				{
					this.OnC_DoublePropChanging(value);
					this.SendPropertyChanging();
					this._C_DoubleProp = value;
					this.SendPropertyChanged("C_DoubleProp");
					this.OnC_DoublePropChanged();
				}
			}
		}
		
		[Column(Name="c_GuidProp", Storage="_C_GuidProp", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> C_GuidProp
		{
			get
			{
				return this._C_GuidProp;
			}
			set
			{
				if ((this._C_GuidProp != value))
				{
					this.OnC_GuidPropChanging(value);
					this.SendPropertyChanging();
					this._C_GuidProp = value;
					this.SendPropertyChanged("C_GuidProp");
					this.OnC_GuidPropChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Prop", Storage="_C_Int32Prop", DbType="NVarChar(255)")]
		public string C_Int32Prop
		{
			get
			{
				return this._C_Int32Prop;
			}
			set
			{
				if ((this._C_Int32Prop != value))
				{
					this.OnC_Int32PropChanging(value);
					this.SendPropertyChanging();
					this._C_Int32Prop = value;
					this.SendPropertyChanged("C_Int32Prop");
					this.OnC_Int32PropChanged();
				}
			}
		}
		
		[Column(Name="c_Int64Prop", Storage="_C_Int64Prop", DbType="BigInt")]
		public System.Nullable<long> C_Int64Prop
		{
			get
			{
				return this._C_Int64Prop;
			}
			set
			{
				if ((this._C_Int64Prop != value))
				{
					this.OnC_Int64PropChanging(value);
					this.SendPropertyChanging();
					this._C_Int64Prop = value;
					this.SendPropertyChanged("C_Int64Prop");
					this.OnC_Int64PropChanged();
				}
			}
		}
		
		[Column(Name="c_Int32Prop1", Storage="_C_Int32Prop1", DbType="Int")]
		public System.Nullable<int> C_Int32Prop1
		{
			get
			{
				return this._C_Int32Prop1;
			}
			set
			{
				if ((this._C_Int32Prop1 != value))
				{
					this.OnC_Int32Prop1Changing(value);
					this.SendPropertyChanging();
					this._C_Int32Prop1 = value;
					this.SendPropertyChanged("C_Int32Prop1");
					this.OnC_Int32Prop1Changed();
				}
			}
		}
		
		[Column(Name="c_StringProp", Storage="_C_StringProp", DbType="NVarChar(255)")]
		public string C_StringProp
		{
			get
			{
				return this._C_StringProp;
			}
			set
			{
				if ((this._C_StringProp != value))
				{
					this.OnC_StringPropChanging(value);
					this.SendPropertyChanging();
					this._C_StringProp = value;
					this.SendPropertyChanged("C_StringProp");
					this.OnC_StringPropChanged();
				}
			}
		}
		
		[Column(Name="c_StringProp1", Storage="_C_StringProp1", DbType="NVarChar(255)")]
		public string C_StringProp1
		{
			get
			{
				return this._C_StringProp1;
			}
			set
			{
				if ((this._C_StringProp1 != value))
				{
					this.OnC_StringProp1Changing(value);
					this.SendPropertyChanging();
					this._C_StringProp1 = value;
					this.SendPropertyChanged("C_StringProp1");
					this.OnC_StringProp1Changed();
				}
			}
		}
		
		[Column(Name="c_StringProp2", Storage="_C_StringProp2", DbType="NVarChar(255)")]
		public string C_StringProp2
		{
			get
			{
				return this._C_StringProp2;
			}
			set
			{
				if ((this._C_StringProp2 != value))
				{
					this.OnC_StringProp2Changing(value);
					this.SendPropertyChanging();
					this._C_StringProp2 = value;
					this.SendPropertyChanged("C_StringProp2");
					this.OnC_StringProp2Changed();
				}
			}
		}
		
		[Column(Name="c_EnumProp", Storage="_C_EnumProp", DbType="Int")]
		public System.Nullable<int> C_EnumProp
		{
			get
			{
				return this._C_EnumProp;
			}
			set
			{
				if ((this._C_EnumProp != value))
				{
					this.OnC_EnumPropChanging(value);
					this.SendPropertyChanging();
					this._C_EnumProp = value;
					this.SendPropertyChanged("C_EnumProp");
					this.OnC_EnumPropChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_be_smo_thi_e")]
	public partial class T_be_smo_thi_e : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _C_E_Id;
		
		private int _C__version;
		
		private System.Guid _C_internal_key;
		
		private System.Nullable<System.DateTime> _C_CreationDate;
		
		private System.Nullable<System.DateTime> _C_UpdateDate;
		
		private System.Nullable<int> _C_UID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_E_IdChanging(System.Guid value);
    partial void OnC_E_IdChanged();
    partial void OnC__versionChanging(int value);
    partial void OnC__versionChanged();
    partial void OnC_internal_keyChanging(System.Guid value);
    partial void OnC_internal_keyChanged();
    partial void OnC_CreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_CreationDateChanged();
    partial void OnC_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_UpdateDateChanged();
    partial void OnC_UIDChanging(System.Nullable<int> value);
    partial void OnC_UIDChanged();
    #endregion
		
		public T_be_smo_thi_e()
		{
			OnCreated();
		}
		
		[Column(Name="c_E_Id", Storage="_C_E_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid C_E_Id
		{
			get
			{
				return this._C_E_Id;
			}
			set
			{
				if ((this._C_E_Id != value))
				{
					this.OnC_E_IdChanging(value);
					this.SendPropertyChanging();
					this._C_E_Id = value;
					this.SendPropertyChanged("C_E_Id");
					this.OnC_E_IdChanged();
				}
			}
		}
		
		[Column(Name="c__version", Storage="_C__version", DbType="Int NOT NULL")]
		public int C__version
		{
			get
			{
				return this._C__version;
			}
			set
			{
				if ((this._C__version != value))
				{
					this.OnC__versionChanging(value);
					this.SendPropertyChanging();
					this._C__version = value;
					this.SendPropertyChanged("C__version");
					this.OnC__versionChanged();
				}
			}
		}
		
		[Column(Name="c_internal_key", Storage="_C_internal_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid C_internal_key
		{
			get
			{
				return this._C_internal_key;
			}
			set
			{
				if ((this._C_internal_key != value))
				{
					this.OnC_internal_keyChanging(value);
					this.SendPropertyChanging();
					this._C_internal_key = value;
					this.SendPropertyChanged("C_internal_key");
					this.OnC_internal_keyChanged();
				}
			}
		}
		
		[Column(Name="c_CreationDate", Storage="_C_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_CreationDate
		{
			get
			{
				return this._C_CreationDate;
			}
			set
			{
				if ((this._C_CreationDate != value))
				{
					this.OnC_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._C_CreationDate = value;
					this.SendPropertyChanged("C_CreationDate");
					this.OnC_CreationDateChanged();
				}
			}
		}
		
		[Column(Name="c_UpdateDate", Storage="_C_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UpdateDate
		{
			get
			{
				return this._C_UpdateDate;
			}
			set
			{
				if ((this._C_UpdateDate != value))
				{
					this.OnC_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._C_UpdateDate = value;
					this.SendPropertyChanged("C_UpdateDate");
					this.OnC_UpdateDateChanged();
				}
			}
		}
		
		[Column(Name="c_UID", Storage="_C_UID", DbType="Int")]
		public System.Nullable<int> C_UID
		{
			get
			{
				return this._C_UID;
			}
			set
			{
				if ((this._C_UID != value))
				{
					this.OnC_UIDChanging(value);
					this.SendPropertyChanging();
					this._C_UID = value;
					this.SendPropertyChanged("C_UID");
					this.OnC_UIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_bill_manager")]
	public partial class T_bill_manager
	{
		
		private int _Id_manager;
		
		private int _Id_acc;
		
		public T_bill_manager()
		{
		}
		
		[Column(Name="id_manager", Storage="_Id_manager", DbType="Int NOT NULL")]
		public int Id_manager
		{
			get
			{
				return this._Id_manager;
			}
			set
			{
				if ((this._Id_manager != value))
				{
					this._Id_manager = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup")]
	public partial class T_billgroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_billgroup;
		
		private string _Tx_name;
		
		private string _Tx_description;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _Id_parent_billgroup;
		
		private string _Tx_type;
		
		private EntityRef<T_usage_interval> _T_usage_interval;
		
		private EntityRef<T_billgroup> _Id_parent_billgroupT_billgroup;
		
		private EntitySet<T_billgroup> _Id_billgroupT_billgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_billgroupChanging(int value);
    partial void OnId_billgroupChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descriptionChanging(string value);
    partial void OnTx_descriptionChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnId_parent_billgroupChanging(System.Nullable<int> value);
    partial void OnId_parent_billgroupChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    #endregion
		
		public T_billgroup()
		{
			this._T_usage_interval = default(EntityRef<T_usage_interval>);
			this._Id_parent_billgroupT_billgroup = default(EntityRef<T_billgroup>);
			this._Id_billgroupT_billgroup = new EntitySet<T_billgroup>(new Action<T_billgroup>(this.attach_Id_billgroupT_billgroup), new Action<T_billgroup>(this.detach_Id_billgroupT_billgroup));
			OnCreated();
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this.OnId_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_billgroup = value;
					this.SendPropertyChanged("Id_billgroup");
					this.OnId_billgroupChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_description", Storage="_Tx_description", DbType="NVarChar(2048)")]
		public string Tx_description
		{
			get
			{
				return this._Tx_description;
			}
			set
			{
				if ((this._Tx_description != value))
				{
					this.OnTx_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Tx_description = value;
					this.SendPropertyChanged("Tx_description");
					this.OnTx_descriptionChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_parent_billgroup", Storage="_Id_parent_billgroup", DbType="Int")]
		public System.Nullable<int> Id_parent_billgroup
		{
			get
			{
				return this._Id_parent_billgroup;
			}
			set
			{
				if ((this._Id_parent_billgroup != value))
				{
					this.OnId_parent_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_billgroup = value;
					this.SendPropertyChanged("Id_parent_billgroup");
					this.OnId_parent_billgroupChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_billgroup", Storage="_T_usage_interval", ThisKey="Id_usage_interval", OtherKey="Id_interval", IsForeignKey=true)]
		public T_usage_interval T_usage_interval
		{
			get
			{
				return this._T_usage_interval.Entity;
			}
			set
			{
				T_usage_interval previousValue = this._T_usage_interval.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_interval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_interval.Entity = null;
						previousValue.T_billgroup.Remove(this);
					}
					this._T_usage_interval.Entity = value;
					if ((value != null))
					{
						value.T_billgroup.Add(this);
						this._Id_usage_interval = value.Id_interval;
					}
					else
					{
						this._Id_usage_interval = default(int);
					}
					this.SendPropertyChanged("T_usage_interval");
				}
			}
		}
		
		[Association(Name="FK2_t_billgroup", Storage="_Id_parent_billgroupT_billgroup", ThisKey="Id_parent_billgroup", OtherKey="Id_billgroup", IsForeignKey=true)]
		public T_billgroup Id_parent_billgroupT_billgroup
		{
			get
			{
				return this._Id_parent_billgroupT_billgroup.Entity;
			}
			set
			{
				T_billgroup previousValue = this._Id_parent_billgroupT_billgroup.Entity;
				if (((previousValue != value) 
							|| (this._Id_parent_billgroupT_billgroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_parent_billgroupT_billgroup.Entity = null;
						previousValue.Id_billgroupT_billgroup.Remove(this);
					}
					this._Id_parent_billgroupT_billgroup.Entity = value;
					if ((value != null))
					{
						value.Id_billgroupT_billgroup.Add(this);
						this._Id_parent_billgroup = value.Id_billgroup;
					}
					else
					{
						this._Id_parent_billgroup = default(Nullable<int>);
					}
					this.SendPropertyChanged("Id_parent_billgroupT_billgroup");
				}
			}
		}
		
		[Association(Name="FK2_t_billgroup", Storage="_Id_billgroupT_billgroup", ThisKey="Id_billgroup", OtherKey="Id_parent_billgroup", DeleteRule="NO ACTION")]
		public EntitySet<T_billgroup> Id_billgroupT_billgroup
		{
			get
			{
				return this._Id_billgroupT_billgroup;
			}
			set
			{
				this._Id_billgroupT_billgroup.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Id_billgroupT_billgroup(T_billgroup entity)
		{
			this.SendPropertyChanging();
			entity.Id_parent_billgroupT_billgroup = this;
		}
		
		private void detach_Id_billgroupT_billgroup(T_billgroup entity)
		{
			this.SendPropertyChanging();
			entity.Id_parent_billgroupT_billgroup = null;
		}
	}
	
	[Table(Name="dbo.t_billgroup_constraint")]
	public partial class T_billgroup_constraint
	{
		
		private int _Id_usage_interval;
		
		private int _Id_group;
		
		private int _Id_acc;
		
		public T_billgroup_constraint()
		{
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this._Id_usage_interval = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int NOT NULL")]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_constraint_tmp")]
	public partial class T_billgroup_constraint_tmp
	{
		
		private int _Id_usage_interval;
		
		private int _Id_group;
		
		private int _Id_acc;
		
		public T_billgroup_constraint_tmp()
		{
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this._Id_usage_interval = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int NOT NULL")]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_materialization")]
	public partial class T_billgroup_materialization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_materialization;
		
		private int _Id_user_acc;
		
		private System.DateTime _Dt_start;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
		private System.Nullable<int> _Id_parent_billgroup;
		
		private int _Id_usage_interval;
		
		private string _Tx_status;
		
		private string _Tx_failure_reason;
		
		private string _Tx_type;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_usage_interval> _T_usage_interval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_materializationChanging(int value);
    partial void OnId_materializationChanged();
    partial void OnId_user_accChanging(int value);
    partial void OnId_user_accChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    partial void OnId_parent_billgroupChanging(System.Nullable<int> value);
    partial void OnId_parent_billgroupChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    partial void OnTx_failure_reasonChanging(string value);
    partial void OnTx_failure_reasonChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    #endregion
		
		public T_billgroup_materialization()
		{
			this._T_account = default(EntityRef<T_account>);
			this._T_usage_interval = default(EntityRef<T_usage_interval>);
			OnCreated();
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this.OnId_materializationChanging(value);
					this.SendPropertyChanging();
					this._Id_materialization = value;
					this.SendPropertyChanged("Id_materialization");
					this.OnId_materializationChanged();
				}
			}
		}
		
		[Column(Name="id_user_acc", Storage="_Id_user_acc", DbType="Int NOT NULL")]
		public int Id_user_acc
		{
			get
			{
				return this._Id_user_acc;
			}
			set
			{
				if ((this._Id_user_acc != value))
				{
					this.OnId_user_accChanging(value);
					this.SendPropertyChanging();
					this._Id_user_acc = value;
					this.SendPropertyChanged("Id_user_acc");
					this.OnId_user_accChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="id_parent_billgroup", Storage="_Id_parent_billgroup", DbType="Int")]
		public System.Nullable<int> Id_parent_billgroup
		{
			get
			{
				return this._Id_parent_billgroup;
			}
			set
			{
				if ((this._Id_parent_billgroup != value))
				{
					this.OnId_parent_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_billgroup = value;
					this.SendPropertyChanged("Id_parent_billgroup");
					this.OnId_parent_billgroupChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Column(Name="tx_failure_reason", Storage="_Tx_failure_reason", DbType="VarChar(4096)")]
		public string Tx_failure_reason
		{
			get
			{
				return this._Tx_failure_reason;
			}
			set
			{
				if ((this._Tx_failure_reason != value))
				{
					this.OnTx_failure_reasonChanging(value);
					this.SendPropertyChanging();
					this._Tx_failure_reason = value;
					this.SendPropertyChanged("Tx_failure_reason");
					this.OnTx_failure_reasonChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_billgroup_materialization", Storage="_T_account", ThisKey="Id_user_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_billgroup_materialization.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_billgroup_materialization.Add(this);
						this._Id_user_acc = value.Id_acc;
					}
					else
					{
						this._Id_user_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="FK3_t_billgroup_materialization", Storage="_T_usage_interval", ThisKey="Id_usage_interval", OtherKey="Id_interval", IsForeignKey=true)]
		public T_usage_interval T_usage_interval
		{
			get
			{
				return this._T_usage_interval.Entity;
			}
			set
			{
				T_usage_interval previousValue = this._T_usage_interval.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_interval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_interval.Entity = null;
						previousValue.T_billgroup_materialization.Remove(this);
					}
					this._T_usage_interval.Entity = value;
					if ((value != null))
					{
						value.T_billgroup_materialization.Add(this);
						this._Id_usage_interval = value.Id_interval;
					}
					else
					{
						this._Id_usage_interval = default(int);
					}
					this.SendPropertyChanged("T_usage_interval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_member")]
	public partial class T_billgroup_member
	{
		
		private System.Nullable<int> _Id_billgroup;
		
		private int _Id_acc;
		
		private int _Id_materialization;
		
		private System.Nullable<int> _Id_root_billgroup;
		
		public T_billgroup_member()
		{
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", DbType="Int")]
		public System.Nullable<int> Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this._Id_billgroup = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", DbType="Int NOT NULL")]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this._Id_materialization = value;
				}
			}
		}
		
		[Column(Name="id_root_billgroup", Storage="_Id_root_billgroup", DbType="Int")]
		public System.Nullable<int> Id_root_billgroup
		{
			get
			{
				return this._Id_root_billgroup;
			}
			set
			{
				if ((this._Id_root_billgroup != value))
				{
					this._Id_root_billgroup = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_member_history")]
	public partial class T_billgroup_member_history
	{
		
		private System.Nullable<int> _Id_billgroup;
		
		private int _Id_acc;
		
		private int _Id_materialization;
		
		private string _Tx_status;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private string _Tx_failure_reason;
		
		public T_billgroup_member_history()
		{
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", DbType="Int")]
		public System.Nullable<int> Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this._Id_billgroup = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", DbType="Int NOT NULL")]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this._Id_materialization = value;
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this._Tx_status = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
		
		[Column(Name="tx_failure_reason", Storage="_Tx_failure_reason", DbType="VarChar(2048)")]
		public string Tx_failure_reason
		{
			get
			{
				return this._Tx_failure_reason;
			}
			set
			{
				if ((this._Tx_failure_reason != value))
				{
					this._Tx_failure_reason = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_member_tmp")]
	public partial class T_billgroup_member_tmp
	{
		
		private int _Id_materialization;
		
		private string _Tx_name;
		
		private int _Id_acc;
		
		private System.Nullable<int> _B_extra;
		
		public T_billgroup_member_tmp()
		{
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", DbType="Int NOT NULL")]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this._Id_materialization = value;
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this._Tx_name = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="b_extra", Storage="_B_extra", DbType="Int")]
		public System.Nullable<int> B_extra
		{
			get
			{
				return this._B_extra;
			}
			set
			{
				if ((this._B_extra != value))
				{
					this._B_extra = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_source_acc")]
	public partial class T_billgroup_source_acc
	{
		
		private int _Id_materialization;
		
		private int _Id_acc;
		
		public T_billgroup_source_acc()
		{
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", DbType="Int NOT NULL")]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this._Id_materialization = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billgroup_tmp")]
	public partial class T_billgroup_tmp
	{
		
		private int _Id_materialization;
		
		private string _Tx_name;
		
		private string _Tx_description;
		
		private int _Id_billgroup;
		
		public T_billgroup_tmp()
		{
		}
		
		[Column(Name="id_materialization", Storage="_Id_materialization", DbType="Int NOT NULL")]
		public int Id_materialization
		{
			get
			{
				return this._Id_materialization;
			}
			set
			{
				if ((this._Id_materialization != value))
				{
					this._Id_materialization = value;
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this._Tx_name = value;
				}
			}
		}
		
		[Column(Name="tx_description", Storage="_Tx_description", DbType="NVarChar(255)")]
		public string Tx_description
		{
			get
			{
				return this._Tx_description;
			}
			set
			{
				if ((this._Tx_description != value))
				{
					this._Tx_description = value;
				}
			}
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this._Id_billgroup = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billing_server_settings")]
	public partial class T_billing_server_settings
	{
		
		private int _Grace_daily_in_days;
		
		private int _Grace_biweekly_in_days;
		
		private int _Grace_weekly_in_days;
		
		private int _Grace_semimonthly_in_days;
		
		private int _Grace_monthly_in_days;
		
		private int _Grace_quarterly_in_days;
		
		private int _Grace_semiannual_in_days;
		
		private int _Grace_annually_in_days;
		
		private int _Is_grace_daily_enabled;
		
		private int _Is_grace_biweekly_enabled;
		
		private int _Is_grace_weekly_enabled;
		
		private int _Is_grace_semimonthly_enabled;
		
		private int _Is_grace_monthly_enabled;
		
		private int _Is_grace_quarterly_enabled;
		
		private int _Is_grace_semiannual_enabled;
		
		private int _Is_grace_anually_enabled;
		
		private int _Is_auto_run_eop_enabled;
		
		private int _Is_auto_soft_close_bg_enabled;
		
		private int _Is_block_new_accounts_enabled;
		
		private int _Is_run_scheduled_adapters;
		
		private string _Multicast_address;
		
		private int _Multicast_port;
		
		private int _Multicast_time_to_live;
		
		public T_billing_server_settings()
		{
		}
		
		[Column(Name="grace_daily_in_days", Storage="_Grace_daily_in_days", DbType="Int NOT NULL")]
		public int Grace_daily_in_days
		{
			get
			{
				return this._Grace_daily_in_days;
			}
			set
			{
				if ((this._Grace_daily_in_days != value))
				{
					this._Grace_daily_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_biweekly_in_days", Storage="_Grace_biweekly_in_days", DbType="Int NOT NULL")]
		public int Grace_biweekly_in_days
		{
			get
			{
				return this._Grace_biweekly_in_days;
			}
			set
			{
				if ((this._Grace_biweekly_in_days != value))
				{
					this._Grace_biweekly_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_weekly_in_days", Storage="_Grace_weekly_in_days", DbType="Int NOT NULL")]
		public int Grace_weekly_in_days
		{
			get
			{
				return this._Grace_weekly_in_days;
			}
			set
			{
				if ((this._Grace_weekly_in_days != value))
				{
					this._Grace_weekly_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_semimonthly_in_days", Storage="_Grace_semimonthly_in_days", DbType="Int NOT NULL")]
		public int Grace_semimonthly_in_days
		{
			get
			{
				return this._Grace_semimonthly_in_days;
			}
			set
			{
				if ((this._Grace_semimonthly_in_days != value))
				{
					this._Grace_semimonthly_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_monthly_in_days", Storage="_Grace_monthly_in_days", DbType="Int NOT NULL")]
		public int Grace_monthly_in_days
		{
			get
			{
				return this._Grace_monthly_in_days;
			}
			set
			{
				if ((this._Grace_monthly_in_days != value))
				{
					this._Grace_monthly_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_quarterly_in_days", Storage="_Grace_quarterly_in_days", DbType="Int NOT NULL")]
		public int Grace_quarterly_in_days
		{
			get
			{
				return this._Grace_quarterly_in_days;
			}
			set
			{
				if ((this._Grace_quarterly_in_days != value))
				{
					this._Grace_quarterly_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_semiannual_in_days", Storage="_Grace_semiannual_in_days", DbType="Int NOT NULL")]
		public int Grace_semiannual_in_days
		{
			get
			{
				return this._Grace_semiannual_in_days;
			}
			set
			{
				if ((this._Grace_semiannual_in_days != value))
				{
					this._Grace_semiannual_in_days = value;
				}
			}
		}
		
		[Column(Name="grace_annually_in_days", Storage="_Grace_annually_in_days", DbType="Int NOT NULL")]
		public int Grace_annually_in_days
		{
			get
			{
				return this._Grace_annually_in_days;
			}
			set
			{
				if ((this._Grace_annually_in_days != value))
				{
					this._Grace_annually_in_days = value;
				}
			}
		}
		
		[Column(Name="is_grace_daily_enabled", Storage="_Is_grace_daily_enabled", DbType="Int NOT NULL")]
		public int Is_grace_daily_enabled
		{
			get
			{
				return this._Is_grace_daily_enabled;
			}
			set
			{
				if ((this._Is_grace_daily_enabled != value))
				{
					this._Is_grace_daily_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_biweekly_enabled", Storage="_Is_grace_biweekly_enabled", DbType="Int NOT NULL")]
		public int Is_grace_biweekly_enabled
		{
			get
			{
				return this._Is_grace_biweekly_enabled;
			}
			set
			{
				if ((this._Is_grace_biweekly_enabled != value))
				{
					this._Is_grace_biweekly_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_weekly_enabled", Storage="_Is_grace_weekly_enabled", DbType="Int NOT NULL")]
		public int Is_grace_weekly_enabled
		{
			get
			{
				return this._Is_grace_weekly_enabled;
			}
			set
			{
				if ((this._Is_grace_weekly_enabled != value))
				{
					this._Is_grace_weekly_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_semimonthly_enabled", Storage="_Is_grace_semimonthly_enabled", DbType="Int NOT NULL")]
		public int Is_grace_semimonthly_enabled
		{
			get
			{
				return this._Is_grace_semimonthly_enabled;
			}
			set
			{
				if ((this._Is_grace_semimonthly_enabled != value))
				{
					this._Is_grace_semimonthly_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_monthly_enabled", Storage="_Is_grace_monthly_enabled", DbType="Int NOT NULL")]
		public int Is_grace_monthly_enabled
		{
			get
			{
				return this._Is_grace_monthly_enabled;
			}
			set
			{
				if ((this._Is_grace_monthly_enabled != value))
				{
					this._Is_grace_monthly_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_quarterly_enabled", Storage="_Is_grace_quarterly_enabled", DbType="Int NOT NULL")]
		public int Is_grace_quarterly_enabled
		{
			get
			{
				return this._Is_grace_quarterly_enabled;
			}
			set
			{
				if ((this._Is_grace_quarterly_enabled != value))
				{
					this._Is_grace_quarterly_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_semiannual_enabled", Storage="_Is_grace_semiannual_enabled", DbType="Int NOT NULL")]
		public int Is_grace_semiannual_enabled
		{
			get
			{
				return this._Is_grace_semiannual_enabled;
			}
			set
			{
				if ((this._Is_grace_semiannual_enabled != value))
				{
					this._Is_grace_semiannual_enabled = value;
				}
			}
		}
		
		[Column(Name="is_grace_anually_enabled", Storage="_Is_grace_anually_enabled", DbType="Int NOT NULL")]
		public int Is_grace_anually_enabled
		{
			get
			{
				return this._Is_grace_anually_enabled;
			}
			set
			{
				if ((this._Is_grace_anually_enabled != value))
				{
					this._Is_grace_anually_enabled = value;
				}
			}
		}
		
		[Column(Name="is_auto_run_eop_enabled", Storage="_Is_auto_run_eop_enabled", DbType="Int NOT NULL")]
		public int Is_auto_run_eop_enabled
		{
			get
			{
				return this._Is_auto_run_eop_enabled;
			}
			set
			{
				if ((this._Is_auto_run_eop_enabled != value))
				{
					this._Is_auto_run_eop_enabled = value;
				}
			}
		}
		
		[Column(Name="is_auto_soft_close_bg_enabled", Storage="_Is_auto_soft_close_bg_enabled", DbType="Int NOT NULL")]
		public int Is_auto_soft_close_bg_enabled
		{
			get
			{
				return this._Is_auto_soft_close_bg_enabled;
			}
			set
			{
				if ((this._Is_auto_soft_close_bg_enabled != value))
				{
					this._Is_auto_soft_close_bg_enabled = value;
				}
			}
		}
		
		[Column(Name="is_block_new_accounts_enabled", Storage="_Is_block_new_accounts_enabled", DbType="Int NOT NULL")]
		public int Is_block_new_accounts_enabled
		{
			get
			{
				return this._Is_block_new_accounts_enabled;
			}
			set
			{
				if ((this._Is_block_new_accounts_enabled != value))
				{
					this._Is_block_new_accounts_enabled = value;
				}
			}
		}
		
		[Column(Name="is_run_scheduled_adapters", Storage="_Is_run_scheduled_adapters", DbType="Int NOT NULL")]
		public int Is_run_scheduled_adapters
		{
			get
			{
				return this._Is_run_scheduled_adapters;
			}
			set
			{
				if ((this._Is_run_scheduled_adapters != value))
				{
					this._Is_run_scheduled_adapters = value;
				}
			}
		}
		
		[Column(Name="multicast_address", Storage="_Multicast_address", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Multicast_address
		{
			get
			{
				return this._Multicast_address;
			}
			set
			{
				if ((this._Multicast_address != value))
				{
					this._Multicast_address = value;
				}
			}
		}
		
		[Column(Name="multicast_port", Storage="_Multicast_port", DbType="Int NOT NULL")]
		public int Multicast_port
		{
			get
			{
				return this._Multicast_port;
			}
			set
			{
				if ((this._Multicast_port != value))
				{
					this._Multicast_port = value;
				}
			}
		}
		
		[Column(Name="multicast_time_to_live", Storage="_Multicast_time_to_live", DbType="Int NOT NULL")]
		public int Multicast_time_to_live
		{
			get
			{
				return this._Multicast_time_to_live;
			}
			set
			{
				if ((this._Multicast_time_to_live != value))
				{
					this._Multicast_time_to_live = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billingserver")]
	public partial class T_billingserver
	{
		
		private int _Id_billingserver;
		
		private string _Tx_machine;
		
		private System.Nullable<int> _N_MaxConcurrentAdapters;
		
		private string _B_OnlyRunAssignedAdapters;
		
		private string _B_CanCreateScheduledEvents;
		
		private string _B_CanCreateIntervals;
		
		private string _B_CanSoftCloseIntervals;
		
		private string _B_WillCreateScheduledEvents;
		
		private string _B_WillCreateIntervals;
		
		private string _B_WillSoftCloseIntervals;
		
		private System.Nullable<int> _N_ProcessEventsPeriod;
		
		private string _B_online;
		
		private string _B_paused;
		
		public T_billingserver()
		{
		}
		
		[Column(Name="id_billingserver", Storage="_Id_billingserver", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_billingserver
		{
			get
			{
				return this._Id_billingserver;
			}
			set
			{
				if ((this._Id_billingserver != value))
				{
					this._Id_billingserver = value;
				}
			}
		}
		
		[Column(Name="tx_machine", Storage="_Tx_machine", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_machine
		{
			get
			{
				return this._Tx_machine;
			}
			set
			{
				if ((this._Tx_machine != value))
				{
					this._Tx_machine = value;
				}
			}
		}
		
		[Column(Name="n_MaxConcurrentAdapters", Storage="_N_MaxConcurrentAdapters", DbType="Int")]
		public System.Nullable<int> N_MaxConcurrentAdapters
		{
			get
			{
				return this._N_MaxConcurrentAdapters;
			}
			set
			{
				if ((this._N_MaxConcurrentAdapters != value))
				{
					this._N_MaxConcurrentAdapters = value;
				}
			}
		}
		
		[Column(Name="b_OnlyRunAssignedAdapters", Storage="_B_OnlyRunAssignedAdapters", DbType="Char(1)")]
		public string B_OnlyRunAssignedAdapters
		{
			get
			{
				return this._B_OnlyRunAssignedAdapters;
			}
			set
			{
				if ((this._B_OnlyRunAssignedAdapters != value))
				{
					this._B_OnlyRunAssignedAdapters = value;
				}
			}
		}
		
		[Column(Name="b_CanCreateScheduledEvents", Storage="_B_CanCreateScheduledEvents", DbType="Char(1)")]
		public string B_CanCreateScheduledEvents
		{
			get
			{
				return this._B_CanCreateScheduledEvents;
			}
			set
			{
				if ((this._B_CanCreateScheduledEvents != value))
				{
					this._B_CanCreateScheduledEvents = value;
				}
			}
		}
		
		[Column(Name="b_CanCreateIntervals", Storage="_B_CanCreateIntervals", DbType="Char(1)")]
		public string B_CanCreateIntervals
		{
			get
			{
				return this._B_CanCreateIntervals;
			}
			set
			{
				if ((this._B_CanCreateIntervals != value))
				{
					this._B_CanCreateIntervals = value;
				}
			}
		}
		
		[Column(Name="b_CanSoftCloseIntervals", Storage="_B_CanSoftCloseIntervals", DbType="Char(1)")]
		public string B_CanSoftCloseIntervals
		{
			get
			{
				return this._B_CanSoftCloseIntervals;
			}
			set
			{
				if ((this._B_CanSoftCloseIntervals != value))
				{
					this._B_CanSoftCloseIntervals = value;
				}
			}
		}
		
		[Column(Name="b_WillCreateScheduledEvents", Storage="_B_WillCreateScheduledEvents", DbType="Char(1)")]
		public string B_WillCreateScheduledEvents
		{
			get
			{
				return this._B_WillCreateScheduledEvents;
			}
			set
			{
				if ((this._B_WillCreateScheduledEvents != value))
				{
					this._B_WillCreateScheduledEvents = value;
				}
			}
		}
		
		[Column(Name="b_WillCreateIntervals", Storage="_B_WillCreateIntervals", DbType="Char(1)")]
		public string B_WillCreateIntervals
		{
			get
			{
				return this._B_WillCreateIntervals;
			}
			set
			{
				if ((this._B_WillCreateIntervals != value))
				{
					this._B_WillCreateIntervals = value;
				}
			}
		}
		
		[Column(Name="b_WillSoftCloseIntervals", Storage="_B_WillSoftCloseIntervals", DbType="Char(1)")]
		public string B_WillSoftCloseIntervals
		{
			get
			{
				return this._B_WillSoftCloseIntervals;
			}
			set
			{
				if ((this._B_WillSoftCloseIntervals != value))
				{
					this._B_WillSoftCloseIntervals = value;
				}
			}
		}
		
		[Column(Name="n_ProcessEventsPeriod", Storage="_N_ProcessEventsPeriod", DbType="Int")]
		public System.Nullable<int> N_ProcessEventsPeriod
		{
			get
			{
				return this._N_ProcessEventsPeriod;
			}
			set
			{
				if ((this._N_ProcessEventsPeriod != value))
				{
					this._N_ProcessEventsPeriod = value;
				}
			}
		}
		
		[Column(Name="b_online", Storage="_B_online", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_online
		{
			get
			{
				return this._B_online;
			}
			set
			{
				if ((this._B_online != value))
				{
					this._B_online = value;
				}
			}
		}
		
		[Column(Name="b_paused", Storage="_B_paused", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_paused
		{
			get
			{
				return this._B_paused;
			}
			set
			{
				if ((this._B_paused != value))
				{
					this._B_paused = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_billingserver_service")]
	public partial class T_billingserver_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_billingserver;
		
		private int _Id_svc;
		
		private System.DateTime _Tt_start;
		
		private System.Nullable<System.DateTime> _Tt_end;
		
		private System.Nullable<System.DateTime> _Tt_lastheartbeat;
		
		private System.Nullable<System.DateTime> _Tt_nextheartbeatpromised;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_billingserverChanging(int value);
    partial void OnId_billingserverChanged();
    partial void OnId_svcChanging(int value);
    partial void OnId_svcChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnTt_endChanged();
    partial void OnTt_lastheartbeatChanging(System.Nullable<System.DateTime> value);
    partial void OnTt_lastheartbeatChanged();
    partial void OnTt_nextheartbeatpromisedChanging(System.Nullable<System.DateTime> value);
    partial void OnTt_nextheartbeatpromisedChanged();
    #endregion
		
		public T_billingserver_service()
		{
			OnCreated();
		}
		
		[Column(Name="id_billingserver", Storage="_Id_billingserver", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_billingserver
		{
			get
			{
				return this._Id_billingserver;
			}
			set
			{
				if ((this._Id_billingserver != value))
				{
					this.OnId_billingserverChanging(value);
					this.SendPropertyChanging();
					this._Id_billingserver = value;
					this.SendPropertyChanged("Id_billingserver");
					this.OnId_billingserverChanged();
				}
			}
		}
		
		[Column(Name="id_svc", Storage="_Id_svc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_svc
		{
			get
			{
				return this._Id_svc;
			}
			set
			{
				if ((this._Id_svc != value))
				{
					this.OnId_svcChanging(value);
					this.SendPropertyChanging();
					this._Id_svc = value;
					this.SendPropertyChanged("Id_svc");
					this.OnId_svcChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="tt_lastheartbeat", Storage="_Tt_lastheartbeat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_lastheartbeat
		{
			get
			{
				return this._Tt_lastheartbeat;
			}
			set
			{
				if ((this._Tt_lastheartbeat != value))
				{
					this.OnTt_lastheartbeatChanging(value);
					this.SendPropertyChanging();
					this._Tt_lastheartbeat = value;
					this.SendPropertyChanged("Tt_lastheartbeat");
					this.OnTt_lastheartbeatChanged();
				}
			}
		}
		
		[Column(Name="tt_nextheartbeatpromised", Storage="_Tt_nextheartbeatpromised", DbType="DateTime")]
		public System.Nullable<System.DateTime> Tt_nextheartbeatpromised
		{
			get
			{
				return this._Tt_nextheartbeatpromised;
			}
			set
			{
				if ((this._Tt_nextheartbeatpromised != value))
				{
					this.OnTt_nextheartbeatpromisedChanging(value);
					this.SendPropertyChanging();
					this._Tt_nextheartbeatpromised = value;
					this.SendPropertyChanged("Tt_nextheartbeatpromised");
					this.OnTt_nextheartbeatpromisedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_calc_engine")]
	public partial class T_calc_engine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_engine;
		
		private string _Nm_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_engineChanging(int value);
    partial void OnId_engineChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    #endregion
		
		public T_calc_engine()
		{
			OnCreated();
		}
		
		[Column(Name="id_engine", Storage="_Id_engine", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_engine
		{
			get
			{
				return this._Id_engine;
			}
			set
			{
				if ((this._Id_engine != value))
				{
					this.OnId_engineChanging(value);
					this.SendPropertyChanging();
					this._Id_engine = value;
					this.SendPropertyChanged("Id_engine");
					this.OnId_engineChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255)")]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_calc_formula")]
	public partial class T_calc_formula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_formula;
		
		private string _Tx_formula;
		
		private int _Id_engine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_formulaChanging(int value);
    partial void OnId_formulaChanged();
    partial void OnTx_formulaChanging(string value);
    partial void OnTx_formulaChanged();
    partial void OnId_engineChanging(int value);
    partial void OnId_engineChanged();
    #endregion
		
		public T_calc_formula()
		{
			OnCreated();
		}
		
		[Column(Name="id_formula", Storage="_Id_formula", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_formula
		{
			get
			{
				return this._Id_formula;
			}
			set
			{
				if ((this._Id_formula != value))
				{
					this.OnId_formulaChanging(value);
					this.SendPropertyChanging();
					this._Id_formula = value;
					this.SendPropertyChanged("Id_formula");
					this.OnId_formulaChanged();
				}
			}
		}
		
		[Column(Name="tx_formula", Storage="_Tx_formula", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Tx_formula
		{
			get
			{
				return this._Tx_formula;
			}
			set
			{
				if ((this._Tx_formula != value))
				{
					this.OnTx_formulaChanging(value);
					this.SendPropertyChanging();
					this._Tx_formula = value;
					this.SendPropertyChanged("Tx_formula");
					this.OnTx_formulaChanged();
				}
			}
		}
		
		[Column(Name="id_engine", Storage="_Id_engine", DbType="Int NOT NULL")]
		public int Id_engine
		{
			get
			{
				return this._Id_engine;
			}
			set
			{
				if ((this._Id_engine != value))
				{
					this.OnId_engineChanging(value);
					this.SendPropertyChanging();
					this._Id_engine = value;
					this.SendPropertyChanged("Id_engine");
					this.OnId_engineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_calendar")]
	public partial class T_calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_calendar;
		
		private int _N_timezoneoffset;
		
		private string _B_combinedweekend;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_calendar_day> _T_calendar_day;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_calendarChanging(int value);
    partial void OnId_calendarChanged();
    partial void OnN_timezoneoffsetChanging(int value);
    partial void OnN_timezoneoffsetChanged();
    partial void OnB_combinedweekendChanging(string value);
    partial void OnB_combinedweekendChanged();
    #endregion
		
		public T_calendar()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_calendar_day = new EntitySet<T_calendar_day>(new Action<T_calendar_day>(this.attach_T_calendar_day), new Action<T_calendar_day>(this.detach_T_calendar_day));
			OnCreated();
		}
		
		[Column(Name="id_calendar", Storage="_Id_calendar", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_calendar
		{
			get
			{
				return this._Id_calendar;
			}
			set
			{
				if ((this._Id_calendar != value))
				{
					this.OnId_calendarChanging(value);
					this.SendPropertyChanging();
					this._Id_calendar = value;
					this.SendPropertyChanged("Id_calendar");
					this.OnId_calendarChanged();
				}
			}
		}
		
		[Column(Name="n_timezoneoffset", Storage="_N_timezoneoffset", DbType="Int NOT NULL")]
		public int N_timezoneoffset
		{
			get
			{
				return this._N_timezoneoffset;
			}
			set
			{
				if ((this._N_timezoneoffset != value))
				{
					this.OnN_timezoneoffsetChanging(value);
					this.SendPropertyChanging();
					this._N_timezoneoffset = value;
					this.SendPropertyChanged("N_timezoneoffset");
					this.OnN_timezoneoffsetChanged();
				}
			}
		}
		
		[Column(Name="b_combinedweekend", Storage="_B_combinedweekend", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_combinedweekend
		{
			get
			{
				return this._B_combinedweekend;
			}
			set
			{
				if ((this._B_combinedweekend != value))
				{
					this.OnB_combinedweekendChanging(value);
					this.SendPropertyChanging();
					this._B_combinedweekend = value;
					this.SendPropertyChanged("B_combinedweekend");
					this.OnB_combinedweekendChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CALENDAR", Storage="_T_base_props", ThisKey="Id_calendar", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_calendar = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_calendar = this;
						this._Id_calendar = value.Id_prop;
					}
					else
					{
						this._Id_calendar = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK1_T_CALENDAR_DAY", Storage="_T_calendar_day", ThisKey="Id_calendar", OtherKey="Id_calendar", DeleteRule="NO ACTION")]
		public EntitySet<T_calendar_day> T_calendar_day
		{
			get
			{
				return this._T_calendar_day;
			}
			set
			{
				this._T_calendar_day.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_calendar_day(T_calendar_day entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar = this;
		}
		
		private void detach_T_calendar_day(T_calendar_day entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar = null;
		}
	}
	
	[Table(Name="dbo.t_calendar_day")]
	public partial class T_calendar_day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_day;
		
		private int _Id_calendar;
		
		private System.Nullable<int> _N_weekday;
		
		private int _N_code;
		
		private EntitySet<T_calendar_periods> _T_calendar_periods;
		
		private EntityRef<T_calendar> _T_calendar;
		
		private EntitySet<T_calendar_holiday> _T_calendar_holiday;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_dayChanging(int value);
    partial void OnId_dayChanged();
    partial void OnId_calendarChanging(int value);
    partial void OnId_calendarChanged();
    partial void OnN_weekdayChanging(System.Nullable<int> value);
    partial void OnN_weekdayChanged();
    partial void OnN_codeChanging(int value);
    partial void OnN_codeChanged();
    #endregion
		
		public T_calendar_day()
		{
			this._T_calendar_periods = new EntitySet<T_calendar_periods>(new Action<T_calendar_periods>(this.attach_T_calendar_periods), new Action<T_calendar_periods>(this.detach_T_calendar_periods));
			this._T_calendar = default(EntityRef<T_calendar>);
			this._T_calendar_holiday = new EntitySet<T_calendar_holiday>(new Action<T_calendar_holiday>(this.attach_T_calendar_holiday), new Action<T_calendar_holiday>(this.detach_T_calendar_holiday));
			OnCreated();
		}
		
		[Column(Name="id_day", Storage="_Id_day", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_day
		{
			get
			{
				return this._Id_day;
			}
			set
			{
				if ((this._Id_day != value))
				{
					this.OnId_dayChanging(value);
					this.SendPropertyChanging();
					this._Id_day = value;
					this.SendPropertyChanged("Id_day");
					this.OnId_dayChanged();
				}
			}
		}
		
		[Column(Name="id_calendar", Storage="_Id_calendar", DbType="Int NOT NULL")]
		public int Id_calendar
		{
			get
			{
				return this._Id_calendar;
			}
			set
			{
				if ((this._Id_calendar != value))
				{
					this.OnId_calendarChanging(value);
					this.SendPropertyChanging();
					this._Id_calendar = value;
					this.SendPropertyChanged("Id_calendar");
					this.OnId_calendarChanged();
				}
			}
		}
		
		[Column(Name="n_weekday", Storage="_N_weekday", DbType="Int")]
		public System.Nullable<int> N_weekday
		{
			get
			{
				return this._N_weekday;
			}
			set
			{
				if ((this._N_weekday != value))
				{
					this.OnN_weekdayChanging(value);
					this.SendPropertyChanging();
					this._N_weekday = value;
					this.SendPropertyChanged("N_weekday");
					this.OnN_weekdayChanged();
				}
			}
		}
		
		[Column(Name="n_code", Storage="_N_code", DbType="Int NOT NULL")]
		public int N_code
		{
			get
			{
				return this._N_code;
			}
			set
			{
				if ((this._N_code != value))
				{
					this.OnN_codeChanging(value);
					this.SendPropertyChanging();
					this._N_code = value;
					this.SendPropertyChanged("N_code");
					this.OnN_codeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CALENADAR_PERIODS", Storage="_T_calendar_periods", ThisKey="Id_day", OtherKey="Id_day", DeleteRule="NO ACTION")]
		public EntitySet<T_calendar_periods> T_calendar_periods
		{
			get
			{
				return this._T_calendar_periods;
			}
			set
			{
				this._T_calendar_periods.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_CALENDAR_DAY", Storage="_T_calendar", ThisKey="Id_calendar", OtherKey="Id_calendar", IsForeignKey=true)]
		public T_calendar T_calendar
		{
			get
			{
				return this._T_calendar.Entity;
			}
			set
			{
				T_calendar previousValue = this._T_calendar.Entity;
				if (((previousValue != value) 
							|| (this._T_calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_calendar.Entity = null;
						previousValue.T_calendar_day.Remove(this);
					}
					this._T_calendar.Entity = value;
					if ((value != null))
					{
						value.T_calendar_day.Add(this);
						this._Id_calendar = value.Id_calendar;
					}
					else
					{
						this._Id_calendar = default(int);
					}
					this.SendPropertyChanged("T_calendar");
				}
			}
		}
		
		[Association(Name="FK1_T_CALENDAR_HOLIDAY", Storage="_T_calendar_holiday", ThisKey="Id_day", OtherKey="Id_day", DeleteRule="NO ACTION")]
		public EntitySet<T_calendar_holiday> T_calendar_holiday
		{
			get
			{
				return this._T_calendar_holiday;
			}
			set
			{
				this._T_calendar_holiday.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_calendar_periods(T_calendar_periods entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar_day = this;
		}
		
		private void detach_T_calendar_periods(T_calendar_periods entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar_day = null;
		}
		
		private void attach_T_calendar_holiday(T_calendar_holiday entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar_day = this;
		}
		
		private void detach_T_calendar_holiday(T_calendar_holiday entity)
		{
			this.SendPropertyChanging();
			entity.T_calendar_day = null;
		}
	}
	
	[Table(Name="dbo.t_calendar_holiday")]
	public partial class T_calendar_holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_holiday;
		
		private int _Id_day;
		
		private string _Nm_name;
		
		private int _N_day;
		
		private System.Nullable<int> _N_weekofmonth;
		
		private int _N_month;
		
		private int _N_year;
		
		private EntityRef<T_calendar_day> _T_calendar_day;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_holidayChanging(int value);
    partial void OnId_holidayChanged();
    partial void OnId_dayChanging(int value);
    partial void OnId_dayChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnN_dayChanging(int value);
    partial void OnN_dayChanged();
    partial void OnN_weekofmonthChanging(System.Nullable<int> value);
    partial void OnN_weekofmonthChanged();
    partial void OnN_monthChanging(int value);
    partial void OnN_monthChanged();
    partial void OnN_yearChanging(int value);
    partial void OnN_yearChanged();
    #endregion
		
		public T_calendar_holiday()
		{
			this._T_calendar_day = default(EntityRef<T_calendar_day>);
			OnCreated();
		}
		
		[Column(Name="id_holiday", Storage="_Id_holiday", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_holiday
		{
			get
			{
				return this._Id_holiday;
			}
			set
			{
				if ((this._Id_holiday != value))
				{
					this.OnId_holidayChanging(value);
					this.SendPropertyChanging();
					this._Id_holiday = value;
					this.SendPropertyChanged("Id_holiday");
					this.OnId_holidayChanged();
				}
			}
		}
		
		[Column(Name="id_day", Storage="_Id_day", DbType="Int NOT NULL")]
		public int Id_day
		{
			get
			{
				return this._Id_day;
			}
			set
			{
				if ((this._Id_day != value))
				{
					this.OnId_dayChanging(value);
					this.SendPropertyChanging();
					this._Id_day = value;
					this.SendPropertyChanged("Id_day");
					this.OnId_dayChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="n_day", Storage="_N_day", DbType="Int NOT NULL")]
		public int N_day
		{
			get
			{
				return this._N_day;
			}
			set
			{
				if ((this._N_day != value))
				{
					this.OnN_dayChanging(value);
					this.SendPropertyChanging();
					this._N_day = value;
					this.SendPropertyChanged("N_day");
					this.OnN_dayChanged();
				}
			}
		}
		
		[Column(Name="n_weekofmonth", Storage="_N_weekofmonth", DbType="Int")]
		public System.Nullable<int> N_weekofmonth
		{
			get
			{
				return this._N_weekofmonth;
			}
			set
			{
				if ((this._N_weekofmonth != value))
				{
					this.OnN_weekofmonthChanging(value);
					this.SendPropertyChanging();
					this._N_weekofmonth = value;
					this.SendPropertyChanged("N_weekofmonth");
					this.OnN_weekofmonthChanged();
				}
			}
		}
		
		[Column(Name="n_month", Storage="_N_month", DbType="Int NOT NULL")]
		public int N_month
		{
			get
			{
				return this._N_month;
			}
			set
			{
				if ((this._N_month != value))
				{
					this.OnN_monthChanging(value);
					this.SendPropertyChanging();
					this._N_month = value;
					this.SendPropertyChanged("N_month");
					this.OnN_monthChanged();
				}
			}
		}
		
		[Column(Name="n_year", Storage="_N_year", DbType="Int NOT NULL")]
		public int N_year
		{
			get
			{
				return this._N_year;
			}
			set
			{
				if ((this._N_year != value))
				{
					this.OnN_yearChanging(value);
					this.SendPropertyChanging();
					this._N_year = value;
					this.SendPropertyChanged("N_year");
					this.OnN_yearChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CALENDAR_HOLIDAY", Storage="_T_calendar_day", ThisKey="Id_day", OtherKey="Id_day", IsForeignKey=true)]
		public T_calendar_day T_calendar_day
		{
			get
			{
				return this._T_calendar_day.Entity;
			}
			set
			{
				T_calendar_day previousValue = this._T_calendar_day.Entity;
				if (((previousValue != value) 
							|| (this._T_calendar_day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_calendar_day.Entity = null;
						previousValue.T_calendar_holiday.Remove(this);
					}
					this._T_calendar_day.Entity = value;
					if ((value != null))
					{
						value.T_calendar_holiday.Add(this);
						this._Id_day = value.Id_day;
					}
					else
					{
						this._Id_day = default(int);
					}
					this.SendPropertyChanged("T_calendar_day");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_calendar_periods")]
	public partial class T_calendar_periods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_period;
		
		private int _Id_day;
		
		private int _N_begin;
		
		private int _N_end;
		
		private int _N_code;
		
		private EntityRef<T_calendar_day> _T_calendar_day;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_periodChanging(int value);
    partial void OnId_periodChanged();
    partial void OnId_dayChanging(int value);
    partial void OnId_dayChanged();
    partial void OnN_beginChanging(int value);
    partial void OnN_beginChanged();
    partial void OnN_endChanging(int value);
    partial void OnN_endChanged();
    partial void OnN_codeChanging(int value);
    partial void OnN_codeChanged();
    #endregion
		
		public T_calendar_periods()
		{
			this._T_calendar_day = default(EntityRef<T_calendar_day>);
			OnCreated();
		}
		
		[Column(Name="id_period", Storage="_Id_period", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_period
		{
			get
			{
				return this._Id_period;
			}
			set
			{
				if ((this._Id_period != value))
				{
					this.OnId_periodChanging(value);
					this.SendPropertyChanging();
					this._Id_period = value;
					this.SendPropertyChanged("Id_period");
					this.OnId_periodChanged();
				}
			}
		}
		
		[Column(Name="id_day", Storage="_Id_day", DbType="Int NOT NULL")]
		public int Id_day
		{
			get
			{
				return this._Id_day;
			}
			set
			{
				if ((this._Id_day != value))
				{
					this.OnId_dayChanging(value);
					this.SendPropertyChanging();
					this._Id_day = value;
					this.SendPropertyChanged("Id_day");
					this.OnId_dayChanged();
				}
			}
		}
		
		[Column(Name="n_begin", Storage="_N_begin", DbType="Int NOT NULL")]
		public int N_begin
		{
			get
			{
				return this._N_begin;
			}
			set
			{
				if ((this._N_begin != value))
				{
					this.OnN_beginChanging(value);
					this.SendPropertyChanging();
					this._N_begin = value;
					this.SendPropertyChanged("N_begin");
					this.OnN_beginChanged();
				}
			}
		}
		
		[Column(Name="n_end", Storage="_N_end", DbType="Int NOT NULL")]
		public int N_end
		{
			get
			{
				return this._N_end;
			}
			set
			{
				if ((this._N_end != value))
				{
					this.OnN_endChanging(value);
					this.SendPropertyChanging();
					this._N_end = value;
					this.SendPropertyChanged("N_end");
					this.OnN_endChanged();
				}
			}
		}
		
		[Column(Name="n_code", Storage="_N_code", DbType="Int NOT NULL")]
		public int N_code
		{
			get
			{
				return this._N_code;
			}
			set
			{
				if ((this._N_code != value))
				{
					this.OnN_codeChanging(value);
					this.SendPropertyChanging();
					this._N_code = value;
					this.SendPropertyChanged("N_code");
					this.OnN_codeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CALENADAR_PERIODS", Storage="_T_calendar_day", ThisKey="Id_day", OtherKey="Id_day", IsForeignKey=true)]
		public T_calendar_day T_calendar_day
		{
			get
			{
				return this._T_calendar_day.Entity;
			}
			set
			{
				T_calendar_day previousValue = this._T_calendar_day.Entity;
				if (((previousValue != value) 
							|| (this._T_calendar_day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_calendar_day.Entity = null;
						previousValue.T_calendar_periods.Remove(this);
					}
					this._T_calendar_day.Entity = value;
					if ((value != null))
					{
						value.T_calendar_periods.Add(this);
						this._Id_day = value.Id_day;
					}
					else
					{
						this._Id_day = default(int);
					}
					this.SendPropertyChanged("T_calendar_day");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_capability_instance")]
	public partial class T_capability_instance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_instance;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private System.Nullable<int> _Id_parent_cap_instance;
		
		private int _Id_policy;
		
		private int _Id_cap_type;
		
		private EntityRef<T_principal_policy> _T_principal_policy;
		
		private EntityRef<T_decimal_capability> _T_decimal_capability;
		
		private EntityRef<T_enum_capability> _T_enum_capability;
		
		private EntityRef<T_path_capability> _T_path_capability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_instanceChanging(int value);
    partial void OnId_cap_instanceChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnId_parent_cap_instanceChanging(System.Nullable<int> value);
    partial void OnId_parent_cap_instanceChanged();
    partial void OnId_policyChanging(int value);
    partial void OnId_policyChanged();
    partial void OnId_cap_typeChanging(int value);
    partial void OnId_cap_typeChanged();
    #endregion
		
		public T_capability_instance()
		{
			this._T_principal_policy = default(EntityRef<T_principal_policy>);
			this._T_decimal_capability = default(EntityRef<T_decimal_capability>);
			this._T_enum_capability = default(EntityRef<T_enum_capability>);
			this._T_path_capability = default(EntityRef<T_path_capability>);
			OnCreated();
		}
		
		[Column(Name="id_cap_instance", Storage="_Id_cap_instance", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_cap_instance
		{
			get
			{
				return this._Id_cap_instance;
			}
			set
			{
				if ((this._Id_cap_instance != value))
				{
					this.OnId_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_instance = value;
					this.SendPropertyChanged("Id_cap_instance");
					this.OnId_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="id_parent_cap_instance", Storage="_Id_parent_cap_instance", DbType="Int")]
		public System.Nullable<int> Id_parent_cap_instance
		{
			get
			{
				return this._Id_parent_cap_instance;
			}
			set
			{
				if ((this._Id_parent_cap_instance != value))
				{
					this.OnId_parent_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_cap_instance = value;
					this.SendPropertyChanged("Id_parent_cap_instance");
					this.OnId_parent_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_policy", Storage="_Id_policy", DbType="Int NOT NULL")]
		public int Id_policy
		{
			get
			{
				return this._Id_policy;
			}
			set
			{
				if ((this._Id_policy != value))
				{
					this.OnId_policyChanging(value);
					this.SendPropertyChanging();
					this._Id_policy = value;
					this.SendPropertyChanged("Id_policy");
					this.OnId_policyChanged();
				}
			}
		}
		
		[Column(Name="id_cap_type", Storage="_Id_cap_type", DbType="Int NOT NULL")]
		public int Id_cap_type
		{
			get
			{
				return this._Id_cap_type;
			}
			set
			{
				if ((this._Id_cap_type != value))
				{
					this.OnId_cap_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_type = value;
					this.SendPropertyChanged("Id_cap_type");
					this.OnId_cap_typeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CAPABILITY_INSTANCE", Storage="_T_principal_policy", ThisKey="Id_policy", OtherKey="Id_policy", IsForeignKey=true)]
		public T_principal_policy T_principal_policy
		{
			get
			{
				return this._T_principal_policy.Entity;
			}
			set
			{
				T_principal_policy previousValue = this._T_principal_policy.Entity;
				if (((previousValue != value) 
							|| (this._T_principal_policy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_principal_policy.Entity = null;
						previousValue.T_capability_instance.Remove(this);
					}
					this._T_principal_policy.Entity = value;
					if ((value != null))
					{
						value.T_capability_instance.Add(this);
						this._Id_policy = value.Id_policy;
					}
					else
					{
						this._Id_policy = default(int);
					}
					this.SendPropertyChanged("T_principal_policy");
				}
			}
		}
		
		[Association(Name="FK1_T_DECIMAL_CAPABILITY", Storage="_T_decimal_capability", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_decimal_capability T_decimal_capability
		{
			get
			{
				return this._T_decimal_capability.Entity;
			}
			set
			{
				T_decimal_capability previousValue = this._T_decimal_capability.Entity;
				if (((previousValue != value) 
							|| (this._T_decimal_capability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_decimal_capability.Entity = null;
						previousValue.T_capability_instance = null;
					}
					this._T_decimal_capability.Entity = value;
					if ((value != null))
					{
						value.T_capability_instance = this;
					}
					this.SendPropertyChanged("T_decimal_capability");
				}
			}
		}
		
		[Association(Name="FK1_T_ENUM_CAPABILITY", Storage="_T_enum_capability", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_enum_capability T_enum_capability
		{
			get
			{
				return this._T_enum_capability.Entity;
			}
			set
			{
				T_enum_capability previousValue = this._T_enum_capability.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_capability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_capability.Entity = null;
						previousValue.T_capability_instance = null;
					}
					this._T_enum_capability.Entity = value;
					if ((value != null))
					{
						value.T_capability_instance = this;
					}
					this.SendPropertyChanged("T_enum_capability");
				}
			}
		}
		
		[Association(Name="FK1_T_PATH_CAPABILITY", Storage="_T_path_capability", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_path_capability T_path_capability
		{
			get
			{
				return this._T_path_capability.Entity;
			}
			set
			{
				T_path_capability previousValue = this._T_path_capability.Entity;
				if (((previousValue != value) 
							|| (this._T_path_capability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_path_capability.Entity = null;
						previousValue.T_capability_instance = null;
					}
					this._T_path_capability.Entity = value;
					if ((value != null))
					{
						value.T_capability_instance = this;
					}
					this.SendPropertyChanged("T_path_capability");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_char_values")]
	public partial class T_char_values : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_scv;
		
		private int _Id_entity;
		
		private string _Nm_value;
		
		private System.DateTime _C_start_date;
		
		private System.Nullable<System.DateTime> _C_end_date;
		
		private string _C_spec_name;
		
		private int _C_spec_type;
		
		private EntityRef<T_spec_char_values> _T_spec_char_values;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_scvChanging(int value);
    partial void OnId_scvChanged();
    partial void OnId_entityChanging(int value);
    partial void OnId_entityChanged();
    partial void OnNm_valueChanging(string value);
    partial void OnNm_valueChanged();
    partial void OnC_start_dateChanging(System.DateTime value);
    partial void OnC_start_dateChanged();
    partial void OnC_end_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_end_dateChanged();
    partial void OnC_spec_nameChanging(string value);
    partial void OnC_spec_nameChanged();
    partial void OnC_spec_typeChanging(int value);
    partial void OnC_spec_typeChanged();
    #endregion
		
		public T_char_values()
		{
			this._T_spec_char_values = default(EntityRef<T_spec_char_values>);
			OnCreated();
		}
		
		[Column(Name="id_scv", Storage="_Id_scv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_scv
		{
			get
			{
				return this._Id_scv;
			}
			set
			{
				if ((this._Id_scv != value))
				{
					this.OnId_scvChanging(value);
					this.SendPropertyChanging();
					this._Id_scv = value;
					this.SendPropertyChanged("Id_scv");
					this.OnId_scvChanged();
				}
			}
		}
		
		[Column(Name="id_entity", Storage="_Id_entity", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_entity
		{
			get
			{
				return this._Id_entity;
			}
			set
			{
				if ((this._Id_entity != value))
				{
					this.OnId_entityChanging(value);
					this.SendPropertyChanging();
					this._Id_entity = value;
					this.SendPropertyChanged("Id_entity");
					this.OnId_entityChanged();
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(20)")]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this.OnNm_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_value = value;
					this.SendPropertyChanged("Nm_value");
					this.OnNm_valueChanged();
				}
			}
		}
		
		[Column(Name="c_start_date", Storage="_C_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime C_start_date
		{
			get
			{
				return this._C_start_date;
			}
			set
			{
				if ((this._C_start_date != value))
				{
					this.OnC_start_dateChanging(value);
					this.SendPropertyChanging();
					this._C_start_date = value;
					this.SendPropertyChanged("C_start_date");
					this.OnC_start_dateChanged();
				}
			}
		}
		
		[Column(Name="c_end_date", Storage="_C_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_end_date
		{
			get
			{
				return this._C_end_date;
			}
			set
			{
				if ((this._C_end_date != value))
				{
					this.OnC_end_dateChanging(value);
					this.SendPropertyChanging();
					this._C_end_date = value;
					this.SendPropertyChanged("C_end_date");
					this.OnC_end_dateChanged();
				}
			}
		}
		
		[Column(Name="c_spec_name", Storage="_C_spec_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_spec_name
		{
			get
			{
				return this._C_spec_name;
			}
			set
			{
				if ((this._C_spec_name != value))
				{
					this.OnC_spec_nameChanging(value);
					this.SendPropertyChanging();
					this._C_spec_name = value;
					this.SendPropertyChanged("C_spec_name");
					this.OnC_spec_nameChanged();
				}
			}
		}
		
		[Column(Name="c_spec_type", Storage="_C_spec_type", DbType="Int NOT NULL")]
		public int C_spec_type
		{
			get
			{
				return this._C_spec_type;
			}
			set
			{
				if ((this._C_spec_type != value))
				{
					this.OnC_spec_typeChanging(value);
					this.SendPropertyChanging();
					this._C_spec_type = value;
					this.SendPropertyChanged("C_spec_type");
					this.OnC_spec_typeChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_char_values", Storage="_T_spec_char_values", ThisKey="Id_scv", OtherKey="Id_scv", IsForeignKey=true)]
		public T_spec_char_values T_spec_char_values
		{
			get
			{
				return this._T_spec_char_values.Entity;
			}
			set
			{
				T_spec_char_values previousValue = this._T_spec_char_values.Entity;
				if (((previousValue != value) 
							|| (this._T_spec_char_values.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_spec_char_values.Entity = null;
						previousValue.T_char_values.Remove(this);
					}
					this._T_spec_char_values.Entity = value;
					if ((value != null))
					{
						value.T_char_values.Add(this);
						this._Id_scv = value.Id_scv;
					}
					else
					{
						this._Id_scv = default(int);
					}
					this.SendPropertyChanged("T_spec_char_values");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_char_values_history")]
	public partial class T_char_values_history
	{
		
		private int _Id_scv;
		
		private int _Id_entity;
		
		private string _Nm_value;
		
		private System.DateTime _C_start_date;
		
		private System.Nullable<System.DateTime> _C_end_date;
		
		private string _C_spec_name;
		
		private int _C_spec_type;
		
		public T_char_values_history()
		{
		}
		
		[Column(Name="id_scv", Storage="_Id_scv", DbType="Int NOT NULL")]
		public int Id_scv
		{
			get
			{
				return this._Id_scv;
			}
			set
			{
				if ((this._Id_scv != value))
				{
					this._Id_scv = value;
				}
			}
		}
		
		[Column(Name="id_entity", Storage="_Id_entity", DbType="Int NOT NULL")]
		public int Id_entity
		{
			get
			{
				return this._Id_entity;
			}
			set
			{
				if ((this._Id_entity != value))
				{
					this._Id_entity = value;
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(20)")]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this._Nm_value = value;
				}
			}
		}
		
		[Column(Name="c_start_date", Storage="_C_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime C_start_date
		{
			get
			{
				return this._C_start_date;
			}
			set
			{
				if ((this._C_start_date != value))
				{
					this._C_start_date = value;
				}
			}
		}
		
		[Column(Name="c_end_date", Storage="_C_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_end_date
		{
			get
			{
				return this._C_end_date;
			}
			set
			{
				if ((this._C_end_date != value))
				{
					this._C_end_date = value;
				}
			}
		}
		
		[Column(Name="c_spec_name", Storage="_C_spec_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_spec_name
		{
			get
			{
				return this._C_spec_name;
			}
			set
			{
				if ((this._C_spec_name != value))
				{
					this._C_spec_name = value;
				}
			}
		}
		
		[Column(Name="c_spec_type", Storage="_C_spec_type", DbType="Int NOT NULL")]
		public int C_spec_type
		{
			get
			{
				return this._C_spec_type;
			}
			set
			{
				if ((this._C_spec_type != value))
				{
					this._C_spec_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_charge")]
	public partial class T_charge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_charge;
		
		private System.Nullable<System.DateTime> _Dt_modified;
		
		private string _Nm_description;
		
		private int _Id_pi;
		
		private int _Id_amt_prop;
		
		private EntityRef<T_pi> _T_pi;
		
		private EntityRef<T_prod_view_prop> _T_prod_view_prop;
		
		private EntitySet<T_charge_prop> _T_charge_prop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_chargeChanging(int value);
    partial void OnId_chargeChanged();
    partial void OnDt_modifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_modifiedChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    partial void OnId_amt_propChanging(int value);
    partial void OnId_amt_propChanged();
    #endregion
		
		public T_charge()
		{
			this._T_pi = default(EntityRef<T_pi>);
			this._T_prod_view_prop = default(EntityRef<T_prod_view_prop>);
			this._T_charge_prop = new EntitySet<T_charge_prop>(new Action<T_charge_prop>(this.attach_T_charge_prop), new Action<T_charge_prop>(this.detach_T_charge_prop));
			OnCreated();
		}
		
		[Column(Name="id_charge", Storage="_Id_charge", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_charge
		{
			get
			{
				return this._Id_charge;
			}
			set
			{
				if ((this._Id_charge != value))
				{
					this.OnId_chargeChanging(value);
					this.SendPropertyChanging();
					this._Id_charge = value;
					this.SendPropertyChanged("Id_charge");
					this.OnId_chargeChanged();
				}
			}
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this.OnDt_modifiedChanging(value);
					this.SendPropertyChanging();
					this._Dt_modified = value;
					this.SendPropertyChanged("Dt_modified");
					this.OnDt_modifiedChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(255)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL")]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Column(Name="id_amt_prop", Storage="_Id_amt_prop", DbType="Int NOT NULL")]
		public int Id_amt_prop
		{
			get
			{
				return this._Id_amt_prop;
			}
			set
			{
				if ((this._Id_amt_prop != value))
				{
					this.OnId_amt_propChanging(value);
					this.SendPropertyChanging();
					this._Id_amt_prop = value;
					this.SendPropertyChanged("Id_amt_prop");
					this.OnId_amt_propChanged();
				}
			}
		}
		
		[Association(Name="t_charge_FK1", Storage="_T_pi", ThisKey="Id_pi", OtherKey="Id_pi", IsForeignKey=true)]
		public T_pi T_pi
		{
			get
			{
				return this._T_pi.Entity;
			}
			set
			{
				T_pi previousValue = this._T_pi.Entity;
				if (((previousValue != value) 
							|| (this._T_pi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pi.Entity = null;
						previousValue.T_charge.Remove(this);
					}
					this._T_pi.Entity = value;
					if ((value != null))
					{
						value.T_charge.Add(this);
						this._Id_pi = value.Id_pi;
					}
					else
					{
						this._Id_pi = default(int);
					}
					this.SendPropertyChanged("T_pi");
				}
			}
		}
		
		[Association(Name="t_charge_FK2", Storage="_T_prod_view_prop", ThisKey="Id_amt_prop", OtherKey="Id_prod_view_prop", IsForeignKey=true)]
		public T_prod_view_prop T_prod_view_prop
		{
			get
			{
				return this._T_prod_view_prop.Entity;
			}
			set
			{
				T_prod_view_prop previousValue = this._T_prod_view_prop.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view_prop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view_prop.Entity = null;
						previousValue.T_charge.Remove(this);
					}
					this._T_prod_view_prop.Entity = value;
					if ((value != null))
					{
						value.T_charge.Add(this);
						this._Id_amt_prop = value.Id_prod_view_prop;
					}
					else
					{
						this._Id_amt_prop = default(int);
					}
					this.SendPropertyChanged("T_prod_view_prop");
				}
			}
		}
		
		[Association(Name="t_charge_prop_FK1", Storage="_T_charge_prop", ThisKey="Id_charge", OtherKey="Id_charge", DeleteRule="NO ACTION")]
		public EntitySet<T_charge_prop> T_charge_prop
		{
			get
			{
				return this._T_charge_prop;
			}
			set
			{
				this._T_charge_prop.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_charge_prop(T_charge_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_charge = this;
		}
		
		private void detach_T_charge_prop(T_charge_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_charge = null;
		}
	}
	
	[Table(Name="dbo.t_charge_prop")]
	public partial class T_charge_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_charge_prop;
		
		private int _Id_charge;
		
		private int _Id_prod_view_prop;
		
		private EntityRef<T_charge> _T_charge;
		
		private EntityRef<T_prod_view_prop> _T_prod_view_prop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_charge_propChanging(int value);
    partial void OnId_charge_propChanged();
    partial void OnId_chargeChanging(int value);
    partial void OnId_chargeChanged();
    partial void OnId_prod_view_propChanging(int value);
    partial void OnId_prod_view_propChanged();
    #endregion
		
		public T_charge_prop()
		{
			this._T_charge = default(EntityRef<T_charge>);
			this._T_prod_view_prop = default(EntityRef<T_prod_view_prop>);
			OnCreated();
		}
		
		[Column(Name="id_charge_prop", Storage="_Id_charge_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_charge_prop
		{
			get
			{
				return this._Id_charge_prop;
			}
			set
			{
				if ((this._Id_charge_prop != value))
				{
					this.OnId_charge_propChanging(value);
					this.SendPropertyChanging();
					this._Id_charge_prop = value;
					this.SendPropertyChanged("Id_charge_prop");
					this.OnId_charge_propChanged();
				}
			}
		}
		
		[Column(Name="id_charge", Storage="_Id_charge", DbType="Int NOT NULL")]
		public int Id_charge
		{
			get
			{
				return this._Id_charge;
			}
			set
			{
				if ((this._Id_charge != value))
				{
					this.OnId_chargeChanging(value);
					this.SendPropertyChanging();
					this._Id_charge = value;
					this.SendPropertyChanged("Id_charge");
					this.OnId_chargeChanged();
				}
			}
		}
		
		[Column(Name="id_prod_view_prop", Storage="_Id_prod_view_prop", DbType="Int NOT NULL")]
		public int Id_prod_view_prop
		{
			get
			{
				return this._Id_prod_view_prop;
			}
			set
			{
				if ((this._Id_prod_view_prop != value))
				{
					this.OnId_prod_view_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view_prop = value;
					this.SendPropertyChanged("Id_prod_view_prop");
					this.OnId_prod_view_propChanged();
				}
			}
		}
		
		[Association(Name="t_charge_prop_FK1", Storage="_T_charge", ThisKey="Id_charge", OtherKey="Id_charge", IsForeignKey=true)]
		public T_charge T_charge
		{
			get
			{
				return this._T_charge.Entity;
			}
			set
			{
				T_charge previousValue = this._T_charge.Entity;
				if (((previousValue != value) 
							|| (this._T_charge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_charge.Entity = null;
						previousValue.T_charge_prop.Remove(this);
					}
					this._T_charge.Entity = value;
					if ((value != null))
					{
						value.T_charge_prop.Add(this);
						this._Id_charge = value.Id_charge;
					}
					else
					{
						this._Id_charge = default(int);
					}
					this.SendPropertyChanged("T_charge");
				}
			}
		}
		
		[Association(Name="t_charge_prop_FK2", Storage="_T_prod_view_prop", ThisKey="Id_prod_view_prop", OtherKey="Id_prod_view_prop", IsForeignKey=true)]
		public T_prod_view_prop T_prod_view_prop
		{
			get
			{
				return this._T_prod_view_prop.Entity;
			}
			set
			{
				T_prod_view_prop previousValue = this._T_prod_view_prop.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view_prop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view_prop.Entity = null;
						previousValue.T_charge_prop.Remove(this);
					}
					this._T_prod_view_prop.Entity = value;
					if ((value != null))
					{
						value.T_charge_prop.Add(this);
						this._Id_prod_view_prop = value.Id_prod_view_prop;
					}
					else
					{
						this._Id_prod_view_prop = default(int);
					}
					this.SendPropertyChanged("T_prod_view_prop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_composite_adjustment")]
	public partial class T_composite_adjustment
	{
		
		private int _Id_prop;
		
		private int _Id_pi_type;
		
		private int _Id_adjustment_type;
		
		public T_composite_adjustment()
		{
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL")]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this._Id_prop = value;
				}
			}
		}
		
		[Column(Name="id_pi_type", Storage="_Id_pi_type", DbType="Int NOT NULL")]
		public int Id_pi_type
		{
			get
			{
				return this._Id_pi_type;
			}
			set
			{
				if ((this._Id_pi_type != value))
				{
					this._Id_pi_type = value;
				}
			}
		}
		
		[Column(Name="id_adjustment_type", Storage="_Id_adjustment_type", DbType="Int NOT NULL")]
		public int Id_adjustment_type
		{
			get
			{
				return this._Id_adjustment_type;
			}
			set
			{
				if ((this._Id_adjustment_type != value))
				{
					this._Id_adjustment_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_composite_capability_type")]
	public partial class T_composite_capability_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_type;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private string _Tx_progid;
		
		private string _Tx_editor;
		
		private string _Csr_assignable;
		
		private string _Subscriber_assignable;
		
		private string _Multiple_instances;
		
		private string _Umbrella_sensitive;
		
		private EntitySet<T_compositor> _T_compositor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_typeChanging(int value);
    partial void OnId_cap_typeChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnTx_progidChanging(string value);
    partial void OnTx_progidChanged();
    partial void OnTx_editorChanging(string value);
    partial void OnTx_editorChanged();
    partial void OnCsr_assignableChanging(string value);
    partial void OnCsr_assignableChanged();
    partial void OnSubscriber_assignableChanging(string value);
    partial void OnSubscriber_assignableChanged();
    partial void OnMultiple_instancesChanging(string value);
    partial void OnMultiple_instancesChanged();
    partial void OnUmbrella_sensitiveChanging(string value);
    partial void OnUmbrella_sensitiveChanged();
    #endregion
		
		public T_composite_capability_type()
		{
			this._T_compositor = new EntitySet<T_compositor>(new Action<T_compositor>(this.attach_T_compositor), new Action<T_compositor>(this.detach_T_compositor));
			OnCreated();
		}
		
		[Column(Name="id_cap_type", Storage="_Id_cap_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_cap_type
		{
			get
			{
				return this._Id_cap_type;
			}
			set
			{
				if ((this._Id_cap_type != value))
				{
					this.OnId_cap_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_type = value;
					this.SendPropertyChanged("Id_cap_type");
					this.OnId_cap_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="tx_progid", Storage="_Tx_progid", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_progid
		{
			get
			{
				return this._Tx_progid;
			}
			set
			{
				if ((this._Tx_progid != value))
				{
					this.OnTx_progidChanging(value);
					this.SendPropertyChanging();
					this._Tx_progid = value;
					this.SendPropertyChanged("Tx_progid");
					this.OnTx_progidChanged();
				}
			}
		}
		
		[Column(Name="tx_editor", Storage="_Tx_editor", DbType="NVarChar(255)")]
		public string Tx_editor
		{
			get
			{
				return this._Tx_editor;
			}
			set
			{
				if ((this._Tx_editor != value))
				{
					this.OnTx_editorChanging(value);
					this.SendPropertyChanging();
					this._Tx_editor = value;
					this.SendPropertyChanged("Tx_editor");
					this.OnTx_editorChanged();
				}
			}
		}
		
		[Column(Name="csr_assignable", Storage="_Csr_assignable", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Csr_assignable
		{
			get
			{
				return this._Csr_assignable;
			}
			set
			{
				if ((this._Csr_assignable != value))
				{
					this.OnCsr_assignableChanging(value);
					this.SendPropertyChanging();
					this._Csr_assignable = value;
					this.SendPropertyChanged("Csr_assignable");
					this.OnCsr_assignableChanged();
				}
			}
		}
		
		[Column(Name="subscriber_assignable", Storage="_Subscriber_assignable", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Subscriber_assignable
		{
			get
			{
				return this._Subscriber_assignable;
			}
			set
			{
				if ((this._Subscriber_assignable != value))
				{
					this.OnSubscriber_assignableChanging(value);
					this.SendPropertyChanging();
					this._Subscriber_assignable = value;
					this.SendPropertyChanged("Subscriber_assignable");
					this.OnSubscriber_assignableChanged();
				}
			}
		}
		
		[Column(Name="multiple_instances", Storage="_Multiple_instances", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Multiple_instances
		{
			get
			{
				return this._Multiple_instances;
			}
			set
			{
				if ((this._Multiple_instances != value))
				{
					this.OnMultiple_instancesChanging(value);
					this.SendPropertyChanging();
					this._Multiple_instances = value;
					this.SendPropertyChanged("Multiple_instances");
					this.OnMultiple_instancesChanged();
				}
			}
		}
		
		[Column(Name="umbrella_sensitive", Storage="_Umbrella_sensitive", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Umbrella_sensitive
		{
			get
			{
				return this._Umbrella_sensitive;
			}
			set
			{
				if ((this._Umbrella_sensitive != value))
				{
					this.OnUmbrella_sensitiveChanging(value);
					this.SendPropertyChanging();
					this._Umbrella_sensitive = value;
					this.SendPropertyChanged("Umbrella_sensitive");
					this.OnUmbrella_sensitiveChanged();
				}
			}
		}
		
		[Association(Name="FK2_T_COMPOSITOR", Storage="_T_compositor", ThisKey="Id_cap_type", OtherKey="Id_composite", DeleteRule="NO ACTION")]
		public EntitySet<T_compositor> T_compositor
		{
			get
			{
				return this._T_compositor;
			}
			set
			{
				this._T_compositor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_compositor(T_compositor entity)
		{
			this.SendPropertyChanging();
			entity.T_composite_capability_type = this;
		}
		
		private void detach_T_compositor(T_compositor entity)
		{
			this.SendPropertyChanging();
			entity.T_composite_capability_type = null;
		}
	}
	
	[Table(Name="dbo.t_compositor")]
	public partial class T_compositor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_atomic;
		
		private int _Id_composite;
		
		private string _Tx_description;
		
		private string _Tx_param;
		
		private EntityRef<T_atomic_capability_type> _T_atomic_capability_type;
		
		private EntityRef<T_composite_capability_type> _T_composite_capability_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_atomicChanging(int value);
    partial void OnId_atomicChanged();
    partial void OnId_compositeChanging(int value);
    partial void OnId_compositeChanged();
    partial void OnTx_descriptionChanging(string value);
    partial void OnTx_descriptionChanged();
    partial void OnTx_paramChanging(string value);
    partial void OnTx_paramChanged();
    #endregion
		
		public T_compositor()
		{
			this._T_atomic_capability_type = default(EntityRef<T_atomic_capability_type>);
			this._T_composite_capability_type = default(EntityRef<T_composite_capability_type>);
			OnCreated();
		}
		
		[Column(Name="id_atomic", Storage="_Id_atomic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_atomic
		{
			get
			{
				return this._Id_atomic;
			}
			set
			{
				if ((this._Id_atomic != value))
				{
					this.OnId_atomicChanging(value);
					this.SendPropertyChanging();
					this._Id_atomic = value;
					this.SendPropertyChanged("Id_atomic");
					this.OnId_atomicChanged();
				}
			}
		}
		
		[Column(Name="id_composite", Storage="_Id_composite", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_composite
		{
			get
			{
				return this._Id_composite;
			}
			set
			{
				if ((this._Id_composite != value))
				{
					this.OnId_compositeChanging(value);
					this.SendPropertyChanging();
					this._Id_composite = value;
					this.SendPropertyChanged("Id_composite");
					this.OnId_compositeChanged();
				}
			}
		}
		
		[Column(Name="tx_description", Storage="_Tx_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_description
		{
			get
			{
				return this._Tx_description;
			}
			set
			{
				if ((this._Tx_description != value))
				{
					this.OnTx_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Tx_description = value;
					this.SendPropertyChanged("Tx_description");
					this.OnTx_descriptionChanged();
				}
			}
		}
		
		[Column(Name="tx_param", Storage="_Tx_param", DbType="NVarChar(255)")]
		public string Tx_param
		{
			get
			{
				return this._Tx_param;
			}
			set
			{
				if ((this._Tx_param != value))
				{
					this.OnTx_paramChanging(value);
					this.SendPropertyChanging();
					this._Tx_param = value;
					this.SendPropertyChanged("Tx_param");
					this.OnTx_paramChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_COMPOSITOR", Storage="_T_atomic_capability_type", ThisKey="Id_atomic", OtherKey="Id_cap_type", IsForeignKey=true)]
		public T_atomic_capability_type T_atomic_capability_type
		{
			get
			{
				return this._T_atomic_capability_type.Entity;
			}
			set
			{
				T_atomic_capability_type previousValue = this._T_atomic_capability_type.Entity;
				if (((previousValue != value) 
							|| (this._T_atomic_capability_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_atomic_capability_type.Entity = null;
						previousValue.T_compositor.Remove(this);
					}
					this._T_atomic_capability_type.Entity = value;
					if ((value != null))
					{
						value.T_compositor.Add(this);
						this._Id_atomic = value.Id_cap_type;
					}
					else
					{
						this._Id_atomic = default(int);
					}
					this.SendPropertyChanged("T_atomic_capability_type");
				}
			}
		}
		
		[Association(Name="FK2_T_COMPOSITOR", Storage="_T_composite_capability_type", ThisKey="Id_composite", OtherKey="Id_cap_type", IsForeignKey=true)]
		public T_composite_capability_type T_composite_capability_type
		{
			get
			{
				return this._T_composite_capability_type.Entity;
			}
			set
			{
				T_composite_capability_type previousValue = this._T_composite_capability_type.Entity;
				if (((previousValue != value) 
							|| (this._T_composite_capability_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_composite_capability_type.Entity = null;
						previousValue.T_compositor.Remove(this);
					}
					this._T_composite_capability_type.Entity = value;
					if ((value != null))
					{
						value.T_compositor.Add(this);
						this._Id_composite = value.Id_cap_type;
					}
					else
					{
						this._Id_composite = default(int);
					}
					this.SendPropertyChanged("T_composite_capability_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_counter")]
	public partial class T_counter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Nullable<int> _Id_counter_type;
		
		private EntitySet<T_counter_param_map> _T_counter_param_map;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_counter_map> _T_counter_map;
		
		private EntitySet<T_counter_params> _T_counter_params;
		
		private EntityRef<T_counter_metadata> _T_counter_metadata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_counter_typeChanging(System.Nullable<int> value);
    partial void OnId_counter_typeChanged();
    #endregion
		
		public T_counter()
		{
			this._T_counter_param_map = new EntitySet<T_counter_param_map>(new Action<T_counter_param_map>(this.attach_T_counter_param_map), new Action<T_counter_param_map>(this.detach_T_counter_param_map));
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_counter_map = new EntitySet<T_counter_map>(new Action<T_counter_map>(this.attach_T_counter_map), new Action<T_counter_map>(this.detach_T_counter_map));
			this._T_counter_params = new EntitySet<T_counter_params>(new Action<T_counter_params>(this.attach_T_counter_params), new Action<T_counter_params>(this.detach_T_counter_params));
			this._T_counter_metadata = default(EntityRef<T_counter_metadata>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_counter_type", Storage="_Id_counter_type", DbType="Int")]
		public System.Nullable<int> Id_counter_type
		{
			get
			{
				return this._Id_counter_type;
			}
			set
			{
				if ((this._Id_counter_type != value))
				{
					this.OnId_counter_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_type = value;
					this.SendPropertyChanged("Id_counter_type");
					this.OnId_counter_typeChanged();
				}
			}
		}
		
		[Association(Name="fk_param_map_counter", Storage="_T_counter_param_map", ThisKey="Id_prop", OtherKey="Id_counter", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_param_map> T_counter_param_map
		{
			get
			{
				return this._T_counter_param_map;
			}
			set
			{
				this._T_counter_param_map.Assign(value);
			}
		}
		
		[Association(Name="FK1_t_counter", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_counter = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_counter = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="fk1_t_counter_map", Storage="_T_counter_map", ThisKey="Id_prop", OtherKey="Id_counter", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_map> T_counter_map
		{
			get
			{
				return this._T_counter_map;
			}
			set
			{
				this._T_counter_map.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_counter_params", Storage="_T_counter_params", ThisKey="Id_prop", OtherKey="Id_counter", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_params> T_counter_params
		{
			get
			{
				return this._T_counter_params;
			}
			set
			{
				this._T_counter_params.Assign(value);
			}
		}
		
		[Association(Name="FK2_t_counter", Storage="_T_counter_metadata", ThisKey="Id_counter_type", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter_metadata T_counter_metadata
		{
			get
			{
				return this._T_counter_metadata.Entity;
			}
			set
			{
				T_counter_metadata previousValue = this._T_counter_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_metadata.Entity = null;
						previousValue.T_counter.Remove(this);
					}
					this._T_counter_metadata.Entity = value;
					if ((value != null))
					{
						value.T_counter.Add(this);
						this._Id_counter_type = value.Id_prop;
					}
					else
					{
						this._Id_counter_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_counter_metadata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = this;
		}
		
		private void detach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = null;
		}
		
		private void attach_T_counter_map(T_counter_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = this;
		}
		
		private void detach_T_counter_map(T_counter_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = null;
		}
		
		private void attach_T_counter_params(T_counter_params entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = this;
		}
		
		private void detach_T_counter_params(T_counter_params entity)
		{
			this.SendPropertyChanging();
			entity.T_counter = null;
		}
	}
	
	[Table(Name="dbo.t_counter_map")]
	public partial class T_counter_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_counter;
		
		private int _Id_pi;
		
		private int _Id_cpd;
		
		private EntityRef<T_counter> _T_counter;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_counterChanging(int value);
    partial void OnId_counterChanged();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    partial void OnId_cpdChanging(int value);
    partial void OnId_cpdChanged();
    #endregion
		
		public T_counter_map()
		{
			this._T_counter = default(EntityRef<T_counter>);
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_counter", Storage="_Id_counter", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_counter
		{
			get
			{
				return this._Id_counter;
			}
			set
			{
				if ((this._Id_counter != value))
				{
					this.OnId_counterChanging(value);
					this.SendPropertyChanging();
					this._Id_counter = value;
					this.SendPropertyChanged("Id_counter");
					this.OnId_counterChanged();
				}
			}
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Column(Name="id_cpd", Storage="_Id_cpd", DbType="Int NOT NULL")]
		public int Id_cpd
		{
			get
			{
				return this._Id_cpd;
			}
			set
			{
				if ((this._Id_cpd != value))
				{
					this.OnId_cpdChanging(value);
					this.SendPropertyChanging();
					this._Id_cpd = value;
					this.SendPropertyChanged("Id_cpd");
					this.OnId_cpdChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_counter_map", Storage="_T_counter", ThisKey="Id_counter", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter T_counter
		{
			get
			{
				return this._T_counter.Entity;
			}
			set
			{
				T_counter previousValue = this._T_counter.Entity;
				if (((previousValue != value) 
							|| (this._T_counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter.Entity = null;
						previousValue.T_counter_map.Remove(this);
					}
					this._T_counter.Entity = value;
					if ((value != null))
					{
						value.T_counter_map.Add(this);
						this._Id_counter = value.Id_prop;
					}
					else
					{
						this._Id_counter = default(int);
					}
					this.SendPropertyChanged("T_counter");
				}
			}
		}
		
		[Association(Name="fk2_t_counter_map", Storage="_T_base_props", ThisKey="Id_pi", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_counter_map.Remove(this);
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_counter_map.Add(this);
						this._Id_pi = value.Id_prop;
					}
					else
					{
						this._Id_pi = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_counter_metadata")]
	public partial class T_counter_metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _FormulaTemplate;
		
		private string _B_valid_for_dist;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_counter_params_metadata> _T_counter_params_metadata;
		
		private EntitySet<T_counter> _T_counter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnFormulaTemplateChanging(string value);
    partial void OnFormulaTemplateChanged();
    partial void OnB_valid_for_distChanging(string value);
    partial void OnB_valid_for_distChanged();
    #endregion
		
		public T_counter_metadata()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_counter_params_metadata = new EntitySet<T_counter_params_metadata>(new Action<T_counter_params_metadata>(this.attach_T_counter_params_metadata), new Action<T_counter_params_metadata>(this.detach_T_counter_params_metadata));
			this._T_counter = new EntitySet<T_counter>(new Action<T_counter>(this.attach_T_counter), new Action<T_counter>(this.detach_T_counter));
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Storage="_FormulaTemplate", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FormulaTemplate
		{
			get
			{
				return this._FormulaTemplate;
			}
			set
			{
				if ((this._FormulaTemplate != value))
				{
					this.OnFormulaTemplateChanging(value);
					this.SendPropertyChanging();
					this._FormulaTemplate = value;
					this.SendPropertyChanged("FormulaTemplate");
					this.OnFormulaTemplateChanged();
				}
			}
		}
		
		[Column(Name="b_valid_for_dist", Storage="_B_valid_for_dist", DbType="Char(1)")]
		public string B_valid_for_dist
		{
			get
			{
				return this._B_valid_for_dist;
			}
			set
			{
				if ((this._B_valid_for_dist != value))
				{
					this.OnB_valid_for_distChanging(value);
					this.SendPropertyChanging();
					this._B_valid_for_dist = value;
					this.SendPropertyChanged("B_valid_for_dist");
					this.OnB_valid_for_distChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_counter_metadata", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_counter_metadata = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_counter_metadata = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="fk1_t_counter_params_metadata", Storage="_T_counter_params_metadata", ThisKey="Id_prop", OtherKey="Id_counter_meta", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_params_metadata> T_counter_params_metadata
		{
			get
			{
				return this._T_counter_params_metadata;
			}
			set
			{
				this._T_counter_params_metadata.Assign(value);
			}
		}
		
		[Association(Name="FK2_t_counter", Storage="_T_counter", ThisKey="Id_prop", OtherKey="Id_counter_type", DeleteRule="NO ACTION")]
		public EntitySet<T_counter> T_counter
		{
			get
			{
				return this._T_counter;
			}
			set
			{
				this._T_counter.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_params_metadata(T_counter_params_metadata entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_metadata = this;
		}
		
		private void detach_T_counter_params_metadata(T_counter_params_metadata entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_metadata = null;
		}
		
		private void attach_T_counter(T_counter entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_metadata = this;
		}
		
		private void detach_T_counter(T_counter entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_metadata = null;
		}
	}
	
	[Table(Name="dbo.t_counter_param_map")]
	public partial class T_counter_param_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_counter_param;
		
		private int _Id_counter;
		
		private int _Id_counter_param_meta;
		
		private EntityRef<T_counter> _T_counter;
		
		private EntityRef<T_counter_params> _T_counter_params;
		
		private EntityRef<T_counter_params_metadata> _T_counter_params_metadata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_counter_paramChanging(int value);
    partial void OnId_counter_paramChanged();
    partial void OnId_counterChanging(int value);
    partial void OnId_counterChanged();
    partial void OnId_counter_param_metaChanging(int value);
    partial void OnId_counter_param_metaChanged();
    #endregion
		
		public T_counter_param_map()
		{
			this._T_counter = default(EntityRef<T_counter>);
			this._T_counter_params = default(EntityRef<T_counter_params>);
			this._T_counter_params_metadata = default(EntityRef<T_counter_params_metadata>);
			OnCreated();
		}
		
		[Column(Name="id_counter_param", Storage="_Id_counter_param", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_counter_param
		{
			get
			{
				return this._Id_counter_param;
			}
			set
			{
				if ((this._Id_counter_param != value))
				{
					this.OnId_counter_paramChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_param = value;
					this.SendPropertyChanged("Id_counter_param");
					this.OnId_counter_paramChanged();
				}
			}
		}
		
		[Column(Name="id_counter", Storage="_Id_counter", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_counter
		{
			get
			{
				return this._Id_counter;
			}
			set
			{
				if ((this._Id_counter != value))
				{
					this.OnId_counterChanging(value);
					this.SendPropertyChanging();
					this._Id_counter = value;
					this.SendPropertyChanged("Id_counter");
					this.OnId_counterChanged();
				}
			}
		}
		
		[Column(Name="id_counter_param_meta", Storage="_Id_counter_param_meta", DbType="Int NOT NULL")]
		public int Id_counter_param_meta
		{
			get
			{
				return this._Id_counter_param_meta;
			}
			set
			{
				if ((this._Id_counter_param_meta != value))
				{
					this.OnId_counter_param_metaChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_param_meta = value;
					this.SendPropertyChanged("Id_counter_param_meta");
					this.OnId_counter_param_metaChanged();
				}
			}
		}
		
		[Association(Name="fk_param_map_counter", Storage="_T_counter", ThisKey="Id_counter", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter T_counter
		{
			get
			{
				return this._T_counter.Entity;
			}
			set
			{
				T_counter previousValue = this._T_counter.Entity;
				if (((previousValue != value) 
							|| (this._T_counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter.Entity = null;
						previousValue.T_counter_param_map.Remove(this);
					}
					this._T_counter.Entity = value;
					if ((value != null))
					{
						value.T_counter_param_map.Add(this);
						this._Id_counter = value.Id_prop;
					}
					else
					{
						this._Id_counter = default(int);
					}
					this.SendPropertyChanged("T_counter");
				}
			}
		}
		
		[Association(Name="fk_param_map_counter_params", Storage="_T_counter_params", ThisKey="Id_counter_param", OtherKey="Id_counter_param", IsForeignKey=true)]
		public T_counter_params T_counter_params
		{
			get
			{
				return this._T_counter_params.Entity;
			}
			set
			{
				T_counter_params previousValue = this._T_counter_params.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_params.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_params.Entity = null;
						previousValue.T_counter_param_map.Remove(this);
					}
					this._T_counter_params.Entity = value;
					if ((value != null))
					{
						value.T_counter_param_map.Add(this);
						this._Id_counter_param = value.Id_counter_param;
					}
					else
					{
						this._Id_counter_param = default(int);
					}
					this.SendPropertyChanged("T_counter_params");
				}
			}
		}
		
		[Association(Name="fk_param_map_counter_params_metadata", Storage="_T_counter_params_metadata", ThisKey="Id_counter_param_meta", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter_params_metadata T_counter_params_metadata
		{
			get
			{
				return this._T_counter_params_metadata.Entity;
			}
			set
			{
				T_counter_params_metadata previousValue = this._T_counter_params_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_params_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_params_metadata.Entity = null;
						previousValue.T_counter_param_map.Remove(this);
					}
					this._T_counter_params_metadata.Entity = value;
					if ((value != null))
					{
						value.T_counter_param_map.Add(this);
						this._Id_counter_param_meta = value.Id_prop;
					}
					else
					{
						this._Id_counter_param_meta = default(int);
					}
					this.SendPropertyChanged("T_counter_params_metadata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_counter_param_predicate")]
	public partial class T_counter_param_predicate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Nullable<int> _Id_counter_param;
		
		private System.Nullable<int> _Id_pv_prop;
		
		private string _Nm_op;
		
		private string _Nm_value;
		
		private EntityRef<T_counter_params> _T_counter_params;
		
		private EntityRef<T_prod_view_prop> _T_prod_view_prop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_counter_paramChanging(System.Nullable<int> value);
    partial void OnId_counter_paramChanged();
    partial void OnId_pv_propChanging(System.Nullable<int> value);
    partial void OnId_pv_propChanged();
    partial void OnNm_opChanging(string value);
    partial void OnNm_opChanged();
    partial void OnNm_valueChanging(string value);
    partial void OnNm_valueChanged();
    #endregion
		
		public T_counter_param_predicate()
		{
			this._T_counter_params = default(EntityRef<T_counter_params>);
			this._T_prod_view_prop = default(EntityRef<T_prod_view_prop>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_counter_param", Storage="_Id_counter_param", DbType="Int")]
		public System.Nullable<int> Id_counter_param
		{
			get
			{
				return this._Id_counter_param;
			}
			set
			{
				if ((this._Id_counter_param != value))
				{
					this.OnId_counter_paramChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_param = value;
					this.SendPropertyChanged("Id_counter_param");
					this.OnId_counter_paramChanged();
				}
			}
		}
		
		[Column(Name="id_pv_prop", Storage="_Id_pv_prop", DbType="Int")]
		public System.Nullable<int> Id_pv_prop
		{
			get
			{
				return this._Id_pv_prop;
			}
			set
			{
				if ((this._Id_pv_prop != value))
				{
					this.OnId_pv_propChanging(value);
					this.SendPropertyChanging();
					this._Id_pv_prop = value;
					this.SendPropertyChanged("Id_pv_prop");
					this.OnId_pv_propChanged();
				}
			}
		}
		
		[Column(Name="nm_op", Storage="_Nm_op", DbType="NVarChar(2)")]
		public string Nm_op
		{
			get
			{
				return this._Nm_op;
			}
			set
			{
				if ((this._Nm_op != value))
				{
					this.OnNm_opChanging(value);
					this.SendPropertyChanging();
					this._Nm_op = value;
					this.SendPropertyChanged("Nm_op");
					this.OnNm_opChanged();
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(255)")]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this.OnNm_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_value = value;
					this.SendPropertyChanged("Nm_value");
					this.OnNm_valueChanged();
				}
			}
		}
		
		[Association(Name="fk_t_counter_params", Storage="_T_counter_params", ThisKey="Id_counter_param", OtherKey="Id_counter_param", IsForeignKey=true)]
		public T_counter_params T_counter_params
		{
			get
			{
				return this._T_counter_params.Entity;
			}
			set
			{
				T_counter_params previousValue = this._T_counter_params.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_params.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_params.Entity = null;
						previousValue.T_counter_param_predicate.Remove(this);
					}
					this._T_counter_params.Entity = value;
					if ((value != null))
					{
						value.T_counter_param_predicate.Add(this);
						this._Id_counter_param = value.Id_counter_param;
					}
					else
					{
						this._Id_counter_param = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_counter_params");
				}
			}
		}
		
		[Association(Name="fk_t_prod_view_prop", Storage="_T_prod_view_prop", ThisKey="Id_pv_prop", OtherKey="Id_prod_view_prop", IsForeignKey=true)]
		public T_prod_view_prop T_prod_view_prop
		{
			get
			{
				return this._T_prod_view_prop.Entity;
			}
			set
			{
				T_prod_view_prop previousValue = this._T_prod_view_prop.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view_prop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view_prop.Entity = null;
						previousValue.T_counter_param_predicate.Remove(this);
					}
					this._T_prod_view_prop.Entity = value;
					if ((value != null))
					{
						value.T_counter_param_predicate.Add(this);
						this._Id_pv_prop = value.Id_prod_view_prop;
					}
					else
					{
						this._Id_pv_prop = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_prod_view_prop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_counter_params")]
	public partial class T_counter_params : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_counter_param;
		
		private System.Nullable<int> _Id_counter;
		
		private string _Value;
		
		private System.Nullable<int> _Id_counter_param_meta;
		
		private EntitySet<T_counter_param_map> _T_counter_param_map;
		
		private EntitySet<T_counter_param_predicate> _T_counter_param_predicate;
		
		private EntityRef<T_counter> _T_counter;
		
		private EntityRef<T_counter_params_metadata> _T_counter_params_metadata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_counter_paramChanging(int value);
    partial void OnId_counter_paramChanged();
    partial void OnId_counterChanging(System.Nullable<int> value);
    partial void OnId_counterChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnId_counter_param_metaChanging(System.Nullable<int> value);
    partial void OnId_counter_param_metaChanged();
    #endregion
		
		public T_counter_params()
		{
			this._T_counter_param_map = new EntitySet<T_counter_param_map>(new Action<T_counter_param_map>(this.attach_T_counter_param_map), new Action<T_counter_param_map>(this.detach_T_counter_param_map));
			this._T_counter_param_predicate = new EntitySet<T_counter_param_predicate>(new Action<T_counter_param_predicate>(this.attach_T_counter_param_predicate), new Action<T_counter_param_predicate>(this.detach_T_counter_param_predicate));
			this._T_counter = default(EntityRef<T_counter>);
			this._T_counter_params_metadata = default(EntityRef<T_counter_params_metadata>);
			OnCreated();
		}
		
		[Column(Name="id_counter_param", Storage="_Id_counter_param", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_counter_param
		{
			get
			{
				return this._Id_counter_param;
			}
			set
			{
				if ((this._Id_counter_param != value))
				{
					this.OnId_counter_paramChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_param = value;
					this.SendPropertyChanged("Id_counter_param");
					this.OnId_counter_paramChanged();
				}
			}
		}
		
		[Column(Name="id_counter", Storage="_Id_counter", DbType="Int")]
		public System.Nullable<int> Id_counter
		{
			get
			{
				return this._Id_counter;
			}
			set
			{
				if ((this._Id_counter != value))
				{
					this.OnId_counterChanging(value);
					this.SendPropertyChanging();
					this._Id_counter = value;
					this.SendPropertyChanged("Id_counter");
					this.OnId_counterChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="VarChar(255)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Name="id_counter_param_meta", Storage="_Id_counter_param_meta", DbType="Int")]
		public System.Nullable<int> Id_counter_param_meta
		{
			get
			{
				return this._Id_counter_param_meta;
			}
			set
			{
				if ((this._Id_counter_param_meta != value))
				{
					this.OnId_counter_param_metaChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_param_meta = value;
					this.SendPropertyChanged("Id_counter_param_meta");
					this.OnId_counter_param_metaChanged();
				}
			}
		}
		
		[Association(Name="fk_param_map_counter_params", Storage="_T_counter_param_map", ThisKey="Id_counter_param", OtherKey="Id_counter_param", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_param_map> T_counter_param_map
		{
			get
			{
				return this._T_counter_param_map;
			}
			set
			{
				this._T_counter_param_map.Assign(value);
			}
		}
		
		[Association(Name="fk_t_counter_params", Storage="_T_counter_param_predicate", ThisKey="Id_counter_param", OtherKey="Id_counter_param", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_param_predicate> T_counter_param_predicate
		{
			get
			{
				return this._T_counter_param_predicate;
			}
			set
			{
				this._T_counter_param_predicate.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_counter_params", Storage="_T_counter", ThisKey="Id_counter", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter T_counter
		{
			get
			{
				return this._T_counter.Entity;
			}
			set
			{
				T_counter previousValue = this._T_counter.Entity;
				if (((previousValue != value) 
							|| (this._T_counter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter.Entity = null;
						previousValue.T_counter_params.Remove(this);
					}
					this._T_counter.Entity = value;
					if ((value != null))
					{
						value.T_counter_params.Add(this);
						this._Id_counter = value.Id_prop;
					}
					else
					{
						this._Id_counter = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_counter");
				}
			}
		}
		
		[Association(Name="fk2_t_counter_params", Storage="_T_counter_params_metadata", ThisKey="Id_counter_param_meta", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter_params_metadata T_counter_params_metadata
		{
			get
			{
				return this._T_counter_params_metadata.Entity;
			}
			set
			{
				T_counter_params_metadata previousValue = this._T_counter_params_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_params_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_params_metadata.Entity = null;
						previousValue.T_counter_params.Remove(this);
					}
					this._T_counter_params_metadata.Entity = value;
					if ((value != null))
					{
						value.T_counter_params.Add(this);
						this._Id_counter_param_meta = value.Id_prop;
					}
					else
					{
						this._Id_counter_param_meta = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_counter_params_metadata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params = this;
		}
		
		private void detach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params = null;
		}
		
		private void attach_T_counter_param_predicate(T_counter_param_predicate entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params = this;
		}
		
		private void detach_T_counter_param_predicate(T_counter_param_predicate entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params = null;
		}
	}
	
	[Table(Name="dbo.t_counter_params_metadata")]
	public partial class T_counter_params_metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ParamType;
		
		private string _DBType;
		
		private int _Id_counter_meta;
		
		private int _Id_prop;
		
		private EntitySet<T_counter_param_map> _T_counter_param_map;
		
		private EntityRef<T_counter_metadata> _T_counter_metadata;
		
		private EntitySet<T_counter_params> _T_counter_params;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParamTypeChanging(string value);
    partial void OnParamTypeChanged();
    partial void OnDBTypeChanging(string value);
    partial void OnDBTypeChanged();
    partial void OnId_counter_metaChanging(int value);
    partial void OnId_counter_metaChanged();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    #endregion
		
		public T_counter_params_metadata()
		{
			this._T_counter_param_map = new EntitySet<T_counter_param_map>(new Action<T_counter_param_map>(this.attach_T_counter_param_map), new Action<T_counter_param_map>(this.detach_T_counter_param_map));
			this._T_counter_metadata = default(EntityRef<T_counter_metadata>);
			this._T_counter_params = new EntitySet<T_counter_params>(new Action<T_counter_params>(this.attach_T_counter_params), new Action<T_counter_params>(this.detach_T_counter_params));
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Storage="_ParamType", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string ParamType
		{
			get
			{
				return this._ParamType;
			}
			set
			{
				if ((this._ParamType != value))
				{
					this.OnParamTypeChanging(value);
					this.SendPropertyChanging();
					this._ParamType = value;
					this.SendPropertyChanged("ParamType");
					this.OnParamTypeChanged();
				}
			}
		}
		
		[Column(Storage="_DBType", DbType="VarChar(256)")]
		public string DBType
		{
			get
			{
				return this._DBType;
			}
			set
			{
				if ((this._DBType != value))
				{
					this.OnDBTypeChanging(value);
					this.SendPropertyChanging();
					this._DBType = value;
					this.SendPropertyChanged("DBType");
					this.OnDBTypeChanged();
				}
			}
		}
		
		[Column(Name="id_counter_meta", Storage="_Id_counter_meta", DbType="Int NOT NULL")]
		public int Id_counter_meta
		{
			get
			{
				return this._Id_counter_meta;
			}
			set
			{
				if ((this._Id_counter_meta != value))
				{
					this.OnId_counter_metaChanging(value);
					this.SendPropertyChanging();
					this._Id_counter_meta = value;
					this.SendPropertyChanged("Id_counter_meta");
					this.OnId_counter_metaChanged();
				}
			}
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Association(Name="fk_param_map_counter_params_metadata", Storage="_T_counter_param_map", ThisKey="Id_prop", OtherKey="Id_counter_param_meta", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_param_map> T_counter_param_map
		{
			get
			{
				return this._T_counter_param_map;
			}
			set
			{
				this._T_counter_param_map.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_counter_params_metadata", Storage="_T_counter_metadata", ThisKey="Id_counter_meta", OtherKey="Id_prop", IsForeignKey=true)]
		public T_counter_metadata T_counter_metadata
		{
			get
			{
				return this._T_counter_metadata.Entity;
			}
			set
			{
				T_counter_metadata previousValue = this._T_counter_metadata.Entity;
				if (((previousValue != value) 
							|| (this._T_counter_metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_counter_metadata.Entity = null;
						previousValue.T_counter_params_metadata.Remove(this);
					}
					this._T_counter_metadata.Entity = value;
					if ((value != null))
					{
						value.T_counter_params_metadata.Add(this);
						this._Id_counter_meta = value.Id_prop;
					}
					else
					{
						this._Id_counter_meta = default(int);
					}
					this.SendPropertyChanged("T_counter_metadata");
				}
			}
		}
		
		[Association(Name="fk2_t_counter_params", Storage="_T_counter_params", ThisKey="Id_prop", OtherKey="Id_counter_param_meta", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_params> T_counter_params
		{
			get
			{
				return this._T_counter_params;
			}
			set
			{
				this._T_counter_params.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_counter_params_metadata", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_counter_params_metadata = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_counter_params_metadata = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params_metadata = this;
		}
		
		private void detach_T_counter_param_map(T_counter_param_map entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params_metadata = null;
		}
		
		private void attach_T_counter_params(T_counter_params entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params_metadata = this;
		}
		
		private void detach_T_counter_params(T_counter_params entity)
		{
			this.SendPropertyChanging();
			entity.T_counter_params_metadata = null;
		}
	}
	
	[Table(Name="dbo.t_counterpropdef")]
	public partial class T_counterpropdef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _Id_pi;
		
		private string _Nm_servicedefprop;
		
		private int _N_order;
		
		private string _Nm_preferredcountertype;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    partial void OnNm_servicedefpropChanging(string value);
    partial void OnNm_servicedefpropChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnNm_preferredcountertypeChanging(string value);
    partial void OnNm_preferredcountertypeChanged();
    #endregion
		
		public T_counterpropdef()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL")]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Column(Name="nm_servicedefprop", Storage="_Nm_servicedefprop", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_servicedefprop
		{
			get
			{
				return this._Nm_servicedefprop;
			}
			set
			{
				if ((this._Nm_servicedefprop != value))
				{
					this.OnNm_servicedefpropChanging(value);
					this.SendPropertyChanging();
					this._Nm_servicedefprop = value;
					this.SendPropertyChanged("Nm_servicedefprop");
					this.OnNm_servicedefpropChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL")]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="nm_preferredcountertype", Storage="_Nm_preferredcountertype", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_preferredcountertype
		{
			get
			{
				return this._Nm_preferredcountertype;
			}
			set
			{
				if ((this._Nm_preferredcountertype != value))
				{
					this.OnNm_preferredcountertypeChanging(value);
					this.SendPropertyChanging();
					this._Nm_preferredcountertype = value;
					this.SendPropertyChanged("Nm_preferredcountertype");
					this.OnNm_preferredcountertypeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_COUNTERPROPDEF", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_counterpropdef = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_counterpropdef = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_current_id")]
	public partial class T_current_id : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_current;
		
		private string _Nm_current;
		
		private System.Nullable<int> _Id_min_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_currentChanging(int value);
    partial void OnId_currentChanged();
    partial void OnNm_currentChanging(string value);
    partial void OnNm_currentChanged();
    partial void OnId_min_idChanging(System.Nullable<int> value);
    partial void OnId_min_idChanged();
    #endregion
		
		public T_current_id()
		{
			OnCreated();
		}
		
		[Column(Name="id_current", Storage="_Id_current", DbType="Int NOT NULL")]
		public int Id_current
		{
			get
			{
				return this._Id_current;
			}
			set
			{
				if ((this._Id_current != value))
				{
					this.OnId_currentChanging(value);
					this.SendPropertyChanging();
					this._Id_current = value;
					this.SendPropertyChanged("Id_current");
					this.OnId_currentChanged();
				}
			}
		}
		
		[Column(Name="nm_current", Storage="_Nm_current", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_current
		{
			get
			{
				return this._Nm_current;
			}
			set
			{
				if ((this._Nm_current != value))
				{
					this.OnNm_currentChanging(value);
					this.SendPropertyChanging();
					this._Nm_current = value;
					this.SendPropertyChanged("Nm_current");
					this.OnNm_currentChanged();
				}
			}
		}
		
		[Column(Name="id_min_id", Storage="_Id_min_id", DbType="Int")]
		public System.Nullable<int> Id_min_id
		{
			get
			{
				return this._Id_min_id;
			}
			set
			{
				if ((this._Id_min_id != value))
				{
					this.OnId_min_idChanging(value);
					this.SendPropertyChanging();
					this._Id_min_id = value;
					this.SendPropertyChanged("Id_min_id");
					this.OnId_min_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_current_long_id")]
	public partial class T_current_long_id : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_current;
		
		private string _Nm_current;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_currentChanging(long value);
    partial void OnId_currentChanged();
    partial void OnNm_currentChanging(string value);
    partial void OnNm_currentChanged();
    #endregion
		
		public T_current_long_id()
		{
			OnCreated();
		}
		
		[Column(Name="id_current", Storage="_Id_current", DbType="BigInt NOT NULL")]
		public long Id_current
		{
			get
			{
				return this._Id_current;
			}
			set
			{
				if ((this._Id_current != value))
				{
					this.OnId_currentChanging(value);
					this.SendPropertyChanging();
					this._Id_current = value;
					this.SendPropertyChanged("Id_current");
					this.OnId_currentChanged();
				}
			}
		}
		
		[Column(Name="nm_current", Storage="_Nm_current", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_current
		{
			get
			{
				return this._Nm_current;
			}
			set
			{
				if ((this._Nm_current != value))
				{
					this.OnNm_currentChanging(value);
					this.SendPropertyChanging();
					this._Nm_current = value;
					this.SendPropertyChanged("Nm_current");
					this.OnNm_currentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_db_values")]
	public partial class T_db_values
	{
		
		private string _Parameter;
		
		private string _Value;
		
		public T_db_values()
		{
		}
		
		[Column(Name="parameter", Storage="_Parameter", DbType="NVarChar(100)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this._Parameter = value;
				}
			}
		}
		
		[Column(Name="value", Storage="_Value", DbType="NVarChar(100)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_decimal_capability")]
	public partial class T_decimal_capability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_instance;
		
		private string _Tx_param_name;
		
		private string _Tx_op;
		
		private System.Nullable<decimal> _Param_value;
		
		private EntityRef<T_capability_instance> _T_capability_instance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_instanceChanging(int value);
    partial void OnId_cap_instanceChanged();
    partial void OnTx_param_nameChanging(string value);
    partial void OnTx_param_nameChanged();
    partial void OnTx_opChanging(string value);
    partial void OnTx_opChanged();
    partial void OnParam_valueChanging(System.Nullable<decimal> value);
    partial void OnParam_valueChanged();
    #endregion
		
		public T_decimal_capability()
		{
			this._T_capability_instance = default(EntityRef<T_capability_instance>);
			OnCreated();
		}
		
		[Column(Name="id_cap_instance", Storage="_Id_cap_instance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_cap_instance
		{
			get
			{
				return this._Id_cap_instance;
			}
			set
			{
				if ((this._Id_cap_instance != value))
				{
					this.OnId_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_instance = value;
					this.SendPropertyChanged("Id_cap_instance");
					this.OnId_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_param_name", Storage="_Tx_param_name", DbType="NVarChar(2000)")]
		public string Tx_param_name
		{
			get
			{
				return this._Tx_param_name;
			}
			set
			{
				if ((this._Tx_param_name != value))
				{
					this.OnTx_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_param_name = value;
					this.SendPropertyChanged("Tx_param_name");
					this.OnTx_param_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_op", Storage="_Tx_op", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Tx_op
		{
			get
			{
				return this._Tx_op;
			}
			set
			{
				if ((this._Tx_op != value))
				{
					this.OnTx_opChanging(value);
					this.SendPropertyChanging();
					this._Tx_op = value;
					this.SendPropertyChanged("Tx_op");
					this.OnTx_opChanged();
				}
			}
		}
		
		[Column(Name="param_value", Storage="_Param_value", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Param_value
		{
			get
			{
				return this._Param_value;
			}
			set
			{
				if ((this._Param_value != value))
				{
					this.OnParam_valueChanging(value);
					this.SendPropertyChanging();
					this._Param_value = value;
					this.SendPropertyChanged("Param_value");
					this.OnParam_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_DECIMAL_CAPABILITY", Storage="_T_capability_instance", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsForeignKey=true)]
		public T_capability_instance T_capability_instance
		{
			get
			{
				return this._T_capability_instance.Entity;
			}
			set
			{
				T_capability_instance previousValue = this._T_capability_instance.Entity;
				if (((previousValue != value) 
							|| (this._T_capability_instance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_capability_instance.Entity = null;
						previousValue.T_decimal_capability = null;
					}
					this._T_capability_instance.Entity = value;
					if ((value != null))
					{
						value.T_decimal_capability = this;
						this._Id_cap_instance = value.Id_cap_instance;
					}
					else
					{
						this._Id_cap_instance = default(int);
					}
					this.SendPropertyChanged("T_capability_instance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_description")]
	public partial class T_description : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_desc;
		
		private int _Id_lang_code;
		
		private string _Tx_desc;
		
		private string _Tx_URL_desc;
		
		private EntityRef<T_MT_ID> _T_MT_ID;
		
		private EntityRef<T_language> _T_language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_descChanging(int value);
    partial void OnId_descChanged();
    partial void OnId_lang_codeChanging(int value);
    partial void OnId_lang_codeChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnTx_URL_descChanging(string value);
    partial void OnTx_URL_descChanged();
    #endregion
		
		public T_description()
		{
			this._T_MT_ID = default(EntityRef<T_MT_ID>);
			this._T_language = default(EntityRef<T_language>);
			OnCreated();
		}
		
		[Column(Name="id_desc", Storage="_Id_desc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_desc
		{
			get
			{
				return this._Id_desc;
			}
			set
			{
				if ((this._Id_desc != value))
				{
					this.OnId_descChanging(value);
					this.SendPropertyChanging();
					this._Id_desc = value;
					this.SendPropertyChanged("Id_desc");
					this.OnId_descChanged();
				}
			}
		}
		
		[Column(Name="id_lang_code", Storage="_Id_lang_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_lang_code
		{
			get
			{
				return this._Id_lang_code;
			}
			set
			{
				if ((this._Id_lang_code != value))
				{
					this.OnId_lang_codeChanging(value);
					this.SendPropertyChanging();
					this._Id_lang_code = value;
					this.SendPropertyChanged("Id_lang_code");
					this.OnId_lang_codeChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(4000)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="tx_URL_desc", Storage="_Tx_URL_desc", DbType="NVarChar(255)")]
		public string Tx_URL_desc
		{
			get
			{
				return this._Tx_URL_desc;
			}
			set
			{
				if ((this._Tx_URL_desc != value))
				{
					this.OnTx_URL_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_URL_desc = value;
					this.SendPropertyChanged("Tx_URL_desc");
					this.OnTx_URL_descChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_DESCRIPTION", Storage="_T_MT_ID", ThisKey="Id_desc", OtherKey="Id_MT", IsForeignKey=true)]
		public T_MT_ID T_MT_ID
		{
			get
			{
				return this._T_MT_ID.Entity;
			}
			set
			{
				T_MT_ID previousValue = this._T_MT_ID.Entity;
				if (((previousValue != value) 
							|| (this._T_MT_ID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_MT_ID.Entity = null;
						previousValue.T_description.Remove(this);
					}
					this._T_MT_ID.Entity = value;
					if ((value != null))
					{
						value.T_description.Add(this);
						this._Id_desc = value.Id_MT;
					}
					else
					{
						this._Id_desc = default(int);
					}
					this.SendPropertyChanged("T_MT_ID");
				}
			}
		}
		
		[Association(Name="fk2_t_description", Storage="_T_language", ThisKey="Id_lang_code", OtherKey="Id_lang_code", IsForeignKey=true)]
		public T_language T_language
		{
			get
			{
				return this._T_language.Entity;
			}
			set
			{
				T_language previousValue = this._T_language.Entity;
				if (((previousValue != value) 
							|| (this._T_language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_language.Entity = null;
						previousValue.T_description.Remove(this);
					}
					this._T_language.Entity = value;
					if ((value != null))
					{
						value.T_description.Add(this);
						this._Id_lang_code = value.Id_lang_code;
					}
					else
					{
						this._Id_lang_code = default(int);
					}
					this.SendPropertyChanged("T_language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_discount")]
	public partial class T_discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _N_value_type;
		
		private System.Nullable<int> _Id_usage_cycle;
		
		private System.Nullable<int> _Id_cycle_type;
		
		private System.Nullable<int> _Id_distribution_cpd;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
		private EntityRef<T_usage_cycle_type> _T_usage_cycle_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnN_value_typeChanging(int value);
    partial void OnN_value_typeChanged();
    partial void OnId_usage_cycleChanging(System.Nullable<int> value);
    partial void OnId_usage_cycleChanged();
    partial void OnId_cycle_typeChanging(System.Nullable<int> value);
    partial void OnId_cycle_typeChanged();
    partial void OnId_distribution_cpdChanging(System.Nullable<int> value);
    partial void OnId_distribution_cpdChanged();
    #endregion
		
		public T_discount()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			this._T_usage_cycle_type = default(EntityRef<T_usage_cycle_type>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="n_value_type", Storage="_N_value_type", DbType="Int NOT NULL")]
		public int N_value_type
		{
			get
			{
				return this._N_value_type;
			}
			set
			{
				if ((this._N_value_type != value))
				{
					this.OnN_value_typeChanging(value);
					this.SendPropertyChanging();
					this._N_value_type = value;
					this.SendPropertyChanged("N_value_type");
					this.OnN_value_typeChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int")]
		public System.Nullable<int> Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int")]
		public System.Nullable<int> Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Column(Name="id_distribution_cpd", Storage="_Id_distribution_cpd", DbType="Int")]
		public System.Nullable<int> Id_distribution_cpd
		{
			get
			{
				return this._Id_distribution_cpd;
			}
			set
			{
				if ((this._Id_distribution_cpd != value))
				{
					this.OnId_distribution_cpdChanging(value);
					this.SendPropertyChanging();
					this._Id_distribution_cpd = value;
					this.SendPropertyChanged("Id_distribution_cpd");
					this.OnId_distribution_cpdChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_DISCOUNT", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_discount = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_discount = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="fk2_t_discount", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_discount.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_discount.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		[Association(Name="fk3_t_discount", Storage="_T_usage_cycle_type", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", IsForeignKey=true)]
		public T_usage_cycle_type T_usage_cycle_type
		{
			get
			{
				return this._T_usage_cycle_type.Entity;
			}
			set
			{
				T_usage_cycle_type previousValue = this._T_usage_cycle_type.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle_type.Entity = null;
						previousValue.T_discount.Remove(this);
					}
					this._T_usage_cycle_type.Entity = value;
					if ((value != null))
					{
						value.T_discount.Add(this);
						this._Id_cycle_type = value.Id_cycle_type;
					}
					else
					{
						this._Id_cycle_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_dm_account")]
	public partial class T_dm_account
	{
		
		private int _Id_dm_acc;
		
		private System.Nullable<int> _Id_acc;
		
		private System.Nullable<System.DateTime> _Vt_start;
		
		private System.Nullable<System.DateTime> _Vt_end;
		
		public T_dm_account()
		{
		}
		
		[Column(Name="id_dm_acc", Storage="_Id_dm_acc", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_dm_acc
		{
			get
			{
				return this._Id_dm_acc;
			}
			set
			{
				if ((this._Id_dm_acc != value))
				{
					this._Id_dm_acc = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_dm_account_ancestor")]
	public partial class T_dm_account_ancestor
	{
		
		private System.Nullable<int> _Id_dm_ancestor;
		
		private System.Nullable<int> _Id_dm_descendent;
		
		private System.Nullable<int> _Num_generations;
		
		public T_dm_account_ancestor()
		{
		}
		
		[Column(Name="id_dm_ancestor", Storage="_Id_dm_ancestor", DbType="Int")]
		public System.Nullable<int> Id_dm_ancestor
		{
			get
			{
				return this._Id_dm_ancestor;
			}
			set
			{
				if ((this._Id_dm_ancestor != value))
				{
					this._Id_dm_ancestor = value;
				}
			}
		}
		
		[Column(Name="id_dm_descendent", Storage="_Id_dm_descendent", DbType="Int")]
		public System.Nullable<int> Id_dm_descendent
		{
			get
			{
				return this._Id_dm_descendent;
			}
			set
			{
				if ((this._Id_dm_descendent != value))
				{
					this._Id_dm_descendent = value;
				}
			}
		}
		
		[Column(Name="num_generations", Storage="_Num_generations", DbType="Int")]
		public System.Nullable<int> Num_generations
		{
			get
			{
				return this._Num_generations;
			}
			set
			{
				if ((this._Num_generations != value))
				{
					this._Num_generations = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_effectivedate")]
	public partial class T_effectivedate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_eff_date;
		
		private int _N_begintype;
		
		private System.Nullable<System.DateTime> _Dt_start;
		
		private System.Nullable<int> _N_beginoffset;
		
		private System.Nullable<int> _N_endtype;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
		private System.Nullable<int> _N_endoffset;
		
		private EntitySet<T_po> _T_po;
		
		private EntitySet<T_rsched> _T_rsched;
		
		private EntitySet<T_rsched_pub> _T_rsched_pub;
		
		private EntitySet<T_po> _Id_eff_dateT_po;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_eff_dateChanging(int value);
    partial void OnId_eff_dateChanged();
    partial void OnN_begintypeChanging(int value);
    partial void OnN_begintypeChanged();
    partial void OnDt_startChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_startChanged();
    partial void OnN_beginoffsetChanging(System.Nullable<int> value);
    partial void OnN_beginoffsetChanged();
    partial void OnN_endtypeChanging(System.Nullable<int> value);
    partial void OnN_endtypeChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    partial void OnN_endoffsetChanging(System.Nullable<int> value);
    partial void OnN_endoffsetChanged();
    #endregion
		
		public T_effectivedate()
		{
			this._T_po = new EntitySet<T_po>(new Action<T_po>(this.attach_T_po), new Action<T_po>(this.detach_T_po));
			this._T_rsched = new EntitySet<T_rsched>(new Action<T_rsched>(this.attach_T_rsched), new Action<T_rsched>(this.detach_T_rsched));
			this._T_rsched_pub = new EntitySet<T_rsched_pub>(new Action<T_rsched_pub>(this.attach_T_rsched_pub), new Action<T_rsched_pub>(this.detach_T_rsched_pub));
			this._Id_eff_dateT_po = new EntitySet<T_po>(new Action<T_po>(this.attach_Id_eff_dateT_po), new Action<T_po>(this.detach_Id_eff_dateT_po));
			OnCreated();
		}
		
		[Column(Name="id_eff_date", Storage="_Id_eff_date", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_eff_date
		{
			get
			{
				return this._Id_eff_date;
			}
			set
			{
				if ((this._Id_eff_date != value))
				{
					this.OnId_eff_dateChanging(value);
					this.SendPropertyChanging();
					this._Id_eff_date = value;
					this.SendPropertyChanged("Id_eff_date");
					this.OnId_eff_dateChanged();
				}
			}
		}
		
		[Column(Name="n_begintype", Storage="_N_begintype", DbType="Int NOT NULL")]
		public int N_begintype
		{
			get
			{
				return this._N_begintype;
			}
			set
			{
				if ((this._N_begintype != value))
				{
					this.OnN_begintypeChanging(value);
					this.SendPropertyChanging();
					this._N_begintype = value;
					this.SendPropertyChanged("N_begintype");
					this.OnN_begintypeChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="n_beginoffset", Storage="_N_beginoffset", DbType="Int")]
		public System.Nullable<int> N_beginoffset
		{
			get
			{
				return this._N_beginoffset;
			}
			set
			{
				if ((this._N_beginoffset != value))
				{
					this.OnN_beginoffsetChanging(value);
					this.SendPropertyChanging();
					this._N_beginoffset = value;
					this.SendPropertyChanged("N_beginoffset");
					this.OnN_beginoffsetChanged();
				}
			}
		}
		
		[Column(Name="n_endtype", Storage="_N_endtype", DbType="Int")]
		public System.Nullable<int> N_endtype
		{
			get
			{
				return this._N_endtype;
			}
			set
			{
				if ((this._N_endtype != value))
				{
					this.OnN_endtypeChanging(value);
					this.SendPropertyChanging();
					this._N_endtype = value;
					this.SendPropertyChanged("N_endtype");
					this.OnN_endtypeChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="n_endoffset", Storage="_N_endoffset", DbType="Int")]
		public System.Nullable<int> N_endoffset
		{
			get
			{
				return this._N_endoffset;
			}
			set
			{
				if ((this._N_endoffset != value))
				{
					this.OnN_endoffsetChanging(value);
					this.SendPropertyChanging();
					this._N_endoffset = value;
					this.SendPropertyChanged("N_endoffset");
					this.OnN_endoffsetChanged();
				}
			}
		}
		
		[Association(Name="FK2_T_PO", Storage="_T_po", ThisKey="Id_eff_date", OtherKey="Id_eff_date", DeleteRule="NO ACTION")]
		public EntitySet<T_po> T_po
		{
			get
			{
				return this._T_po;
			}
			set
			{
				this._T_po.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_RSCHED", Storage="_T_rsched", ThisKey="Id_eff_date", OtherKey="Id_eff_date", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched> T_rsched
		{
			get
			{
				return this._T_rsched;
			}
			set
			{
				this._T_rsched.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_rsched_pub", Storage="_T_rsched_pub", ThisKey="Id_eff_date", OtherKey="Id_eff_date", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched_pub> T_rsched_pub
		{
			get
			{
				return this._T_rsched_pub;
			}
			set
			{
				this._T_rsched_pub.Assign(value);
			}
		}
		
		[Association(Name="FK3_T_PO", Storage="_Id_eff_dateT_po", ThisKey="Id_eff_date", OtherKey="Id_avail", DeleteRule="NO ACTION")]
		public EntitySet<T_po> Id_eff_dateT_po
		{
			get
			{
				return this._Id_eff_dateT_po;
			}
			set
			{
				this._Id_eff_dateT_po.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = this;
		}
		
		private void detach_T_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = null;
		}
		
		private void attach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = this;
		}
		
		private void detach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = null;
		}
		
		private void attach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = this;
		}
		
		private void detach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_effectivedate = null;
		}
		
		private void attach_Id_eff_dateT_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.Id_availT_effectivedate = this;
		}
		
		private void detach_Id_eff_dateT_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.Id_availT_effectivedate = null;
		}
	}
	
	[Table(Name="dbo.t_email_adapter_tracking")]
	public partial class T_email_adapter_tracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private string _Email_sent;
		
		private int _N_failed_attempts;
		
		private int _Id_instance;
		
		private EntityRef<T_recevent_inst> _T_recevent_inst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnEmail_sentChanging(string value);
    partial void OnEmail_sentChanged();
    partial void OnN_failed_attemptsChanging(int value);
    partial void OnN_failed_attemptsChanged();
    partial void OnId_instanceChanging(int value);
    partial void OnId_instanceChanged();
    #endregion
		
		public T_email_adapter_tracking()
		{
			this._T_recevent_inst = default(EntityRef<T_recevent_inst>);
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="email_sent", Storage="_Email_sent", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Email_sent
		{
			get
			{
				return this._Email_sent;
			}
			set
			{
				if ((this._Email_sent != value))
				{
					this.OnEmail_sentChanging(value);
					this.SendPropertyChanging();
					this._Email_sent = value;
					this.SendPropertyChanged("Email_sent");
					this.OnEmail_sentChanged();
				}
			}
		}
		
		[Column(Name="n_failed_attempts", Storage="_N_failed_attempts", DbType="Int NOT NULL")]
		public int N_failed_attempts
		{
			get
			{
				return this._N_failed_attempts;
			}
			set
			{
				if ((this._N_failed_attempts != value))
				{
					this.OnN_failed_attemptsChanging(value);
					this.SendPropertyChanging();
					this._N_failed_attempts = value;
					this.SendPropertyChanged("N_failed_attempts");
					this.OnN_failed_attemptsChanged();
				}
			}
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this.OnId_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_instance = value;
					this.SendPropertyChanged("Id_instance");
					this.OnId_instanceChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_email_adapter_tracking", Storage="_T_recevent_inst", ThisKey="Id_instance", OtherKey="Id_instance", IsForeignKey=true)]
		public T_recevent_inst T_recevent_inst
		{
			get
			{
				return this._T_recevent_inst.Entity;
			}
			set
			{
				T_recevent_inst previousValue = this._T_recevent_inst.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_inst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_inst.Entity = null;
						previousValue.T_email_adapter_tracking.Remove(this);
					}
					this._T_recevent_inst.Entity = value;
					if ((value != null))
					{
						value.T_email_adapter_tracking.Add(this);
						this._Id_instance = value.Id_instance;
					}
					else
					{
						this._Id_instance = default(int);
					}
					this.SendPropertyChanged("T_recevent_inst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_entity_specs")]
	public partial class T_entity_specs
	{
		
		private int _Id_entity;
		
		private int _Id_spec;
		
		private System.Nullable<int> _C_display_order;
		
		private System.Nullable<int> _Entity_type;
		
		public T_entity_specs()
		{
		}
		
		[Column(Name="id_entity", Storage="_Id_entity", DbType="Int NOT NULL")]
		public int Id_entity
		{
			get
			{
				return this._Id_entity;
			}
			set
			{
				if ((this._Id_entity != value))
				{
					this._Id_entity = value;
				}
			}
		}
		
		[Column(Name="id_spec", Storage="_Id_spec", DbType="Int NOT NULL")]
		public int Id_spec
		{
			get
			{
				return this._Id_spec;
			}
			set
			{
				if ((this._Id_spec != value))
				{
					this._Id_spec = value;
				}
			}
		}
		
		[Column(Name="c_display_order", Storage="_C_display_order", DbType="Int")]
		public System.Nullable<int> C_display_order
		{
			get
			{
				return this._C_display_order;
			}
			set
			{
				if ((this._C_display_order != value))
				{
					this._C_display_order = value;
				}
			}
		}
		
		[Column(Name="entity_type", Storage="_Entity_type", DbType="Int")]
		public System.Nullable<int> Entity_type
		{
			get
			{
				return this._Entity_type;
			}
			set
			{
				if ((this._Entity_type != value))
				{
					this._Entity_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_enum_capability")]
	public partial class T_enum_capability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_instance;
		
		private string _Tx_param_name;
		
		private string _Tx_op;
		
		private System.Nullable<int> _Param_value;
		
		private EntityRef<T_capability_instance> _T_capability_instance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_instanceChanging(int value);
    partial void OnId_cap_instanceChanged();
    partial void OnTx_param_nameChanging(string value);
    partial void OnTx_param_nameChanged();
    partial void OnTx_opChanging(string value);
    partial void OnTx_opChanged();
    partial void OnParam_valueChanging(System.Nullable<int> value);
    partial void OnParam_valueChanged();
    #endregion
		
		public T_enum_capability()
		{
			this._T_capability_instance = default(EntityRef<T_capability_instance>);
			OnCreated();
		}
		
		[Column(Name="id_cap_instance", Storage="_Id_cap_instance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_cap_instance
		{
			get
			{
				return this._Id_cap_instance;
			}
			set
			{
				if ((this._Id_cap_instance != value))
				{
					this.OnId_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_instance = value;
					this.SendPropertyChanged("Id_cap_instance");
					this.OnId_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_param_name", Storage="_Tx_param_name", DbType="NVarChar(2000)")]
		public string Tx_param_name
		{
			get
			{
				return this._Tx_param_name;
			}
			set
			{
				if ((this._Tx_param_name != value))
				{
					this.OnTx_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_param_name = value;
					this.SendPropertyChanged("Tx_param_name");
					this.OnTx_param_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_op", Storage="_Tx_op", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Tx_op
		{
			get
			{
				return this._Tx_op;
			}
			set
			{
				if ((this._Tx_op != value))
				{
					this.OnTx_opChanging(value);
					this.SendPropertyChanging();
					this._Tx_op = value;
					this.SendPropertyChanged("Tx_op");
					this.OnTx_opChanged();
				}
			}
		}
		
		[Column(Name="param_value", Storage="_Param_value", DbType="Int")]
		public System.Nullable<int> Param_value
		{
			get
			{
				return this._Param_value;
			}
			set
			{
				if ((this._Param_value != value))
				{
					this.OnParam_valueChanging(value);
					this.SendPropertyChanging();
					this._Param_value = value;
					this.SendPropertyChanged("Param_value");
					this.OnParam_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ENUM_CAPABILITY", Storage="_T_capability_instance", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsForeignKey=true)]
		public T_capability_instance T_capability_instance
		{
			get
			{
				return this._T_capability_instance.Entity;
			}
			set
			{
				T_capability_instance previousValue = this._T_capability_instance.Entity;
				if (((previousValue != value) 
							|| (this._T_capability_instance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_capability_instance.Entity = null;
						previousValue.T_enum_capability = null;
					}
					this._T_capability_instance.Entity = value;
					if ((value != null))
					{
						value.T_enum_capability = this;
						this._Id_cap_instance = value.Id_cap_instance;
					}
					else
					{
						this._Id_cap_instance = default(int);
					}
					this.SendPropertyChanged("T_capability_instance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_enum_data")]
	public partial class T_enum_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_enum_data;
		
		private int _Id_enum_data;
		
		private EntityRef<T_MT_ID> _T_MT_ID;
		
		private EntitySet<T_view_hierarchy> _T_view_hierarchy;
		
		private EntitySet<T_pipeline_service> _T_pipeline_service;
		
		private EntitySet<T_view_hierarchy> _Id_enum_dataT_view_hierarchy;
		
		private EntitySet<T_acc_ownership> _T_acc_ownership;
		
		private EntityRef<T_prod_view> _T_prod_view;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_enum_dataChanging(string value);
    partial void OnNm_enum_dataChanged();
    partial void OnId_enum_dataChanging(int value);
    partial void OnId_enum_dataChanged();
    #endregion
		
		public T_enum_data()
		{
			this._T_MT_ID = default(EntityRef<T_MT_ID>);
			this._T_view_hierarchy = new EntitySet<T_view_hierarchy>(new Action<T_view_hierarchy>(this.attach_T_view_hierarchy), new Action<T_view_hierarchy>(this.detach_T_view_hierarchy));
			this._T_pipeline_service = new EntitySet<T_pipeline_service>(new Action<T_pipeline_service>(this.attach_T_pipeline_service), new Action<T_pipeline_service>(this.detach_T_pipeline_service));
			this._Id_enum_dataT_view_hierarchy = new EntitySet<T_view_hierarchy>(new Action<T_view_hierarchy>(this.attach_Id_enum_dataT_view_hierarchy), new Action<T_view_hierarchy>(this.detach_Id_enum_dataT_view_hierarchy));
			this._T_acc_ownership = new EntitySet<T_acc_ownership>(new Action<T_acc_ownership>(this.attach_T_acc_ownership), new Action<T_acc_ownership>(this.detach_T_acc_ownership));
			this._T_prod_view = default(EntityRef<T_prod_view>);
			OnCreated();
		}
		
		[Column(Name="nm_enum_data", Storage="_Nm_enum_data", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_enum_data
		{
			get
			{
				return this._Nm_enum_data;
			}
			set
			{
				if ((this._Nm_enum_data != value))
				{
					this.OnNm_enum_dataChanging(value);
					this.SendPropertyChanging();
					this._Nm_enum_data = value;
					this.SendPropertyChanged("Nm_enum_data");
					this.OnNm_enum_dataChanged();
				}
			}
		}
		
		[Column(Name="id_enum_data", Storage="_Id_enum_data", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_enum_data
		{
			get
			{
				return this._Id_enum_data;
			}
			set
			{
				if ((this._Id_enum_data != value))
				{
					this.OnId_enum_dataChanging(value);
					this.SendPropertyChanging();
					this._Id_enum_data = value;
					this.SendPropertyChanged("Id_enum_data");
					this.OnId_enum_dataChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ENUM_DATA", Storage="_T_MT_ID", ThisKey="Id_enum_data", OtherKey="Id_MT", IsForeignKey=true)]
		public T_MT_ID T_MT_ID
		{
			get
			{
				return this._T_MT_ID.Entity;
			}
			set
			{
				T_MT_ID previousValue = this._T_MT_ID.Entity;
				if (((previousValue != value) 
							|| (this._T_MT_ID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_MT_ID.Entity = null;
						previousValue.T_enum_data = null;
					}
					this._T_MT_ID.Entity = value;
					if ((value != null))
					{
						value.T_enum_data = this;
						this._Id_enum_data = value.Id_MT;
					}
					else
					{
						this._Id_enum_data = default(int);
					}
					this.SendPropertyChanged("T_MT_ID");
				}
			}
		}
		
		[Association(Name="FK1_T_VIEW_HIERARCHY", Storage="_T_view_hierarchy", ThisKey="Id_enum_data", OtherKey="Id_view", DeleteRule="NO ACTION")]
		public EntitySet<T_view_hierarchy> T_view_hierarchy
		{
			get
			{
				return this._T_view_hierarchy;
			}
			set
			{
				this._T_view_hierarchy.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_PIPELINE_SERVICE", Storage="_T_pipeline_service", ThisKey="Id_enum_data", OtherKey="Id_svc", DeleteRule="NO ACTION")]
		public EntitySet<T_pipeline_service> T_pipeline_service
		{
			get
			{
				return this._T_pipeline_service;
			}
			set
			{
				this._T_pipeline_service.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_VIEW_HIERARCHY", Storage="_Id_enum_dataT_view_hierarchy", ThisKey="Id_enum_data", OtherKey="Id_view_parent", DeleteRule="NO ACTION")]
		public EntitySet<T_view_hierarchy> Id_enum_dataT_view_hierarchy
		{
			get
			{
				return this._Id_enum_dataT_view_hierarchy;
			}
			set
			{
				this._Id_enum_dataT_view_hierarchy.Assign(value);
			}
		}
		
		[Association(Name="t_acc_ownership_fk3", Storage="_T_acc_ownership", ThisKey="Id_enum_data", OtherKey="Id_relation_type", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_ownership> T_acc_ownership
		{
			get
			{
				return this._T_acc_ownership;
			}
			set
			{
				this._T_acc_ownership.Assign(value);
			}
		}
		
		[Association(Name="t_prod_view_FK1", Storage="_T_prod_view", ThisKey="Id_enum_data", OtherKey="Id_view", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_prod_view T_prod_view
		{
			get
			{
				return this._T_prod_view.Entity;
			}
			set
			{
				T_prod_view previousValue = this._T_prod_view.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view.Entity = null;
						previousValue.T_enum_data = null;
					}
					this._T_prod_view.Entity = value;
					if ((value != null))
					{
						value.T_enum_data = this;
					}
					this.SendPropertyChanged("T_prod_view");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_view_hierarchy(T_view_hierarchy entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = this;
		}
		
		private void detach_T_view_hierarchy(T_view_hierarchy entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = null;
		}
		
		private void attach_T_pipeline_service(T_pipeline_service entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = this;
		}
		
		private void detach_T_pipeline_service(T_pipeline_service entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = null;
		}
		
		private void attach_Id_enum_dataT_view_hierarchy(T_view_hierarchy entity)
		{
			this.SendPropertyChanging();
			entity.Id_view_parentT_enum_data = this;
		}
		
		private void detach_Id_enum_dataT_view_hierarchy(T_view_hierarchy entity)
		{
			this.SendPropertyChanging();
			entity.Id_view_parentT_enum_data = null;
		}
		
		private void attach_T_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = this;
		}
		
		private void detach_T_acc_ownership(T_acc_ownership entity)
		{
			this.SendPropertyChanging();
			entity.T_enum_data = null;
		}
	}
	
	[Table(Name="dbo.t_ep_aggregate")]
	public partial class T_ep_aggregate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_aggregate()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_aggr__id_pr__3C2ACFCE", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_aggregate = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_aggregate = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_discount")]
	public partial class T_ep_discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_discount()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_disc__id_pr__3F073C79", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_discount = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_discount = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_map")]
	public partial class T_ep_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_principal;
		
		private string _Nm_ep_tablename;
		
		private string _Nm_desc;
		
		private string _B_core;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_principalChanging(int value);
    partial void OnId_principalChanged();
    partial void OnNm_ep_tablenameChanging(string value);
    partial void OnNm_ep_tablenameChanged();
    partial void OnNm_descChanging(string value);
    partial void OnNm_descChanged();
    partial void OnB_coreChanging(string value);
    partial void OnB_coreChanged();
    #endregion
		
		public T_ep_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_principal", Storage="_Id_principal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_principal
		{
			get
			{
				return this._Id_principal;
			}
			set
			{
				if ((this._Id_principal != value))
				{
					this.OnId_principalChanging(value);
					this.SendPropertyChanging();
					this._Id_principal = value;
					this.SendPropertyChanged("Id_principal");
					this.OnId_principalChanged();
				}
			}
		}
		
		[Column(Name="nm_ep_tablename", Storage="_Nm_ep_tablename", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_ep_tablename
		{
			get
			{
				return this._Nm_ep_tablename;
			}
			set
			{
				if ((this._Nm_ep_tablename != value))
				{
					this.OnNm_ep_tablenameChanging(value);
					this.SendPropertyChanging();
					this._Nm_ep_tablename = value;
					this.SendPropertyChanged("Nm_ep_tablename");
					this.OnNm_ep_tablenameChanged();
				}
			}
		}
		
		[Column(Name="nm_desc", Storage="_Nm_desc", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_desc
		{
			get
			{
				return this._Nm_desc;
			}
			set
			{
				if ((this._Nm_desc != value))
				{
					this.OnNm_descChanging(value);
					this.SendPropertyChanging();
					this._Nm_desc = value;
					this.SendPropertyChanged("Nm_desc");
					this.OnNm_descChanged();
				}
			}
		}
		
		[Column(Name="b_core", Storage="_B_core", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_core
		{
			get
			{
				return this._B_core;
			}
			set
			{
				if ((this._B_core != value))
				{
					this.OnB_coreChanging(value);
					this.SendPropertyChanging();
					this._B_core = value;
					this.SendPropertyChanged("B_core");
					this.OnB_coreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_nonrecurring")]
	public partial class T_ep_nonrecurring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_nonrecurring()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_nonr__id_pr__41E3A924", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_nonrecurring = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_nonrecurring = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_po")]
	public partial class T_ep_po : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private string _C_InternalInformationURL;
		
		private string _C_ExternalInformationURL;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    partial void OnC_InternalInformationURLChanging(string value);
    partial void OnC_InternalInformationURLChanged();
    partial void OnC_ExternalInformationURLChanging(string value);
    partial void OnC_ExternalInformationURLChanged();
    #endregion
		
		public T_ep_po()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Column(Name="c_InternalInformationURL", Storage="_C_InternalInformationURL", DbType="NVarChar(255)")]
		public string C_InternalInformationURL
		{
			get
			{
				return this._C_InternalInformationURL;
			}
			set
			{
				if ((this._C_InternalInformationURL != value))
				{
					this.OnC_InternalInformationURLChanging(value);
					this.SendPropertyChanging();
					this._C_InternalInformationURL = value;
					this.SendPropertyChanged("C_InternalInformationURL");
					this.OnC_InternalInformationURLChanged();
				}
			}
		}
		
		[Column(Name="c_ExternalInformationURL", Storage="_C_ExternalInformationURL", DbType="NVarChar(255)")]
		public string C_ExternalInformationURL
		{
			get
			{
				return this._C_ExternalInformationURL;
			}
			set
			{
				if ((this._C_ExternalInformationURL != value))
				{
					this.OnC_ExternalInformationURLChanging(value);
					this.SendPropertyChanging();
					this._C_ExternalInformationURL = value;
					this.SendPropertyChanged("C_ExternalInformationURL");
					this.OnC_ExternalInformationURLChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_po__id_prop__44C015CF", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_po = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_po = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_pricelist")]
	public partial class T_ep_pricelist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    #endregion
		
		public T_ep_pricelist()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_pric__id_pr__479C827A", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_pricelist = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_pricelist = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_recurring")]
	public partial class T_ep_recurring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_recurring()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_recu__id_pr__4A78EF25", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_recurring = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_recurring = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_unit_dependent_recurring")]
	public partial class T_ep_unit_dependent_recurring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_unit_dependent_recurring()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_unit__id_pr__4D555BD0", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_unit_dependent_recurring = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_unit_dependent_recurring = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ep_usage")]
	public partial class T_ep_usage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _C_glcode;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnC_glcodeChanging(string value);
    partial void OnC_glcodeChanged();
    #endregion
		
		public T_ep_usage()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="c_glcode", Storage="_C_glcode", DbType="NVarChar(100)")]
		public string C_glcode
		{
			get
			{
				return this._C_glcode;
			}
			set
			{
				if ((this._C_glcode != value))
				{
					this.OnC_glcodeChanging(value);
					this.SendPropertyChanging();
					this._C_glcode = value;
					this.SendPropertyChanged("C_glcode");
					this.OnC_glcodeChanged();
				}
			}
		}
		
		[Association(Name="FK__t_ep_usag__id_pr__5031C87B", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_ep_usage = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_ep_usage = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_default_param_values")]
	public partial class T_export_default_param_values : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_param_values;
		
		private int _Id_rep_instance_id;
		
		private int _Id_param_name;
		
		private string _C_param_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_param_valuesChanging(int value);
    partial void OnId_param_valuesChanged();
    partial void OnId_rep_instance_idChanging(int value);
    partial void OnId_rep_instance_idChanged();
    partial void OnId_param_nameChanging(int value);
    partial void OnId_param_nameChanged();
    partial void OnC_param_valueChanging(string value);
    partial void OnC_param_valueChanged();
    #endregion
		
		public T_export_default_param_values()
		{
			OnCreated();
		}
		
		[Column(Name="id_param_values", Storage="_Id_param_values", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_param_values
		{
			get
			{
				return this._Id_param_values;
			}
			set
			{
				if ((this._Id_param_values != value))
				{
					this.OnId_param_valuesChanging(value);
					this.SendPropertyChanging();
					this._Id_param_values = value;
					this.SendPropertyChanged("Id_param_values");
					this.OnId_param_valuesChanged();
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int NOT NULL")]
		public int Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this.OnId_rep_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Id_rep_instance_id = value;
					this.SendPropertyChanged("Id_rep_instance_id");
					this.OnId_rep_instance_idChanged();
				}
			}
		}
		
		[Column(Name="id_param_name", Storage="_Id_param_name", DbType="Int NOT NULL")]
		public int Id_param_name
		{
			get
			{
				return this._Id_param_name;
			}
			set
			{
				if ((this._Id_param_name != value))
				{
					this.OnId_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Id_param_name = value;
					this.SendPropertyChanged("Id_param_name");
					this.OnId_param_nameChanged();
				}
			}
		}
		
		[Column(Name="c_param_value", Storage="_C_param_value", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string C_param_value
		{
			get
			{
				return this._C_param_value;
			}
			set
			{
				if ((this._C_param_value != value))
				{
					this.OnC_param_valueChanging(value);
					this.SendPropertyChanging();
					this._C_param_value = value;
					this.SendPropertyChanged("C_param_value");
					this.OnC_param_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_execute_audit")]
	public partial class T_export_execute_audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_audit;
		
		private string _Id_work_queue;
		
		private System.Nullable<int> _Id_rep;
		
		private System.Nullable<int> _Id_rep_instance_id;
		
		private System.Nullable<int> _Id_schedule;
		
		private string _C_sch_type;
		
		private System.Nullable<System.DateTime> _Dt_queued;
		
		private System.Nullable<System.DateTime> _Dt_sched_run;
		
		private string _C_use_database;
		
		private string _C_rep_title;
		
		private string _C_rep_type;
		
		private string _C_rep_def_source;
		
		private string _C_rep_query_tag;
		
		private string _C_rep_output_type;
		
		private string _C_rep_distrib_type;
		
		private string _C_rep_destn;
		
		private string _C_destn_access_user;
		
		private string _C_exec_type;
		
		private string _C_processed_server;
		
		private string _C_eop_step_instance_name;
		
		private System.Nullable<bool> _C_generate_control_file;
		
		private string _C_control_file_delivery_location;
		
		private System.Nullable<bool> _C_compressreport;
		
		private System.Nullable<int> _C_compressthreshold;
		
		private System.Nullable<bool> _C_output_execute_params_info;
		
		private bool _C_use_quoted_identifiers;
		
		private System.Nullable<int> _C_ds_id;
		
		private System.Nullable<int> _Id_run;
		
		private System.DateTime _Run_start_dt;
		
		private System.DateTime _Run_end_dt;
		
		private string _C_run_result_status;
		
		private string _C_run_result_descr;
		
		private string _C_execute_paraminfo;
		
		private int _C_execution_backedout;
		
		private string _C_queuerow_source;
		
		private string _C_output_file_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnId_work_queueChanging(string value);
    partial void OnId_work_queueChanged();
    partial void OnId_repChanging(System.Nullable<int> value);
    partial void OnId_repChanged();
    partial void OnId_rep_instance_idChanging(System.Nullable<int> value);
    partial void OnId_rep_instance_idChanged();
    partial void OnId_scheduleChanging(System.Nullable<int> value);
    partial void OnId_scheduleChanged();
    partial void OnC_sch_typeChanging(string value);
    partial void OnC_sch_typeChanged();
    partial void OnDt_queuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_queuedChanged();
    partial void OnDt_sched_runChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_sched_runChanged();
    partial void OnC_use_databaseChanging(string value);
    partial void OnC_use_databaseChanged();
    partial void OnC_rep_titleChanging(string value);
    partial void OnC_rep_titleChanged();
    partial void OnC_rep_typeChanging(string value);
    partial void OnC_rep_typeChanged();
    partial void OnC_rep_def_sourceChanging(string value);
    partial void OnC_rep_def_sourceChanged();
    partial void OnC_rep_query_tagChanging(string value);
    partial void OnC_rep_query_tagChanged();
    partial void OnC_rep_output_typeChanging(string value);
    partial void OnC_rep_output_typeChanged();
    partial void OnC_rep_distrib_typeChanging(string value);
    partial void OnC_rep_distrib_typeChanged();
    partial void OnC_rep_destnChanging(string value);
    partial void OnC_rep_destnChanged();
    partial void OnC_destn_access_userChanging(string value);
    partial void OnC_destn_access_userChanged();
    partial void OnC_exec_typeChanging(string value);
    partial void OnC_exec_typeChanged();
    partial void OnC_processed_serverChanging(string value);
    partial void OnC_processed_serverChanged();
    partial void OnC_eop_step_instance_nameChanging(string value);
    partial void OnC_eop_step_instance_nameChanged();
    partial void OnC_generate_control_fileChanging(System.Nullable<bool> value);
    partial void OnC_generate_control_fileChanged();
    partial void OnC_control_file_delivery_locationChanging(string value);
    partial void OnC_control_file_delivery_locationChanged();
    partial void OnC_compressreportChanging(System.Nullable<bool> value);
    partial void OnC_compressreportChanged();
    partial void OnC_compressthresholdChanging(System.Nullable<int> value);
    partial void OnC_compressthresholdChanged();
    partial void OnC_output_execute_params_infoChanging(System.Nullable<bool> value);
    partial void OnC_output_execute_params_infoChanged();
    partial void OnC_use_quoted_identifiersChanging(bool value);
    partial void OnC_use_quoted_identifiersChanged();
    partial void OnC_ds_idChanging(System.Nullable<int> value);
    partial void OnC_ds_idChanged();
    partial void OnId_runChanging(System.Nullable<int> value);
    partial void OnId_runChanged();
    partial void OnRun_start_dtChanging(System.DateTime value);
    partial void OnRun_start_dtChanged();
    partial void OnRun_end_dtChanging(System.DateTime value);
    partial void OnRun_end_dtChanged();
    partial void OnC_run_result_statusChanging(string value);
    partial void OnC_run_result_statusChanged();
    partial void OnC_run_result_descrChanging(string value);
    partial void OnC_run_result_descrChanged();
    partial void OnC_execute_paraminfoChanging(string value);
    partial void OnC_execute_paraminfoChanged();
    partial void OnC_execution_backedoutChanging(int value);
    partial void OnC_execution_backedoutChanged();
    partial void OnC_queuerow_sourceChanging(string value);
    partial void OnC_queuerow_sourceChanged();
    partial void OnC_output_file_nameChanging(string value);
    partial void OnC_output_file_nameChanged();
    #endregion
		
		public T_export_execute_audit()
		{
			OnCreated();
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="id_work_queue", Storage="_Id_work_queue", DbType="Char(36)")]
		public string Id_work_queue
		{
			get
			{
				return this._Id_work_queue;
			}
			set
			{
				if ((this._Id_work_queue != value))
				{
					this.OnId_work_queueChanging(value);
					this.SendPropertyChanging();
					this._Id_work_queue = value;
					this.SendPropertyChanged("Id_work_queue");
					this.OnId_work_queueChanged();
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int")]
		public System.Nullable<int> Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this.OnId_repChanging(value);
					this.SendPropertyChanging();
					this._Id_rep = value;
					this.SendPropertyChanged("Id_rep");
					this.OnId_repChanged();
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int")]
		public System.Nullable<int> Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this.OnId_rep_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Id_rep_instance_id = value;
					this.SendPropertyChanged("Id_rep_instance_id");
					this.OnId_rep_instance_idChanged();
				}
			}
		}
		
		[Column(Name="id_schedule", Storage="_Id_schedule", DbType="Int")]
		public System.Nullable<int> Id_schedule
		{
			get
			{
				return this._Id_schedule;
			}
			set
			{
				if ((this._Id_schedule != value))
				{
					this.OnId_scheduleChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule = value;
					this.SendPropertyChanged("Id_schedule");
					this.OnId_scheduleChanged();
				}
			}
		}
		
		[Column(Name="c_sch_type", Storage="_C_sch_type", DbType="VarChar(10)")]
		public string C_sch_type
		{
			get
			{
				return this._C_sch_type;
			}
			set
			{
				if ((this._C_sch_type != value))
				{
					this.OnC_sch_typeChanging(value);
					this.SendPropertyChanging();
					this._C_sch_type = value;
					this.SendPropertyChanged("C_sch_type");
					this.OnC_sch_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_queued", Storage="_Dt_queued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_queued
		{
			get
			{
				return this._Dt_queued;
			}
			set
			{
				if ((this._Dt_queued != value))
				{
					this.OnDt_queuedChanging(value);
					this.SendPropertyChanging();
					this._Dt_queued = value;
					this.SendPropertyChanged("Dt_queued");
					this.OnDt_queuedChanged();
				}
			}
		}
		
		[Column(Name="dt_sched_run", Storage="_Dt_sched_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_sched_run
		{
			get
			{
				return this._Dt_sched_run;
			}
			set
			{
				if ((this._Dt_sched_run != value))
				{
					this.OnDt_sched_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_sched_run = value;
					this.SendPropertyChanged("Dt_sched_run");
					this.OnDt_sched_runChanged();
				}
			}
		}
		
		[Column(Name="c_use_database", Storage="_C_use_database", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_use_database
		{
			get
			{
				return this._C_use_database;
			}
			set
			{
				if ((this._C_use_database != value))
				{
					this.OnC_use_databaseChanging(value);
					this.SendPropertyChanging();
					this._C_use_database = value;
					this.SendPropertyChanged("C_use_database");
					this.OnC_use_databaseChanged();
				}
			}
		}
		
		[Column(Name="c_rep_title", Storage="_C_rep_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_title
		{
			get
			{
				return this._C_rep_title;
			}
			set
			{
				if ((this._C_rep_title != value))
				{
					this.OnC_rep_titleChanging(value);
					this.SendPropertyChanging();
					this._C_rep_title = value;
					this.SendPropertyChanged("C_rep_title");
					this.OnC_rep_titleChanged();
				}
			}
		}
		
		[Column(Name="c_rep_type", Storage="_C_rep_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_type
		{
			get
			{
				return this._C_rep_type;
			}
			set
			{
				if ((this._C_rep_type != value))
				{
					this.OnC_rep_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_type = value;
					this.SendPropertyChanged("C_rep_type");
					this.OnC_rep_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_def_source", Storage="_C_rep_def_source", DbType="VarChar(100)")]
		public string C_rep_def_source
		{
			get
			{
				return this._C_rep_def_source;
			}
			set
			{
				if ((this._C_rep_def_source != value))
				{
					this.OnC_rep_def_sourceChanging(value);
					this.SendPropertyChanging();
					this._C_rep_def_source = value;
					this.SendPropertyChanged("C_rep_def_source");
					this.OnC_rep_def_sourceChanged();
				}
			}
		}
		
		[Column(Name="c_rep_query_tag", Storage="_C_rep_query_tag", DbType="VarChar(100)")]
		public string C_rep_query_tag
		{
			get
			{
				return this._C_rep_query_tag;
			}
			set
			{
				if ((this._C_rep_query_tag != value))
				{
					this.OnC_rep_query_tagChanging(value);
					this.SendPropertyChanging();
					this._C_rep_query_tag = value;
					this.SendPropertyChanged("C_rep_query_tag");
					this.OnC_rep_query_tagChanged();
				}
			}
		}
		
		[Column(Name="c_rep_output_type", Storage="_C_rep_output_type", DbType="VarChar(10)")]
		public string C_rep_output_type
		{
			get
			{
				return this._C_rep_output_type;
			}
			set
			{
				if ((this._C_rep_output_type != value))
				{
					this.OnC_rep_output_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_output_type = value;
					this.SendPropertyChanged("C_rep_output_type");
					this.OnC_rep_output_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_distrib_type", Storage="_C_rep_distrib_type", DbType="VarChar(50)")]
		public string C_rep_distrib_type
		{
			get
			{
				return this._C_rep_distrib_type;
			}
			set
			{
				if ((this._C_rep_distrib_type != value))
				{
					this.OnC_rep_distrib_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_distrib_type = value;
					this.SendPropertyChanged("C_rep_distrib_type");
					this.OnC_rep_distrib_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_destn", Storage="_C_rep_destn", DbType="VarChar(500)")]
		public string C_rep_destn
		{
			get
			{
				return this._C_rep_destn;
			}
			set
			{
				if ((this._C_rep_destn != value))
				{
					this.OnC_rep_destnChanging(value);
					this.SendPropertyChanging();
					this._C_rep_destn = value;
					this.SendPropertyChanged("C_rep_destn");
					this.OnC_rep_destnChanged();
				}
			}
		}
		
		[Column(Name="c_destn_access_user", Storage="_C_destn_access_user", DbType="VarChar(50)")]
		public string C_destn_access_user
		{
			get
			{
				return this._C_destn_access_user;
			}
			set
			{
				if ((this._C_destn_access_user != value))
				{
					this.OnC_destn_access_userChanging(value);
					this.SendPropertyChanging();
					this._C_destn_access_user = value;
					this.SendPropertyChanged("C_destn_access_user");
					this.OnC_destn_access_userChanged();
				}
			}
		}
		
		[Column(Name="c_exec_type", Storage="_C_exec_type", DbType="Char(10)")]
		public string C_exec_type
		{
			get
			{
				return this._C_exec_type;
			}
			set
			{
				if ((this._C_exec_type != value))
				{
					this.OnC_exec_typeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_type = value;
					this.SendPropertyChanged("C_exec_type");
					this.OnC_exec_typeChanged();
				}
			}
		}
		
		[Column(Name="c_processed_server", Storage="_C_processed_server", DbType="VarChar(50)")]
		public string C_processed_server
		{
			get
			{
				return this._C_processed_server;
			}
			set
			{
				if ((this._C_processed_server != value))
				{
					this.OnC_processed_serverChanging(value);
					this.SendPropertyChanging();
					this._C_processed_server = value;
					this.SendPropertyChanged("C_processed_server");
					this.OnC_processed_serverChanged();
				}
			}
		}
		
		[Column(Name="c_eop_step_instance_name", Storage="_C_eop_step_instance_name", DbType="NVarChar(510)")]
		public string C_eop_step_instance_name
		{
			get
			{
				return this._C_eop_step_instance_name;
			}
			set
			{
				if ((this._C_eop_step_instance_name != value))
				{
					this.OnC_eop_step_instance_nameChanging(value);
					this.SendPropertyChanging();
					this._C_eop_step_instance_name = value;
					this.SendPropertyChanged("C_eop_step_instance_name");
					this.OnC_eop_step_instance_nameChanged();
				}
			}
		}
		
		[Column(Name="c_generate_control_file", Storage="_C_generate_control_file", DbType="Bit")]
		public System.Nullable<bool> C_generate_control_file
		{
			get
			{
				return this._C_generate_control_file;
			}
			set
			{
				if ((this._C_generate_control_file != value))
				{
					this.OnC_generate_control_fileChanging(value);
					this.SendPropertyChanging();
					this._C_generate_control_file = value;
					this.SendPropertyChanged("C_generate_control_file");
					this.OnC_generate_control_fileChanged();
				}
			}
		}
		
		[Column(Name="c_control_file_delivery_location", Storage="_C_control_file_delivery_location", DbType="VarChar(255)")]
		public string C_control_file_delivery_location
		{
			get
			{
				return this._C_control_file_delivery_location;
			}
			set
			{
				if ((this._C_control_file_delivery_location != value))
				{
					this.OnC_control_file_delivery_locationChanging(value);
					this.SendPropertyChanging();
					this._C_control_file_delivery_location = value;
					this.SendPropertyChanged("C_control_file_delivery_location");
					this.OnC_control_file_delivery_locationChanged();
				}
			}
		}
		
		[Column(Name="c_compressreport", Storage="_C_compressreport", DbType="Bit")]
		public System.Nullable<bool> C_compressreport
		{
			get
			{
				return this._C_compressreport;
			}
			set
			{
				if ((this._C_compressreport != value))
				{
					this.OnC_compressreportChanging(value);
					this.SendPropertyChanging();
					this._C_compressreport = value;
					this.SendPropertyChanged("C_compressreport");
					this.OnC_compressreportChanged();
				}
			}
		}
		
		[Column(Name="c_compressthreshold", Storage="_C_compressthreshold", DbType="Int")]
		public System.Nullable<int> C_compressthreshold
		{
			get
			{
				return this._C_compressthreshold;
			}
			set
			{
				if ((this._C_compressthreshold != value))
				{
					this.OnC_compressthresholdChanging(value);
					this.SendPropertyChanging();
					this._C_compressthreshold = value;
					this.SendPropertyChanged("C_compressthreshold");
					this.OnC_compressthresholdChanged();
				}
			}
		}
		
		[Column(Name="c_output_execute_params_info", Storage="_C_output_execute_params_info", DbType="Bit")]
		public System.Nullable<bool> C_output_execute_params_info
		{
			get
			{
				return this._C_output_execute_params_info;
			}
			set
			{
				if ((this._C_output_execute_params_info != value))
				{
					this.OnC_output_execute_params_infoChanging(value);
					this.SendPropertyChanging();
					this._C_output_execute_params_info = value;
					this.SendPropertyChanged("C_output_execute_params_info");
					this.OnC_output_execute_params_infoChanged();
				}
			}
		}
		
		[Column(Name="c_use_quoted_identifiers", Storage="_C_use_quoted_identifiers", DbType="Bit NOT NULL")]
		public bool C_use_quoted_identifiers
		{
			get
			{
				return this._C_use_quoted_identifiers;
			}
			set
			{
				if ((this._C_use_quoted_identifiers != value))
				{
					this.OnC_use_quoted_identifiersChanging(value);
					this.SendPropertyChanging();
					this._C_use_quoted_identifiers = value;
					this.SendPropertyChanged("C_use_quoted_identifiers");
					this.OnC_use_quoted_identifiersChanged();
				}
			}
		}
		
		[Column(Name="c_ds_id", Storage="_C_ds_id", DbType="Int")]
		public System.Nullable<int> C_ds_id
		{
			get
			{
				return this._C_ds_id;
			}
			set
			{
				if ((this._C_ds_id != value))
				{
					this.OnC_ds_idChanging(value);
					this.SendPropertyChanging();
					this._C_ds_id = value;
					this.SendPropertyChanged("C_ds_id");
					this.OnC_ds_idChanged();
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int")]
		public System.Nullable<int> Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		[Column(Name="run_start_dt", Storage="_Run_start_dt", DbType="DateTime NOT NULL")]
		public System.DateTime Run_start_dt
		{
			get
			{
				return this._Run_start_dt;
			}
			set
			{
				if ((this._Run_start_dt != value))
				{
					this.OnRun_start_dtChanging(value);
					this.SendPropertyChanging();
					this._Run_start_dt = value;
					this.SendPropertyChanged("Run_start_dt");
					this.OnRun_start_dtChanged();
				}
			}
		}
		
		[Column(Name="run_end_dt", Storage="_Run_end_dt", DbType="DateTime NOT NULL")]
		public System.DateTime Run_end_dt
		{
			get
			{
				return this._Run_end_dt;
			}
			set
			{
				if ((this._Run_end_dt != value))
				{
					this.OnRun_end_dtChanging(value);
					this.SendPropertyChanging();
					this._Run_end_dt = value;
					this.SendPropertyChanged("Run_end_dt");
					this.OnRun_end_dtChanged();
				}
			}
		}
		
		[Column(Name="c_run_result_status", Storage="_C_run_result_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_run_result_status
		{
			get
			{
				return this._C_run_result_status;
			}
			set
			{
				if ((this._C_run_result_status != value))
				{
					this.OnC_run_result_statusChanging(value);
					this.SendPropertyChanging();
					this._C_run_result_status = value;
					this.SendPropertyChanged("C_run_result_status");
					this.OnC_run_result_statusChanged();
				}
			}
		}
		
		[Column(Name="c_run_result_descr", Storage="_C_run_result_descr", DbType="VarChar(2000)")]
		public string C_run_result_descr
		{
			get
			{
				return this._C_run_result_descr;
			}
			set
			{
				if ((this._C_run_result_descr != value))
				{
					this.OnC_run_result_descrChanging(value);
					this.SendPropertyChanging();
					this._C_run_result_descr = value;
					this.SendPropertyChanged("C_run_result_descr");
					this.OnC_run_result_descrChanged();
				}
			}
		}
		
		[Column(Name="c_execute_paraminfo", Storage="_C_execute_paraminfo", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string C_execute_paraminfo
		{
			get
			{
				return this._C_execute_paraminfo;
			}
			set
			{
				if ((this._C_execute_paraminfo != value))
				{
					this.OnC_execute_paraminfoChanging(value);
					this.SendPropertyChanging();
					this._C_execute_paraminfo = value;
					this.SendPropertyChanged("C_execute_paraminfo");
					this.OnC_execute_paraminfoChanged();
				}
			}
		}
		
		[Column(Name="c_execution_backedout", Storage="_C_execution_backedout", DbType="Int NOT NULL")]
		public int C_execution_backedout
		{
			get
			{
				return this._C_execution_backedout;
			}
			set
			{
				if ((this._C_execution_backedout != value))
				{
					this.OnC_execution_backedoutChanging(value);
					this.SendPropertyChanging();
					this._C_execution_backedout = value;
					this.SendPropertyChanged("C_execution_backedout");
					this.OnC_execution_backedoutChanged();
				}
			}
		}
		
		[Column(Name="c_queuerow_source", Storage="_C_queuerow_source", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string C_queuerow_source
		{
			get
			{
				return this._C_queuerow_source;
			}
			set
			{
				if ((this._C_queuerow_source != value))
				{
					this.OnC_queuerow_sourceChanging(value);
					this.SendPropertyChanging();
					this._C_queuerow_source = value;
					this.SendPropertyChanged("C_queuerow_source");
					this.OnC_queuerow_sourceChanged();
				}
			}
		}
		
		[Column(Name="c_output_file_name", Storage="_C_output_file_name", DbType="VarChar(50)")]
		public string C_output_file_name
		{
			get
			{
				return this._C_output_file_name;
			}
			set
			{
				if ((this._C_output_file_name != value))
				{
					this.OnC_output_file_nameChanging(value);
					this.SendPropertyChanging();
					this._C_output_file_name = value;
					this.SendPropertyChanged("C_output_file_name");
					this.OnC_output_file_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_log")]
	public partial class T_export_log
	{
		
		private System.Nullable<int> _Id_rep;
		
		private System.Nullable<int> _Id_rep_instance;
		
		private System.Nullable<System.DateTime> _Log_time;
		
		private string _Log_type;
		
		private string _Message;
		
		public T_export_log()
		{
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int")]
		public System.Nullable<int> Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this._Id_rep = value;
				}
			}
		}
		
		[Column(Name="id_rep_instance", Storage="_Id_rep_instance", DbType="Int")]
		public System.Nullable<int> Id_rep_instance
		{
			get
			{
				return this._Id_rep_instance;
			}
			set
			{
				if ((this._Id_rep_instance != value))
				{
					this._Id_rep_instance = value;
				}
			}
		}
		
		[Column(Name="log_time", Storage="_Log_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Log_time
		{
			get
			{
				return this._Log_time;
			}
			set
			{
				if ((this._Log_time != value))
				{
					this._Log_time = value;
				}
			}
		}
		
		[Column(Name="log_type", Storage="_Log_type", DbType="VarChar(20)")]
		public string Log_type
		{
			get
			{
				return this._Log_type;
			}
			set
			{
				if ((this._Log_type != value))
				{
					this._Log_type = value;
				}
			}
		}
		
		[Column(Name="message", Storage="_Message", DbType="VarChar(500)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_export_param_names")]
	public partial class T_export_param_names : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_param_name;
		
		private string _C_param_name;
		
		private string _C_param_desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_param_nameChanging(int value);
    partial void OnId_param_nameChanged();
    partial void OnC_param_nameChanging(string value);
    partial void OnC_param_nameChanged();
    partial void OnC_param_descChanging(string value);
    partial void OnC_param_descChanged();
    #endregion
		
		public T_export_param_names()
		{
			OnCreated();
		}
		
		[Column(Name="id_param_name", Storage="_Id_param_name", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_param_name
		{
			get
			{
				return this._Id_param_name;
			}
			set
			{
				if ((this._Id_param_name != value))
				{
					this.OnId_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Id_param_name = value;
					this.SendPropertyChanged("Id_param_name");
					this.OnId_param_nameChanged();
				}
			}
		}
		
		[Column(Name="c_param_name", Storage="_C_param_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_param_name
		{
			get
			{
				return this._C_param_name;
			}
			set
			{
				if ((this._C_param_name != value))
				{
					this.OnC_param_nameChanging(value);
					this.SendPropertyChanging();
					this._C_param_name = value;
					this.SendPropertyChanged("C_param_name");
					this.OnC_param_nameChanged();
				}
			}
		}
		
		[Column(Name="c_param_desc", Storage="_C_param_desc", DbType="VarChar(50)")]
		public string C_param_desc
		{
			get
			{
				return this._C_param_desc;
			}
			set
			{
				if ((this._C_param_desc != value))
				{
					this.OnC_param_descChanging(value);
					this.SendPropertyChanging();
					this._C_param_desc = value;
					this.SendPropertyChanged("C_param_desc");
					this.OnC_param_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_queue_report_checks")]
	public partial class T_export_queue_report_checks
	{
		
		private string _Source;
		
		private System.Nullable<int> _Id_rep;
		
		private System.Nullable<int> _Id_rep_instance_id;
		
		private string _Id_query;
		
		private System.Nullable<int> _Log_error_delay;
		
		private string _Last_status;
		
		private System.Nullable<System.DateTime> _Last_message_log_date;
		
		private int _Email_a_warning;
		
		private string _Email_subject;
		
		private string _Email_address;
		
		public T_export_queue_report_checks()
		{
		}
		
		[Column(Name="source", Storage="_Source", DbType="VarChar(20)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int")]
		public System.Nullable<int> Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this._Id_rep = value;
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int")]
		public System.Nullable<int> Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this._Id_rep_instance_id = value;
				}
			}
		}
		
		[Column(Name="id_query", Storage="_Id_query", DbType="VarChar(100)")]
		public string Id_query
		{
			get
			{
				return this._Id_query;
			}
			set
			{
				if ((this._Id_query != value))
				{
					this._Id_query = value;
				}
			}
		}
		
		[Column(Name="log_error_delay", Storage="_Log_error_delay", DbType="Int")]
		public System.Nullable<int> Log_error_delay
		{
			get
			{
				return this._Log_error_delay;
			}
			set
			{
				if ((this._Log_error_delay != value))
				{
					this._Log_error_delay = value;
				}
			}
		}
		
		[Column(Name="last_status", Storage="_Last_status", DbType="VarChar(500)")]
		public string Last_status
		{
			get
			{
				return this._Last_status;
			}
			set
			{
				if ((this._Last_status != value))
				{
					this._Last_status = value;
				}
			}
		}
		
		[Column(Name="last_message_log_date", Storage="_Last_message_log_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_message_log_date
		{
			get
			{
				return this._Last_message_log_date;
			}
			set
			{
				if ((this._Last_message_log_date != value))
				{
					this._Last_message_log_date = value;
				}
			}
		}
		
		[Column(Name="email_a_warning", Storage="_Email_a_warning", DbType="Int NOT NULL")]
		public int Email_a_warning
		{
			get
			{
				return this._Email_a_warning;
			}
			set
			{
				if ((this._Email_a_warning != value))
				{
					this._Email_a_warning = value;
				}
			}
		}
		
		[Column(Name="email_subject", Storage="_Email_subject", DbType="NVarChar(200)")]
		public string Email_subject
		{
			get
			{
				return this._Email_subject;
			}
			set
			{
				if ((this._Email_subject != value))
				{
					this._Email_subject = value;
				}
			}
		}
		
		[Column(Name="email_address", Storage="_Email_address", DbType="VarChar(200)")]
		public string Email_address
		{
			get
			{
				return this._Email_address;
			}
			set
			{
				if ((this._Email_address != value))
				{
					this._Email_address = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_export_queue_report_queries")]
	public partial class T_export_queue_report_queries
	{
		
		private string _Id_query;
		
		private string _Descr;
		
		private string _Query_string;
		
		public T_export_queue_report_queries()
		{
		}
		
		[Column(Name="id_query", Storage="_Id_query", DbType="VarChar(100)")]
		public string Id_query
		{
			get
			{
				return this._Id_query;
			}
			set
			{
				if ((this._Id_query != value))
				{
					this._Id_query = value;
				}
			}
		}
		
		[Column(Name="descr", Storage="_Descr", DbType="VarChar(500)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this._Descr = value;
				}
			}
		}
		
		[Column(Name="query_string", Storage="_Query_string", DbType="VarChar(7000)")]
		public string Query_string
		{
			get
			{
				return this._Query_string;
			}
			set
			{
				if ((this._Query_string != value))
				{
					this._Query_string = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_export_report_instance")]
	public partial class T_export_report_instance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rep_instance_id;
		
		private string _C_rep_instance_desc;
		
		private int _Id_rep;
		
		private bool _C_report_online;
		
		private System.Nullable<System.DateTime> _Dt_activate;
		
		private System.Nullable<System.DateTime> _Dt_deactivate;
		
		private string _C_rep_output_type;
		
		private string _C_rep_distrib_type;
		
		private string _C_report_destn;
		
		private System.Nullable<bool> _C_destn_direct;
		
		private string _C_access_user;
		
		private string _C_access_pwd;
		
		private string _C_exec_type;
		
		private string _C_eop_step_instance_name;
		
		private System.Nullable<bool> _C_generate_control_file;
		
		private string _C_control_file_delivery_location;
		
		private System.Nullable<int> _C_ds_id;
		
		private bool _C_compressreport;
		
		private System.Nullable<int> _C_compressthreshold;
		
		private bool _C_output_execute_params_info;
		
		private bool _C_use_quoted_identifiers;
		
		private System.DateTime _Dt_last_run;
		
		private System.Nullable<System.DateTime> _Dt_next_run;
		
		private string _C_output_file_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rep_instance_idChanging(int value);
    partial void OnId_rep_instance_idChanged();
    partial void OnC_rep_instance_descChanging(string value);
    partial void OnC_rep_instance_descChanged();
    partial void OnId_repChanging(int value);
    partial void OnId_repChanged();
    partial void OnC_report_onlineChanging(bool value);
    partial void OnC_report_onlineChanged();
    partial void OnDt_activateChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_activateChanged();
    partial void OnDt_deactivateChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_deactivateChanged();
    partial void OnC_rep_output_typeChanging(string value);
    partial void OnC_rep_output_typeChanged();
    partial void OnC_rep_distrib_typeChanging(string value);
    partial void OnC_rep_distrib_typeChanged();
    partial void OnC_report_destnChanging(string value);
    partial void OnC_report_destnChanged();
    partial void OnC_destn_directChanging(System.Nullable<bool> value);
    partial void OnC_destn_directChanged();
    partial void OnC_access_userChanging(string value);
    partial void OnC_access_userChanged();
    partial void OnC_access_pwdChanging(string value);
    partial void OnC_access_pwdChanged();
    partial void OnC_exec_typeChanging(string value);
    partial void OnC_exec_typeChanged();
    partial void OnC_eop_step_instance_nameChanging(string value);
    partial void OnC_eop_step_instance_nameChanged();
    partial void OnC_generate_control_fileChanging(System.Nullable<bool> value);
    partial void OnC_generate_control_fileChanged();
    partial void OnC_control_file_delivery_locationChanging(string value);
    partial void OnC_control_file_delivery_locationChanged();
    partial void OnC_ds_idChanging(System.Nullable<int> value);
    partial void OnC_ds_idChanged();
    partial void OnC_compressreportChanging(bool value);
    partial void OnC_compressreportChanged();
    partial void OnC_compressthresholdChanging(System.Nullable<int> value);
    partial void OnC_compressthresholdChanged();
    partial void OnC_output_execute_params_infoChanging(bool value);
    partial void OnC_output_execute_params_infoChanged();
    partial void OnC_use_quoted_identifiersChanging(bool value);
    partial void OnC_use_quoted_identifiersChanged();
    partial void OnDt_last_runChanging(System.DateTime value);
    partial void OnDt_last_runChanged();
    partial void OnDt_next_runChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_next_runChanged();
    partial void OnC_output_file_nameChanging(string value);
    partial void OnC_output_file_nameChanged();
    #endregion
		
		public T_export_report_instance()
		{
			OnCreated();
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this.OnId_rep_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Id_rep_instance_id = value;
					this.SendPropertyChanged("Id_rep_instance_id");
					this.OnId_rep_instance_idChanged();
				}
			}
		}
		
		[Column(Name="c_rep_instance_desc", Storage="_C_rep_instance_desc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string C_rep_instance_desc
		{
			get
			{
				return this._C_rep_instance_desc;
			}
			set
			{
				if ((this._C_rep_instance_desc != value))
				{
					this.OnC_rep_instance_descChanging(value);
					this.SendPropertyChanging();
					this._C_rep_instance_desc = value;
					this.SendPropertyChanged("C_rep_instance_desc");
					this.OnC_rep_instance_descChanged();
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int NOT NULL")]
		public int Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this.OnId_repChanging(value);
					this.SendPropertyChanging();
					this._Id_rep = value;
					this.SendPropertyChanged("Id_rep");
					this.OnId_repChanged();
				}
			}
		}
		
		[Column(Name="c_report_online", Storage="_C_report_online", DbType="Bit NOT NULL")]
		public bool C_report_online
		{
			get
			{
				return this._C_report_online;
			}
			set
			{
				if ((this._C_report_online != value))
				{
					this.OnC_report_onlineChanging(value);
					this.SendPropertyChanging();
					this._C_report_online = value;
					this.SendPropertyChanged("C_report_online");
					this.OnC_report_onlineChanged();
				}
			}
		}
		
		[Column(Name="dt_activate", Storage="_Dt_activate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_activate
		{
			get
			{
				return this._Dt_activate;
			}
			set
			{
				if ((this._Dt_activate != value))
				{
					this.OnDt_activateChanging(value);
					this.SendPropertyChanging();
					this._Dt_activate = value;
					this.SendPropertyChanged("Dt_activate");
					this.OnDt_activateChanged();
				}
			}
		}
		
		[Column(Name="dt_deactivate", Storage="_Dt_deactivate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_deactivate
		{
			get
			{
				return this._Dt_deactivate;
			}
			set
			{
				if ((this._Dt_deactivate != value))
				{
					this.OnDt_deactivateChanging(value);
					this.SendPropertyChanging();
					this._Dt_deactivate = value;
					this.SendPropertyChanged("Dt_deactivate");
					this.OnDt_deactivateChanged();
				}
			}
		}
		
		[Column(Name="c_rep_output_type", Storage="_C_rep_output_type", DbType="VarChar(10)")]
		public string C_rep_output_type
		{
			get
			{
				return this._C_rep_output_type;
			}
			set
			{
				if ((this._C_rep_output_type != value))
				{
					this.OnC_rep_output_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_output_type = value;
					this.SendPropertyChanged("C_rep_output_type");
					this.OnC_rep_output_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_distrib_type", Storage="_C_rep_distrib_type", DbType="VarChar(50)")]
		public string C_rep_distrib_type
		{
			get
			{
				return this._C_rep_distrib_type;
			}
			set
			{
				if ((this._C_rep_distrib_type != value))
				{
					this.OnC_rep_distrib_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_distrib_type = value;
					this.SendPropertyChanged("C_rep_distrib_type");
					this.OnC_rep_distrib_typeChanged();
				}
			}
		}
		
		[Column(Name="c_report_destn", Storage="_C_report_destn", DbType="VarChar(500)")]
		public string C_report_destn
		{
			get
			{
				return this._C_report_destn;
			}
			set
			{
				if ((this._C_report_destn != value))
				{
					this.OnC_report_destnChanging(value);
					this.SendPropertyChanging();
					this._C_report_destn = value;
					this.SendPropertyChanged("C_report_destn");
					this.OnC_report_destnChanged();
				}
			}
		}
		
		[Column(Name="c_destn_direct", Storage="_C_destn_direct", DbType="Bit")]
		public System.Nullable<bool> C_destn_direct
		{
			get
			{
				return this._C_destn_direct;
			}
			set
			{
				if ((this._C_destn_direct != value))
				{
					this.OnC_destn_directChanging(value);
					this.SendPropertyChanging();
					this._C_destn_direct = value;
					this.SendPropertyChanged("C_destn_direct");
					this.OnC_destn_directChanged();
				}
			}
		}
		
		[Column(Name="c_access_user", Storage="_C_access_user", DbType="VarChar(50)")]
		public string C_access_user
		{
			get
			{
				return this._C_access_user;
			}
			set
			{
				if ((this._C_access_user != value))
				{
					this.OnC_access_userChanging(value);
					this.SendPropertyChanging();
					this._C_access_user = value;
					this.SendPropertyChanged("C_access_user");
					this.OnC_access_userChanged();
				}
			}
		}
		
		[Column(Name="c_access_pwd", Storage="_C_access_pwd", DbType="NVarChar(2048)")]
		public string C_access_pwd
		{
			get
			{
				return this._C_access_pwd;
			}
			set
			{
				if ((this._C_access_pwd != value))
				{
					this.OnC_access_pwdChanging(value);
					this.SendPropertyChanging();
					this._C_access_pwd = value;
					this.SendPropertyChanged("C_access_pwd");
					this.OnC_access_pwdChanged();
				}
			}
		}
		
		[Column(Name="c_exec_type", Storage="_C_exec_type", DbType="Char(10)")]
		public string C_exec_type
		{
			get
			{
				return this._C_exec_type;
			}
			set
			{
				if ((this._C_exec_type != value))
				{
					this.OnC_exec_typeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_type = value;
					this.SendPropertyChanged("C_exec_type");
					this.OnC_exec_typeChanged();
				}
			}
		}
		
		[Column(Name="c_eop_step_instance_name", Storage="_C_eop_step_instance_name", DbType="NVarChar(510)")]
		public string C_eop_step_instance_name
		{
			get
			{
				return this._C_eop_step_instance_name;
			}
			set
			{
				if ((this._C_eop_step_instance_name != value))
				{
					this.OnC_eop_step_instance_nameChanging(value);
					this.SendPropertyChanging();
					this._C_eop_step_instance_name = value;
					this.SendPropertyChanged("C_eop_step_instance_name");
					this.OnC_eop_step_instance_nameChanged();
				}
			}
		}
		
		[Column(Name="c_generate_control_file", Storage="_C_generate_control_file", DbType="Bit")]
		public System.Nullable<bool> C_generate_control_file
		{
			get
			{
				return this._C_generate_control_file;
			}
			set
			{
				if ((this._C_generate_control_file != value))
				{
					this.OnC_generate_control_fileChanging(value);
					this.SendPropertyChanging();
					this._C_generate_control_file = value;
					this.SendPropertyChanged("C_generate_control_file");
					this.OnC_generate_control_fileChanged();
				}
			}
		}
		
		[Column(Name="c_control_file_delivery_location", Storage="_C_control_file_delivery_location", DbType="VarChar(255)")]
		public string C_control_file_delivery_location
		{
			get
			{
				return this._C_control_file_delivery_location;
			}
			set
			{
				if ((this._C_control_file_delivery_location != value))
				{
					this.OnC_control_file_delivery_locationChanging(value);
					this.SendPropertyChanging();
					this._C_control_file_delivery_location = value;
					this.SendPropertyChanged("C_control_file_delivery_location");
					this.OnC_control_file_delivery_locationChanged();
				}
			}
		}
		
		[Column(Name="c_ds_id", Storage="_C_ds_id", DbType="Int")]
		public System.Nullable<int> C_ds_id
		{
			get
			{
				return this._C_ds_id;
			}
			set
			{
				if ((this._C_ds_id != value))
				{
					this.OnC_ds_idChanging(value);
					this.SendPropertyChanging();
					this._C_ds_id = value;
					this.SendPropertyChanged("C_ds_id");
					this.OnC_ds_idChanged();
				}
			}
		}
		
		[Column(Name="c_compressreport", Storage="_C_compressreport", DbType="Bit NOT NULL")]
		public bool C_compressreport
		{
			get
			{
				return this._C_compressreport;
			}
			set
			{
				if ((this._C_compressreport != value))
				{
					this.OnC_compressreportChanging(value);
					this.SendPropertyChanging();
					this._C_compressreport = value;
					this.SendPropertyChanged("C_compressreport");
					this.OnC_compressreportChanged();
				}
			}
		}
		
		[Column(Name="c_compressthreshold", Storage="_C_compressthreshold", DbType="Int")]
		public System.Nullable<int> C_compressthreshold
		{
			get
			{
				return this._C_compressthreshold;
			}
			set
			{
				if ((this._C_compressthreshold != value))
				{
					this.OnC_compressthresholdChanging(value);
					this.SendPropertyChanging();
					this._C_compressthreshold = value;
					this.SendPropertyChanged("C_compressthreshold");
					this.OnC_compressthresholdChanged();
				}
			}
		}
		
		[Column(Name="c_output_execute_params_info", Storage="_C_output_execute_params_info", DbType="Bit NOT NULL")]
		public bool C_output_execute_params_info
		{
			get
			{
				return this._C_output_execute_params_info;
			}
			set
			{
				if ((this._C_output_execute_params_info != value))
				{
					this.OnC_output_execute_params_infoChanging(value);
					this.SendPropertyChanging();
					this._C_output_execute_params_info = value;
					this.SendPropertyChanged("C_output_execute_params_info");
					this.OnC_output_execute_params_infoChanged();
				}
			}
		}
		
		[Column(Name="c_use_quoted_identifiers", Storage="_C_use_quoted_identifiers", DbType="Bit NOT NULL")]
		public bool C_use_quoted_identifiers
		{
			get
			{
				return this._C_use_quoted_identifiers;
			}
			set
			{
				if ((this._C_use_quoted_identifiers != value))
				{
					this.OnC_use_quoted_identifiersChanging(value);
					this.SendPropertyChanging();
					this._C_use_quoted_identifiers = value;
					this.SendPropertyChanged("C_use_quoted_identifiers");
					this.OnC_use_quoted_identifiersChanged();
				}
			}
		}
		
		[Column(Name="dt_last_run", Storage="_Dt_last_run", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_last_run
		{
			get
			{
				return this._Dt_last_run;
			}
			set
			{
				if ((this._Dt_last_run != value))
				{
					this.OnDt_last_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_run = value;
					this.SendPropertyChanged("Dt_last_run");
					this.OnDt_last_runChanged();
				}
			}
		}
		
		[Column(Name="dt_next_run", Storage="_Dt_next_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_next_run
		{
			get
			{
				return this._Dt_next_run;
			}
			set
			{
				if ((this._Dt_next_run != value))
				{
					this.OnDt_next_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_next_run = value;
					this.SendPropertyChanged("Dt_next_run");
					this.OnDt_next_runChanged();
				}
			}
		}
		
		[Column(Name="c_output_file_name", Storage="_C_output_file_name", DbType="VarChar(50)")]
		public string C_output_file_name
		{
			get
			{
				return this._C_output_file_name;
			}
			set
			{
				if ((this._C_output_file_name != value))
				{
					this.OnC_output_file_nameChanging(value);
					this.SendPropertyChanging();
					this._C_output_file_name = value;
					this.SendPropertyChanged("C_output_file_name");
					this.OnC_output_file_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_report_params")]
	public partial class T_export_report_params
	{
		
		private int _Id_param_name;
		
		private int _Id_rep;
		
		private string _Descr;
		
		public T_export_report_params()
		{
		}
		
		[Column(Name="id_param_name", Storage="_Id_param_name", DbType="Int NOT NULL")]
		public int Id_param_name
		{
			get
			{
				return this._Id_param_name;
			}
			set
			{
				if ((this._Id_param_name != value))
				{
					this._Id_param_name = value;
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int NOT NULL")]
		public int Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this._Id_rep = value;
				}
			}
		}
		
		[Column(Name="descr", Storage="_Descr", DbType="VarChar(255)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this._Descr = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_export_reports")]
	public partial class T_export_reports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rep;
		
		private string _C_report_title;
		
		private string _C_rep_type;
		
		private string _C_rep_def_source;
		
		private string _C_rep_query_tag;
		
		private string _C_report_desc;
		
		private System.Nullable<int> _C_prevent_adhoc_execution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_repChanging(int value);
    partial void OnId_repChanged();
    partial void OnC_report_titleChanging(string value);
    partial void OnC_report_titleChanged();
    partial void OnC_rep_typeChanging(string value);
    partial void OnC_rep_typeChanged();
    partial void OnC_rep_def_sourceChanging(string value);
    partial void OnC_rep_def_sourceChanged();
    partial void OnC_rep_query_tagChanging(string value);
    partial void OnC_rep_query_tagChanged();
    partial void OnC_report_descChanging(string value);
    partial void OnC_report_descChanged();
    partial void OnC_prevent_adhoc_executionChanging(System.Nullable<int> value);
    partial void OnC_prevent_adhoc_executionChanged();
    #endregion
		
		public T_export_reports()
		{
			OnCreated();
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this.OnId_repChanging(value);
					this.SendPropertyChanging();
					this._Id_rep = value;
					this.SendPropertyChanged("Id_rep");
					this.OnId_repChanged();
				}
			}
		}
		
		[Column(Name="c_report_title", Storage="_C_report_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_report_title
		{
			get
			{
				return this._C_report_title;
			}
			set
			{
				if ((this._C_report_title != value))
				{
					this.OnC_report_titleChanging(value);
					this.SendPropertyChanging();
					this._C_report_title = value;
					this.SendPropertyChanged("C_report_title");
					this.OnC_report_titleChanged();
				}
			}
		}
		
		[Column(Name="c_rep_type", Storage="_C_rep_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_type
		{
			get
			{
				return this._C_rep_type;
			}
			set
			{
				if ((this._C_rep_type != value))
				{
					this.OnC_rep_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_type = value;
					this.SendPropertyChanged("C_rep_type");
					this.OnC_rep_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_def_source", Storage="_C_rep_def_source", DbType="VarChar(100)")]
		public string C_rep_def_source
		{
			get
			{
				return this._C_rep_def_source;
			}
			set
			{
				if ((this._C_rep_def_source != value))
				{
					this.OnC_rep_def_sourceChanging(value);
					this.SendPropertyChanging();
					this._C_rep_def_source = value;
					this.SendPropertyChanged("C_rep_def_source");
					this.OnC_rep_def_sourceChanged();
				}
			}
		}
		
		[Column(Name="c_rep_query_tag", Storage="_C_rep_query_tag", DbType="VarChar(100)")]
		public string C_rep_query_tag
		{
			get
			{
				return this._C_rep_query_tag;
			}
			set
			{
				if ((this._C_rep_query_tag != value))
				{
					this.OnC_rep_query_tagChanging(value);
					this.SendPropertyChanging();
					this._C_rep_query_tag = value;
					this.SendPropertyChanged("C_rep_query_tag");
					this.OnC_rep_query_tagChanged();
				}
			}
		}
		
		[Column(Name="c_report_desc", Storage="_C_report_desc", DbType="VarChar(255)")]
		public string C_report_desc
		{
			get
			{
				return this._C_report_desc;
			}
			set
			{
				if ((this._C_report_desc != value))
				{
					this.OnC_report_descChanging(value);
					this.SendPropertyChanging();
					this._C_report_desc = value;
					this.SendPropertyChanged("C_report_desc");
					this.OnC_report_descChanged();
				}
			}
		}
		
		[Column(Name="c_prevent_adhoc_execution", Storage="_C_prevent_adhoc_execution", DbType="Int")]
		public System.Nullable<int> C_prevent_adhoc_execution
		{
			get
			{
				return this._C_prevent_adhoc_execution;
			}
			set
			{
				if ((this._C_prevent_adhoc_execution != value))
				{
					this.OnC_prevent_adhoc_executionChanging(value);
					this.SendPropertyChanging();
					this._C_prevent_adhoc_execution = value;
					this.SendPropertyChanged("C_prevent_adhoc_execution");
					this.OnC_prevent_adhoc_executionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_schedule")]
	public partial class T_export_schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rp_schedule;
		
		private int _Id_rep_instance_id;
		
		private int _Id_schedule;
		
		private string _C_sch_type;
		
		private System.DateTime _Dt_crt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rp_scheduleChanging(int value);
    partial void OnId_rp_scheduleChanged();
    partial void OnId_rep_instance_idChanging(int value);
    partial void OnId_rep_instance_idChanged();
    partial void OnId_scheduleChanging(int value);
    partial void OnId_scheduleChanged();
    partial void OnC_sch_typeChanging(string value);
    partial void OnC_sch_typeChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    #endregion
		
		public T_export_schedule()
		{
			OnCreated();
		}
		
		[Column(Name="id_rp_schedule", Storage="_Id_rp_schedule", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rp_schedule
		{
			get
			{
				return this._Id_rp_schedule;
			}
			set
			{
				if ((this._Id_rp_schedule != value))
				{
					this.OnId_rp_scheduleChanging(value);
					this.SendPropertyChanging();
					this._Id_rp_schedule = value;
					this.SendPropertyChanged("Id_rp_schedule");
					this.OnId_rp_scheduleChanged();
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int NOT NULL")]
		public int Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this.OnId_rep_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Id_rep_instance_id = value;
					this.SendPropertyChanged("Id_rep_instance_id");
					this.OnId_rep_instance_idChanged();
				}
			}
		}
		
		[Column(Name="id_schedule", Storage="_Id_schedule", DbType="Int NOT NULL")]
		public int Id_schedule
		{
			get
			{
				return this._Id_schedule;
			}
			set
			{
				if ((this._Id_schedule != value))
				{
					this.OnId_scheduleChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule = value;
					this.SendPropertyChanged("Id_schedule");
					this.OnId_scheduleChanged();
				}
			}
		}
		
		[Column(Name="c_sch_type", Storage="_C_sch_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string C_sch_type
		{
			get
			{
				return this._C_sch_type;
			}
			set
			{
				if ((this._C_sch_type != value))
				{
					this.OnC_sch_typeChanging(value);
					this.SendPropertyChanging();
					this._C_sch_type = value;
					this.SendPropertyChanged("C_sch_type");
					this.OnC_sch_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_system_parms")]
	public partial class T_export_system_parms : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Parm_name;
		
		private string _Parm_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParm_nameChanging(string value);
    partial void OnParm_nameChanged();
    partial void OnParm_valueChanging(string value);
    partial void OnParm_valueChanged();
    #endregion
		
		public T_export_system_parms()
		{
			OnCreated();
		}
		
		[Column(Name="parm_name", Storage="_Parm_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Parm_name
		{
			get
			{
				return this._Parm_name;
			}
			set
			{
				if ((this._Parm_name != value))
				{
					this.OnParm_nameChanging(value);
					this.SendPropertyChanging();
					this._Parm_name = value;
					this.SendPropertyChanged("Parm_name");
					this.OnParm_nameChanged();
				}
			}
		}
		
		[Column(Name="parm_value", Storage="_Parm_value", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Parm_value
		{
			get
			{
				return this._Parm_value;
			}
			set
			{
				if ((this._Parm_value != value))
				{
					this.OnParm_valueChanging(value);
					this.SendPropertyChanging();
					this._Parm_value = value;
					this.SendPropertyChanged("Parm_value");
					this.OnParm_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_workqueue")]
	public partial class T_export_workqueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id_work_queue;
		
		private System.Nullable<int> _Id_rep_instance_id;
		
		private System.Nullable<int> _Id_rep;
		
		private System.Nullable<int> _Id_schedule;
		
		private string _C_sch_type;
		
		private System.DateTime _Dt_queued;
		
		private System.Nullable<System.DateTime> _Dt_sched_run;
		
		private string _C_use_database;
		
		private string _C_rep_title;
		
		private string _C_rep_type;
		
		private string _C_rep_def_source;
		
		private string _C_rep_query_tag;
		
		private string _C_rep_output_type;
		
		private string _C_rep_distrib_type;
		
		private string _C_rep_destn;
		
		private System.Nullable<bool> _C_destn_direct;
		
		private string _C_destn_access_user;
		
		private string _C_destn_access_pwd;
		
		private string _C_exec_type;
		
		private string _C_eop_step_instance_name;
		
		private System.Nullable<bool> _C_generate_control_file;
		
		private string _C_control_file_delivery_location;
		
		private System.Nullable<bool> _C_compressreport;
		
		private System.Nullable<int> _C_compressthreshold;
		
		private System.Nullable<bool> _C_output_execute_params_info;
		
		private System.Nullable<bool> _C_use_quoted_identifiers;
		
		private System.Nullable<int> _C_ds_id;
		
		private System.DateTime _Dt_last_run;
		
		private System.Nullable<System.DateTime> _Dt_next_run;
		
		private System.Nullable<int> _C_current_process_stage;
		
		private string _C_processing_server;
		
		private string _C_param_name_values;
		
		private System.Nullable<int> _Id_run;
		
		private string _C_queuerow_source;
		
		private string _C_output_file_name;
		
		private int _C_id_work_queue_int;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_work_queueChanging(System.Guid value);
    partial void OnId_work_queueChanged();
    partial void OnId_rep_instance_idChanging(System.Nullable<int> value);
    partial void OnId_rep_instance_idChanged();
    partial void OnId_repChanging(System.Nullable<int> value);
    partial void OnId_repChanged();
    partial void OnId_scheduleChanging(System.Nullable<int> value);
    partial void OnId_scheduleChanged();
    partial void OnC_sch_typeChanging(string value);
    partial void OnC_sch_typeChanged();
    partial void OnDt_queuedChanging(System.DateTime value);
    partial void OnDt_queuedChanged();
    partial void OnDt_sched_runChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_sched_runChanged();
    partial void OnC_use_databaseChanging(string value);
    partial void OnC_use_databaseChanged();
    partial void OnC_rep_titleChanging(string value);
    partial void OnC_rep_titleChanged();
    partial void OnC_rep_typeChanging(string value);
    partial void OnC_rep_typeChanged();
    partial void OnC_rep_def_sourceChanging(string value);
    partial void OnC_rep_def_sourceChanged();
    partial void OnC_rep_query_tagChanging(string value);
    partial void OnC_rep_query_tagChanged();
    partial void OnC_rep_output_typeChanging(string value);
    partial void OnC_rep_output_typeChanged();
    partial void OnC_rep_distrib_typeChanging(string value);
    partial void OnC_rep_distrib_typeChanged();
    partial void OnC_rep_destnChanging(string value);
    partial void OnC_rep_destnChanged();
    partial void OnC_destn_directChanging(System.Nullable<bool> value);
    partial void OnC_destn_directChanged();
    partial void OnC_destn_access_userChanging(string value);
    partial void OnC_destn_access_userChanged();
    partial void OnC_destn_access_pwdChanging(string value);
    partial void OnC_destn_access_pwdChanged();
    partial void OnC_exec_typeChanging(string value);
    partial void OnC_exec_typeChanged();
    partial void OnC_eop_step_instance_nameChanging(string value);
    partial void OnC_eop_step_instance_nameChanged();
    partial void OnC_generate_control_fileChanging(System.Nullable<bool> value);
    partial void OnC_generate_control_fileChanged();
    partial void OnC_control_file_delivery_locationChanging(string value);
    partial void OnC_control_file_delivery_locationChanged();
    partial void OnC_compressreportChanging(System.Nullable<bool> value);
    partial void OnC_compressreportChanged();
    partial void OnC_compressthresholdChanging(System.Nullable<int> value);
    partial void OnC_compressthresholdChanged();
    partial void OnC_output_execute_params_infoChanging(System.Nullable<bool> value);
    partial void OnC_output_execute_params_infoChanged();
    partial void OnC_use_quoted_identifiersChanging(System.Nullable<bool> value);
    partial void OnC_use_quoted_identifiersChanged();
    partial void OnC_ds_idChanging(System.Nullable<int> value);
    partial void OnC_ds_idChanged();
    partial void OnDt_last_runChanging(System.DateTime value);
    partial void OnDt_last_runChanged();
    partial void OnDt_next_runChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_next_runChanged();
    partial void OnC_current_process_stageChanging(System.Nullable<int> value);
    partial void OnC_current_process_stageChanged();
    partial void OnC_processing_serverChanging(string value);
    partial void OnC_processing_serverChanged();
    partial void OnC_param_name_valuesChanging(string value);
    partial void OnC_param_name_valuesChanged();
    partial void OnId_runChanging(System.Nullable<int> value);
    partial void OnId_runChanged();
    partial void OnC_queuerow_sourceChanging(string value);
    partial void OnC_queuerow_sourceChanged();
    partial void OnC_output_file_nameChanging(string value);
    partial void OnC_output_file_nameChanged();
    partial void OnC_id_work_queue_intChanging(int value);
    partial void OnC_id_work_queue_intChanged();
    #endregion
		
		public T_export_workqueue()
		{
			OnCreated();
		}
		
		[Column(Name="id_work_queue", Storage="_Id_work_queue", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id_work_queue
		{
			get
			{
				return this._Id_work_queue;
			}
			set
			{
				if ((this._Id_work_queue != value))
				{
					this.OnId_work_queueChanging(value);
					this.SendPropertyChanging();
					this._Id_work_queue = value;
					this.SendPropertyChanged("Id_work_queue");
					this.OnId_work_queueChanged();
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int")]
		public System.Nullable<int> Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this.OnId_rep_instance_idChanging(value);
					this.SendPropertyChanging();
					this._Id_rep_instance_id = value;
					this.SendPropertyChanged("Id_rep_instance_id");
					this.OnId_rep_instance_idChanged();
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int")]
		public System.Nullable<int> Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this.OnId_repChanging(value);
					this.SendPropertyChanging();
					this._Id_rep = value;
					this.SendPropertyChanged("Id_rep");
					this.OnId_repChanged();
				}
			}
		}
		
		[Column(Name="id_schedule", Storage="_Id_schedule", DbType="Int")]
		public System.Nullable<int> Id_schedule
		{
			get
			{
				return this._Id_schedule;
			}
			set
			{
				if ((this._Id_schedule != value))
				{
					this.OnId_scheduleChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule = value;
					this.SendPropertyChanged("Id_schedule");
					this.OnId_scheduleChanged();
				}
			}
		}
		
		[Column(Name="c_sch_type", Storage="_C_sch_type", DbType="VarChar(10)")]
		public string C_sch_type
		{
			get
			{
				return this._C_sch_type;
			}
			set
			{
				if ((this._C_sch_type != value))
				{
					this.OnC_sch_typeChanging(value);
					this.SendPropertyChanging();
					this._C_sch_type = value;
					this.SendPropertyChanged("C_sch_type");
					this.OnC_sch_typeChanged();
				}
			}
		}
		
		[Column(Name="dt_queued", Storage="_Dt_queued", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_queued
		{
			get
			{
				return this._Dt_queued;
			}
			set
			{
				if ((this._Dt_queued != value))
				{
					this.OnDt_queuedChanging(value);
					this.SendPropertyChanging();
					this._Dt_queued = value;
					this.SendPropertyChanged("Dt_queued");
					this.OnDt_queuedChanged();
				}
			}
		}
		
		[Column(Name="dt_sched_run", Storage="_Dt_sched_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_sched_run
		{
			get
			{
				return this._Dt_sched_run;
			}
			set
			{
				if ((this._Dt_sched_run != value))
				{
					this.OnDt_sched_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_sched_run = value;
					this.SendPropertyChanged("Dt_sched_run");
					this.OnDt_sched_runChanged();
				}
			}
		}
		
		[Column(Name="c_use_database", Storage="_C_use_database", DbType="VarChar(50)")]
		public string C_use_database
		{
			get
			{
				return this._C_use_database;
			}
			set
			{
				if ((this._C_use_database != value))
				{
					this.OnC_use_databaseChanging(value);
					this.SendPropertyChanging();
					this._C_use_database = value;
					this.SendPropertyChanged("C_use_database");
					this.OnC_use_databaseChanged();
				}
			}
		}
		
		[Column(Name="c_rep_title", Storage="_C_rep_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_title
		{
			get
			{
				return this._C_rep_title;
			}
			set
			{
				if ((this._C_rep_title != value))
				{
					this.OnC_rep_titleChanging(value);
					this.SendPropertyChanging();
					this._C_rep_title = value;
					this.SendPropertyChanged("C_rep_title");
					this.OnC_rep_titleChanged();
				}
			}
		}
		
		[Column(Name="c_rep_type", Storage="_C_rep_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_type
		{
			get
			{
				return this._C_rep_type;
			}
			set
			{
				if ((this._C_rep_type != value))
				{
					this.OnC_rep_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_type = value;
					this.SendPropertyChanged("C_rep_type");
					this.OnC_rep_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_def_source", Storage="_C_rep_def_source", DbType="VarChar(100)")]
		public string C_rep_def_source
		{
			get
			{
				return this._C_rep_def_source;
			}
			set
			{
				if ((this._C_rep_def_source != value))
				{
					this.OnC_rep_def_sourceChanging(value);
					this.SendPropertyChanging();
					this._C_rep_def_source = value;
					this.SendPropertyChanged("C_rep_def_source");
					this.OnC_rep_def_sourceChanged();
				}
			}
		}
		
		[Column(Name="c_rep_query_tag", Storage="_C_rep_query_tag", DbType="VarChar(100)")]
		public string C_rep_query_tag
		{
			get
			{
				return this._C_rep_query_tag;
			}
			set
			{
				if ((this._C_rep_query_tag != value))
				{
					this.OnC_rep_query_tagChanging(value);
					this.SendPropertyChanging();
					this._C_rep_query_tag = value;
					this.SendPropertyChanged("C_rep_query_tag");
					this.OnC_rep_query_tagChanged();
				}
			}
		}
		
		[Column(Name="c_rep_output_type", Storage="_C_rep_output_type", DbType="VarChar(10)")]
		public string C_rep_output_type
		{
			get
			{
				return this._C_rep_output_type;
			}
			set
			{
				if ((this._C_rep_output_type != value))
				{
					this.OnC_rep_output_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_output_type = value;
					this.SendPropertyChanged("C_rep_output_type");
					this.OnC_rep_output_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_distrib_type", Storage="_C_rep_distrib_type", DbType="VarChar(50)")]
		public string C_rep_distrib_type
		{
			get
			{
				return this._C_rep_distrib_type;
			}
			set
			{
				if ((this._C_rep_distrib_type != value))
				{
					this.OnC_rep_distrib_typeChanging(value);
					this.SendPropertyChanging();
					this._C_rep_distrib_type = value;
					this.SendPropertyChanged("C_rep_distrib_type");
					this.OnC_rep_distrib_typeChanged();
				}
			}
		}
		
		[Column(Name="c_rep_destn", Storage="_C_rep_destn", DbType="VarChar(500)")]
		public string C_rep_destn
		{
			get
			{
				return this._C_rep_destn;
			}
			set
			{
				if ((this._C_rep_destn != value))
				{
					this.OnC_rep_destnChanging(value);
					this.SendPropertyChanging();
					this._C_rep_destn = value;
					this.SendPropertyChanged("C_rep_destn");
					this.OnC_rep_destnChanged();
				}
			}
		}
		
		[Column(Name="c_destn_direct", Storage="_C_destn_direct", DbType="Bit")]
		public System.Nullable<bool> C_destn_direct
		{
			get
			{
				return this._C_destn_direct;
			}
			set
			{
				if ((this._C_destn_direct != value))
				{
					this.OnC_destn_directChanging(value);
					this.SendPropertyChanging();
					this._C_destn_direct = value;
					this.SendPropertyChanged("C_destn_direct");
					this.OnC_destn_directChanged();
				}
			}
		}
		
		[Column(Name="c_destn_access_user", Storage="_C_destn_access_user", DbType="VarChar(50)")]
		public string C_destn_access_user
		{
			get
			{
				return this._C_destn_access_user;
			}
			set
			{
				if ((this._C_destn_access_user != value))
				{
					this.OnC_destn_access_userChanging(value);
					this.SendPropertyChanging();
					this._C_destn_access_user = value;
					this.SendPropertyChanged("C_destn_access_user");
					this.OnC_destn_access_userChanged();
				}
			}
		}
		
		[Column(Name="c_destn_access_pwd", Storage="_C_destn_access_pwd", DbType="NVarChar(2048)")]
		public string C_destn_access_pwd
		{
			get
			{
				return this._C_destn_access_pwd;
			}
			set
			{
				if ((this._C_destn_access_pwd != value))
				{
					this.OnC_destn_access_pwdChanging(value);
					this.SendPropertyChanging();
					this._C_destn_access_pwd = value;
					this.SendPropertyChanged("C_destn_access_pwd");
					this.OnC_destn_access_pwdChanged();
				}
			}
		}
		
		[Column(Name="c_exec_type", Storage="_C_exec_type", DbType="Char(10)")]
		public string C_exec_type
		{
			get
			{
				return this._C_exec_type;
			}
			set
			{
				if ((this._C_exec_type != value))
				{
					this.OnC_exec_typeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_type = value;
					this.SendPropertyChanged("C_exec_type");
					this.OnC_exec_typeChanged();
				}
			}
		}
		
		[Column(Name="c_eop_step_instance_name", Storage="_C_eop_step_instance_name", DbType="NVarChar(510)")]
		public string C_eop_step_instance_name
		{
			get
			{
				return this._C_eop_step_instance_name;
			}
			set
			{
				if ((this._C_eop_step_instance_name != value))
				{
					this.OnC_eop_step_instance_nameChanging(value);
					this.SendPropertyChanging();
					this._C_eop_step_instance_name = value;
					this.SendPropertyChanged("C_eop_step_instance_name");
					this.OnC_eop_step_instance_nameChanged();
				}
			}
		}
		
		[Column(Name="c_generate_control_file", Storage="_C_generate_control_file", DbType="Bit")]
		public System.Nullable<bool> C_generate_control_file
		{
			get
			{
				return this._C_generate_control_file;
			}
			set
			{
				if ((this._C_generate_control_file != value))
				{
					this.OnC_generate_control_fileChanging(value);
					this.SendPropertyChanging();
					this._C_generate_control_file = value;
					this.SendPropertyChanged("C_generate_control_file");
					this.OnC_generate_control_fileChanged();
				}
			}
		}
		
		[Column(Name="c_control_file_delivery_location", Storage="_C_control_file_delivery_location", DbType="VarChar(255)")]
		public string C_control_file_delivery_location
		{
			get
			{
				return this._C_control_file_delivery_location;
			}
			set
			{
				if ((this._C_control_file_delivery_location != value))
				{
					this.OnC_control_file_delivery_locationChanging(value);
					this.SendPropertyChanging();
					this._C_control_file_delivery_location = value;
					this.SendPropertyChanged("C_control_file_delivery_location");
					this.OnC_control_file_delivery_locationChanged();
				}
			}
		}
		
		[Column(Name="c_compressreport", Storage="_C_compressreport", DbType="Bit")]
		public System.Nullable<bool> C_compressreport
		{
			get
			{
				return this._C_compressreport;
			}
			set
			{
				if ((this._C_compressreport != value))
				{
					this.OnC_compressreportChanging(value);
					this.SendPropertyChanging();
					this._C_compressreport = value;
					this.SendPropertyChanged("C_compressreport");
					this.OnC_compressreportChanged();
				}
			}
		}
		
		[Column(Name="c_compressthreshold", Storage="_C_compressthreshold", DbType="Int")]
		public System.Nullable<int> C_compressthreshold
		{
			get
			{
				return this._C_compressthreshold;
			}
			set
			{
				if ((this._C_compressthreshold != value))
				{
					this.OnC_compressthresholdChanging(value);
					this.SendPropertyChanging();
					this._C_compressthreshold = value;
					this.SendPropertyChanged("C_compressthreshold");
					this.OnC_compressthresholdChanged();
				}
			}
		}
		
		[Column(Name="c_output_execute_params_info", Storage="_C_output_execute_params_info", DbType="Bit")]
		public System.Nullable<bool> C_output_execute_params_info
		{
			get
			{
				return this._C_output_execute_params_info;
			}
			set
			{
				if ((this._C_output_execute_params_info != value))
				{
					this.OnC_output_execute_params_infoChanging(value);
					this.SendPropertyChanging();
					this._C_output_execute_params_info = value;
					this.SendPropertyChanged("C_output_execute_params_info");
					this.OnC_output_execute_params_infoChanged();
				}
			}
		}
		
		[Column(Name="c_use_quoted_identifiers", Storage="_C_use_quoted_identifiers", DbType="Bit")]
		public System.Nullable<bool> C_use_quoted_identifiers
		{
			get
			{
				return this._C_use_quoted_identifiers;
			}
			set
			{
				if ((this._C_use_quoted_identifiers != value))
				{
					this.OnC_use_quoted_identifiersChanging(value);
					this.SendPropertyChanging();
					this._C_use_quoted_identifiers = value;
					this.SendPropertyChanged("C_use_quoted_identifiers");
					this.OnC_use_quoted_identifiersChanged();
				}
			}
		}
		
		[Column(Name="c_ds_id", Storage="_C_ds_id", DbType="Int")]
		public System.Nullable<int> C_ds_id
		{
			get
			{
				return this._C_ds_id;
			}
			set
			{
				if ((this._C_ds_id != value))
				{
					this.OnC_ds_idChanging(value);
					this.SendPropertyChanging();
					this._C_ds_id = value;
					this.SendPropertyChanged("C_ds_id");
					this.OnC_ds_idChanged();
				}
			}
		}
		
		[Column(Name="dt_last_run", Storage="_Dt_last_run", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_last_run
		{
			get
			{
				return this._Dt_last_run;
			}
			set
			{
				if ((this._Dt_last_run != value))
				{
					this.OnDt_last_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_run = value;
					this.SendPropertyChanged("Dt_last_run");
					this.OnDt_last_runChanged();
				}
			}
		}
		
		[Column(Name="dt_next_run", Storage="_Dt_next_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_next_run
		{
			get
			{
				return this._Dt_next_run;
			}
			set
			{
				if ((this._Dt_next_run != value))
				{
					this.OnDt_next_runChanging(value);
					this.SendPropertyChanging();
					this._Dt_next_run = value;
					this.SendPropertyChanged("Dt_next_run");
					this.OnDt_next_runChanged();
				}
			}
		}
		
		[Column(Name="c_current_process_stage", Storage="_C_current_process_stage", DbType="Int")]
		public System.Nullable<int> C_current_process_stage
		{
			get
			{
				return this._C_current_process_stage;
			}
			set
			{
				if ((this._C_current_process_stage != value))
				{
					this.OnC_current_process_stageChanging(value);
					this.SendPropertyChanging();
					this._C_current_process_stage = value;
					this.SendPropertyChanged("C_current_process_stage");
					this.OnC_current_process_stageChanged();
				}
			}
		}
		
		[Column(Name="c_processing_server", Storage="_C_processing_server", DbType="VarChar(50)")]
		public string C_processing_server
		{
			get
			{
				return this._C_processing_server;
			}
			set
			{
				if ((this._C_processing_server != value))
				{
					this.OnC_processing_serverChanging(value);
					this.SendPropertyChanging();
					this._C_processing_server = value;
					this.SendPropertyChanged("C_processing_server");
					this.OnC_processing_serverChanged();
				}
			}
		}
		
		[Column(Name="c_param_name_values", Storage="_C_param_name_values", DbType="VarChar(1000)")]
		public string C_param_name_values
		{
			get
			{
				return this._C_param_name_values;
			}
			set
			{
				if ((this._C_param_name_values != value))
				{
					this.OnC_param_name_valuesChanging(value);
					this.SendPropertyChanging();
					this._C_param_name_values = value;
					this.SendPropertyChanged("C_param_name_values");
					this.OnC_param_name_valuesChanged();
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int")]
		public System.Nullable<int> Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		[Column(Name="c_queuerow_source", Storage="_C_queuerow_source", DbType="VarChar(100)")]
		public string C_queuerow_source
		{
			get
			{
				return this._C_queuerow_source;
			}
			set
			{
				if ((this._C_queuerow_source != value))
				{
					this.OnC_queuerow_sourceChanging(value);
					this.SendPropertyChanging();
					this._C_queuerow_source = value;
					this.SendPropertyChanged("C_queuerow_source");
					this.OnC_queuerow_sourceChanged();
				}
			}
		}
		
		[Column(Name="c_output_file_name", Storage="_C_output_file_name", DbType="VarChar(50)")]
		public string C_output_file_name
		{
			get
			{
				return this._C_output_file_name;
			}
			set
			{
				if ((this._C_output_file_name != value))
				{
					this.OnC_output_file_nameChanging(value);
					this.SendPropertyChanging();
					this._C_output_file_name = value;
					this.SendPropertyChanged("C_output_file_name");
					this.OnC_output_file_nameChanged();
				}
			}
		}
		
		[Column(Name="c_id_work_queue_int", Storage="_C_id_work_queue_int", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int C_id_work_queue_int
		{
			get
			{
				return this._C_id_work_queue_int;
			}
			set
			{
				if ((this._C_id_work_queue_int != value))
				{
					this.OnC_id_work_queue_intChanging(value);
					this.SendPropertyChanging();
					this._C_id_work_queue_int = value;
					this.SendPropertyChanged("C_id_work_queue_int");
					this.OnC_id_work_queue_intChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_export_workqueue_temp")]
	public partial class T_export_workqueue_temp
	{
		
		private System.Guid _Id_work_queue;
		
		private System.Nullable<int> _Id_rep_instance_id;
		
		private System.Nullable<int> _Id_rep;
		
		private System.Nullable<int> _Id_schedule;
		
		private string _C_sch_type;
		
		private System.Nullable<System.DateTime> _Dt_queued;
		
		private System.Nullable<System.DateTime> _Dt_sched_run;
		
		private string _C_use_database;
		
		private string _C_rep_title;
		
		private string _C_rep_type;
		
		private string _C_rep_def_source;
		
		private string _C_rep_query_tag;
		
		private string _C_rep_output_type;
		
		private string _C_rep_distrib_type;
		
		private string _C_rep_destn;
		
		private System.Nullable<bool> _C_destn_direct;
		
		private string _C_destn_access_user;
		
		private string _C_destn_access_pwd;
		
		private string _C_exec_type;
		
		private string _C_eop_step_instance_name;
		
		private System.Nullable<bool> _C_generate_control_file;
		
		private string _C_control_file_delivery_location;
		
		private System.Nullable<bool> _C_compressreport;
		
		private System.Nullable<int> _C_compressthreshold;
		
		private System.Nullable<bool> _C_output_execute_params_info;
		
		private System.Nullable<bool> _C_use_quoted_identifiers;
		
		private System.Nullable<int> _C_ds_id;
		
		private System.DateTime _Dt_last_run;
		
		private System.Nullable<System.DateTime> _Dt_next_run;
		
		private System.Nullable<int> _C_current_process_stage;
		
		private string _C_processing_server;
		
		private string _C_param_name_values;
		
		private System.Nullable<int> _Id_run;
		
		private string _C_queuerow_source;
		
		private string _C_output_file_name;
		
		public T_export_workqueue_temp()
		{
		}
		
		[Column(Name="id_work_queue", Storage="_Id_work_queue", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id_work_queue
		{
			get
			{
				return this._Id_work_queue;
			}
			set
			{
				if ((this._Id_work_queue != value))
				{
					this._Id_work_queue = value;
				}
			}
		}
		
		[Column(Name="id_rep_instance_id", Storage="_Id_rep_instance_id", DbType="Int")]
		public System.Nullable<int> Id_rep_instance_id
		{
			get
			{
				return this._Id_rep_instance_id;
			}
			set
			{
				if ((this._Id_rep_instance_id != value))
				{
					this._Id_rep_instance_id = value;
				}
			}
		}
		
		[Column(Name="id_rep", Storage="_Id_rep", DbType="Int")]
		public System.Nullable<int> Id_rep
		{
			get
			{
				return this._Id_rep;
			}
			set
			{
				if ((this._Id_rep != value))
				{
					this._Id_rep = value;
				}
			}
		}
		
		[Column(Name="id_schedule", Storage="_Id_schedule", DbType="Int")]
		public System.Nullable<int> Id_schedule
		{
			get
			{
				return this._Id_schedule;
			}
			set
			{
				if ((this._Id_schedule != value))
				{
					this._Id_schedule = value;
				}
			}
		}
		
		[Column(Name="c_sch_type", Storage="_C_sch_type", DbType="VarChar(10)")]
		public string C_sch_type
		{
			get
			{
				return this._C_sch_type;
			}
			set
			{
				if ((this._C_sch_type != value))
				{
					this._C_sch_type = value;
				}
			}
		}
		
		[Column(Name="dt_queued", Storage="_Dt_queued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_queued
		{
			get
			{
				return this._Dt_queued;
			}
			set
			{
				if ((this._Dt_queued != value))
				{
					this._Dt_queued = value;
				}
			}
		}
		
		[Column(Name="dt_sched_run", Storage="_Dt_sched_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_sched_run
		{
			get
			{
				return this._Dt_sched_run;
			}
			set
			{
				if ((this._Dt_sched_run != value))
				{
					this._Dt_sched_run = value;
				}
			}
		}
		
		[Column(Name="c_use_database", Storage="_C_use_database", DbType="VarChar(50)")]
		public string C_use_database
		{
			get
			{
				return this._C_use_database;
			}
			set
			{
				if ((this._C_use_database != value))
				{
					this._C_use_database = value;
				}
			}
		}
		
		[Column(Name="c_rep_title", Storage="_C_rep_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_title
		{
			get
			{
				return this._C_rep_title;
			}
			set
			{
				if ((this._C_rep_title != value))
				{
					this._C_rep_title = value;
				}
			}
		}
		
		[Column(Name="c_rep_type", Storage="_C_rep_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_rep_type
		{
			get
			{
				return this._C_rep_type;
			}
			set
			{
				if ((this._C_rep_type != value))
				{
					this._C_rep_type = value;
				}
			}
		}
		
		[Column(Name="c_rep_def_source", Storage="_C_rep_def_source", DbType="VarChar(100)")]
		public string C_rep_def_source
		{
			get
			{
				return this._C_rep_def_source;
			}
			set
			{
				if ((this._C_rep_def_source != value))
				{
					this._C_rep_def_source = value;
				}
			}
		}
		
		[Column(Name="c_rep_query_tag", Storage="_C_rep_query_tag", DbType="VarChar(100)")]
		public string C_rep_query_tag
		{
			get
			{
				return this._C_rep_query_tag;
			}
			set
			{
				if ((this._C_rep_query_tag != value))
				{
					this._C_rep_query_tag = value;
				}
			}
		}
		
		[Column(Name="c_rep_output_type", Storage="_C_rep_output_type", DbType="VarChar(10)")]
		public string C_rep_output_type
		{
			get
			{
				return this._C_rep_output_type;
			}
			set
			{
				if ((this._C_rep_output_type != value))
				{
					this._C_rep_output_type = value;
				}
			}
		}
		
		[Column(Name="c_rep_distrib_type", Storage="_C_rep_distrib_type", DbType="VarChar(50)")]
		public string C_rep_distrib_type
		{
			get
			{
				return this._C_rep_distrib_type;
			}
			set
			{
				if ((this._C_rep_distrib_type != value))
				{
					this._C_rep_distrib_type = value;
				}
			}
		}
		
		[Column(Name="c_rep_destn", Storage="_C_rep_destn", DbType="VarChar(500)")]
		public string C_rep_destn
		{
			get
			{
				return this._C_rep_destn;
			}
			set
			{
				if ((this._C_rep_destn != value))
				{
					this._C_rep_destn = value;
				}
			}
		}
		
		[Column(Name="c_destn_direct", Storage="_C_destn_direct", DbType="Bit")]
		public System.Nullable<bool> C_destn_direct
		{
			get
			{
				return this._C_destn_direct;
			}
			set
			{
				if ((this._C_destn_direct != value))
				{
					this._C_destn_direct = value;
				}
			}
		}
		
		[Column(Name="c_destn_access_user", Storage="_C_destn_access_user", DbType="VarChar(50)")]
		public string C_destn_access_user
		{
			get
			{
				return this._C_destn_access_user;
			}
			set
			{
				if ((this._C_destn_access_user != value))
				{
					this._C_destn_access_user = value;
				}
			}
		}
		
		[Column(Name="c_destn_access_pwd", Storage="_C_destn_access_pwd", DbType="NVarChar(2048)")]
		public string C_destn_access_pwd
		{
			get
			{
				return this._C_destn_access_pwd;
			}
			set
			{
				if ((this._C_destn_access_pwd != value))
				{
					this._C_destn_access_pwd = value;
				}
			}
		}
		
		[Column(Name="c_exec_type", Storage="_C_exec_type", DbType="Char(10)")]
		public string C_exec_type
		{
			get
			{
				return this._C_exec_type;
			}
			set
			{
				if ((this._C_exec_type != value))
				{
					this._C_exec_type = value;
				}
			}
		}
		
		[Column(Name="c_eop_step_instance_name", Storage="_C_eop_step_instance_name", DbType="NVarChar(510)")]
		public string C_eop_step_instance_name
		{
			get
			{
				return this._C_eop_step_instance_name;
			}
			set
			{
				if ((this._C_eop_step_instance_name != value))
				{
					this._C_eop_step_instance_name = value;
				}
			}
		}
		
		[Column(Name="c_generate_control_file", Storage="_C_generate_control_file", DbType="Bit")]
		public System.Nullable<bool> C_generate_control_file
		{
			get
			{
				return this._C_generate_control_file;
			}
			set
			{
				if ((this._C_generate_control_file != value))
				{
					this._C_generate_control_file = value;
				}
			}
		}
		
		[Column(Name="c_control_file_delivery_location", Storage="_C_control_file_delivery_location", DbType="VarChar(255)")]
		public string C_control_file_delivery_location
		{
			get
			{
				return this._C_control_file_delivery_location;
			}
			set
			{
				if ((this._C_control_file_delivery_location != value))
				{
					this._C_control_file_delivery_location = value;
				}
			}
		}
		
		[Column(Name="c_compressreport", Storage="_C_compressreport", DbType="Bit")]
		public System.Nullable<bool> C_compressreport
		{
			get
			{
				return this._C_compressreport;
			}
			set
			{
				if ((this._C_compressreport != value))
				{
					this._C_compressreport = value;
				}
			}
		}
		
		[Column(Name="c_compressthreshold", Storage="_C_compressthreshold", DbType="Int")]
		public System.Nullable<int> C_compressthreshold
		{
			get
			{
				return this._C_compressthreshold;
			}
			set
			{
				if ((this._C_compressthreshold != value))
				{
					this._C_compressthreshold = value;
				}
			}
		}
		
		[Column(Name="c_output_execute_params_info", Storage="_C_output_execute_params_info", DbType="Bit")]
		public System.Nullable<bool> C_output_execute_params_info
		{
			get
			{
				return this._C_output_execute_params_info;
			}
			set
			{
				if ((this._C_output_execute_params_info != value))
				{
					this._C_output_execute_params_info = value;
				}
			}
		}
		
		[Column(Name="c_use_quoted_identifiers", Storage="_C_use_quoted_identifiers", DbType="Bit")]
		public System.Nullable<bool> C_use_quoted_identifiers
		{
			get
			{
				return this._C_use_quoted_identifiers;
			}
			set
			{
				if ((this._C_use_quoted_identifiers != value))
				{
					this._C_use_quoted_identifiers = value;
				}
			}
		}
		
		[Column(Name="c_ds_id", Storage="_C_ds_id", DbType="Int")]
		public System.Nullable<int> C_ds_id
		{
			get
			{
				return this._C_ds_id;
			}
			set
			{
				if ((this._C_ds_id != value))
				{
					this._C_ds_id = value;
				}
			}
		}
		
		[Column(Name="dt_last_run", Storage="_Dt_last_run", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_last_run
		{
			get
			{
				return this._Dt_last_run;
			}
			set
			{
				if ((this._Dt_last_run != value))
				{
					this._Dt_last_run = value;
				}
			}
		}
		
		[Column(Name="dt_next_run", Storage="_Dt_next_run", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_next_run
		{
			get
			{
				return this._Dt_next_run;
			}
			set
			{
				if ((this._Dt_next_run != value))
				{
					this._Dt_next_run = value;
				}
			}
		}
		
		[Column(Name="c_current_process_stage", Storage="_C_current_process_stage", DbType="Int")]
		public System.Nullable<int> C_current_process_stage
		{
			get
			{
				return this._C_current_process_stage;
			}
			set
			{
				if ((this._C_current_process_stage != value))
				{
					this._C_current_process_stage = value;
				}
			}
		}
		
		[Column(Name="c_processing_server", Storage="_C_processing_server", DbType="VarChar(50)")]
		public string C_processing_server
		{
			get
			{
				return this._C_processing_server;
			}
			set
			{
				if ((this._C_processing_server != value))
				{
					this._C_processing_server = value;
				}
			}
		}
		
		[Column(Name="c_param_name_values", Storage="_C_param_name_values", DbType="VarChar(1000)")]
		public string C_param_name_values
		{
			get
			{
				return this._C_param_name_values;
			}
			set
			{
				if ((this._C_param_name_values != value))
				{
					this._C_param_name_values = value;
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int")]
		public System.Nullable<int> Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this._Id_run = value;
				}
			}
		}
		
		[Column(Name="c_queuerow_source", Storage="_C_queuerow_source", DbType="VarChar(100)")]
		public string C_queuerow_source
		{
			get
			{
				return this._C_queuerow_source;
			}
			set
			{
				if ((this._C_queuerow_source != value))
				{
					this._C_queuerow_source = value;
				}
			}
		}
		
		[Column(Name="c_output_file_name", Storage="_C_output_file_name", DbType="VarChar(50)")]
		public string C_output_file_name
		{
			get
			{
				return this._C_output_file_name;
			}
			set
			{
				if ((this._C_output_file_name != value))
				{
					this._C_output_file_name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_failed_payment")]
	public partial class T_failed_payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_interval;
		
		private int _Id_acc;
		
		private string _Id_payment_instrument;
		
		private System.DateTime _Dt_original_trans;
		
		private string _Nm_description;
		
		private string _Nm_currency;
		
		private decimal _N_amount;
		
		private System.Nullable<int> _N_retrycount;
		
		private System.Nullable<System.DateTime> _Dt_lastretry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnDt_original_transChanging(System.DateTime value);
    partial void OnDt_original_transChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnNm_currencyChanging(string value);
    partial void OnNm_currencyChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnN_retrycountChanging(System.Nullable<int> value);
    partial void OnN_retrycountChanged();
    partial void OnDt_lastretryChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_lastretryChanged();
    #endregion
		
		public T_failed_payment()
		{
			OnCreated();
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="dt_original_trans", Storage="_Dt_original_trans", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_original_trans
		{
			get
			{
				return this._Dt_original_trans;
			}
			set
			{
				if ((this._Dt_original_trans != value))
				{
					this.OnDt_original_transChanging(value);
					this.SendPropertyChanging();
					this._Dt_original_trans = value;
					this.SendPropertyChanged("Dt_original_trans");
					this.OnDt_original_transChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(100)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="nm_currency", Storage="_Nm_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Nm_currency
		{
			get
			{
				return this._Nm_currency;
			}
			set
			{
				if ((this._Nm_currency != value))
				{
					this.OnNm_currencyChanging(value);
					this.SendPropertyChanging();
					this._Nm_currency = value;
					this.SendPropertyChanged("Nm_currency");
					this.OnNm_currencyChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="n_retrycount", Storage="_N_retrycount", DbType="Int")]
		public System.Nullable<int> N_retrycount
		{
			get
			{
				return this._N_retrycount;
			}
			set
			{
				if ((this._N_retrycount != value))
				{
					this.OnN_retrycountChanging(value);
					this.SendPropertyChanging();
					this._N_retrycount = value;
					this.SendPropertyChanged("N_retrycount");
					this.OnN_retrycountChanged();
				}
			}
		}
		
		[Column(Name="dt_lastretry", Storage="_Dt_lastretry", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_lastretry
		{
			get
			{
				return this._Dt_lastretry;
			}
			set
			{
				if ((this._Dt_lastretry != value))
				{
					this.OnDt_lastretryChanging(value);
					this.SendPropertyChanging();
					this._Dt_lastretry = value;
					this.SendPropertyChanged("Dt_lastretry");
					this.OnDt_lastretryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_failed_payment_details")]
	public partial class T_failed_payment_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_interval;
		
		private int _Id_acc;
		
		private string _Id_payment_instrument;
		
		private string _Nm_invoice_num;
		
		private System.DateTime _Dt_invoice;
		
		private string _Nm_po_number;
		
		private System.Nullable<decimal> _N_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnDt_invoiceChanging(System.DateTime value);
    partial void OnDt_invoiceChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    partial void OnN_amountChanging(System.Nullable<decimal> value);
    partial void OnN_amountChanged();
    #endregion
		
		public T_failed_payment_details()
		{
			OnCreated();
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice", Storage="_Dt_invoice", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_invoice
		{
			get
			{
				return this._Dt_invoice;
			}
			set
			{
				if ((this._Dt_invoice != value))
				{
					this.OnDt_invoiceChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice = value;
					this.SendPropertyChanged("Dt_invoice");
					this.OnDt_invoiceChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(30)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_failed_transaction")]
	public partial class T_failed_transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_failed_transaction;
		
		private string _State;
		
		private string _Tx_StateReasonCode;
		
		private System.Data.Linq.Binary _Tx_FailureID;
		
		private string _Tx_FailureID_Encoded;
		
		private System.Data.Linq.Binary _Tx_FailureCompoundID;
		
		private string _Tx_FailureCompoundID_encoded;
		
		private int _Id_PossiblePayeeID;
		
		private int _Id_PossiblePayerID;
		
		private string _Tx_FailureServiceName;
		
		private int _N_Code;
		
		private int _N_Line;
		
		private System.DateTime _Dt_FailureTime;
		
		private System.DateTime _Dt_MeteredTime;
		
		private string _Tx_Sender;
		
		private string _Tx_ErrorMessage;
		
		private string _Tx_StageName;
		
		private string _Tx_PlugIn;
		
		private string _Tx_Module;
		
		private string _Tx_Method;
		
		private System.Data.Linq.Binary _Tx_Batch;
		
		private string _Tx_Batch_Encoded;
		
		private string _B_compound;
		
		private string _Tx_errorcodemessage;
		
		private System.Nullable<int> _Id_sch_ss;
		
		private System.DateTime _Dt_StateLastModifiedTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_failed_transactionChanging(int value);
    partial void OnId_failed_transactionChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnTx_StateReasonCodeChanging(string value);
    partial void OnTx_StateReasonCodeChanged();
    partial void OnTx_FailureIDChanging(System.Data.Linq.Binary value);
    partial void OnTx_FailureIDChanged();
    partial void OnTx_FailureID_EncodedChanging(string value);
    partial void OnTx_FailureID_EncodedChanged();
    partial void OnTx_FailureCompoundIDChanging(System.Data.Linq.Binary value);
    partial void OnTx_FailureCompoundIDChanged();
    partial void OnTx_FailureCompoundID_encodedChanging(string value);
    partial void OnTx_FailureCompoundID_encodedChanged();
    partial void OnId_PossiblePayeeIDChanging(int value);
    partial void OnId_PossiblePayeeIDChanged();
    partial void OnId_PossiblePayerIDChanging(int value);
    partial void OnId_PossiblePayerIDChanged();
    partial void OnTx_FailureServiceNameChanging(string value);
    partial void OnTx_FailureServiceNameChanged();
    partial void OnN_CodeChanging(int value);
    partial void OnN_CodeChanged();
    partial void OnN_LineChanging(int value);
    partial void OnN_LineChanged();
    partial void OnDt_FailureTimeChanging(System.DateTime value);
    partial void OnDt_FailureTimeChanged();
    partial void OnDt_MeteredTimeChanging(System.DateTime value);
    partial void OnDt_MeteredTimeChanged();
    partial void OnTx_SenderChanging(string value);
    partial void OnTx_SenderChanged();
    partial void OnTx_ErrorMessageChanging(string value);
    partial void OnTx_ErrorMessageChanged();
    partial void OnTx_StageNameChanging(string value);
    partial void OnTx_StageNameChanged();
    partial void OnTx_PlugInChanging(string value);
    partial void OnTx_PlugInChanged();
    partial void OnTx_ModuleChanging(string value);
    partial void OnTx_ModuleChanged();
    partial void OnTx_MethodChanging(string value);
    partial void OnTx_MethodChanged();
    partial void OnTx_BatchChanging(System.Data.Linq.Binary value);
    partial void OnTx_BatchChanged();
    partial void OnTx_Batch_EncodedChanging(string value);
    partial void OnTx_Batch_EncodedChanged();
    partial void OnB_compoundChanging(string value);
    partial void OnB_compoundChanged();
    partial void OnTx_errorcodemessageChanging(string value);
    partial void OnTx_errorcodemessageChanged();
    partial void OnId_sch_ssChanging(System.Nullable<int> value);
    partial void OnId_sch_ssChanged();
    partial void OnDt_StateLastModifiedTimeChanging(System.DateTime value);
    partial void OnDt_StateLastModifiedTimeChanged();
    #endregion
		
		public T_failed_transaction()
		{
			OnCreated();
		}
		
		[Column(Name="id_failed_transaction", Storage="_Id_failed_transaction", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_failed_transaction
		{
			get
			{
				return this._Id_failed_transaction;
			}
			set
			{
				if ((this._Id_failed_transaction != value))
				{
					this.OnId_failed_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_failed_transaction = value;
					this.SendPropertyChanged("Id_failed_transaction");
					this.OnId_failed_transactionChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Name="tx_StateReasonCode", Storage="_Tx_StateReasonCode", DbType="NVarChar(255)")]
		public string Tx_StateReasonCode
		{
			get
			{
				return this._Tx_StateReasonCode;
			}
			set
			{
				if ((this._Tx_StateReasonCode != value))
				{
					this.OnTx_StateReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._Tx_StateReasonCode = value;
					this.SendPropertyChanged("Tx_StateReasonCode");
					this.OnTx_StateReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="tx_FailureID", Storage="_Tx_FailureID", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_FailureID
		{
			get
			{
				return this._Tx_FailureID;
			}
			set
			{
				if ((this._Tx_FailureID != value))
				{
					this.OnTx_FailureIDChanging(value);
					this.SendPropertyChanging();
					this._Tx_FailureID = value;
					this.SendPropertyChanged("Tx_FailureID");
					this.OnTx_FailureIDChanged();
				}
			}
		}
		
		[Column(Name="tx_FailureID_Encoded", Storage="_Tx_FailureID_Encoded", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Tx_FailureID_Encoded
		{
			get
			{
				return this._Tx_FailureID_Encoded;
			}
			set
			{
				if ((this._Tx_FailureID_Encoded != value))
				{
					this.OnTx_FailureID_EncodedChanging(value);
					this.SendPropertyChanging();
					this._Tx_FailureID_Encoded = value;
					this.SendPropertyChanged("Tx_FailureID_Encoded");
					this.OnTx_FailureID_EncodedChanged();
				}
			}
		}
		
		[Column(Name="tx_FailureCompoundID", Storage="_Tx_FailureCompoundID", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_FailureCompoundID
		{
			get
			{
				return this._Tx_FailureCompoundID;
			}
			set
			{
				if ((this._Tx_FailureCompoundID != value))
				{
					this.OnTx_FailureCompoundIDChanging(value);
					this.SendPropertyChanging();
					this._Tx_FailureCompoundID = value;
					this.SendPropertyChanged("Tx_FailureCompoundID");
					this.OnTx_FailureCompoundIDChanged();
				}
			}
		}
		
		[Column(Name="tx_FailureCompoundID_encoded", Storage="_Tx_FailureCompoundID_encoded", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Tx_FailureCompoundID_encoded
		{
			get
			{
				return this._Tx_FailureCompoundID_encoded;
			}
			set
			{
				if ((this._Tx_FailureCompoundID_encoded != value))
				{
					this.OnTx_FailureCompoundID_encodedChanging(value);
					this.SendPropertyChanging();
					this._Tx_FailureCompoundID_encoded = value;
					this.SendPropertyChanged("Tx_FailureCompoundID_encoded");
					this.OnTx_FailureCompoundID_encodedChanged();
				}
			}
		}
		
		[Column(Name="id_PossiblePayeeID", Storage="_Id_PossiblePayeeID", DbType="Int NOT NULL")]
		public int Id_PossiblePayeeID
		{
			get
			{
				return this._Id_PossiblePayeeID;
			}
			set
			{
				if ((this._Id_PossiblePayeeID != value))
				{
					this.OnId_PossiblePayeeIDChanging(value);
					this.SendPropertyChanging();
					this._Id_PossiblePayeeID = value;
					this.SendPropertyChanged("Id_PossiblePayeeID");
					this.OnId_PossiblePayeeIDChanged();
				}
			}
		}
		
		[Column(Name="id_PossiblePayerID", Storage="_Id_PossiblePayerID", DbType="Int NOT NULL")]
		public int Id_PossiblePayerID
		{
			get
			{
				return this._Id_PossiblePayerID;
			}
			set
			{
				if ((this._Id_PossiblePayerID != value))
				{
					this.OnId_PossiblePayerIDChanging(value);
					this.SendPropertyChanging();
					this._Id_PossiblePayerID = value;
					this.SendPropertyChanged("Id_PossiblePayerID");
					this.OnId_PossiblePayerIDChanged();
				}
			}
		}
		
		[Column(Name="tx_FailureServiceName", Storage="_Tx_FailureServiceName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Tx_FailureServiceName
		{
			get
			{
				return this._Tx_FailureServiceName;
			}
			set
			{
				if ((this._Tx_FailureServiceName != value))
				{
					this.OnTx_FailureServiceNameChanging(value);
					this.SendPropertyChanging();
					this._Tx_FailureServiceName = value;
					this.SendPropertyChanged("Tx_FailureServiceName");
					this.OnTx_FailureServiceNameChanged();
				}
			}
		}
		
		[Column(Name="n_Code", Storage="_N_Code", DbType="Int NOT NULL")]
		public int N_Code
		{
			get
			{
				return this._N_Code;
			}
			set
			{
				if ((this._N_Code != value))
				{
					this.OnN_CodeChanging(value);
					this.SendPropertyChanging();
					this._N_Code = value;
					this.SendPropertyChanged("N_Code");
					this.OnN_CodeChanged();
				}
			}
		}
		
		[Column(Name="n_Line", Storage="_N_Line", DbType="Int NOT NULL")]
		public int N_Line
		{
			get
			{
				return this._N_Line;
			}
			set
			{
				if ((this._N_Line != value))
				{
					this.OnN_LineChanging(value);
					this.SendPropertyChanging();
					this._N_Line = value;
					this.SendPropertyChanged("N_Line");
					this.OnN_LineChanged();
				}
			}
		}
		
		[Column(Name="dt_FailureTime", Storage="_Dt_FailureTime", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_FailureTime
		{
			get
			{
				return this._Dt_FailureTime;
			}
			set
			{
				if ((this._Dt_FailureTime != value))
				{
					this.OnDt_FailureTimeChanging(value);
					this.SendPropertyChanging();
					this._Dt_FailureTime = value;
					this.SendPropertyChanged("Dt_FailureTime");
					this.OnDt_FailureTimeChanged();
				}
			}
		}
		
		[Column(Name="dt_MeteredTime", Storage="_Dt_MeteredTime", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_MeteredTime
		{
			get
			{
				return this._Dt_MeteredTime;
			}
			set
			{
				if ((this._Dt_MeteredTime != value))
				{
					this.OnDt_MeteredTimeChanging(value);
					this.SendPropertyChanging();
					this._Dt_MeteredTime = value;
					this.SendPropertyChanged("Dt_MeteredTime");
					this.OnDt_MeteredTimeChanged();
				}
			}
		}
		
		[Column(Name="tx_Sender", Storage="_Tx_Sender", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Tx_Sender
		{
			get
			{
				return this._Tx_Sender;
			}
			set
			{
				if ((this._Tx_Sender != value))
				{
					this.OnTx_SenderChanging(value);
					this.SendPropertyChanging();
					this._Tx_Sender = value;
					this.SendPropertyChanged("Tx_Sender");
					this.OnTx_SenderChanged();
				}
			}
		}
		
		[Column(Name="tx_ErrorMessage", Storage="_Tx_ErrorMessage", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Tx_ErrorMessage
		{
			get
			{
				return this._Tx_ErrorMessage;
			}
			set
			{
				if ((this._Tx_ErrorMessage != value))
				{
					this.OnTx_ErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._Tx_ErrorMessage = value;
					this.SendPropertyChanged("Tx_ErrorMessage");
					this.OnTx_ErrorMessageChanged();
				}
			}
		}
		
		[Column(Name="tx_StageName", Storage="_Tx_StageName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Tx_StageName
		{
			get
			{
				return this._Tx_StageName;
			}
			set
			{
				if ((this._Tx_StageName != value))
				{
					this.OnTx_StageNameChanging(value);
					this.SendPropertyChanging();
					this._Tx_StageName = value;
					this.SendPropertyChanged("Tx_StageName");
					this.OnTx_StageNameChanged();
				}
			}
		}
		
		[Column(Name="tx_PlugIn", Storage="_Tx_PlugIn", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Tx_PlugIn
		{
			get
			{
				return this._Tx_PlugIn;
			}
			set
			{
				if ((this._Tx_PlugIn != value))
				{
					this.OnTx_PlugInChanging(value);
					this.SendPropertyChanging();
					this._Tx_PlugIn = value;
					this.SendPropertyChanged("Tx_PlugIn");
					this.OnTx_PlugInChanged();
				}
			}
		}
		
		[Column(Name="tx_Module", Storage="_Tx_Module", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_Module
		{
			get
			{
				return this._Tx_Module;
			}
			set
			{
				if ((this._Tx_Module != value))
				{
					this.OnTx_ModuleChanging(value);
					this.SendPropertyChanging();
					this._Tx_Module = value;
					this.SendPropertyChanged("Tx_Module");
					this.OnTx_ModuleChanged();
				}
			}
		}
		
		[Column(Name="tx_Method", Storage="_Tx_Method", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Tx_Method
		{
			get
			{
				return this._Tx_Method;
			}
			set
			{
				if ((this._Tx_Method != value))
				{
					this.OnTx_MethodChanging(value);
					this.SendPropertyChanging();
					this._Tx_Method = value;
					this.SendPropertyChanged("Tx_Method");
					this.OnTx_MethodChanged();
				}
			}
		}
		
		[Column(Name="tx_Batch", Storage="_Tx_Batch", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_Batch
		{
			get
			{
				return this._Tx_Batch;
			}
			set
			{
				if ((this._Tx_Batch != value))
				{
					this.OnTx_BatchChanging(value);
					this.SendPropertyChanging();
					this._Tx_Batch = value;
					this.SendPropertyChanged("Tx_Batch");
					this.OnTx_BatchChanged();
				}
			}
		}
		
		[Column(Name="tx_Batch_Encoded", Storage="_Tx_Batch_Encoded", DbType="NVarChar(30)")]
		public string Tx_Batch_Encoded
		{
			get
			{
				return this._Tx_Batch_Encoded;
			}
			set
			{
				if ((this._Tx_Batch_Encoded != value))
				{
					this.OnTx_Batch_EncodedChanging(value);
					this.SendPropertyChanging();
					this._Tx_Batch_Encoded = value;
					this.SendPropertyChanged("Tx_Batch_Encoded");
					this.OnTx_Batch_EncodedChanged();
				}
			}
		}
		
		[Column(Name="b_compound", Storage="_B_compound", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_compound
		{
			get
			{
				return this._B_compound;
			}
			set
			{
				if ((this._B_compound != value))
				{
					this.OnB_compoundChanging(value);
					this.SendPropertyChanging();
					this._B_compound = value;
					this.SendPropertyChanged("B_compound");
					this.OnB_compoundChanged();
				}
			}
		}
		
		[Column(Name="tx_errorcodemessage", Storage="_Tx_errorcodemessage", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_errorcodemessage
		{
			get
			{
				return this._Tx_errorcodemessage;
			}
			set
			{
				if ((this._Tx_errorcodemessage != value))
				{
					this.OnTx_errorcodemessageChanging(value);
					this.SendPropertyChanging();
					this._Tx_errorcodemessage = value;
					this.SendPropertyChanged("Tx_errorcodemessage");
					this.OnTx_errorcodemessageChanged();
				}
			}
		}
		
		[Column(Name="id_sch_ss", Storage="_Id_sch_ss", DbType="Int")]
		public System.Nullable<int> Id_sch_ss
		{
			get
			{
				return this._Id_sch_ss;
			}
			set
			{
				if ((this._Id_sch_ss != value))
				{
					this.OnId_sch_ssChanging(value);
					this.SendPropertyChanging();
					this._Id_sch_ss = value;
					this.SendPropertyChanged("Id_sch_ss");
					this.OnId_sch_ssChanged();
				}
			}
		}
		
		[Column(Name="dt_StateLastModifiedTime", Storage="_Dt_StateLastModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_StateLastModifiedTime
		{
			get
			{
				return this._Dt_StateLastModifiedTime;
			}
			set
			{
				if ((this._Dt_StateLastModifiedTime != value))
				{
					this.OnDt_StateLastModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._Dt_StateLastModifiedTime = value;
					this.SendPropertyChanged("Dt_StateLastModifiedTime");
					this.OnDt_StateLastModifiedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_failed_transaction_msix")]
	public partial class T_failed_transaction_msix
	{
		
		private System.Nullable<int> _Id_failed_transaction;
		
		private System.Nullable<int> _N_row;
		
		private string _Tx_text;
		
		public T_failed_transaction_msix()
		{
		}
		
		[Column(Name="id_failed_transaction", Storage="_Id_failed_transaction", DbType="Int")]
		public System.Nullable<int> Id_failed_transaction
		{
			get
			{
				return this._Id_failed_transaction;
			}
			set
			{
				if ((this._Id_failed_transaction != value))
				{
					this._Id_failed_transaction = value;
				}
			}
		}
		
		[Column(Name="n_row", Storage="_N_row", DbType="Int")]
		public System.Nullable<int> N_row
		{
			get
			{
				return this._N_row;
			}
			set
			{
				if ((this._N_row != value))
				{
					this._N_row = value;
				}
			}
		}
		
		[Column(Name="tx_text", Storage="_Tx_text", DbType="VarChar(2048)")]
		public string Tx_text
		{
			get
			{
				return this._Tx_text;
			}
			set
			{
				if ((this._Tx_text != value))
				{
					this._Tx_text = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_foreignexchange_rates")]
	public partial class T_foreignexchange_rates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _C_src_currency;
		
		private string _C_target_currency;
		
		private System.DateTime _Dt_start;
		
		private System.DateTime _Dt_end;
		
		private decimal _C_conversionrate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_src_currencyChanging(string value);
    partial void OnC_src_currencyChanged();
    partial void OnC_target_currencyChanging(string value);
    partial void OnC_target_currencyChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.DateTime value);
    partial void OnDt_endChanged();
    partial void OnC_conversionrateChanging(decimal value);
    partial void OnC_conversionrateChanged();
    #endregion
		
		public T_foreignexchange_rates()
		{
			OnCreated();
		}
		
		[Column(Name="c_src_currency", Storage="_C_src_currency", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string C_src_currency
		{
			get
			{
				return this._C_src_currency;
			}
			set
			{
				if ((this._C_src_currency != value))
				{
					this.OnC_src_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_src_currency = value;
					this.SendPropertyChanged("C_src_currency");
					this.OnC_src_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_target_currency", Storage="_C_target_currency", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string C_target_currency
		{
			get
			{
				return this._C_target_currency;
			}
			set
			{
				if ((this._C_target_currency != value))
				{
					this.OnC_target_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_target_currency = value;
					this.SendPropertyChanged("C_target_currency");
					this.OnC_target_currencyChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="c_conversionrate", Storage="_C_conversionrate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_conversionrate
		{
			get
			{
				return this._C_conversionrate;
			}
			set
			{
				if ((this._C_conversionrate != value))
				{
					this.OnC_conversionrateChanging(value);
					this.SendPropertyChanging();
					this._C_conversionrate = value;
					this.SendPropertyChanged("C_conversionrate");
					this.OnC_conversionrateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_group_sub")]
	public partial class T_group_sub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_group;
		
		private System.Data.Linq.Binary _Id_group_ext;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private string _B_visable;
		
		private string _B_supportgroupops;
		
		private int _Id_usage_cycle;
		
		private string _B_proportional;
		
		private int _Id_corporate_account;
		
		private System.Nullable<int> _Id_discountAccount;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_account> _Id_corporate_accountT_account;
		
		private EntitySet<T_gsub_recur_map> _T_gsub_recur_map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_groupChanging(int value);
    partial void OnId_groupChanged();
    partial void OnId_group_extChanging(System.Data.Linq.Binary value);
    partial void OnId_group_extChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnB_visableChanging(string value);
    partial void OnB_visableChanged();
    partial void OnB_supportgroupopsChanging(string value);
    partial void OnB_supportgroupopsChanged();
    partial void OnId_usage_cycleChanging(int value);
    partial void OnId_usage_cycleChanged();
    partial void OnB_proportionalChanging(string value);
    partial void OnB_proportionalChanged();
    partial void OnId_corporate_accountChanging(int value);
    partial void OnId_corporate_accountChanged();
    partial void OnId_discountAccountChanging(System.Nullable<int> value);
    partial void OnId_discountAccountChanged();
    #endregion
		
		public T_group_sub()
		{
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			this._T_account = default(EntityRef<T_account>);
			this._Id_corporate_accountT_account = default(EntityRef<T_account>);
			this._T_gsub_recur_map = new EntitySet<T_gsub_recur_map>(new Action<T_gsub_recur_map>(this.attach_T_gsub_recur_map), new Action<T_gsub_recur_map>(this.detach_T_gsub_recur_map));
			OnCreated();
		}
		
		[Column(Name="id_group", Storage="_Id_group", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this.OnId_groupChanging(value);
					this.SendPropertyChanging();
					this._Id_group = value;
					this.SendPropertyChanged("Id_group");
					this.OnId_groupChanged();
				}
			}
		}
		
		[Column(Name="id_group_ext", Storage="_Id_group_ext", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Id_group_ext
		{
			get
			{
				return this._Id_group_ext;
			}
			set
			{
				if ((this._Id_group_ext != value))
				{
					this.OnId_group_extChanging(value);
					this.SendPropertyChanging();
					this._Id_group_ext = value;
					this.SendPropertyChanged("Id_group_ext");
					this.OnId_group_extChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="b_visable", Storage="_B_visable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_visable
		{
			get
			{
				return this._B_visable;
			}
			set
			{
				if ((this._B_visable != value))
				{
					this.OnB_visableChanging(value);
					this.SendPropertyChanging();
					this._B_visable = value;
					this.SendPropertyChanged("B_visable");
					this.OnB_visableChanged();
				}
			}
		}
		
		[Column(Name="b_supportgroupops", Storage="_B_supportgroupops", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_supportgroupops
		{
			get
			{
				return this._B_supportgroupops;
			}
			set
			{
				if ((this._B_supportgroupops != value))
				{
					this.OnB_supportgroupopsChanging(value);
					this.SendPropertyChanging();
					this._B_supportgroupops = value;
					this.SendPropertyChanged("B_supportgroupops");
					this.OnB_supportgroupopsChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int NOT NULL")]
		public int Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="b_proportional", Storage="_B_proportional", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_proportional
		{
			get
			{
				return this._B_proportional;
			}
			set
			{
				if ((this._B_proportional != value))
				{
					this.OnB_proportionalChanging(value);
					this.SendPropertyChanging();
					this._B_proportional = value;
					this.SendPropertyChanged("B_proportional");
					this.OnB_proportionalChanged();
				}
			}
		}
		
		[Column(Name="id_corporate_account", Storage="_Id_corporate_account", DbType="Int NOT NULL")]
		public int Id_corporate_account
		{
			get
			{
				return this._Id_corporate_account;
			}
			set
			{
				if ((this._Id_corporate_account != value))
				{
					this.OnId_corporate_accountChanging(value);
					this.SendPropertyChanging();
					this._Id_corporate_account = value;
					this.SendPropertyChanged("Id_corporate_account");
					this.OnId_corporate_accountChanged();
				}
			}
		}
		
		[Column(Name="id_discountAccount", Storage="_Id_discountAccount", DbType="Int")]
		public System.Nullable<int> Id_discountAccount
		{
			get
			{
				return this._Id_discountAccount;
			}
			set
			{
				if ((this._Id_discountAccount != value))
				{
					this.OnId_discountAccountChanging(value);
					this.SendPropertyChanging();
					this._Id_discountAccount = value;
					this.SendPropertyChanged("Id_discountAccount");
					this.OnId_discountAccountChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_GROUP_SUB", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_group_sub.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_group_sub.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(int);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		[Association(Name="FK2_T_GROUP_SUB", Storage="_T_account", ThisKey="Id_discountAccount", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_group_sub.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_group_sub.Add(this);
						this._Id_discountAccount = value.Id_acc;
					}
					else
					{
						this._Id_discountAccount = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="FK3_T_GROUP_SUB", Storage="_Id_corporate_accountT_account", ThisKey="Id_corporate_account", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account Id_corporate_accountT_account
		{
			get
			{
				return this._Id_corporate_accountT_account.Entity;
			}
			set
			{
				T_account previousValue = this._Id_corporate_accountT_account.Entity;
				if (((previousValue != value) 
							|| (this._Id_corporate_accountT_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_corporate_accountT_account.Entity = null;
						previousValue.Id_accT_group_sub.Remove(this);
					}
					this._Id_corporate_accountT_account.Entity = value;
					if ((value != null))
					{
						value.Id_accT_group_sub.Add(this);
						this._Id_corporate_account = value.Id_acc;
					}
					else
					{
						this._Id_corporate_account = default(int);
					}
					this.SendPropertyChanged("Id_corporate_accountT_account");
				}
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk1", Storage="_T_gsub_recur_map", ThisKey="Id_group", OtherKey="Id_group", DeleteRule="NO ACTION")]
		public EntitySet<T_gsub_recur_map> T_gsub_recur_map
		{
			get
			{
				return this._T_gsub_recur_map;
			}
			set
			{
				this._T_gsub_recur_map.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_group_sub = this;
		}
		
		private void detach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_group_sub = null;
		}
	}
	
	[Table(Name="dbo.t_gsub_recur_map")]
	public partial class T_gsub_recur_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_group;
		
		private int _Id_prop;
		
		private int _Id_acc;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private EntityRef<T_group_sub> _T_group_sub;
		
		private EntityRef<T_recur> _T_recur;
		
		private EntityRef<T_account> _T_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_groupChanging(int value);
    partial void OnId_groupChanged();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnVt_startChanging(System.DateTime value);
    partial void OnVt_startChanged();
    partial void OnVt_endChanging(System.DateTime value);
    partial void OnVt_endChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    #endregion
		
		public T_gsub_recur_map()
		{
			this._T_group_sub = default(EntityRef<T_group_sub>);
			this._T_recur = default(EntityRef<T_recur>);
			this._T_account = default(EntityRef<T_account>);
			OnCreated();
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this.OnId_groupChanging(value);
					this.SendPropertyChanging();
					this._Id_group = value;
					this.SendPropertyChanged("Id_group");
					this.OnId_groupChanged();
				}
			}
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this.OnVt_startChanging(value);
					this.SendPropertyChanging();
					this._Vt_start = value;
					this.SendPropertyChanged("Vt_start");
					this.OnVt_startChanged();
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this.OnVt_endChanging(value);
					this.SendPropertyChanging();
					this._Vt_end = value;
					this.SendPropertyChanged("Vt_end");
					this.OnVt_endChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk1", Storage="_T_group_sub", ThisKey="Id_group", OtherKey="Id_group", IsForeignKey=true)]
		public T_group_sub T_group_sub
		{
			get
			{
				return this._T_group_sub.Entity;
			}
			set
			{
				T_group_sub previousValue = this._T_group_sub.Entity;
				if (((previousValue != value) 
							|| (this._T_group_sub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_group_sub.Entity = null;
						previousValue.T_gsub_recur_map.Remove(this);
					}
					this._T_group_sub.Entity = value;
					if ((value != null))
					{
						value.T_gsub_recur_map.Add(this);
						this._Id_group = value.Id_group;
					}
					else
					{
						this._Id_group = default(int);
					}
					this.SendPropertyChanged("T_group_sub");
				}
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk2", Storage="_T_recur", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_recur T_recur
		{
			get
			{
				return this._T_recur.Entity;
			}
			set
			{
				T_recur previousValue = this._T_recur.Entity;
				if (((previousValue != value) 
							|| (this._T_recur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recur.Entity = null;
						previousValue.T_gsub_recur_map.Remove(this);
					}
					this._T_recur.Entity = value;
					if ((value != null))
					{
						value.T_gsub_recur_map.Add(this);
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_recur");
				}
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk3", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_gsub_recur_map.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_gsub_recur_map.Add(this);
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(int);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_gsubmember")]
	public partial class T_gsubmember
	{
		
		private int _Id_group;
		
		private int _Id_acc;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		public T_gsubmember()
		{
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int NOT NULL")]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_gsubmember_historical")]
	public partial class T_gsubmember_historical
	{
		
		private int _Id_group;
		
		private int _Id_acc;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_gsubmember_historical()
		{
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int NOT NULL")]
		public int Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_impersonate")]
	public partial class T_impersonate
	{
		
		private int _Id_owner;
		
		private int _Id_acc;
		
		public T_impersonate()
		{
		}
		
		[Column(Name="id_owner", Storage="_Id_owner", DbType="Int NOT NULL")]
		public int Id_owner
		{
			get
			{
				return this._Id_owner;
			}
			set
			{
				if ((this._Id_owner != value))
				{
					this._Id_owner = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_invoice")]
	public partial class T_invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_invoice;
		
		private string _Namespace;
		
		private string _Invoice_string;
		
		private int _Id_interval;
		
		private int _Id_acc;
		
		private decimal _Invoice_amount;
		
		private System.DateTime _Invoice_date;
		
		private System.DateTime _Invoice_due_date;
		
		private int _Id_invoice_num;
		
		private string _Invoice_currency;
		
		private decimal _Payment_ttl_amt;
		
		private decimal _Postbill_adj_ttl_amt;
		
		private decimal _Ar_adj_ttl_amt;
		
		private decimal _Tax_ttl_amt;
		
		private decimal _Current_balance;
		
		private int _Id_payer;
		
		private int _Id_payer_interval;
		
		private string _Sample_flag;
		
		private System.Nullable<System.DateTime> _Balance_forward_date;
		
		private string _Div_currency;
		
		private System.Nullable<decimal> _Div_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_invoiceChanging(int value);
    partial void OnId_invoiceChanged();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void OnInvoice_stringChanging(string value);
    partial void OnInvoice_stringChanged();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnInvoice_amountChanging(decimal value);
    partial void OnInvoice_amountChanged();
    partial void OnInvoice_dateChanging(System.DateTime value);
    partial void OnInvoice_dateChanged();
    partial void OnInvoice_due_dateChanging(System.DateTime value);
    partial void OnInvoice_due_dateChanged();
    partial void OnId_invoice_numChanging(int value);
    partial void OnId_invoice_numChanged();
    partial void OnInvoice_currencyChanging(string value);
    partial void OnInvoice_currencyChanged();
    partial void OnPayment_ttl_amtChanging(decimal value);
    partial void OnPayment_ttl_amtChanged();
    partial void OnPostbill_adj_ttl_amtChanging(decimal value);
    partial void OnPostbill_adj_ttl_amtChanged();
    partial void OnAr_adj_ttl_amtChanging(decimal value);
    partial void OnAr_adj_ttl_amtChanged();
    partial void OnTax_ttl_amtChanging(decimal value);
    partial void OnTax_ttl_amtChanged();
    partial void OnCurrent_balanceChanging(decimal value);
    partial void OnCurrent_balanceChanged();
    partial void OnId_payerChanging(int value);
    partial void OnId_payerChanged();
    partial void OnId_payer_intervalChanging(int value);
    partial void OnId_payer_intervalChanged();
    partial void OnSample_flagChanging(string value);
    partial void OnSample_flagChanged();
    partial void OnBalance_forward_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnBalance_forward_dateChanged();
    partial void OnDiv_currencyChanging(string value);
    partial void OnDiv_currencyChanged();
    partial void OnDiv_amountChanging(System.Nullable<decimal> value);
    partial void OnDiv_amountChanged();
    #endregion
		
		public T_invoice()
		{
			OnCreated();
		}
		
		[Column(Name="id_invoice", Storage="_Id_invoice", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_invoice
		{
			get
			{
				return this._Id_invoice;
			}
			set
			{
				if ((this._Id_invoice != value))
				{
					this.OnId_invoiceChanging(value);
					this.SendPropertyChanging();
					this._Id_invoice = value;
					this.SendPropertyChanged("Id_invoice");
					this.OnId_invoiceChanged();
				}
			}
		}
		
		[Column(Name="namespace", Storage="_Namespace", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[Column(Name="invoice_string", Storage="_Invoice_string", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Invoice_string
		{
			get
			{
				return this._Invoice_string;
			}
			set
			{
				if ((this._Invoice_string != value))
				{
					this.OnInvoice_stringChanging(value);
					this.SendPropertyChanging();
					this._Invoice_string = value;
					this.SendPropertyChanged("Invoice_string");
					this.OnInvoice_stringChanged();
				}
			}
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL")]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="invoice_amount", Storage="_Invoice_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal Invoice_amount
		{
			get
			{
				return this._Invoice_amount;
			}
			set
			{
				if ((this._Invoice_amount != value))
				{
					this.OnInvoice_amountChanging(value);
					this.SendPropertyChanging();
					this._Invoice_amount = value;
					this.SendPropertyChanged("Invoice_amount");
					this.OnInvoice_amountChanged();
				}
			}
		}
		
		[Column(Name="invoice_date", Storage="_Invoice_date", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_date
		{
			get
			{
				return this._Invoice_date;
			}
			set
			{
				if ((this._Invoice_date != value))
				{
					this.OnInvoice_dateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_date = value;
					this.SendPropertyChanged("Invoice_date");
					this.OnInvoice_dateChanged();
				}
			}
		}
		
		[Column(Name="invoice_due_date", Storage="_Invoice_due_date", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_due_date
		{
			get
			{
				return this._Invoice_due_date;
			}
			set
			{
				if ((this._Invoice_due_date != value))
				{
					this.OnInvoice_due_dateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_due_date = value;
					this.SendPropertyChanged("Invoice_due_date");
					this.OnInvoice_due_dateChanged();
				}
			}
		}
		
		[Column(Name="id_invoice_num", Storage="_Id_invoice_num", DbType="Int NOT NULL")]
		public int Id_invoice_num
		{
			get
			{
				return this._Id_invoice_num;
			}
			set
			{
				if ((this._Id_invoice_num != value))
				{
					this.OnId_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Id_invoice_num = value;
					this.SendPropertyChanged("Id_invoice_num");
					this.OnId_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="invoice_currency", Storage="_Invoice_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Invoice_currency
		{
			get
			{
				return this._Invoice_currency;
			}
			set
			{
				if ((this._Invoice_currency != value))
				{
					this.OnInvoice_currencyChanging(value);
					this.SendPropertyChanging();
					this._Invoice_currency = value;
					this.SendPropertyChanged("Invoice_currency");
					this.OnInvoice_currencyChanged();
				}
			}
		}
		
		[Column(Name="payment_ttl_amt", Storage="_Payment_ttl_amt", DbType="Decimal(22,10) NOT NULL")]
		public decimal Payment_ttl_amt
		{
			get
			{
				return this._Payment_ttl_amt;
			}
			set
			{
				if ((this._Payment_ttl_amt != value))
				{
					this.OnPayment_ttl_amtChanging(value);
					this.SendPropertyChanging();
					this._Payment_ttl_amt = value;
					this.SendPropertyChanged("Payment_ttl_amt");
					this.OnPayment_ttl_amtChanged();
				}
			}
		}
		
		[Column(Name="postbill_adj_ttl_amt", Storage="_Postbill_adj_ttl_amt", DbType="Decimal(22,10) NOT NULL")]
		public decimal Postbill_adj_ttl_amt
		{
			get
			{
				return this._Postbill_adj_ttl_amt;
			}
			set
			{
				if ((this._Postbill_adj_ttl_amt != value))
				{
					this.OnPostbill_adj_ttl_amtChanging(value);
					this.SendPropertyChanging();
					this._Postbill_adj_ttl_amt = value;
					this.SendPropertyChanged("Postbill_adj_ttl_amt");
					this.OnPostbill_adj_ttl_amtChanged();
				}
			}
		}
		
		[Column(Name="ar_adj_ttl_amt", Storage="_Ar_adj_ttl_amt", DbType="Decimal(22,10) NOT NULL")]
		public decimal Ar_adj_ttl_amt
		{
			get
			{
				return this._Ar_adj_ttl_amt;
			}
			set
			{
				if ((this._Ar_adj_ttl_amt != value))
				{
					this.OnAr_adj_ttl_amtChanging(value);
					this.SendPropertyChanging();
					this._Ar_adj_ttl_amt = value;
					this.SendPropertyChanged("Ar_adj_ttl_amt");
					this.OnAr_adj_ttl_amtChanged();
				}
			}
		}
		
		[Column(Name="tax_ttl_amt", Storage="_Tax_ttl_amt", DbType="Decimal(22,10) NOT NULL")]
		public decimal Tax_ttl_amt
		{
			get
			{
				return this._Tax_ttl_amt;
			}
			set
			{
				if ((this._Tax_ttl_amt != value))
				{
					this.OnTax_ttl_amtChanging(value);
					this.SendPropertyChanging();
					this._Tax_ttl_amt = value;
					this.SendPropertyChanged("Tax_ttl_amt");
					this.OnTax_ttl_amtChanged();
				}
			}
		}
		
		[Column(Name="current_balance", Storage="_Current_balance", DbType="Decimal(22,10) NOT NULL")]
		public decimal Current_balance
		{
			get
			{
				return this._Current_balance;
			}
			set
			{
				if ((this._Current_balance != value))
				{
					this.OnCurrent_balanceChanging(value);
					this.SendPropertyChanging();
					this._Current_balance = value;
					this.SendPropertyChanged("Current_balance");
					this.OnCurrent_balanceChanged();
				}
			}
		}
		
		[Column(Name="id_payer", Storage="_Id_payer", DbType="Int NOT NULL")]
		public int Id_payer
		{
			get
			{
				return this._Id_payer;
			}
			set
			{
				if ((this._Id_payer != value))
				{
					this.OnId_payerChanging(value);
					this.SendPropertyChanging();
					this._Id_payer = value;
					this.SendPropertyChanged("Id_payer");
					this.OnId_payerChanged();
				}
			}
		}
		
		[Column(Name="id_payer_interval", Storage="_Id_payer_interval", DbType="Int NOT NULL")]
		public int Id_payer_interval
		{
			get
			{
				return this._Id_payer_interval;
			}
			set
			{
				if ((this._Id_payer_interval != value))
				{
					this.OnId_payer_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_payer_interval = value;
					this.SendPropertyChanged("Id_payer_interval");
					this.OnId_payer_intervalChanged();
				}
			}
		}
		
		[Column(Name="sample_flag", Storage="_Sample_flag", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Sample_flag
		{
			get
			{
				return this._Sample_flag;
			}
			set
			{
				if ((this._Sample_flag != value))
				{
					this.OnSample_flagChanging(value);
					this.SendPropertyChanging();
					this._Sample_flag = value;
					this.SendPropertyChanged("Sample_flag");
					this.OnSample_flagChanged();
				}
			}
		}
		
		[Column(Name="balance_forward_date", Storage="_Balance_forward_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Balance_forward_date
		{
			get
			{
				return this._Balance_forward_date;
			}
			set
			{
				if ((this._Balance_forward_date != value))
				{
					this.OnBalance_forward_dateChanging(value);
					this.SendPropertyChanging();
					this._Balance_forward_date = value;
					this.SendPropertyChanged("Balance_forward_date");
					this.OnBalance_forward_dateChanged();
				}
			}
		}
		
		[Column(Name="div_currency", Storage="_Div_currency", DbType="NVarChar(3)")]
		public string Div_currency
		{
			get
			{
				return this._Div_currency;
			}
			set
			{
				if ((this._Div_currency != value))
				{
					this.OnDiv_currencyChanging(value);
					this.SendPropertyChanging();
					this._Div_currency = value;
					this.SendPropertyChanged("Div_currency");
					this.OnDiv_currencyChanged();
				}
			}
		}
		
		[Column(Name="div_amount", Storage="_Div_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> Div_amount
		{
			get
			{
				return this._Div_amount;
			}
			set
			{
				if ((this._Div_amount != value))
				{
					this.OnDiv_amountChanging(value);
					this.SendPropertyChanging();
					this._Div_amount = value;
					this.SendPropertyChanged("Div_amount");
					this.OnDiv_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_invoice_namespace")]
	public partial class T_invoice_namespace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Namespace;
		
		private string _Invoice_prefix;
		
		private string _Invoice_suffix;
		
		private int _Invoice_num_digits;
		
		private int _Invoice_due_date_offset;
		
		private int _Id_invoice_num_last;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void OnInvoice_prefixChanging(string value);
    partial void OnInvoice_prefixChanged();
    partial void OnInvoice_suffixChanging(string value);
    partial void OnInvoice_suffixChanged();
    partial void OnInvoice_num_digitsChanging(int value);
    partial void OnInvoice_num_digitsChanged();
    partial void OnInvoice_due_date_offsetChanging(int value);
    partial void OnInvoice_due_date_offsetChanged();
    partial void OnId_invoice_num_lastChanging(int value);
    partial void OnId_invoice_num_lastChanged();
    #endregion
		
		public T_invoice_namespace()
		{
			OnCreated();
		}
		
		[Column(Name="namespace", Storage="_Namespace", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[Column(Name="invoice_prefix", Storage="_Invoice_prefix", DbType="NVarChar(40)")]
		public string Invoice_prefix
		{
			get
			{
				return this._Invoice_prefix;
			}
			set
			{
				if ((this._Invoice_prefix != value))
				{
					this.OnInvoice_prefixChanging(value);
					this.SendPropertyChanging();
					this._Invoice_prefix = value;
					this.SendPropertyChanged("Invoice_prefix");
					this.OnInvoice_prefixChanged();
				}
			}
		}
		
		[Column(Name="invoice_suffix", Storage="_Invoice_suffix", DbType="NVarChar(40)")]
		public string Invoice_suffix
		{
			get
			{
				return this._Invoice_suffix;
			}
			set
			{
				if ((this._Invoice_suffix != value))
				{
					this.OnInvoice_suffixChanging(value);
					this.SendPropertyChanging();
					this._Invoice_suffix = value;
					this.SendPropertyChanged("Invoice_suffix");
					this.OnInvoice_suffixChanged();
				}
			}
		}
		
		[Column(Name="invoice_num_digits", Storage="_Invoice_num_digits", DbType="Int NOT NULL")]
		public int Invoice_num_digits
		{
			get
			{
				return this._Invoice_num_digits;
			}
			set
			{
				if ((this._Invoice_num_digits != value))
				{
					this.OnInvoice_num_digitsChanging(value);
					this.SendPropertyChanging();
					this._Invoice_num_digits = value;
					this.SendPropertyChanged("Invoice_num_digits");
					this.OnInvoice_num_digitsChanged();
				}
			}
		}
		
		[Column(Name="invoice_due_date_offset", Storage="_Invoice_due_date_offset", DbType="Int NOT NULL")]
		public int Invoice_due_date_offset
		{
			get
			{
				return this._Invoice_due_date_offset;
			}
			set
			{
				if ((this._Invoice_due_date_offset != value))
				{
					this.OnInvoice_due_date_offsetChanging(value);
					this.SendPropertyChanging();
					this._Invoice_due_date_offset = value;
					this.SendPropertyChanged("Invoice_due_date_offset");
					this.OnInvoice_due_date_offsetChanged();
				}
			}
		}
		
		[Column(Name="id_invoice_num_last", Storage="_Id_invoice_num_last", DbType="Int NOT NULL")]
		public int Id_invoice_num_last
		{
			get
			{
				return this._Id_invoice_num_last;
			}
			set
			{
				if ((this._Id_invoice_num_last != value))
				{
					this.OnId_invoice_num_lastChanging(value);
					this.SendPropertyChanging();
					this._Id_invoice_num_last = value;
					this.SendPropertyChanged("Id_invoice_num_last");
					this.OnId_invoice_num_lastChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_invoice_range")]
	public partial class T_invoice_range
	{
		
		private int _Id_interval;
		
		private int _Id_billgroup;
		
		private string _Namespace;
		
		private int _Id_invoice_num_first;
		
		private int _Id_invoice_num_last;
		
		private System.Nullable<int> _Id_run;
		
		public T_invoice_range()
		{
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL")]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this._Id_interval = value;
				}
			}
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", DbType="Int NOT NULL")]
		public int Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this._Id_billgroup = value;
				}
			}
		}
		
		[Column(Name="namespace", Storage="_Namespace", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this._Namespace = value;
				}
			}
		}
		
		[Column(Name="id_invoice_num_first", Storage="_Id_invoice_num_first", DbType="Int NOT NULL")]
		public int Id_invoice_num_first
		{
			get
			{
				return this._Id_invoice_num_first;
			}
			set
			{
				if ((this._Id_invoice_num_first != value))
				{
					this._Id_invoice_num_first = value;
				}
			}
		}
		
		[Column(Name="id_invoice_num_last", Storage="_Id_invoice_num_last", DbType="Int NOT NULL")]
		public int Id_invoice_num_last
		{
			get
			{
				return this._Id_invoice_num_last;
			}
			set
			{
				if ((this._Id_invoice_num_last != value))
				{
					this._Id_invoice_num_last = value;
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int")]
		public System.Nullable<int> Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this._Id_run = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_language")]
	public partial class T_language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_lang_code;
		
		private string _Tx_lang_code;
		
		private System.Nullable<int> _N_order;
		
		private string _Tx_description;
		
		private EntitySet<T_description> _T_description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_lang_codeChanging(int value);
    partial void OnId_lang_codeChanged();
    partial void OnTx_lang_codeChanging(string value);
    partial void OnTx_lang_codeChanged();
    partial void OnN_orderChanging(System.Nullable<int> value);
    partial void OnN_orderChanged();
    partial void OnTx_descriptionChanging(string value);
    partial void OnTx_descriptionChanged();
    #endregion
		
		public T_language()
		{
			this._T_description = new EntitySet<T_description>(new Action<T_description>(this.attach_T_description), new Action<T_description>(this.detach_T_description));
			OnCreated();
		}
		
		[Column(Name="id_lang_code", Storage="_Id_lang_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_lang_code
		{
			get
			{
				return this._Id_lang_code;
			}
			set
			{
				if ((this._Id_lang_code != value))
				{
					this.OnId_lang_codeChanging(value);
					this.SendPropertyChanging();
					this._Id_lang_code = value;
					this.SendPropertyChanged("Id_lang_code");
					this.OnId_lang_codeChanged();
				}
			}
		}
		
		[Column(Name="tx_lang_code", Storage="_Tx_lang_code", DbType="VarChar(10)")]
		public string Tx_lang_code
		{
			get
			{
				return this._Tx_lang_code;
			}
			set
			{
				if ((this._Tx_lang_code != value))
				{
					this.OnTx_lang_codeChanging(value);
					this.SendPropertyChanging();
					this._Tx_lang_code = value;
					this.SendPropertyChanged("Tx_lang_code");
					this.OnTx_lang_codeChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int")]
		public System.Nullable<int> N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tx_description", Storage="_Tx_description", DbType="NVarChar(255)")]
		public string Tx_description
		{
			get
			{
				return this._Tx_description;
			}
			set
			{
				if ((this._Tx_description != value))
				{
					this.OnTx_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Tx_description = value;
					this.SendPropertyChanged("Tx_description");
					this.OnTx_descriptionChanged();
				}
			}
		}
		
		[Association(Name="fk2_t_description", Storage="_T_description", ThisKey="Id_lang_code", OtherKey="Id_lang_code", DeleteRule="NO ACTION")]
		public EntitySet<T_description> T_description
		{
			get
			{
				return this._T_description;
			}
			set
			{
				this._T_description.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_description(T_description entity)
		{
			this.SendPropertyChanging();
			entity.T_language = this;
		}
		
		private void detach_T_description(T_description entity)
		{
			this.SendPropertyChanging();
			entity.T_language = null;
		}
	}
	
	[Table(Name="dbo.t_listener")]
	public partial class T_listener : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_listener;
		
		private string _Tx_machine;
		
		private string _B_online;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_listenerChanging(int value);
    partial void OnId_listenerChanged();
    partial void OnTx_machineChanging(string value);
    partial void OnTx_machineChanged();
    partial void OnB_onlineChanging(string value);
    partial void OnB_onlineChanged();
    #endregion
		
		public T_listener()
		{
			OnCreated();
		}
		
		[Column(Name="id_listener", Storage="_Id_listener", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_listener
		{
			get
			{
				return this._Id_listener;
			}
			set
			{
				if ((this._Id_listener != value))
				{
					this.OnId_listenerChanging(value);
					this.SendPropertyChanging();
					this._Id_listener = value;
					this.SendPropertyChanged("Id_listener");
					this.OnId_listenerChanged();
				}
			}
		}
		
		[Column(Name="tx_machine", Storage="_Tx_machine", DbType="VarChar(256)")]
		public string Tx_machine
		{
			get
			{
				return this._Tx_machine;
			}
			set
			{
				if ((this._Tx_machine != value))
				{
					this.OnTx_machineChanging(value);
					this.SendPropertyChanging();
					this._Tx_machine = value;
					this.SendPropertyChanged("Tx_machine");
					this.OnTx_machineChanged();
				}
			}
		}
		
		[Column(Name="b_online", Storage="_B_online", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_online
		{
			get
			{
				return this._B_online;
			}
			set
			{
				if ((this._B_online != value))
				{
					this.OnB_onlineChanging(value);
					this.SendPropertyChanging();
					this._B_online = value;
					this.SendPropertyChanged("B_online");
					this.OnB_onlineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_localized_site")]
	public partial class T_localized_site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_site;
		
		private string _Nm_space;
		
		private string _Tx_lang_code;
		
		private EntitySet<T_site_user> _T_site_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_siteChanging(int value);
    partial void OnId_siteChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnTx_lang_codeChanging(string value);
    partial void OnTx_lang_codeChanged();
    #endregion
		
		public T_localized_site()
		{
			this._T_site_user = new EntitySet<T_site_user>(new Action<T_site_user>(this.attach_T_site_user), new Action<T_site_user>(this.detach_T_site_user));
			OnCreated();
		}
		
		[Column(Name="id_site", Storage="_Id_site", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_site
		{
			get
			{
				return this._Id_site;
			}
			set
			{
				if ((this._Id_site != value))
				{
					this.OnId_siteChanging(value);
					this.SendPropertyChanging();
					this._Id_site = value;
					this.SendPropertyChanged("Id_site");
					this.OnId_siteChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="tx_lang_code", Storage="_Tx_lang_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Tx_lang_code
		{
			get
			{
				return this._Tx_lang_code;
			}
			set
			{
				if ((this._Tx_lang_code != value))
				{
					this.OnTx_lang_codeChanging(value);
					this.SendPropertyChanging();
					this._Tx_lang_code = value;
					this.SendPropertyChanged("Tx_lang_code");
					this.OnTx_lang_codeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_SITE_USER", Storage="_T_site_user", ThisKey="Id_site", OtherKey="Id_site", DeleteRule="NO ACTION")]
		public EntitySet<T_site_user> T_site_user
		{
			get
			{
				return this._T_site_user;
			}
			set
			{
				this._T_site_user.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_site_user(T_site_user entity)
		{
			this.SendPropertyChanging();
			entity.T_localized_site = this;
		}
		
		private void detach_T_site_user(T_site_user entity)
		{
			this.SendPropertyChanging();
			entity.T_localized_site = null;
		}
	}
	
	[Table(Name="dbo.t_message")]
	public partial class T_message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_message;
		
		private System.Nullable<int> _Id_route;
		
		private System.DateTime _Dt_crt;
		
		private System.DateTime _Dt_metered;
		
		private System.Nullable<System.DateTime> _Dt_assigned;
		
		private System.Nullable<int> _Id_listener;
		
		private System.Nullable<int> _Id_pipeline;
		
		private System.Nullable<System.DateTime> _Dt_completed;
		
		private System.Nullable<int> _Id_feedback;
		
		private string _Tx_TransactionID;
		
		private string _Tx_sc_username;
		
		private string _Tx_sc_password;
		
		private string _Tx_sc_namespace;
		
		private string _Tx_sc_serialized;
		
		private string _Tx_ip_address;
		
		private int _Id_partition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_messageChanging(int value);
    partial void OnId_messageChanged();
    partial void OnId_routeChanging(System.Nullable<int> value);
    partial void OnId_routeChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    partial void OnDt_meteredChanging(System.DateTime value);
    partial void OnDt_meteredChanged();
    partial void OnDt_assignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_assignedChanged();
    partial void OnId_listenerChanging(System.Nullable<int> value);
    partial void OnId_listenerChanged();
    partial void OnId_pipelineChanging(System.Nullable<int> value);
    partial void OnId_pipelineChanged();
    partial void OnDt_completedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_completedChanged();
    partial void OnId_feedbackChanging(System.Nullable<int> value);
    partial void OnId_feedbackChanged();
    partial void OnTx_TransactionIDChanging(string value);
    partial void OnTx_TransactionIDChanged();
    partial void OnTx_sc_usernameChanging(string value);
    partial void OnTx_sc_usernameChanged();
    partial void OnTx_sc_passwordChanging(string value);
    partial void OnTx_sc_passwordChanged();
    partial void OnTx_sc_namespaceChanging(string value);
    partial void OnTx_sc_namespaceChanged();
    partial void OnTx_sc_serializedChanging(string value);
    partial void OnTx_sc_serializedChanged();
    partial void OnTx_ip_addressChanging(string value);
    partial void OnTx_ip_addressChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    #endregion
		
		public T_message()
		{
			OnCreated();
		}
		
		[Column(Name="id_message", Storage="_Id_message", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_message
		{
			get
			{
				return this._Id_message;
			}
			set
			{
				if ((this._Id_message != value))
				{
					this.OnId_messageChanging(value);
					this.SendPropertyChanging();
					this._Id_message = value;
					this.SendPropertyChanged("Id_message");
					this.OnId_messageChanged();
				}
			}
		}
		
		[Column(Name="id_route", Storage="_Id_route", DbType="Int")]
		public System.Nullable<int> Id_route
		{
			get
			{
				return this._Id_route;
			}
			set
			{
				if ((this._Id_route != value))
				{
					this.OnId_routeChanging(value);
					this.SendPropertyChanging();
					this._Id_route = value;
					this.SendPropertyChanged("Id_route");
					this.OnId_routeChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Column(Name="dt_metered", Storage="_Dt_metered", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_metered
		{
			get
			{
				return this._Dt_metered;
			}
			set
			{
				if ((this._Dt_metered != value))
				{
					this.OnDt_meteredChanging(value);
					this.SendPropertyChanging();
					this._Dt_metered = value;
					this.SendPropertyChanged("Dt_metered");
					this.OnDt_meteredChanged();
				}
			}
		}
		
		[Column(Name="dt_assigned", Storage="_Dt_assigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_assigned
		{
			get
			{
				return this._Dt_assigned;
			}
			set
			{
				if ((this._Dt_assigned != value))
				{
					this.OnDt_assignedChanging(value);
					this.SendPropertyChanging();
					this._Dt_assigned = value;
					this.SendPropertyChanged("Dt_assigned");
					this.OnDt_assignedChanged();
				}
			}
		}
		
		[Column(Name="id_listener", Storage="_Id_listener", DbType="Int")]
		public System.Nullable<int> Id_listener
		{
			get
			{
				return this._Id_listener;
			}
			set
			{
				if ((this._Id_listener != value))
				{
					this.OnId_listenerChanging(value);
					this.SendPropertyChanging();
					this._Id_listener = value;
					this.SendPropertyChanged("Id_listener");
					this.OnId_listenerChanged();
				}
			}
		}
		
		[Column(Name="id_pipeline", Storage="_Id_pipeline", DbType="Int")]
		public System.Nullable<int> Id_pipeline
		{
			get
			{
				return this._Id_pipeline;
			}
			set
			{
				if ((this._Id_pipeline != value))
				{
					this.OnId_pipelineChanging(value);
					this.SendPropertyChanging();
					this._Id_pipeline = value;
					this.SendPropertyChanged("Id_pipeline");
					this.OnId_pipelineChanged();
				}
			}
		}
		
		[Column(Name="dt_completed", Storage="_Dt_completed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_completed
		{
			get
			{
				return this._Dt_completed;
			}
			set
			{
				if ((this._Dt_completed != value))
				{
					this.OnDt_completedChanging(value);
					this.SendPropertyChanging();
					this._Dt_completed = value;
					this.SendPropertyChanged("Dt_completed");
					this.OnDt_completedChanged();
				}
			}
		}
		
		[Column(Name="id_feedback", Storage="_Id_feedback", DbType="Int")]
		public System.Nullable<int> Id_feedback
		{
			get
			{
				return this._Id_feedback;
			}
			set
			{
				if ((this._Id_feedback != value))
				{
					this.OnId_feedbackChanging(value);
					this.SendPropertyChanging();
					this._Id_feedback = value;
					this.SendPropertyChanged("Id_feedback");
					this.OnId_feedbackChanged();
				}
			}
		}
		
		[Column(Name="tx_TransactionID", Storage="_Tx_TransactionID", DbType="VarChar(256)")]
		public string Tx_TransactionID
		{
			get
			{
				return this._Tx_TransactionID;
			}
			set
			{
				if ((this._Tx_TransactionID != value))
				{
					this.OnTx_TransactionIDChanging(value);
					this.SendPropertyChanging();
					this._Tx_TransactionID = value;
					this.SendPropertyChanged("Tx_TransactionID");
					this.OnTx_TransactionIDChanged();
				}
			}
		}
		
		[Column(Name="tx_sc_username", Storage="_Tx_sc_username", DbType="VarChar(510)")]
		public string Tx_sc_username
		{
			get
			{
				return this._Tx_sc_username;
			}
			set
			{
				if ((this._Tx_sc_username != value))
				{
					this.OnTx_sc_usernameChanging(value);
					this.SendPropertyChanging();
					this._Tx_sc_username = value;
					this.SendPropertyChanged("Tx_sc_username");
					this.OnTx_sc_usernameChanged();
				}
			}
		}
		
		[Column(Name="tx_sc_password", Storage="_Tx_sc_password", DbType="VarChar(128)")]
		public string Tx_sc_password
		{
			get
			{
				return this._Tx_sc_password;
			}
			set
			{
				if ((this._Tx_sc_password != value))
				{
					this.OnTx_sc_passwordChanging(value);
					this.SendPropertyChanging();
					this._Tx_sc_password = value;
					this.SendPropertyChanged("Tx_sc_password");
					this.OnTx_sc_passwordChanged();
				}
			}
		}
		
		[Column(Name="tx_sc_namespace", Storage="_Tx_sc_namespace", DbType="VarChar(80)")]
		public string Tx_sc_namespace
		{
			get
			{
				return this._Tx_sc_namespace;
			}
			set
			{
				if ((this._Tx_sc_namespace != value))
				{
					this.OnTx_sc_namespaceChanging(value);
					this.SendPropertyChanging();
					this._Tx_sc_namespace = value;
					this.SendPropertyChanged("Tx_sc_namespace");
					this.OnTx_sc_namespaceChanged();
				}
			}
		}
		
		[Column(Name="tx_sc_serialized", Storage="_Tx_sc_serialized", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Tx_sc_serialized
		{
			get
			{
				return this._Tx_sc_serialized;
			}
			set
			{
				if ((this._Tx_sc_serialized != value))
				{
					this.OnTx_sc_serializedChanging(value);
					this.SendPropertyChanging();
					this._Tx_sc_serialized = value;
					this.SendPropertyChanged("Tx_sc_serialized");
					this.OnTx_sc_serializedChanged();
				}
			}
		}
		
		[Column(Name="tx_ip_address", Storage="_Tx_ip_address", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tx_ip_address
		{
			get
			{
				return this._Tx_ip_address;
			}
			set
			{
				if ((this._Tx_ip_address != value))
				{
					this.OnTx_ip_addressChanging(value);
					this.SendPropertyChanging();
					this._Tx_ip_address = value;
					this.SendPropertyChanged("Tx_ip_address");
					this.OnTx_ip_addressChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_metratime")]
	public partial class T_metratime
	{
		
		private string _Application_name;
		
		private System.Nullable<System.DateTime> _Frozen_date;
		
		private System.Nullable<int> _Add_seconds;
		
		public T_metratime()
		{
		}
		
		[Column(Name="application_name", Storage="_Application_name", DbType="VarChar(256)")]
		public string Application_name
		{
			get
			{
				return this._Application_name;
			}
			set
			{
				if ((this._Application_name != value))
				{
					this._Application_name = value;
				}
			}
		}
		
		[Column(Name="frozen_date", Storage="_Frozen_date", DbType="Date")]
		public System.Nullable<System.DateTime> Frozen_date
		{
			get
			{
				return this._Frozen_date;
			}
			set
			{
				if ((this._Frozen_date != value))
				{
					this._Frozen_date = value;
				}
			}
		}
		
		[Column(Name="add_seconds", Storage="_Add_seconds", DbType="Int")]
		public System.Nullable<int> Add_seconds
		{
			get
			{
				return this._Add_seconds;
			}
			set
			{
				if ((this._Add_seconds != value))
				{
					this._Add_seconds = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_mf_tracking_env")]
	public partial class T_mf_tracking_env : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_tracking;
		
		private int _Seq_no;
		
		private string _Name;
		
		private string _Value;
		
		private int _Arg_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_trackingChanging(string value);
    partial void OnId_trackingChanged();
    partial void OnSeq_noChanging(int value);
    partial void OnSeq_noChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnArg_typeChanging(int value);
    partial void OnArg_typeChanged();
    #endregion
		
		public T_mf_tracking_env()
		{
			OnCreated();
		}
		
		[Column(Name="id_tracking", Storage="_Id_tracking", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_tracking
		{
			get
			{
				return this._Id_tracking;
			}
			set
			{
				if ((this._Id_tracking != value))
				{
					this.OnId_trackingChanging(value);
					this.SendPropertyChanging();
					this._Id_tracking = value;
					this.SendPropertyChanged("Id_tracking");
					this.OnId_trackingChanged();
				}
			}
		}
		
		[Column(Name="seq_no", Storage="_Seq_no", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Seq_no
		{
			get
			{
				return this._Seq_no;
			}
			set
			{
				if ((this._Seq_no != value))
				{
					this.OnSeq_noChanging(value);
					this.SendPropertyChanging();
					this._Seq_no = value;
					this.SendPropertyChanged("Seq_no");
					this.OnSeq_noChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="value", Storage="_Value", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Name="arg_type", Storage="_Arg_type", DbType="Int NOT NULL")]
		public int Arg_type
		{
			get
			{
				return this._Arg_type;
			}
			set
			{
				if ((this._Arg_type != value))
				{
					this.OnArg_typeChanging(value);
					this.SendPropertyChanging();
					this._Arg_type = value;
					this.SendPropertyChanged("Arg_type");
					this.OnArg_typeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_mf_tracking_instructions")]
	public partial class T_mf_tracking_instructions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_tracking;
		
		private int _Seq_no;
		
		private int _Instruction_no;
		
		private System.DateTime _Dt_start;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_trackingChanging(string value);
    partial void OnId_trackingChanged();
    partial void OnSeq_noChanging(int value);
    partial void OnSeq_noChanged();
    partial void OnInstruction_noChanging(int value);
    partial void OnInstruction_noChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public T_mf_tracking_instructions()
		{
			OnCreated();
		}
		
		[Column(Name="id_tracking", Storage="_Id_tracking", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_tracking
		{
			get
			{
				return this._Id_tracking;
			}
			set
			{
				if ((this._Id_tracking != value))
				{
					this.OnId_trackingChanging(value);
					this.SendPropertyChanging();
					this._Id_tracking = value;
					this.SendPropertyChanged("Id_tracking");
					this.OnId_trackingChanged();
				}
			}
		}
		
		[Column(Name="seq_no", Storage="_Seq_no", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Seq_no
		{
			get
			{
				return this._Seq_no;
			}
			set
			{
				if ((this._Seq_no != value))
				{
					this.OnSeq_noChanging(value);
					this.SendPropertyChanging();
					this._Seq_no = value;
					this.SendPropertyChanged("Seq_no");
					this.OnSeq_noChanged();
				}
			}
		}
		
		[Column(Name="instruction_no", Storage="_Instruction_no", DbType="Int NOT NULL")]
		public int Instruction_no
		{
			get
			{
				return this._Instruction_no;
			}
			set
			{
				if ((this._Instruction_no != value))
				{
					this.OnInstruction_noChanging(value);
					this.SendPropertyChanging();
					this._Instruction_no = value;
					this.SendPropertyChanged("Instruction_no");
					this.OnInstruction_noChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_mf_tracking_scripts")]
	public partial class T_mf_tracking_scripts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_tracking;
		
		private string _Script_name;
		
		private System.DateTime _Dt_start;
		
		private int _Was_completed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_trackingChanging(string value);
    partial void OnId_trackingChanged();
    partial void OnScript_nameChanging(string value);
    partial void OnScript_nameChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnWas_completedChanging(int value);
    partial void OnWas_completedChanged();
    #endregion
		
		public T_mf_tracking_scripts()
		{
			OnCreated();
		}
		
		[Column(Name="id_tracking", Storage="_Id_tracking", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_tracking
		{
			get
			{
				return this._Id_tracking;
			}
			set
			{
				if ((this._Id_tracking != value))
				{
					this.OnId_trackingChanging(value);
					this.SendPropertyChanging();
					this._Id_tracking = value;
					this.SendPropertyChanged("Id_tracking");
					this.OnId_trackingChanged();
				}
			}
		}
		
		[Column(Name="script_name", Storage="_Script_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Script_name
		{
			get
			{
				return this._Script_name;
			}
			set
			{
				if ((this._Script_name != value))
				{
					this.OnScript_nameChanging(value);
					this.SendPropertyChanging();
					this._Script_name = value;
					this.SendPropertyChanged("Script_name");
					this.OnScript_nameChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="was_completed", Storage="_Was_completed", DbType="Int NOT NULL")]
		public int Was_completed
		{
			get
			{
				return this._Was_completed;
			}
			set
			{
				if ((this._Was_completed != value))
				{
					this.OnWas_completedChanging(value);
					this.SendPropertyChanging();
					this._Was_completed = value;
					this.SendPropertyChanged("Was_completed");
					this.OnWas_completedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_MT_ID")]
	public partial class T_MT_ID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_MT;
		
		private EntitySet<T_description> _T_description;
		
		private EntityRef<T_enum_data> _T_enum_data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_MTChanging(int value);
    partial void OnId_MTChanged();
    #endregion
		
		public T_MT_ID()
		{
			this._T_description = new EntitySet<T_description>(new Action<T_description>(this.attach_T_description), new Action<T_description>(this.detach_T_description));
			this._T_enum_data = default(EntityRef<T_enum_data>);
			OnCreated();
		}
		
		[Column(Name="id_MT", Storage="_Id_MT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_MT
		{
			get
			{
				return this._Id_MT;
			}
			set
			{
				if ((this._Id_MT != value))
				{
					this.OnId_MTChanging(value);
					this.SendPropertyChanging();
					this._Id_MT = value;
					this.SendPropertyChanged("Id_MT");
					this.OnId_MTChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_DESCRIPTION", Storage="_T_description", ThisKey="Id_MT", OtherKey="Id_desc", DeleteRule="NO ACTION")]
		public EntitySet<T_description> T_description
		{
			get
			{
				return this._T_description;
			}
			set
			{
				this._T_description.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_ENUM_DATA", Storage="_T_enum_data", ThisKey="Id_MT", OtherKey="Id_enum_data", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_enum_data T_enum_data
		{
			get
			{
				return this._T_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._T_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_data.Entity = null;
						previousValue.T_MT_ID = null;
					}
					this._T_enum_data.Entity = value;
					if ((value != null))
					{
						value.T_MT_ID = this;
					}
					this.SendPropertyChanged("T_enum_data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_description(T_description entity)
		{
			this.SendPropertyChanging();
			entity.T_MT_ID = this;
		}
		
		private void detach_T_description(T_description entity)
		{
			this.SendPropertyChanging();
			entity.T_MT_ID = null;
		}
	}
	
	[Table(Name="dbo.t_mt_sys_analyze_all_tables")]
	public partial class T_mt_sys_analyze_all_tables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Execution_date;
		
		private System.Nullable<int> _Stats_updated;
		
		private System.Nullable<System.TimeSpan> _Execution_time;
		
		private System.Nullable<long> _U_total_rows;
		
		private System.Nullable<long> _NU_total_rows;
		
		private System.Nullable<long> _U_sampled_rows;
		
		private System.Nullable<long> _NU_sampled_rows;
		
		private System.Nullable<double> _U_sampled_percent;
		
		private System.Nullable<double> _NU_sampled_percent;
		
		private System.Nullable<int> _Execution_time_sec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExecution_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnExecution_dateChanged();
    partial void OnStats_updatedChanging(System.Nullable<int> value);
    partial void OnStats_updatedChanged();
    partial void OnExecution_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnExecution_timeChanged();
    partial void OnU_total_rowsChanging(System.Nullable<long> value);
    partial void OnU_total_rowsChanged();
    partial void OnNU_total_rowsChanging(System.Nullable<long> value);
    partial void OnNU_total_rowsChanged();
    partial void OnU_sampled_rowsChanging(System.Nullable<long> value);
    partial void OnU_sampled_rowsChanged();
    partial void OnNU_sampled_rowsChanging(System.Nullable<long> value);
    partial void OnNU_sampled_rowsChanged();
    partial void OnU_sampled_percentChanging(System.Nullable<double> value);
    partial void OnU_sampled_percentChanged();
    partial void OnNU_sampled_percentChanging(System.Nullable<double> value);
    partial void OnNU_sampled_percentChanged();
    partial void OnExecution_time_secChanging(System.Nullable<int> value);
    partial void OnExecution_time_secChanged();
    #endregion
		
		public T_mt_sys_analyze_all_tables()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="execution_date", Storage="_Execution_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Execution_date
		{
			get
			{
				return this._Execution_date;
			}
			set
			{
				if ((this._Execution_date != value))
				{
					this.OnExecution_dateChanging(value);
					this.SendPropertyChanging();
					this._Execution_date = value;
					this.SendPropertyChanged("Execution_date");
					this.OnExecution_dateChanged();
				}
			}
		}
		
		[Column(Name="stats_updated", Storage="_Stats_updated", DbType="Int")]
		public System.Nullable<int> Stats_updated
		{
			get
			{
				return this._Stats_updated;
			}
			set
			{
				if ((this._Stats_updated != value))
				{
					this.OnStats_updatedChanging(value);
					this.SendPropertyChanging();
					this._Stats_updated = value;
					this.SendPropertyChanged("Stats_updated");
					this.OnStats_updatedChanged();
				}
			}
		}
		
		[Column(Name="execution_time", Storage="_Execution_time", DbType="Time(7)")]
		public System.Nullable<System.TimeSpan> Execution_time
		{
			get
			{
				return this._Execution_time;
			}
			set
			{
				if ((this._Execution_time != value))
				{
					this.OnExecution_timeChanging(value);
					this.SendPropertyChanging();
					this._Execution_time = value;
					this.SendPropertyChanged("Execution_time");
					this.OnExecution_timeChanged();
				}
			}
		}
		
		[Column(Storage="_U_total_rows", DbType="BigInt")]
		public System.Nullable<long> U_total_rows
		{
			get
			{
				return this._U_total_rows;
			}
			set
			{
				if ((this._U_total_rows != value))
				{
					this.OnU_total_rowsChanging(value);
					this.SendPropertyChanging();
					this._U_total_rows = value;
					this.SendPropertyChanged("U_total_rows");
					this.OnU_total_rowsChanged();
				}
			}
		}
		
		[Column(Storage="_NU_total_rows", DbType="BigInt")]
		public System.Nullable<long> NU_total_rows
		{
			get
			{
				return this._NU_total_rows;
			}
			set
			{
				if ((this._NU_total_rows != value))
				{
					this.OnNU_total_rowsChanging(value);
					this.SendPropertyChanging();
					this._NU_total_rows = value;
					this.SendPropertyChanged("NU_total_rows");
					this.OnNU_total_rowsChanged();
				}
			}
		}
		
		[Column(Storage="_U_sampled_rows", DbType="BigInt")]
		public System.Nullable<long> U_sampled_rows
		{
			get
			{
				return this._U_sampled_rows;
			}
			set
			{
				if ((this._U_sampled_rows != value))
				{
					this.OnU_sampled_rowsChanging(value);
					this.SendPropertyChanging();
					this._U_sampled_rows = value;
					this.SendPropertyChanged("U_sampled_rows");
					this.OnU_sampled_rowsChanged();
				}
			}
		}
		
		[Column(Storage="_NU_sampled_rows", DbType="BigInt")]
		public System.Nullable<long> NU_sampled_rows
		{
			get
			{
				return this._NU_sampled_rows;
			}
			set
			{
				if ((this._NU_sampled_rows != value))
				{
					this.OnNU_sampled_rowsChanging(value);
					this.SendPropertyChanging();
					this._NU_sampled_rows = value;
					this.SendPropertyChanged("NU_sampled_rows");
					this.OnNU_sampled_rowsChanged();
				}
			}
		}
		
		[Column(Storage="_U_sampled_percent", DbType="Float")]
		public System.Nullable<double> U_sampled_percent
		{
			get
			{
				return this._U_sampled_percent;
			}
			set
			{
				if ((this._U_sampled_percent != value))
				{
					this.OnU_sampled_percentChanging(value);
					this.SendPropertyChanging();
					this._U_sampled_percent = value;
					this.SendPropertyChanged("U_sampled_percent");
					this.OnU_sampled_percentChanged();
				}
			}
		}
		
		[Column(Storage="_NU_sampled_percent", DbType="Float")]
		public System.Nullable<double> NU_sampled_percent
		{
			get
			{
				return this._NU_sampled_percent;
			}
			set
			{
				if ((this._NU_sampled_percent != value))
				{
					this.OnNU_sampled_percentChanging(value);
					this.SendPropertyChanging();
					this._NU_sampled_percent = value;
					this.SendPropertyChanged("NU_sampled_percent");
					this.OnNU_sampled_percentChanged();
				}
			}
		}
		
		[Column(Name="execution_time_sec", Storage="_Execution_time_sec", DbType="Int")]
		public System.Nullable<int> Execution_time_sec
		{
			get
			{
				return this._Execution_time_sec;
			}
			set
			{
				if ((this._Execution_time_sec != value))
				{
					this.OnExecution_time_secChanging(value);
					this.SendPropertyChanging();
					this._Execution_time_sec = value;
					this.SendPropertyChanged("Execution_time_sec");
					this.OnExecution_time_secChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_mview_base_tables")]
	public partial class T_mview_base_tables
	{
		
		private int _Id_event;
		
		private string _Base_table_name;
		
		public T_mview_base_tables()
		{
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL")]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this._Id_event = value;
				}
			}
		}
		
		[Column(Name="base_table_name", Storage="_Base_table_name", DbType="NVarChar(200)")]
		public string Base_table_name
		{
			get
			{
				return this._Base_table_name;
			}
			set
			{
				if ((this._Base_table_name != value))
				{
					this._Base_table_name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_mview_catalog")]
	public partial class T_mview_catalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_mv;
		
		private string _Name;
		
		private string _Table_name;
		
		private string _Description;
		
		private string _Update_mode;
		
		private string _Query_path;
		
		private string _Create_query_tag;
		
		private string _Drop_query_tag;
		
		private string _Init_query_tag;
		
		private string _Full_query_tag;
		
		private string _Progid;
		
		private int _Id_revision;
		
		private string _Tx_checksum;
		
		private EntitySet<T_mview_event> _T_mview_event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_mvChanging(int value);
    partial void OnId_mvChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTable_nameChanging(string value);
    partial void OnTable_nameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUpdate_modeChanging(string value);
    partial void OnUpdate_modeChanged();
    partial void OnQuery_pathChanging(string value);
    partial void OnQuery_pathChanged();
    partial void OnCreate_query_tagChanging(string value);
    partial void OnCreate_query_tagChanged();
    partial void OnDrop_query_tagChanging(string value);
    partial void OnDrop_query_tagChanged();
    partial void OnInit_query_tagChanging(string value);
    partial void OnInit_query_tagChanged();
    partial void OnFull_query_tagChanging(string value);
    partial void OnFull_query_tagChanged();
    partial void OnProgidChanging(string value);
    partial void OnProgidChanged();
    partial void OnId_revisionChanging(int value);
    partial void OnId_revisionChanged();
    partial void OnTx_checksumChanging(string value);
    partial void OnTx_checksumChanged();
    #endregion
		
		public T_mview_catalog()
		{
			this._T_mview_event = new EntitySet<T_mview_event>(new Action<T_mview_event>(this.attach_T_mview_event), new Action<T_mview_event>(this.detach_T_mview_event));
			OnCreated();
		}
		
		[Column(Name="id_mv", Storage="_Id_mv", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_mv
		{
			get
			{
				return this._Id_mv;
			}
			set
			{
				if ((this._Id_mv != value))
				{
					this.OnId_mvChanging(value);
					this.SendPropertyChanging();
					this._Id_mv = value;
					this.SendPropertyChanged("Id_mv");
					this.OnId_mvChanged();
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Name="table_name", Storage="_Table_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Table_name
		{
			get
			{
				return this._Table_name;
			}
			set
			{
				if ((this._Table_name != value))
				{
					this.OnTable_nameChanging(value);
					this.SendPropertyChanging();
					this._Table_name = value;
					this.SendPropertyChanged("Table_name");
					this.OnTable_nameChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="update_mode", Storage="_Update_mode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Update_mode
		{
			get
			{
				return this._Update_mode;
			}
			set
			{
				if ((this._Update_mode != value))
				{
					this.OnUpdate_modeChanging(value);
					this.SendPropertyChanging();
					this._Update_mode = value;
					this.SendPropertyChanged("Update_mode");
					this.OnUpdate_modeChanged();
				}
			}
		}
		
		[Column(Name="query_path", Storage="_Query_path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Query_path
		{
			get
			{
				return this._Query_path;
			}
			set
			{
				if ((this._Query_path != value))
				{
					this.OnQuery_pathChanging(value);
					this.SendPropertyChanging();
					this._Query_path = value;
					this.SendPropertyChanged("Query_path");
					this.OnQuery_pathChanged();
				}
			}
		}
		
		[Column(Name="create_query_tag", Storage="_Create_query_tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Create_query_tag
		{
			get
			{
				return this._Create_query_tag;
			}
			set
			{
				if ((this._Create_query_tag != value))
				{
					this.OnCreate_query_tagChanging(value);
					this.SendPropertyChanging();
					this._Create_query_tag = value;
					this.SendPropertyChanged("Create_query_tag");
					this.OnCreate_query_tagChanged();
				}
			}
		}
		
		[Column(Name="drop_query_tag", Storage="_Drop_query_tag", DbType="NVarChar(200)")]
		public string Drop_query_tag
		{
			get
			{
				return this._Drop_query_tag;
			}
			set
			{
				if ((this._Drop_query_tag != value))
				{
					this.OnDrop_query_tagChanging(value);
					this.SendPropertyChanging();
					this._Drop_query_tag = value;
					this.SendPropertyChanged("Drop_query_tag");
					this.OnDrop_query_tagChanged();
				}
			}
		}
		
		[Column(Name="init_query_tag", Storage="_Init_query_tag", DbType="NVarChar(200)")]
		public string Init_query_tag
		{
			get
			{
				return this._Init_query_tag;
			}
			set
			{
				if ((this._Init_query_tag != value))
				{
					this.OnInit_query_tagChanging(value);
					this.SendPropertyChanging();
					this._Init_query_tag = value;
					this.SendPropertyChanged("Init_query_tag");
					this.OnInit_query_tagChanged();
				}
			}
		}
		
		[Column(Name="full_query_tag", Storage="_Full_query_tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Full_query_tag
		{
			get
			{
				return this._Full_query_tag;
			}
			set
			{
				if ((this._Full_query_tag != value))
				{
					this.OnFull_query_tagChanging(value);
					this.SendPropertyChanging();
					this._Full_query_tag = value;
					this.SendPropertyChanged("Full_query_tag");
					this.OnFull_query_tagChanged();
				}
			}
		}
		
		[Column(Name="progid", Storage="_Progid", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Progid
		{
			get
			{
				return this._Progid;
			}
			set
			{
				if ((this._Progid != value))
				{
					this.OnProgidChanging(value);
					this.SendPropertyChanging();
					this._Progid = value;
					this.SendPropertyChanged("Progid");
					this.OnProgidChanged();
				}
			}
		}
		
		[Column(Name="id_revision", Storage="_Id_revision", DbType="Int NOT NULL")]
		public int Id_revision
		{
			get
			{
				return this._Id_revision;
			}
			set
			{
				if ((this._Id_revision != value))
				{
					this.OnId_revisionChanging(value);
					this.SendPropertyChanging();
					this._Id_revision = value;
					this.SendPropertyChanged("Id_revision");
					this.OnId_revisionChanged();
				}
			}
		}
		
		[Column(Name="tx_checksum", Storage="_Tx_checksum", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tx_checksum
		{
			get
			{
				return this._Tx_checksum;
			}
			set
			{
				if ((this._Tx_checksum != value))
				{
					this.OnTx_checksumChanging(value);
					this.SendPropertyChanging();
					this._Tx_checksum = value;
					this.SendPropertyChanged("Tx_checksum");
					this.OnTx_checksumChanged();
				}
			}
		}
		
		[Association(Name="FK__t_mview_e__id_mv__31B762FC", Storage="_T_mview_event", ThisKey="Id_mv", OtherKey="Id_mv", DeleteRule="NO ACTION")]
		public EntitySet<T_mview_event> T_mview_event
		{
			get
			{
				return this._T_mview_event;
			}
			set
			{
				this._T_mview_event.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_mview_event(T_mview_event entity)
		{
			this.SendPropertyChanging();
			entity.T_mview_catalog = this;
		}
		
		private void detach_T_mview_event(T_mview_event entity)
		{
			this.SendPropertyChanging();
			entity.T_mview_catalog = null;
		}
	}
	
	[Table(Name="dbo.t_mview_event")]
	public partial class T_mview_event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_event;
		
		private int _Id_mv;
		
		private string _Description;
		
		private EntityRef<T_mview_catalog> _T_mview_catalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_eventChanging(int value);
    partial void OnId_eventChanged();
    partial void OnId_mvChanging(int value);
    partial void OnId_mvChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public T_mview_event()
		{
			this._T_mview_catalog = default(EntityRef<T_mview_catalog>);
			OnCreated();
		}
		
		[Column(Name="id_event", Storage="_Id_event", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this.OnId_eventChanging(value);
					this.SendPropertyChanging();
					this._Id_event = value;
					this.SendPropertyChanged("Id_event");
					this.OnId_eventChanged();
				}
			}
		}
		
		[Column(Name="id_mv", Storage="_Id_mv", DbType="Int NOT NULL")]
		public int Id_mv
		{
			get
			{
				return this._Id_mv;
			}
			set
			{
				if ((this._Id_mv != value))
				{
					this.OnId_mvChanging(value);
					this.SendPropertyChanging();
					this._Id_mv = value;
					this.SendPropertyChanged("Id_mv");
					this.OnId_mvChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="FK__t_mview_e__id_mv__31B762FC", Storage="_T_mview_catalog", ThisKey="Id_mv", OtherKey="Id_mv", IsForeignKey=true)]
		public T_mview_catalog T_mview_catalog
		{
			get
			{
				return this._T_mview_catalog.Entity;
			}
			set
			{
				T_mview_catalog previousValue = this._T_mview_catalog.Entity;
				if (((previousValue != value) 
							|| (this._T_mview_catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_mview_catalog.Entity = null;
						previousValue.T_mview_event.Remove(this);
					}
					this._T_mview_catalog.Entity = value;
					if ((value != null))
					{
						value.T_mview_event.Add(this);
						this._Id_mv = value.Id_mv;
					}
					else
					{
						this._Id_mv = default(int);
					}
					this.SendPropertyChanged("T_mview_catalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_mview_map")]
	public partial class T_mview_map
	{
		
		private string _Base_table_name;
		
		private string _Mv_name;
		
		private int _Global_index;
		
		public T_mview_map()
		{
		}
		
		[Column(Name="base_table_name", Storage="_Base_table_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Base_table_name
		{
			get
			{
				return this._Base_table_name;
			}
			set
			{
				if ((this._Base_table_name != value))
				{
					this._Base_table_name = value;
				}
			}
		}
		
		[Column(Name="mv_name", Storage="_Mv_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Mv_name
		{
			get
			{
				return this._Mv_name;
			}
			set
			{
				if ((this._Mv_name != value))
				{
					this._Mv_name = value;
				}
			}
		}
		
		[Column(Name="global_index", Storage="_Global_index", DbType="Int NOT NULL")]
		public int Global_index
		{
			get
			{
				return this._Global_index;
			}
			set
			{
				if ((this._Global_index != value))
				{
					this._Global_index = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_mview_queries")]
	public partial class T_mview_queries
	{
		
		private int _Id_event;
		
		private string _Operation_type;
		
		private string _Update_query_tag;
		
		public T_mview_queries()
		{
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL")]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this._Id_event = value;
				}
			}
		}
		
		[Column(Name="operation_type", Storage="_Operation_type", DbType="VarChar(1)")]
		public string Operation_type
		{
			get
			{
				return this._Operation_type;
			}
			set
			{
				if ((this._Operation_type != value))
				{
					this._Operation_type = value;
				}
			}
		}
		
		[Column(Name="update_query_tag", Storage="_Update_query_tag", DbType="NVarChar(200)")]
		public string Update_query_tag
		{
			get
			{
				return this._Update_query_tag;
			}
			set
			{
				if ((this._Update_query_tag != value))
				{
					this._Update_query_tag = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_mvm_procedures")]
	public partial class T_mvm_procedures
	{
		
		private string _Nm_proc_name;
		
		private System.Nullable<System.DateTime> _Dt_crt;
		
		public T_mvm_procedures()
		{
		}
		
		[Column(Name="nm_proc_name", Storage="_Nm_proc_name", DbType="VarChar(50)")]
		public string Nm_proc_name
		{
			get
			{
				return this._Nm_proc_name;
			}
			set
			{
				if ((this._Nm_proc_name != value))
				{
					this._Nm_proc_name = value;
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this._Dt_crt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_namespace")]
	public partial class T_namespace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_space;
		
		private string _Tx_desc;
		
		private string _Nm_method;
		
		private string _Tx_typ_space;
		
		private EntitySet<T_account_mapper> _T_account_mapper;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnNm_methodChanging(string value);
    partial void OnNm_methodChanged();
    partial void OnTx_typ_spaceChanging(string value);
    partial void OnTx_typ_spaceChanged();
    #endregion
		
		public T_namespace()
		{
			this._T_account_mapper = new EntitySet<T_account_mapper>(new Action<T_account_mapper>(this.attach_T_account_mapper), new Action<T_account_mapper>(this.detach_T_account_mapper));
			OnCreated();
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="nm_method", Storage="_Nm_method", DbType="NVarChar(255)")]
		public string Nm_method
		{
			get
			{
				return this._Nm_method;
			}
			set
			{
				if ((this._Nm_method != value))
				{
					this.OnNm_methodChanging(value);
					this.SendPropertyChanging();
					this._Nm_method = value;
					this.SendPropertyChanged("Nm_method");
					this.OnNm_methodChanged();
				}
			}
		}
		
		[Column(Name="tx_typ_space", Storage="_Tx_typ_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Tx_typ_space
		{
			get
			{
				return this._Tx_typ_space;
			}
			set
			{
				if ((this._Tx_typ_space != value))
				{
					this.OnTx_typ_spaceChanging(value);
					this.SendPropertyChanging();
					this._Tx_typ_space = value;
					this.SendPropertyChanged("Tx_typ_space");
					this.OnTx_typ_spaceChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_ACCOUNT_MAPPER", Storage="_T_account_mapper", ThisKey="Nm_space", OtherKey="Nm_space", DeleteRule="NO ACTION")]
		public EntitySet<T_account_mapper> T_account_mapper
		{
			get
			{
				return this._T_account_mapper;
			}
			set
			{
				this._T_account_mapper.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_account_mapper(T_account_mapper entity)
		{
			this.SendPropertyChanging();
			entity.T_namespace = this;
		}
		
		private void detach_T_account_mapper(T_account_mapper entity)
		{
			this.SendPropertyChanging();
			entity.T_namespace = null;
		}
	}
	
	[Table(Name="dbo.t_nonrecur")]
	public partial class T_nonrecur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _N_event_type;
		
		private EntityRef<T_base_props> _T_base_props;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnN_event_typeChanging(int value);
    partial void OnN_event_typeChanged();
    #endregion
		
		public T_nonrecur()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="n_event_type", Storage="_N_event_type", DbType="Int NOT NULL")]
		public int N_event_type
		{
			get
			{
				return this._N_event_type;
			}
			set
			{
				if ((this._N_event_type != value))
				{
					this.OnN_event_typeChanging(value);
					this.SendPropertyChanging();
					this._N_event_type = value;
					this.SendPropertyChanged("N_event_type");
					this.OnN_event_typeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_NONRECUR", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_nonrecur = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_nonrecur = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_nonrecurring_event_run")]
	public partial class T_nonrecurring_event_run : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_run;
		
		private int _Id_interval;
		
		private System.DateTime _Dt_start;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
		private string _Tx_adapter_name;
		
		private string _Tx_adapter_method;
		
		private string _Tx_config_file;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_runChanging(int value);
    partial void OnId_runChanged();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    partial void OnTx_adapter_nameChanging(string value);
    partial void OnTx_adapter_nameChanged();
    partial void OnTx_adapter_methodChanging(string value);
    partial void OnTx_adapter_methodChanged();
    partial void OnTx_config_fileChanging(string value);
    partial void OnTx_config_fileChanged();
    #endregion
		
		public T_nonrecurring_event_run()
		{
			OnCreated();
		}
		
		[Column(Name="id_run", Storage="_Id_run", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL")]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="tx_adapter_name", Storage="_Tx_adapter_name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Tx_adapter_name
		{
			get
			{
				return this._Tx_adapter_name;
			}
			set
			{
				if ((this._Tx_adapter_name != value))
				{
					this.OnTx_adapter_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_adapter_name = value;
					this.SendPropertyChanged("Tx_adapter_name");
					this.OnTx_adapter_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_adapter_method", Storage="_Tx_adapter_method", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_adapter_method
		{
			get
			{
				return this._Tx_adapter_method;
			}
			set
			{
				if ((this._Tx_adapter_method != value))
				{
					this.OnTx_adapter_methodChanging(value);
					this.SendPropertyChanging();
					this._Tx_adapter_method = value;
					this.SendPropertyChanged("Tx_adapter_method");
					this.OnTx_adapter_methodChanged();
				}
			}
		}
		
		[Column(Name="tx_config_file", Storage="_Tx_config_file", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_config_file
		{
			get
			{
				return this._Tx_config_file;
			}
			set
			{
				if ((this._Tx_config_file != value))
				{
					this.OnTx_config_fileChanging(value);
					this.SendPropertyChanging();
					this._Tx_config_file = value;
					this.SendPropertyChanged("Tx_config_file");
					this.OnTx_config_fileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_object_history")]
	public partial class T_object_history
	{
		
		private System.Nullable<int> _Id_prop;
		
		private string _Nm_tablename;
		
		private string _N_version;
		
		private string _Tx_checksum;
		
		public T_object_history()
		{
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int")]
		public System.Nullable<int> Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this._Id_prop = value;
				}
			}
		}
		
		[Column(Name="nm_tablename", Storage="_Nm_tablename", DbType="VarChar(100)")]
		public string Nm_tablename
		{
			get
			{
				return this._Nm_tablename;
			}
			set
			{
				if ((this._Nm_tablename != value))
				{
					this._Nm_tablename = value;
				}
			}
		}
		
		[Column(Name="n_version", Storage="_N_version", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string N_version
		{
			get
			{
				return this._N_version;
			}
			set
			{
				if ((this._N_version != value))
				{
					this._N_version = value;
				}
			}
		}
		
		[Column(Name="tx_checksum", Storage="_Tx_checksum", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tx_checksum
		{
			get
			{
				return this._Tx_checksum;
			}
			set
			{
				if ((this._Tx_checksum != value))
				{
					this._Tx_checksum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_open_transactions")]
	public partial class T_open_transactions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_transaction;
		
		private EntityRef<T_payment_history> _T_payment_history;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_transactionChanging(string value);
    partial void OnId_payment_transactionChanged();
    #endregion
		
		public T_open_transactions()
		{
			this._T_payment_history = default(EntityRef<T_payment_history>);
			OnCreated();
		}
		
		[Column(Name="id_payment_transaction", Storage="_Id_payment_transaction", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_transaction
		{
			get
			{
				return this._Id_payment_transaction;
			}
			set
			{
				if ((this._Id_payment_transaction != value))
				{
					this.OnId_payment_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_transaction = value;
					this.SendPropertyChanged("Id_payment_transaction");
					this.OnId_payment_transactionChanged();
				}
			}
		}
		
		[Association(Name="FK_t_open_transactions_table", Storage="_T_payment_history", ThisKey="Id_payment_transaction", OtherKey="Id_payment_transaction", IsForeignKey=true)]
		public T_payment_history T_payment_history
		{
			get
			{
				return this._T_payment_history.Entity;
			}
			set
			{
				T_payment_history previousValue = this._T_payment_history.Entity;
				if (((previousValue != value) 
							|| (this._T_payment_history.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_payment_history.Entity = null;
						previousValue.T_open_transactions = null;
					}
					this._T_payment_history.Entity = value;
					if ((value != null))
					{
						value.T_open_transactions = this;
						this._Id_payment_transaction = value.Id_payment_transaction;
					}
					else
					{
						this._Id_payment_transaction = default(string);
					}
					this.SendPropertyChanged("T_payment_history");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_param_table_prop")]
	public partial class T_param_table_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_param_table_prop;
		
		private int _Id_param_table;
		
		private string _Nm_name;
		
		private string _Nm_data_type;
		
		private string _Nm_column_name;
		
		private string _B_required;
		
		private string _B_composite_idx;
		
		private string _B_single_idx;
		
		private string _B_part_of_key;
		
		private string _B_exportable;
		
		private string _B_filterable;
		
		private string _B_user_visible;
		
		private string _Nm_default_value;
		
		private int _N_prop_type;
		
		private string _Nm_space;
		
		private string _Nm_enum;
		
		private string _B_core;
		
		private string _B_columnoperator;
		
		private string _Nm_operatorval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_param_table_propChanging(int value);
    partial void OnId_param_table_propChanged();
    partial void OnId_param_tableChanging(int value);
    partial void OnId_param_tableChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_data_typeChanging(string value);
    partial void OnNm_data_typeChanged();
    partial void OnNm_column_nameChanging(string value);
    partial void OnNm_column_nameChanged();
    partial void OnB_requiredChanging(string value);
    partial void OnB_requiredChanged();
    partial void OnB_composite_idxChanging(string value);
    partial void OnB_composite_idxChanged();
    partial void OnB_single_idxChanging(string value);
    partial void OnB_single_idxChanged();
    partial void OnB_part_of_keyChanging(string value);
    partial void OnB_part_of_keyChanged();
    partial void OnB_exportableChanging(string value);
    partial void OnB_exportableChanged();
    partial void OnB_filterableChanging(string value);
    partial void OnB_filterableChanged();
    partial void OnB_user_visibleChanging(string value);
    partial void OnB_user_visibleChanged();
    partial void OnNm_default_valueChanging(string value);
    partial void OnNm_default_valueChanged();
    partial void OnN_prop_typeChanging(int value);
    partial void OnN_prop_typeChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnNm_enumChanging(string value);
    partial void OnNm_enumChanged();
    partial void OnB_coreChanging(string value);
    partial void OnB_coreChanged();
    partial void OnB_columnoperatorChanging(string value);
    partial void OnB_columnoperatorChanged();
    partial void OnNm_operatorvalChanging(string value);
    partial void OnNm_operatorvalChanged();
    #endregion
		
		public T_param_table_prop()
		{
			OnCreated();
		}
		
		[Column(Name="id_param_table_prop", Storage="_Id_param_table_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_param_table_prop
		{
			get
			{
				return this._Id_param_table_prop;
			}
			set
			{
				if ((this._Id_param_table_prop != value))
				{
					this.OnId_param_table_propChanging(value);
					this.SendPropertyChanging();
					this._Id_param_table_prop = value;
					this.SendPropertyChanged("Id_param_table_prop");
					this.OnId_param_table_propChanged();
				}
			}
		}
		
		[Column(Name="id_param_table", Storage="_Id_param_table", DbType="Int NOT NULL")]
		public int Id_param_table
		{
			get
			{
				return this._Id_param_table;
			}
			set
			{
				if ((this._Id_param_table != value))
				{
					this.OnId_param_tableChanging(value);
					this.SendPropertyChanging();
					this._Id_param_table = value;
					this.SendPropertyChanged("Id_param_table");
					this.OnId_param_tableChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_data_type", Storage="_Nm_data_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_data_type
		{
			get
			{
				return this._Nm_data_type;
			}
			set
			{
				if ((this._Nm_data_type != value))
				{
					this.OnNm_data_typeChanging(value);
					this.SendPropertyChanging();
					this._Nm_data_type = value;
					this.SendPropertyChanged("Nm_data_type");
					this.OnNm_data_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_column_name", Storage="_Nm_column_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_column_name
		{
			get
			{
				return this._Nm_column_name;
			}
			set
			{
				if ((this._Nm_column_name != value))
				{
					this.OnNm_column_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_column_name = value;
					this.SendPropertyChanged("Nm_column_name");
					this.OnNm_column_nameChanged();
				}
			}
		}
		
		[Column(Name="b_required", Storage="_B_required", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_required
		{
			get
			{
				return this._B_required;
			}
			set
			{
				if ((this._B_required != value))
				{
					this.OnB_requiredChanging(value);
					this.SendPropertyChanging();
					this._B_required = value;
					this.SendPropertyChanged("B_required");
					this.OnB_requiredChanged();
				}
			}
		}
		
		[Column(Name="b_composite_idx", Storage="_B_composite_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_composite_idx
		{
			get
			{
				return this._B_composite_idx;
			}
			set
			{
				if ((this._B_composite_idx != value))
				{
					this.OnB_composite_idxChanging(value);
					this.SendPropertyChanging();
					this._B_composite_idx = value;
					this.SendPropertyChanged("B_composite_idx");
					this.OnB_composite_idxChanged();
				}
			}
		}
		
		[Column(Name="b_single_idx", Storage="_B_single_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_single_idx
		{
			get
			{
				return this._B_single_idx;
			}
			set
			{
				if ((this._B_single_idx != value))
				{
					this.OnB_single_idxChanging(value);
					this.SendPropertyChanging();
					this._B_single_idx = value;
					this.SendPropertyChanged("B_single_idx");
					this.OnB_single_idxChanged();
				}
			}
		}
		
		[Column(Name="b_part_of_key", Storage="_B_part_of_key", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_part_of_key
		{
			get
			{
				return this._B_part_of_key;
			}
			set
			{
				if ((this._B_part_of_key != value))
				{
					this.OnB_part_of_keyChanging(value);
					this.SendPropertyChanging();
					this._B_part_of_key = value;
					this.SendPropertyChanged("B_part_of_key");
					this.OnB_part_of_keyChanged();
				}
			}
		}
		
		[Column(Name="b_exportable", Storage="_B_exportable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_exportable
		{
			get
			{
				return this._B_exportable;
			}
			set
			{
				if ((this._B_exportable != value))
				{
					this.OnB_exportableChanging(value);
					this.SendPropertyChanging();
					this._B_exportable = value;
					this.SendPropertyChanged("B_exportable");
					this.OnB_exportableChanged();
				}
			}
		}
		
		[Column(Name="b_filterable", Storage="_B_filterable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_filterable
		{
			get
			{
				return this._B_filterable;
			}
			set
			{
				if ((this._B_filterable != value))
				{
					this.OnB_filterableChanging(value);
					this.SendPropertyChanging();
					this._B_filterable = value;
					this.SendPropertyChanged("B_filterable");
					this.OnB_filterableChanged();
				}
			}
		}
		
		[Column(Name="b_user_visible", Storage="_B_user_visible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_visible
		{
			get
			{
				return this._B_user_visible;
			}
			set
			{
				if ((this._B_user_visible != value))
				{
					this.OnB_user_visibleChanging(value);
					this.SendPropertyChanging();
					this._B_user_visible = value;
					this.SendPropertyChanged("B_user_visible");
					this.OnB_user_visibleChanged();
				}
			}
		}
		
		[Column(Name="nm_default_value", Storage="_Nm_default_value", DbType="NVarChar(255)")]
		public string Nm_default_value
		{
			get
			{
				return this._Nm_default_value;
			}
			set
			{
				if ((this._Nm_default_value != value))
				{
					this.OnNm_default_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_default_value = value;
					this.SendPropertyChanged("Nm_default_value");
					this.OnNm_default_valueChanged();
				}
			}
		}
		
		[Column(Name="n_prop_type", Storage="_N_prop_type", DbType="Int NOT NULL")]
		public int N_prop_type
		{
			get
			{
				return this._N_prop_type;
			}
			set
			{
				if ((this._N_prop_type != value))
				{
					this.OnN_prop_typeChanging(value);
					this.SendPropertyChanging();
					this._N_prop_type = value;
					this.SendPropertyChanged("N_prop_type");
					this.OnN_prop_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(255)")]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="nm_enum", Storage="_Nm_enum", DbType="NVarChar(255)")]
		public string Nm_enum
		{
			get
			{
				return this._Nm_enum;
			}
			set
			{
				if ((this._Nm_enum != value))
				{
					this.OnNm_enumChanging(value);
					this.SendPropertyChanging();
					this._Nm_enum = value;
					this.SendPropertyChanged("Nm_enum");
					this.OnNm_enumChanged();
				}
			}
		}
		
		[Column(Name="b_core", Storage="_B_core", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_core
		{
			get
			{
				return this._B_core;
			}
			set
			{
				if ((this._B_core != value))
				{
					this.OnB_coreChanging(value);
					this.SendPropertyChanging();
					this._B_core = value;
					this.SendPropertyChanged("B_core");
					this.OnB_coreChanged();
				}
			}
		}
		
		[Column(Name="b_columnoperator", Storage="_B_columnoperator", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_columnoperator
		{
			get
			{
				return this._B_columnoperator;
			}
			set
			{
				if ((this._B_columnoperator != value))
				{
					this.OnB_columnoperatorChanging(value);
					this.SendPropertyChanging();
					this._B_columnoperator = value;
					this.SendPropertyChanged("B_columnoperator");
					this.OnB_columnoperatorChanged();
				}
			}
		}
		
		[Column(Name="nm_operatorval", Storage="_Nm_operatorval", DbType="VarChar(50)")]
		public string Nm_operatorval
		{
			get
			{
				return this._Nm_operatorval;
			}
			set
			{
				if ((this._Nm_operatorval != value))
				{
					this.OnNm_operatorvalChanging(value);
					this.SendPropertyChanging();
					this._Nm_operatorval = value;
					this.SendPropertyChanged("Nm_operatorval");
					this.OnNm_operatorvalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_partition")]
	public partial class T_partition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_partition;
		
		private string _Partition_name;
		
		private System.DateTime _Dt_start;
		
		private System.DateTime _Dt_end;
		
		private int _Id_interval_start;
		
		private int _Id_interval_end;
		
		private string _B_default;
		
		private string _B_active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnPartition_nameChanging(string value);
    partial void OnPartition_nameChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.DateTime value);
    partial void OnDt_endChanged();
    partial void OnId_interval_startChanging(int value);
    partial void OnId_interval_startChanged();
    partial void OnId_interval_endChanging(int value);
    partial void OnId_interval_endChanged();
    partial void OnB_defaultChanging(string value);
    partial void OnB_defaultChanged();
    partial void OnB_activeChanging(string value);
    partial void OnB_activeChanged();
    #endregion
		
		public T_partition()
		{
			OnCreated();
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="partition_name", Storage="_Partition_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Partition_name
		{
			get
			{
				return this._Partition_name;
			}
			set
			{
				if ((this._Partition_name != value))
				{
					this.OnPartition_nameChanging(value);
					this.SendPropertyChanging();
					this._Partition_name = value;
					this.SendPropertyChanged("Partition_name");
					this.OnPartition_nameChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="id_interval_start", Storage="_Id_interval_start", DbType="Int NOT NULL")]
		public int Id_interval_start
		{
			get
			{
				return this._Id_interval_start;
			}
			set
			{
				if ((this._Id_interval_start != value))
				{
					this.OnId_interval_startChanging(value);
					this.SendPropertyChanging();
					this._Id_interval_start = value;
					this.SendPropertyChanged("Id_interval_start");
					this.OnId_interval_startChanged();
				}
			}
		}
		
		[Column(Name="id_interval_end", Storage="_Id_interval_end", DbType="Int NOT NULL")]
		public int Id_interval_end
		{
			get
			{
				return this._Id_interval_end;
			}
			set
			{
				if ((this._Id_interval_end != value))
				{
					this.OnId_interval_endChanging(value);
					this.SendPropertyChanging();
					this._Id_interval_end = value;
					this.SendPropertyChanged("Id_interval_end");
					this.OnId_interval_endChanged();
				}
			}
		}
		
		[Column(Name="b_default", Storage="_B_default", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_default
		{
			get
			{
				return this._B_default;
			}
			set
			{
				if ((this._B_default != value))
				{
					this.OnB_defaultChanging(value);
					this.SendPropertyChanging();
					this._B_default = value;
					this.SendPropertyChanged("B_default");
					this.OnB_defaultChanged();
				}
			}
		}
		
		[Column(Name="b_active", Storage="_B_active", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_active
		{
			get
			{
				return this._B_active;
			}
			set
			{
				if ((this._B_active != value))
				{
					this.OnB_activeChanging(value);
					this.SendPropertyChanging();
					this._B_active = value;
					this.SendPropertyChanged("B_active");
					this.OnB_activeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_partition_storage")]
	public partial class T_partition_storage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_path;
		
		private string _B_next;
		
		private string _Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pathChanging(int value);
    partial void OnId_pathChanged();
    partial void OnB_nextChanging(string value);
    partial void OnB_nextChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    #endregion
		
		public T_partition_storage()
		{
			OnCreated();
		}
		
		[Column(Name="id_path", Storage="_Id_path", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_path
		{
			get
			{
				return this._Id_path;
			}
			set
			{
				if ((this._Id_path != value))
				{
					this.OnId_pathChanging(value);
					this.SendPropertyChanging();
					this._Id_path = value;
					this.SendPropertyChanged("Id_path");
					this.OnId_pathChanged();
				}
			}
		}
		
		[Column(Name="b_next", Storage="_B_next", DbType="Char(1)")]
		public string B_next
		{
			get
			{
				return this._B_next;
			}
			set
			{
				if ((this._B_next != value))
				{
					this.OnB_nextChanging(value);
					this.SendPropertyChanging();
					this._B_next = value;
					this.SendPropertyChanged("B_next");
					this.OnB_nextChanged();
				}
			}
		}
		
		[Column(Name="path", Storage="_Path", DbType="VarChar(500)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_path_capability")]
	public partial class T_path_capability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cap_instance;
		
		private string _Tx_param_name;
		
		private string _Tx_op;
		
		private string _Param_value;
		
		private EntityRef<T_capability_instance> _T_capability_instance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cap_instanceChanging(int value);
    partial void OnId_cap_instanceChanged();
    partial void OnTx_param_nameChanging(string value);
    partial void OnTx_param_nameChanged();
    partial void OnTx_opChanging(string value);
    partial void OnTx_opChanged();
    partial void OnParam_valueChanging(string value);
    partial void OnParam_valueChanged();
    #endregion
		
		public T_path_capability()
		{
			this._T_capability_instance = default(EntityRef<T_capability_instance>);
			OnCreated();
		}
		
		[Column(Name="id_cap_instance", Storage="_Id_cap_instance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_cap_instance
		{
			get
			{
				return this._Id_cap_instance;
			}
			set
			{
				if ((this._Id_cap_instance != value))
				{
					this.OnId_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_instance = value;
					this.SendPropertyChanged("Id_cap_instance");
					this.OnId_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_param_name", Storage="_Tx_param_name", DbType="NVarChar(2000)")]
		public string Tx_param_name
		{
			get
			{
				return this._Tx_param_name;
			}
			set
			{
				if ((this._Tx_param_name != value))
				{
					this.OnTx_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_param_name = value;
					this.SendPropertyChanged("Tx_param_name");
					this.OnTx_param_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_op", Storage="_Tx_op", DbType="VarChar(1)")]
		public string Tx_op
		{
			get
			{
				return this._Tx_op;
			}
			set
			{
				if ((this._Tx_op != value))
				{
					this.OnTx_opChanging(value);
					this.SendPropertyChanging();
					this._Tx_op = value;
					this.SendPropertyChanged("Tx_op");
					this.OnTx_opChanged();
				}
			}
		}
		
		[Column(Name="param_value", Storage="_Param_value", DbType="NVarChar(2000)")]
		public string Param_value
		{
			get
			{
				return this._Param_value;
			}
			set
			{
				if ((this._Param_value != value))
				{
					this.OnParam_valueChanging(value);
					this.SendPropertyChanging();
					this._Param_value = value;
					this.SendPropertyChanged("Param_value");
					this.OnParam_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PATH_CAPABILITY", Storage="_T_capability_instance", ThisKey="Id_cap_instance", OtherKey="Id_cap_instance", IsForeignKey=true)]
		public T_capability_instance T_capability_instance
		{
			get
			{
				return this._T_capability_instance.Entity;
			}
			set
			{
				T_capability_instance previousValue = this._T_capability_instance.Entity;
				if (((previousValue != value) 
							|| (this._T_capability_instance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_capability_instance.Entity = null;
						previousValue.T_path_capability = null;
					}
					this._T_capability_instance.Entity = value;
					if ((value != null))
					{
						value.T_path_capability = this;
						this._Id_cap_instance = value.Id_cap_instance;
					}
					else
					{
						this._Id_cap_instance = default(int);
					}
					this.SendPropertyChanged("T_capability_instance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_audit")]
	public partial class T_payment_audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_audit;
		
		private int _Id_acc;
		
		private string _Nm_action;
		
		private string _Nm_routingnumber;
		
		private string _Nm_lastfourdigits;
		
		private string _Nm_accounttype;
		
		private string _Nm_bankname;
		
		private string _Nm_expdate;
		
		private System.Nullable<int> _Id_expdatef;
		
		private System.DateTime _Dt_occurred;
		
		private string _Tx_IP_subscriber;
		
		private string _Tx_phone_number;
		
		private string _Tx_IP_CSR;
		
		private string _Id_CSR;
		
		private string _Tx_notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnNm_actionChanging(string value);
    partial void OnNm_actionChanged();
    partial void OnNm_routingnumberChanging(string value);
    partial void OnNm_routingnumberChanged();
    partial void OnNm_lastfourdigitsChanging(string value);
    partial void OnNm_lastfourdigitsChanged();
    partial void OnNm_accounttypeChanging(string value);
    partial void OnNm_accounttypeChanged();
    partial void OnNm_banknameChanging(string value);
    partial void OnNm_banknameChanged();
    partial void OnNm_expdateChanging(string value);
    partial void OnNm_expdateChanged();
    partial void OnId_expdatefChanging(System.Nullable<int> value);
    partial void OnId_expdatefChanged();
    partial void OnDt_occurredChanging(System.DateTime value);
    partial void OnDt_occurredChanged();
    partial void OnTx_IP_subscriberChanging(string value);
    partial void OnTx_IP_subscriberChanged();
    partial void OnTx_phone_numberChanging(string value);
    partial void OnTx_phone_numberChanged();
    partial void OnTx_IP_CSRChanging(string value);
    partial void OnTx_IP_CSRChanged();
    partial void OnId_CSRChanging(string value);
    partial void OnId_CSRChanged();
    partial void OnTx_notesChanging(string value);
    partial void OnTx_notesChanged();
    #endregion
		
		public T_payment_audit()
		{
			OnCreated();
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="nm_action", Storage="_Nm_action", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_action
		{
			get
			{
				return this._Nm_action;
			}
			set
			{
				if ((this._Nm_action != value))
				{
					this.OnNm_actionChanging(value);
					this.SendPropertyChanging();
					this._Nm_action = value;
					this.SendPropertyChanged("Nm_action");
					this.OnNm_actionChanged();
				}
			}
		}
		
		[Column(Name="nm_routingnumber", Storage="_Nm_routingnumber", DbType="NVarChar(9)")]
		public string Nm_routingnumber
		{
			get
			{
				return this._Nm_routingnumber;
			}
			set
			{
				if ((this._Nm_routingnumber != value))
				{
					this.OnNm_routingnumberChanging(value);
					this.SendPropertyChanging();
					this._Nm_routingnumber = value;
					this.SendPropertyChanged("Nm_routingnumber");
					this.OnNm_routingnumberChanged();
				}
			}
		}
		
		[Column(Name="nm_lastfourdigits", Storage="_Nm_lastfourdigits", DbType="NVarChar(4)")]
		public string Nm_lastfourdigits
		{
			get
			{
				return this._Nm_lastfourdigits;
			}
			set
			{
				if ((this._Nm_lastfourdigits != value))
				{
					this.OnNm_lastfourdigitsChanging(value);
					this.SendPropertyChanging();
					this._Nm_lastfourdigits = value;
					this.SendPropertyChanged("Nm_lastfourdigits");
					this.OnNm_lastfourdigitsChanged();
				}
			}
		}
		
		[Column(Name="nm_accounttype", Storage="_Nm_accounttype", DbType="NVarChar(64)")]
		public string Nm_accounttype
		{
			get
			{
				return this._Nm_accounttype;
			}
			set
			{
				if ((this._Nm_accounttype != value))
				{
					this.OnNm_accounttypeChanging(value);
					this.SendPropertyChanging();
					this._Nm_accounttype = value;
					this.SendPropertyChanged("Nm_accounttype");
					this.OnNm_accounttypeChanged();
				}
			}
		}
		
		[Column(Name="nm_bankname", Storage="_Nm_bankname", DbType="NVarChar(40)")]
		public string Nm_bankname
		{
			get
			{
				return this._Nm_bankname;
			}
			set
			{
				if ((this._Nm_bankname != value))
				{
					this.OnNm_banknameChanging(value);
					this.SendPropertyChanging();
					this._Nm_bankname = value;
					this.SendPropertyChanged("Nm_bankname");
					this.OnNm_banknameChanged();
				}
			}
		}
		
		[Column(Name="nm_expdate", Storage="_Nm_expdate", DbType="NVarChar(20)")]
		public string Nm_expdate
		{
			get
			{
				return this._Nm_expdate;
			}
			set
			{
				if ((this._Nm_expdate != value))
				{
					this.OnNm_expdateChanging(value);
					this.SendPropertyChanging();
					this._Nm_expdate = value;
					this.SendPropertyChanged("Nm_expdate");
					this.OnNm_expdateChanged();
				}
			}
		}
		
		[Column(Name="id_expdatef", Storage="_Id_expdatef", DbType="Int")]
		public System.Nullable<int> Id_expdatef
		{
			get
			{
				return this._Id_expdatef;
			}
			set
			{
				if ((this._Id_expdatef != value))
				{
					this.OnId_expdatefChanging(value);
					this.SendPropertyChanging();
					this._Id_expdatef = value;
					this.SendPropertyChanged("Id_expdatef");
					this.OnId_expdatefChanged();
				}
			}
		}
		
		[Column(Name="dt_occurred", Storage="_Dt_occurred", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_occurred
		{
			get
			{
				return this._Dt_occurred;
			}
			set
			{
				if ((this._Dt_occurred != value))
				{
					this.OnDt_occurredChanging(value);
					this.SendPropertyChanging();
					this._Dt_occurred = value;
					this.SendPropertyChanged("Dt_occurred");
					this.OnDt_occurredChanged();
				}
			}
		}
		
		[Column(Name="tx_IP_subscriber", Storage="_Tx_IP_subscriber", DbType="NVarChar(20)")]
		public string Tx_IP_subscriber
		{
			get
			{
				return this._Tx_IP_subscriber;
			}
			set
			{
				if ((this._Tx_IP_subscriber != value))
				{
					this.OnTx_IP_subscriberChanging(value);
					this.SendPropertyChanging();
					this._Tx_IP_subscriber = value;
					this.SendPropertyChanged("Tx_IP_subscriber");
					this.OnTx_IP_subscriberChanged();
				}
			}
		}
		
		[Column(Name="tx_phone_number", Storage="_Tx_phone_number", DbType="NVarChar(30)")]
		public string Tx_phone_number
		{
			get
			{
				return this._Tx_phone_number;
			}
			set
			{
				if ((this._Tx_phone_number != value))
				{
					this.OnTx_phone_numberChanging(value);
					this.SendPropertyChanging();
					this._Tx_phone_number = value;
					this.SendPropertyChanged("Tx_phone_number");
					this.OnTx_phone_numberChanged();
				}
			}
		}
		
		[Column(Name="tx_IP_CSR", Storage="_Tx_IP_CSR", DbType="NVarChar(20)")]
		public string Tx_IP_CSR
		{
			get
			{
				return this._Tx_IP_CSR;
			}
			set
			{
				if ((this._Tx_IP_CSR != value))
				{
					this.OnTx_IP_CSRChanging(value);
					this.SendPropertyChanging();
					this._Tx_IP_CSR = value;
					this.SendPropertyChanged("Tx_IP_CSR");
					this.OnTx_IP_CSRChanged();
				}
			}
		}
		
		[Column(Name="id_CSR", Storage="_Id_CSR", DbType="NVarChar(20)")]
		public string Id_CSR
		{
			get
			{
				return this._Id_CSR;
			}
			set
			{
				if ((this._Id_CSR != value))
				{
					this.OnId_CSRChanging(value);
					this.SendPropertyChanging();
					this._Id_CSR = value;
					this.SendPropertyChanged("Id_CSR");
					this.OnId_CSRChanged();
				}
			}
		}
		
		[Column(Name="tx_notes", Storage="_Tx_notes", DbType="NVarChar(255)")]
		public string Tx_notes
		{
			get
			{
				return this._Tx_notes;
			}
			set
			{
				if ((this._Tx_notes != value))
				{
					this.OnTx_notesChanging(value);
					this.SendPropertyChanging();
					this._Tx_notes = value;
					this.SendPropertyChanged("Tx_notes");
					this.OnTx_notesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_history")]
	public partial class T_payment_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_transaction;
		
		private int _Id_acct;
		
		private System.DateTime _Dt_transaction;
		
		private int _N_payment_method_type;
		
		private string _Nm_truncd_acct_num;
		
		private System.Nullable<int> _Id_creditcard_type;
		
		private System.Nullable<int> _N_account_type;
		
		private string _Nm_description;
		
		private string _N_currency;
		
		private decimal _N_amount;
		
		private string _N_transaction_type;
		
		private string _N_state;
		
		private string _N_gateway_response;
		
		private System.DateTime _Dt_last_updated;
		
		private string _N_operator_notes;
		
		private string _Id_payment_instrument;
		
		private System.Data.Linq.Binary _Payment_info;
		
		private string _Linked_transaction;
		
		private EntityRef<T_open_transactions> _T_open_transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_transactionChanging(string value);
    partial void OnId_payment_transactionChanged();
    partial void OnId_acctChanging(int value);
    partial void OnId_acctChanged();
    partial void OnDt_transactionChanging(System.DateTime value);
    partial void OnDt_transactionChanged();
    partial void OnN_payment_method_typeChanging(int value);
    partial void OnN_payment_method_typeChanged();
    partial void OnNm_truncd_acct_numChanging(string value);
    partial void OnNm_truncd_acct_numChanged();
    partial void OnId_creditcard_typeChanging(System.Nullable<int> value);
    partial void OnId_creditcard_typeChanged();
    partial void OnN_account_typeChanging(System.Nullable<int> value);
    partial void OnN_account_typeChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnN_currencyChanging(string value);
    partial void OnN_currencyChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnN_transaction_typeChanging(string value);
    partial void OnN_transaction_typeChanged();
    partial void OnN_stateChanging(string value);
    partial void OnN_stateChanged();
    partial void OnN_gateway_responseChanging(string value);
    partial void OnN_gateway_responseChanged();
    partial void OnDt_last_updatedChanging(System.DateTime value);
    partial void OnDt_last_updatedChanged();
    partial void OnN_operator_notesChanging(string value);
    partial void OnN_operator_notesChanged();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnPayment_infoChanging(System.Data.Linq.Binary value);
    partial void OnPayment_infoChanged();
    partial void OnLinked_transactionChanging(string value);
    partial void OnLinked_transactionChanged();
    #endregion
		
		public T_payment_history()
		{
			this._T_open_transactions = default(EntityRef<T_open_transactions>);
			OnCreated();
		}
		
		[Column(Name="id_payment_transaction", Storage="_Id_payment_transaction", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_transaction
		{
			get
			{
				return this._Id_payment_transaction;
			}
			set
			{
				if ((this._Id_payment_transaction != value))
				{
					this.OnId_payment_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_transaction = value;
					this.SendPropertyChanged("Id_payment_transaction");
					this.OnId_payment_transactionChanged();
				}
			}
		}
		
		[Column(Name="id_acct", Storage="_Id_acct", DbType="Int NOT NULL")]
		public int Id_acct
		{
			get
			{
				return this._Id_acct;
			}
			set
			{
				if ((this._Id_acct != value))
				{
					this.OnId_acctChanging(value);
					this.SendPropertyChanging();
					this._Id_acct = value;
					this.SendPropertyChanged("Id_acct");
					this.OnId_acctChanged();
				}
			}
		}
		
		[Column(Name="dt_transaction", Storage="_Dt_transaction", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_transaction
		{
			get
			{
				return this._Dt_transaction;
			}
			set
			{
				if ((this._Dt_transaction != value))
				{
					this.OnDt_transactionChanging(value);
					this.SendPropertyChanging();
					this._Dt_transaction = value;
					this.SendPropertyChanged("Dt_transaction");
					this.OnDt_transactionChanged();
				}
			}
		}
		
		[Column(Name="n_payment_method_type", Storage="_N_payment_method_type", DbType="Int NOT NULL")]
		public int N_payment_method_type
		{
			get
			{
				return this._N_payment_method_type;
			}
			set
			{
				if ((this._N_payment_method_type != value))
				{
					this.OnN_payment_method_typeChanging(value);
					this.SendPropertyChanging();
					this._N_payment_method_type = value;
					this.SendPropertyChanged("N_payment_method_type");
					this.OnN_payment_method_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_truncd_acct_num", Storage="_Nm_truncd_acct_num", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_truncd_acct_num
		{
			get
			{
				return this._Nm_truncd_acct_num;
			}
			set
			{
				if ((this._Nm_truncd_acct_num != value))
				{
					this.OnNm_truncd_acct_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_truncd_acct_num = value;
					this.SendPropertyChanged("Nm_truncd_acct_num");
					this.OnNm_truncd_acct_numChanged();
				}
			}
		}
		
		[Column(Name="id_creditcard_type", Storage="_Id_creditcard_type", DbType="Int")]
		public System.Nullable<int> Id_creditcard_type
		{
			get
			{
				return this._Id_creditcard_type;
			}
			set
			{
				if ((this._Id_creditcard_type != value))
				{
					this.OnId_creditcard_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_creditcard_type = value;
					this.SendPropertyChanged("Id_creditcard_type");
					this.OnId_creditcard_typeChanged();
				}
			}
		}
		
		[Column(Name="n_account_type", Storage="_N_account_type", DbType="Int")]
		public System.Nullable<int> N_account_type
		{
			get
			{
				return this._N_account_type;
			}
			set
			{
				if ((this._N_account_type != value))
				{
					this.OnN_account_typeChanging(value);
					this.SendPropertyChanging();
					this._N_account_type = value;
					this.SendPropertyChanged("N_account_type");
					this.OnN_account_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="n_currency", Storage="_N_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string N_currency
		{
			get
			{
				return this._N_currency;
			}
			set
			{
				if ((this._N_currency != value))
				{
					this.OnN_currencyChanging(value);
					this.SendPropertyChanging();
					this._N_currency = value;
					this.SendPropertyChanged("N_currency");
					this.OnN_currencyChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="n_transaction_type", Storage="_N_transaction_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string N_transaction_type
		{
			get
			{
				return this._N_transaction_type;
			}
			set
			{
				if ((this._N_transaction_type != value))
				{
					this.OnN_transaction_typeChanging(value);
					this.SendPropertyChanging();
					this._N_transaction_type = value;
					this.SendPropertyChanged("N_transaction_type");
					this.OnN_transaction_typeChanged();
				}
			}
		}
		
		[Column(Name="n_state", Storage="_N_state", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string N_state
		{
			get
			{
				return this._N_state;
			}
			set
			{
				if ((this._N_state != value))
				{
					this.OnN_stateChanging(value);
					this.SendPropertyChanging();
					this._N_state = value;
					this.SendPropertyChanged("N_state");
					this.OnN_stateChanged();
				}
			}
		}
		
		[Column(Name="n_gateway_response", Storage="_N_gateway_response", DbType="NVarChar(400)")]
		public string N_gateway_response
		{
			get
			{
				return this._N_gateway_response;
			}
			set
			{
				if ((this._N_gateway_response != value))
				{
					this.OnN_gateway_responseChanging(value);
					this.SendPropertyChanging();
					this._N_gateway_response = value;
					this.SendPropertyChanged("N_gateway_response");
					this.OnN_gateway_responseChanged();
				}
			}
		}
		
		[Column(Name="dt_last_updated", Storage="_Dt_last_updated", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_last_updated
		{
			get
			{
				return this._Dt_last_updated;
			}
			set
			{
				if ((this._Dt_last_updated != value))
				{
					this.OnDt_last_updatedChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_updated = value;
					this.SendPropertyChanged("Dt_last_updated");
					this.OnDt_last_updatedChanged();
				}
			}
		}
		
		[Column(Name="n_operator_notes", Storage="_N_operator_notes", DbType="NVarChar(500)")]
		public string N_operator_notes
		{
			get
			{
				return this._N_operator_notes;
			}
			set
			{
				if ((this._N_operator_notes != value))
				{
					this.OnN_operator_notesChanging(value);
					this.SendPropertyChanging();
					this._N_operator_notes = value;
					this.SendPropertyChanged("N_operator_notes");
					this.OnN_operator_notesChanged();
				}
			}
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72)")]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="payment_info", Storage="_Payment_info", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Payment_info
		{
			get
			{
				return this._Payment_info;
			}
			set
			{
				if ((this._Payment_info != value))
				{
					this.OnPayment_infoChanging(value);
					this.SendPropertyChanging();
					this._Payment_info = value;
					this.SendPropertyChanged("Payment_info");
					this.OnPayment_infoChanged();
				}
			}
		}
		
		[Column(Name="linked_transaction", Storage="_Linked_transaction", DbType="NVarChar(72)")]
		public string Linked_transaction
		{
			get
			{
				return this._Linked_transaction;
			}
			set
			{
				if ((this._Linked_transaction != value))
				{
					this.OnLinked_transactionChanging(value);
					this.SendPropertyChanging();
					this._Linked_transaction = value;
					this.SendPropertyChanged("Linked_transaction");
					this.OnLinked_transactionChanged();
				}
			}
		}
		
		[Association(Name="FK_t_open_transactions_table", Storage="_T_open_transactions", ThisKey="Id_payment_transaction", OtherKey="Id_payment_transaction", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_open_transactions T_open_transactions
		{
			get
			{
				return this._T_open_transactions.Entity;
			}
			set
			{
				T_open_transactions previousValue = this._T_open_transactions.Entity;
				if (((previousValue != value) 
							|| (this._T_open_transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_open_transactions.Entity = null;
						previousValue.T_payment_history = null;
					}
					this._T_open_transactions.Entity = value;
					if ((value != null))
					{
						value.T_payment_history = this;
					}
					this.SendPropertyChanged("T_open_transactions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_history_details")]
	public partial class T_payment_history_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_transaction;
		
		private int _Id_payment_history_details;
		
		private string _Nm_invoice_num;
		
		private System.Nullable<System.DateTime> _Dt_invoice_date;
		
		private string _Nm_po_number;
		
		private System.Nullable<decimal> _N_amount;
		
		private string _Nm_provider_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_transactionChanging(string value);
    partial void OnId_payment_transactionChanged();
    partial void OnId_payment_history_detailsChanging(int value);
    partial void OnId_payment_history_detailsChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnDt_invoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_invoice_dateChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    partial void OnN_amountChanging(System.Nullable<decimal> value);
    partial void OnN_amountChanged();
    partial void OnNm_provider_infoChanging(string value);
    partial void OnNm_provider_infoChanged();
    #endregion
		
		public T_payment_history_details()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_transaction", Storage="_Id_payment_transaction", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_transaction
		{
			get
			{
				return this._Id_payment_transaction;
			}
			set
			{
				if ((this._Id_payment_transaction != value))
				{
					this.OnId_payment_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_transaction = value;
					this.SendPropertyChanged("Id_payment_transaction");
					this.OnId_payment_transactionChanged();
				}
			}
		}
		
		[Column(Name="id_payment_history_details", Storage="_Id_payment_history_details", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_payment_history_details
		{
			get
			{
				return this._Id_payment_history_details;
			}
			set
			{
				if ((this._Id_payment_history_details != value))
				{
					this.OnId_payment_history_detailsChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_history_details = value;
					this.SendPropertyChanged("Id_payment_history_details");
					this.OnId_payment_history_detailsChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(50)")]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice_date", Storage="_Dt_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_invoice_date
		{
			get
			{
				return this._Dt_invoice_date;
			}
			set
			{
				if ((this._Dt_invoice_date != value))
				{
					this.OnDt_invoice_dateChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice_date = value;
					this.SendPropertyChanged("Dt_invoice_date");
					this.OnDt_invoice_dateChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(30)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="nm_provider_info", Storage="_Nm_provider_info", DbType="NVarChar(50)")]
		public string Nm_provider_info
		{
			get
			{
				return this._Nm_provider_info;
			}
			set
			{
				if ((this._Nm_provider_info != value))
				{
					this.OnNm_provider_infoChanging(value);
					this.SendPropertyChanging();
					this._Nm_provider_info = value;
					this.SendPropertyChanged("Nm_provider_info");
					this.OnNm_provider_infoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_instrument")]
	public partial class T_payment_instrument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_instrument;
		
		private System.Nullable<int> _Id_acct;
		
		private int _N_payment_method_type;
		
		private string _Nm_truncd_acct_num;
		
		private string _Tx_hash;
		
		private System.Nullable<int> _Id_creditcard_type;
		
		private System.Nullable<int> _N_account_type;
		
		private string _Nm_exp_date;
		
		private System.Nullable<int> _Nm_exp_date_format;
		
		private string _Nm_first_name;
		
		private string _Nm_middle_name;
		
		private string _Nm_last_name;
		
		private string _Nm_address1;
		
		private string _Nm_address2;
		
		private string _Nm_city;
		
		private string _Nm_state;
		
		private string _Nm_zip;
		
		private int _Id_country;
		
		private System.Nullable<int> _Id_priority;
		
		private System.Nullable<decimal> _N_max_charge_per_cycle;
		
		private System.DateTime _Dt_created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnId_acctChanging(System.Nullable<int> value);
    partial void OnId_acctChanged();
    partial void OnN_payment_method_typeChanging(int value);
    partial void OnN_payment_method_typeChanged();
    partial void OnNm_truncd_acct_numChanging(string value);
    partial void OnNm_truncd_acct_numChanged();
    partial void OnTx_hashChanging(string value);
    partial void OnTx_hashChanged();
    partial void OnId_creditcard_typeChanging(System.Nullable<int> value);
    partial void OnId_creditcard_typeChanged();
    partial void OnN_account_typeChanging(System.Nullable<int> value);
    partial void OnN_account_typeChanged();
    partial void OnNm_exp_dateChanging(string value);
    partial void OnNm_exp_dateChanged();
    partial void OnNm_exp_date_formatChanging(System.Nullable<int> value);
    partial void OnNm_exp_date_formatChanged();
    partial void OnNm_first_nameChanging(string value);
    partial void OnNm_first_nameChanged();
    partial void OnNm_middle_nameChanging(string value);
    partial void OnNm_middle_nameChanged();
    partial void OnNm_last_nameChanging(string value);
    partial void OnNm_last_nameChanged();
    partial void OnNm_address1Changing(string value);
    partial void OnNm_address1Changed();
    partial void OnNm_address2Changing(string value);
    partial void OnNm_address2Changed();
    partial void OnNm_cityChanging(string value);
    partial void OnNm_cityChanged();
    partial void OnNm_stateChanging(string value);
    partial void OnNm_stateChanged();
    partial void OnNm_zipChanging(string value);
    partial void OnNm_zipChanged();
    partial void OnId_countryChanging(int value);
    partial void OnId_countryChanged();
    partial void OnId_priorityChanging(System.Nullable<int> value);
    partial void OnId_priorityChanged();
    partial void OnN_max_charge_per_cycleChanging(System.Nullable<decimal> value);
    partial void OnN_max_charge_per_cycleChanged();
    partial void OnDt_createdChanging(System.DateTime value);
    partial void OnDt_createdChanged();
    #endregion
		
		public T_payment_instrument()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="id_acct", Storage="_Id_acct", DbType="Int")]
		public System.Nullable<int> Id_acct
		{
			get
			{
				return this._Id_acct;
			}
			set
			{
				if ((this._Id_acct != value))
				{
					this.OnId_acctChanging(value);
					this.SendPropertyChanging();
					this._Id_acct = value;
					this.SendPropertyChanged("Id_acct");
					this.OnId_acctChanged();
				}
			}
		}
		
		[Column(Name="n_payment_method_type", Storage="_N_payment_method_type", DbType="Int NOT NULL")]
		public int N_payment_method_type
		{
			get
			{
				return this._N_payment_method_type;
			}
			set
			{
				if ((this._N_payment_method_type != value))
				{
					this.OnN_payment_method_typeChanging(value);
					this.SendPropertyChanging();
					this._N_payment_method_type = value;
					this.SendPropertyChanged("N_payment_method_type");
					this.OnN_payment_method_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_truncd_acct_num", Storage="_Nm_truncd_acct_num", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_truncd_acct_num
		{
			get
			{
				return this._Nm_truncd_acct_num;
			}
			set
			{
				if ((this._Nm_truncd_acct_num != value))
				{
					this.OnNm_truncd_acct_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_truncd_acct_num = value;
					this.SendPropertyChanged("Nm_truncd_acct_num");
					this.OnNm_truncd_acct_numChanged();
				}
			}
		}
		
		[Column(Name="tx_hash", Storage="_Tx_hash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_hash
		{
			get
			{
				return this._Tx_hash;
			}
			set
			{
				if ((this._Tx_hash != value))
				{
					this.OnTx_hashChanging(value);
					this.SendPropertyChanging();
					this._Tx_hash = value;
					this.SendPropertyChanged("Tx_hash");
					this.OnTx_hashChanged();
				}
			}
		}
		
		[Column(Name="id_creditcard_type", Storage="_Id_creditcard_type", DbType="Int")]
		public System.Nullable<int> Id_creditcard_type
		{
			get
			{
				return this._Id_creditcard_type;
			}
			set
			{
				if ((this._Id_creditcard_type != value))
				{
					this.OnId_creditcard_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_creditcard_type = value;
					this.SendPropertyChanged("Id_creditcard_type");
					this.OnId_creditcard_typeChanged();
				}
			}
		}
		
		[Column(Name="n_account_type", Storage="_N_account_type", DbType="Int")]
		public System.Nullable<int> N_account_type
		{
			get
			{
				return this._N_account_type;
			}
			set
			{
				if ((this._N_account_type != value))
				{
					this.OnN_account_typeChanging(value);
					this.SendPropertyChanging();
					this._N_account_type = value;
					this.SendPropertyChanged("N_account_type");
					this.OnN_account_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_exp_date", Storage="_Nm_exp_date", DbType="NVarChar(10)")]
		public string Nm_exp_date
		{
			get
			{
				return this._Nm_exp_date;
			}
			set
			{
				if ((this._Nm_exp_date != value))
				{
					this.OnNm_exp_dateChanging(value);
					this.SendPropertyChanging();
					this._Nm_exp_date = value;
					this.SendPropertyChanged("Nm_exp_date");
					this.OnNm_exp_dateChanged();
				}
			}
		}
		
		[Column(Name="nm_exp_date_format", Storage="_Nm_exp_date_format", DbType="Int")]
		public System.Nullable<int> Nm_exp_date_format
		{
			get
			{
				return this._Nm_exp_date_format;
			}
			set
			{
				if ((this._Nm_exp_date_format != value))
				{
					this.OnNm_exp_date_formatChanging(value);
					this.SendPropertyChanging();
					this._Nm_exp_date_format = value;
					this.SendPropertyChanged("Nm_exp_date_format");
					this.OnNm_exp_date_formatChanged();
				}
			}
		}
		
		[Column(Name="nm_first_name", Storage="_Nm_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_first_name
		{
			get
			{
				return this._Nm_first_name;
			}
			set
			{
				if ((this._Nm_first_name != value))
				{
					this.OnNm_first_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_first_name = value;
					this.SendPropertyChanged("Nm_first_name");
					this.OnNm_first_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_middle_name", Storage="_Nm_middle_name", DbType="NVarChar(50)")]
		public string Nm_middle_name
		{
			get
			{
				return this._Nm_middle_name;
			}
			set
			{
				if ((this._Nm_middle_name != value))
				{
					this.OnNm_middle_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_middle_name = value;
					this.SendPropertyChanged("Nm_middle_name");
					this.OnNm_middle_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_last_name", Storage="_Nm_last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_last_name
		{
			get
			{
				return this._Nm_last_name;
			}
			set
			{
				if ((this._Nm_last_name != value))
				{
					this.OnNm_last_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_last_name = value;
					this.SendPropertyChanged("Nm_last_name");
					this.OnNm_last_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_address1", Storage="_Nm_address1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_address1
		{
			get
			{
				return this._Nm_address1;
			}
			set
			{
				if ((this._Nm_address1 != value))
				{
					this.OnNm_address1Changing(value);
					this.SendPropertyChanging();
					this._Nm_address1 = value;
					this.SendPropertyChanged("Nm_address1");
					this.OnNm_address1Changed();
				}
			}
		}
		
		[Column(Name="nm_address2", Storage="_Nm_address2", DbType="NVarChar(255)")]
		public string Nm_address2
		{
			get
			{
				return this._Nm_address2;
			}
			set
			{
				if ((this._Nm_address2 != value))
				{
					this.OnNm_address2Changing(value);
					this.SendPropertyChanging();
					this._Nm_address2 = value;
					this.SendPropertyChanged("Nm_address2");
					this.OnNm_address2Changed();
				}
			}
		}
		
		[Column(Name="nm_city", Storage="_Nm_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_city
		{
			get
			{
				return this._Nm_city;
			}
			set
			{
				if ((this._Nm_city != value))
				{
					this.OnNm_cityChanging(value);
					this.SendPropertyChanging();
					this._Nm_city = value;
					this.SendPropertyChanged("Nm_city");
					this.OnNm_cityChanged();
				}
			}
		}
		
		[Column(Name="nm_state", Storage="_Nm_state", DbType="NVarChar(40)")]
		public string Nm_state
		{
			get
			{
				return this._Nm_state;
			}
			set
			{
				if ((this._Nm_state != value))
				{
					this.OnNm_stateChanging(value);
					this.SendPropertyChanging();
					this._Nm_state = value;
					this.SendPropertyChanged("Nm_state");
					this.OnNm_stateChanged();
				}
			}
		}
		
		[Column(Name="nm_zip", Storage="_Nm_zip", DbType="NVarChar(10)")]
		public string Nm_zip
		{
			get
			{
				return this._Nm_zip;
			}
			set
			{
				if ((this._Nm_zip != value))
				{
					this.OnNm_zipChanging(value);
					this.SendPropertyChanging();
					this._Nm_zip = value;
					this.SendPropertyChanged("Nm_zip");
					this.OnNm_zipChanged();
				}
			}
		}
		
		[Column(Name="id_country", Storage="_Id_country", DbType="Int NOT NULL")]
		public int Id_country
		{
			get
			{
				return this._Id_country;
			}
			set
			{
				if ((this._Id_country != value))
				{
					this.OnId_countryChanging(value);
					this.SendPropertyChanging();
					this._Id_country = value;
					this.SendPropertyChanged("Id_country");
					this.OnId_countryChanged();
				}
			}
		}
		
		[Column(Name="id_priority", Storage="_Id_priority", DbType="Int")]
		public System.Nullable<int> Id_priority
		{
			get
			{
				return this._Id_priority;
			}
			set
			{
				if ((this._Id_priority != value))
				{
					this.OnId_priorityChanging(value);
					this.SendPropertyChanging();
					this._Id_priority = value;
					this.SendPropertyChanged("Id_priority");
					this.OnId_priorityChanged();
				}
			}
		}
		
		[Column(Name="n_max_charge_per_cycle", Storage="_N_max_charge_per_cycle", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> N_max_charge_per_cycle
		{
			get
			{
				return this._N_max_charge_per_cycle;
			}
			set
			{
				if ((this._N_max_charge_per_cycle != value))
				{
					this.OnN_max_charge_per_cycleChanging(value);
					this.SendPropertyChanging();
					this._N_max_charge_per_cycle = value;
					this.SendPropertyChanged("N_max_charge_per_cycle");
					this.OnN_max_charge_per_cycleChanged();
				}
			}
		}
		
		[Column(Name="dt_created", Storage="_Dt_created", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_created
		{
			get
			{
				return this._Dt_created;
			}
			set
			{
				if ((this._Dt_created != value))
				{
					this.OnDt_createdChanging(value);
					this.SendPropertyChanging();
					this._Dt_created = value;
					this.SendPropertyChanged("Dt_created");
					this.OnDt_createdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_instrument_xref")]
	public partial class T_payment_instrument_xref : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Temp_acc_id;
		
		private string _Nm_login;
		
		private string _Nm_space;
		
		private System.DateTime _Dt_created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemp_acc_idChanging(int value);
    partial void OnTemp_acc_idChanged();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnDt_createdChanging(System.DateTime value);
    partial void OnDt_createdChanged();
    #endregion
		
		public T_payment_instrument_xref()
		{
			OnCreated();
		}
		
		[Column(Name="temp_acc_id", Storage="_Temp_acc_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Temp_acc_id
		{
			get
			{
				return this._Temp_acc_id;
			}
			set
			{
				if ((this._Temp_acc_id != value))
				{
					this.OnTemp_acc_idChanging(value);
					this.SendPropertyChanging();
					this._Temp_acc_id = value;
					this.SendPropertyChanged("Temp_acc_id");
					this.OnTemp_acc_idChanged();
				}
			}
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="dt_created", Storage="_Dt_created", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_created
		{
			get
			{
				return this._Dt_created;
			}
			set
			{
				if ((this._Dt_created != value))
				{
					this.OnDt_createdChanging(value);
					this.SendPropertyChanging();
					this._Dt_created = value;
					this.SendPropertyChanged("Dt_created");
					this.OnDt_createdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_method")]
	public partial class T_payment_method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_payment_method;
		
		private string _Nm_payment_method;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_methodChanging(int value);
    partial void OnId_payment_methodChanged();
    partial void OnNm_payment_methodChanging(string value);
    partial void OnNm_payment_methodChanged();
    #endregion
		
		public T_payment_method()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_method", Storage="_Id_payment_method", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_payment_method
		{
			get
			{
				return this._Id_payment_method;
			}
			set
			{
				if ((this._Id_payment_method != value))
				{
					this.OnId_payment_methodChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_method = value;
					this.SendPropertyChanged("Id_payment_method");
					this.OnId_payment_methodChanged();
				}
			}
		}
		
		[Column(Name="nm_payment_method", Storage="_Nm_payment_method", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Nm_payment_method
		{
			get
			{
				return this._Nm_payment_method;
			}
			set
			{
				if ((this._Nm_payment_method != value))
				{
					this.OnNm_payment_methodChanging(value);
					this.SendPropertyChanging();
					this._Nm_payment_method = value;
					this.SendPropertyChanged("Nm_payment_method");
					this.OnNm_payment_methodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_payment_redir_history")]
	public partial class T_payment_redir_history
	{
		
		private int _Id_payer;
		
		private int _Id_payee;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_payment_redir_history()
		{
		}
		
		[Column(Name="id_payer", Storage="_Id_payer", DbType="Int NOT NULL")]
		public int Id_payer
		{
			get
			{
				return this._Id_payer;
			}
			set
			{
				if ((this._Id_payer != value))
				{
					this._Id_payer = value;
				}
			}
		}
		
		[Column(Name="id_payee", Storage="_Id_payee", DbType="Int NOT NULL")]
		public int Id_payee
		{
			get
			{
				return this._Id_payee;
			}
			set
			{
				if ((this._Id_payee != value))
				{
					this._Id_payee = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_payment_redirection")]
	public partial class T_payment_redirection
	{
		
		private int _Id_payer;
		
		private int _Id_payee;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		public T_payment_redirection()
		{
		}
		
		[Column(Name="id_payer", Storage="_Id_payer", DbType="Int NOT NULL")]
		public int Id_payer
		{
			get
			{
				return this._Id_payer;
			}
			set
			{
				if ((this._Id_payer != value))
				{
					this._Id_payer = value;
				}
			}
		}
		
		[Column(Name="id_payee", Storage="_Id_payee", DbType="Int NOT NULL")]
		public int Id_payee
		{
			get
			{
				return this._Id_payee;
			}
			set
			{
				if ((this._Id_payee != value))
				{
					this._Id_payee = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_pc_interval")]
	public partial class T_pc_interval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_interval;
		
		private int _Id_cycle;
		
		private System.DateTime _Dt_start;
		
		private System.DateTime _Dt_end;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnId_cycleChanging(int value);
    partial void OnId_cycleChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.DateTime value);
    partial void OnDt_endChanged();
    #endregion
		
		public T_pc_interval()
		{
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			OnCreated();
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_cycle", Storage="_Id_cycle", DbType="Int NOT NULL")]
		public int Id_cycle
		{
			get
			{
				return this._Id_cycle;
			}
			set
			{
				if ((this._Id_cycle != value))
				{
					this.OnId_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle = value;
					this.SendPropertyChanged("Id_cycle");
					this.OnId_cycleChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Association(Name="FK_T_PC_INTERVAL", Storage="_T_usage_cycle", ThisKey="Id_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_pc_interval.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_pc_interval.Add(this);
						this._Id_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_cycle = default(int);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pending_ACH_trans")]
	public partial class T_pending_ACH_trans : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_transaction;
		
		private int _N_days;
		
		private string _Id_payment_instrument;
		
		private int _Id_acc;
		
		private decimal _N_amount;
		
		private string _Nm_description;
		
		private System.DateTime _Dt_create;
		
		private string _Nm_ar_request_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_transactionChanging(string value);
    partial void OnId_payment_transactionChanged();
    partial void OnN_daysChanging(int value);
    partial void OnN_daysChanged();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnDt_createChanging(System.DateTime value);
    partial void OnDt_createChanged();
    partial void OnNm_ar_request_idChanging(string value);
    partial void OnNm_ar_request_idChanged();
    #endregion
		
		public T_pending_ACH_trans()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_transaction", Storage="_Id_payment_transaction", DbType="NVarChar(87) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_transaction
		{
			get
			{
				return this._Id_payment_transaction;
			}
			set
			{
				if ((this._Id_payment_transaction != value))
				{
					this.OnId_payment_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_transaction = value;
					this.SendPropertyChanged("Id_payment_transaction");
					this.OnId_payment_transactionChanged();
				}
			}
		}
		
		[Column(Name="n_days", Storage="_N_days", DbType="Int NOT NULL")]
		public int N_days
		{
			get
			{
				return this._N_days;
			}
			set
			{
				if ((this._N_days != value))
				{
					this.OnN_daysChanging(value);
					this.SendPropertyChanging();
					this._N_days = value;
					this.SendPropertyChanged("N_days");
					this.OnN_daysChanged();
				}
			}
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(100)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="dt_create", Storage="_Dt_create", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_create
		{
			get
			{
				return this._Dt_create;
			}
			set
			{
				if ((this._Dt_create != value))
				{
					this.OnDt_createChanging(value);
					this.SendPropertyChanging();
					this._Dt_create = value;
					this.SendPropertyChanged("Dt_create");
					this.OnDt_createChanged();
				}
			}
		}
		
		[Column(Name="nm_ar_request_id", Storage="_Nm_ar_request_id", DbType="NVarChar(256)")]
		public string Nm_ar_request_id
		{
			get
			{
				return this._Nm_ar_request_id;
			}
			set
			{
				if ((this._Nm_ar_request_id != value))
				{
					this.OnNm_ar_request_idChanging(value);
					this.SendPropertyChanging();
					this._Nm_ar_request_id = value;
					this.SendPropertyChanged("Nm_ar_request_id");
					this.OnNm_ar_request_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pending_ACH_trans_details")]
	public partial class T_pending_ACH_trans_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_transaction;
		
		private string _Nm_invoice_num;
		
		private System.Nullable<decimal> _N_amount;
		
		private System.Nullable<System.DateTime> _Dt_invoice;
		
		private string _Nm_po_number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_transactionChanging(string value);
    partial void OnId_payment_transactionChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnN_amountChanging(System.Nullable<decimal> value);
    partial void OnN_amountChanged();
    partial void OnDt_invoiceChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_invoiceChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    #endregion
		
		public T_pending_ACH_trans_details()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_transaction", Storage="_Id_payment_transaction", DbType="NVarChar(87) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_transaction
		{
			get
			{
				return this._Id_payment_transaction;
			}
			set
			{
				if ((this._Id_payment_transaction != value))
				{
					this.OnId_payment_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_transaction = value;
					this.SendPropertyChanged("Id_payment_transaction");
					this.OnId_payment_transactionChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice", Storage="_Dt_invoice", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_invoice
		{
			get
			{
				return this._Dt_invoice;
			}
			set
			{
				if ((this._Dt_invoice != value))
				{
					this.OnDt_invoiceChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice = value;
					this.SendPropertyChanged("Dt_invoice");
					this.OnDt_invoiceChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(30)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pending_payment_trans")]
	public partial class T_pending_payment_trans : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pending_payment;
		
		private System.Nullable<int> _Id_interval;
		
		private int _Id_acc;
		
		private string _Id_payment_instrument;
		
		private string _Nm_description;
		
		private string _Nm_currency;
		
		private decimal _N_amount;
		
		private string _Id_authorization;
		
		private string _B_captured;
		
		private string _B_try_dunning;
		
		private string _B_scheduled;
		
		private System.DateTime _Dt_create;
		
		private System.Nullable<System.DateTime> _Dt_execute;
		
		private EntitySet<T_pending_payment_trans_dtl> _T_pending_payment_trans_dtl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pending_paymentChanging(int value);
    partial void OnId_pending_paymentChanged();
    partial void OnId_intervalChanging(System.Nullable<int> value);
    partial void OnId_intervalChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnNm_currencyChanging(string value);
    partial void OnNm_currencyChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnId_authorizationChanging(string value);
    partial void OnId_authorizationChanged();
    partial void OnB_capturedChanging(string value);
    partial void OnB_capturedChanged();
    partial void OnB_try_dunningChanging(string value);
    partial void OnB_try_dunningChanged();
    partial void OnB_scheduledChanging(string value);
    partial void OnB_scheduledChanged();
    partial void OnDt_createChanging(System.DateTime value);
    partial void OnDt_createChanged();
    partial void OnDt_executeChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_executeChanged();
    #endregion
		
		public T_pending_payment_trans()
		{
			this._T_pending_payment_trans_dtl = new EntitySet<T_pending_payment_trans_dtl>(new Action<T_pending_payment_trans_dtl>(this.attach_T_pending_payment_trans_dtl), new Action<T_pending_payment_trans_dtl>(this.detach_T_pending_payment_trans_dtl));
			OnCreated();
		}
		
		[Column(Name="id_pending_payment", Storage="_Id_pending_payment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_pending_payment
		{
			get
			{
				return this._Id_pending_payment;
			}
			set
			{
				if ((this._Id_pending_payment != value))
				{
					this.OnId_pending_paymentChanging(value);
					this.SendPropertyChanging();
					this._Id_pending_payment = value;
					this.SendPropertyChanged("Id_pending_payment");
					this.OnId_pending_paymentChanged();
				}
			}
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int")]
		public System.Nullable<int> Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(100)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="nm_currency", Storage="_Nm_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Nm_currency
		{
			get
			{
				return this._Nm_currency;
			}
			set
			{
				if ((this._Nm_currency != value))
				{
					this.OnNm_currencyChanging(value);
					this.SendPropertyChanging();
					this._Nm_currency = value;
					this.SendPropertyChanged("Nm_currency");
					this.OnNm_currencyChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="id_authorization", Storage="_Id_authorization", DbType="NVarChar(72)")]
		public string Id_authorization
		{
			get
			{
				return this._Id_authorization;
			}
			set
			{
				if ((this._Id_authorization != value))
				{
					this.OnId_authorizationChanging(value);
					this.SendPropertyChanging();
					this._Id_authorization = value;
					this.SendPropertyChanged("Id_authorization");
					this.OnId_authorizationChanged();
				}
			}
		}
		
		[Column(Name="b_captured", Storage="_B_captured", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_captured
		{
			get
			{
				return this._B_captured;
			}
			set
			{
				if ((this._B_captured != value))
				{
					this.OnB_capturedChanging(value);
					this.SendPropertyChanging();
					this._B_captured = value;
					this.SendPropertyChanged("B_captured");
					this.OnB_capturedChanged();
				}
			}
		}
		
		[Column(Name="b_try_dunning", Storage="_B_try_dunning", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_try_dunning
		{
			get
			{
				return this._B_try_dunning;
			}
			set
			{
				if ((this._B_try_dunning != value))
				{
					this.OnB_try_dunningChanging(value);
					this.SendPropertyChanging();
					this._B_try_dunning = value;
					this.SendPropertyChanged("B_try_dunning");
					this.OnB_try_dunningChanged();
				}
			}
		}
		
		[Column(Name="b_scheduled", Storage="_B_scheduled", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_scheduled
		{
			get
			{
				return this._B_scheduled;
			}
			set
			{
				if ((this._B_scheduled != value))
				{
					this.OnB_scheduledChanging(value);
					this.SendPropertyChanging();
					this._B_scheduled = value;
					this.SendPropertyChanged("B_scheduled");
					this.OnB_scheduledChanged();
				}
			}
		}
		
		[Column(Name="dt_create", Storage="_Dt_create", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_create
		{
			get
			{
				return this._Dt_create;
			}
			set
			{
				if ((this._Dt_create != value))
				{
					this.OnDt_createChanging(value);
					this.SendPropertyChanging();
					this._Dt_create = value;
					this.SendPropertyChanged("Dt_create");
					this.OnDt_createChanged();
				}
			}
		}
		
		[Column(Name="dt_execute", Storage="_Dt_execute", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_execute
		{
			get
			{
				return this._Dt_execute;
			}
			set
			{
				if ((this._Dt_execute != value))
				{
					this.OnDt_executeChanging(value);
					this.SendPropertyChanging();
					this._Dt_execute = value;
					this.SendPropertyChanged("Dt_execute");
					this.OnDt_executeChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_pending_payment_trans_dtl", Storage="_T_pending_payment_trans_dtl", ThisKey="Id_pending_payment", OtherKey="Id_pending_payment", DeleteRule="NO ACTION")]
		public EntitySet<T_pending_payment_trans_dtl> T_pending_payment_trans_dtl
		{
			get
			{
				return this._T_pending_payment_trans_dtl;
			}
			set
			{
				this._T_pending_payment_trans_dtl.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_pending_payment_trans_dtl(T_pending_payment_trans_dtl entity)
		{
			this.SendPropertyChanging();
			entity.T_pending_payment_trans = this;
		}
		
		private void detach_T_pending_payment_trans_dtl(T_pending_payment_trans_dtl entity)
		{
			this.SendPropertyChanging();
			entity.T_pending_payment_trans = null;
		}
	}
	
	[Table(Name="dbo.t_pending_payment_trans_dtl")]
	public partial class T_pending_payment_trans_dtl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_detail;
		
		private int _Id_pending_payment;
		
		private string _Nm_invoice_num;
		
		private System.Nullable<System.DateTime> _Dt_invoice;
		
		private string _Nm_po_number;
		
		private decimal _N_amount;
		
		private EntityRef<T_pending_payment_trans> _T_pending_payment_trans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_detailChanging(int value);
    partial void OnId_detailChanged();
    partial void OnId_pending_paymentChanging(int value);
    partial void OnId_pending_paymentChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnDt_invoiceChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_invoiceChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    #endregion
		
		public T_pending_payment_trans_dtl()
		{
			this._T_pending_payment_trans = default(EntityRef<T_pending_payment_trans>);
			OnCreated();
		}
		
		[Column(Name="id_detail", Storage="_Id_detail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_detail
		{
			get
			{
				return this._Id_detail;
			}
			set
			{
				if ((this._Id_detail != value))
				{
					this.OnId_detailChanging(value);
					this.SendPropertyChanging();
					this._Id_detail = value;
					this.SendPropertyChanged("Id_detail");
					this.OnId_detailChanged();
				}
			}
		}
		
		[Column(Name="id_pending_payment", Storage="_Id_pending_payment", DbType="Int NOT NULL")]
		public int Id_pending_payment
		{
			get
			{
				return this._Id_pending_payment;
			}
			set
			{
				if ((this._Id_pending_payment != value))
				{
					this.OnId_pending_paymentChanging(value);
					this.SendPropertyChanging();
					this._Id_pending_payment = value;
					this.SendPropertyChanged("Id_pending_payment");
					this.OnId_pending_paymentChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(50)")]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice", Storage="_Dt_invoice", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_invoice
		{
			get
			{
				return this._Dt_invoice;
			}
			set
			{
				if ((this._Dt_invoice != value))
				{
					this.OnDt_invoiceChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice = value;
					this.SendPropertyChanged("Dt_invoice");
					this.OnDt_invoiceChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(30)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_pending_payment_trans_dtl", Storage="_T_pending_payment_trans", ThisKey="Id_pending_payment", OtherKey="Id_pending_payment", IsForeignKey=true)]
		public T_pending_payment_trans T_pending_payment_trans
		{
			get
			{
				return this._T_pending_payment_trans.Entity;
			}
			set
			{
				T_pending_payment_trans previousValue = this._T_pending_payment_trans.Entity;
				if (((previousValue != value) 
							|| (this._T_pending_payment_trans.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pending_payment_trans.Entity = null;
						previousValue.T_pending_payment_trans_dtl.Remove(this);
					}
					this._T_pending_payment_trans.Entity = value;
					if ((value != null))
					{
						value.T_pending_payment_trans_dtl.Add(this);
						this._Id_pending_payment = value.Id_pending_payment;
					}
					else
					{
						this._Id_pending_payment = default(int);
					}
					this.SendPropertyChanged("T_pending_payment_trans");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pi")]
	public partial class T_pi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pi;
		
		private System.Nullable<int> _Id_parent;
		
		private string _Nm_servicedef;
		
		private string _Nm_productview;
		
		private System.Nullable<int> _N_servicedef;
		
		private System.Nullable<int> _N_productview;
		
		private string _B_constrain_cycle;
		
		private EntitySet<T_adjustment_type> _T_adjustment_type;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_pi_rulesetdef_map> _T_pi_rulesetdef_map;
		
		private EntityRef<T_pi> _Id_parentT_pi;
		
		private EntitySet<T_pi> _Id_piT_pi;
		
		private EntitySet<T_charge> _T_charge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    partial void OnId_parentChanging(System.Nullable<int> value);
    partial void OnId_parentChanged();
    partial void OnNm_servicedefChanging(string value);
    partial void OnNm_servicedefChanged();
    partial void OnNm_productviewChanging(string value);
    partial void OnNm_productviewChanged();
    partial void OnN_servicedefChanging(System.Nullable<int> value);
    partial void OnN_servicedefChanged();
    partial void OnN_productviewChanging(System.Nullable<int> value);
    partial void OnN_productviewChanged();
    partial void OnB_constrain_cycleChanging(string value);
    partial void OnB_constrain_cycleChanged();
    #endregion
		
		public T_pi()
		{
			this._T_adjustment_type = new EntitySet<T_adjustment_type>(new Action<T_adjustment_type>(this.attach_T_adjustment_type), new Action<T_adjustment_type>(this.detach_T_adjustment_type));
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_pi_rulesetdef_map = new EntitySet<T_pi_rulesetdef_map>(new Action<T_pi_rulesetdef_map>(this.attach_T_pi_rulesetdef_map), new Action<T_pi_rulesetdef_map>(this.detach_T_pi_rulesetdef_map));
			this._Id_parentT_pi = default(EntityRef<T_pi>);
			this._Id_piT_pi = new EntitySet<T_pi>(new Action<T_pi>(this.attach_Id_piT_pi), new Action<T_pi>(this.detach_Id_piT_pi));
			this._T_charge = new EntitySet<T_charge>(new Action<T_charge>(this.attach_T_charge), new Action<T_charge>(this.detach_T_charge));
			OnCreated();
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Column(Name="id_parent", Storage="_Id_parent", DbType="Int")]
		public System.Nullable<int> Id_parent
		{
			get
			{
				return this._Id_parent;
			}
			set
			{
				if ((this._Id_parent != value))
				{
					this.OnId_parentChanging(value);
					this.SendPropertyChanging();
					this._Id_parent = value;
					this.SendPropertyChanged("Id_parent");
					this.OnId_parentChanged();
				}
			}
		}
		
		[Column(Name="nm_servicedef", Storage="_Nm_servicedef", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_servicedef
		{
			get
			{
				return this._Nm_servicedef;
			}
			set
			{
				if ((this._Nm_servicedef != value))
				{
					this.OnNm_servicedefChanging(value);
					this.SendPropertyChanging();
					this._Nm_servicedef = value;
					this.SendPropertyChanged("Nm_servicedef");
					this.OnNm_servicedefChanged();
				}
			}
		}
		
		[Column(Name="nm_productview", Storage="_Nm_productview", DbType="VarChar(100)")]
		public string Nm_productview
		{
			get
			{
				return this._Nm_productview;
			}
			set
			{
				if ((this._Nm_productview != value))
				{
					this.OnNm_productviewChanging(value);
					this.SendPropertyChanging();
					this._Nm_productview = value;
					this.SendPropertyChanged("Nm_productview");
					this.OnNm_productviewChanged();
				}
			}
		}
		
		[Column(Name="n_servicedef", Storage="_N_servicedef", DbType="Int")]
		public System.Nullable<int> N_servicedef
		{
			get
			{
				return this._N_servicedef;
			}
			set
			{
				if ((this._N_servicedef != value))
				{
					this.OnN_servicedefChanging(value);
					this.SendPropertyChanging();
					this._N_servicedef = value;
					this.SendPropertyChanged("N_servicedef");
					this.OnN_servicedefChanged();
				}
			}
		}
		
		[Column(Name="n_productview", Storage="_N_productview", DbType="Int")]
		public System.Nullable<int> N_productview
		{
			get
			{
				return this._N_productview;
			}
			set
			{
				if ((this._N_productview != value))
				{
					this.OnN_productviewChanging(value);
					this.SendPropertyChanging();
					this._N_productview = value;
					this.SendPropertyChanged("N_productview");
					this.OnN_productviewChanged();
				}
			}
		}
		
		[Column(Name="b_constrain_cycle", Storage="_B_constrain_cycle", DbType="Char(1)")]
		public string B_constrain_cycle
		{
			get
			{
				return this._B_constrain_cycle;
			}
			set
			{
				if ((this._B_constrain_cycle != value))
				{
					this.OnB_constrain_cycleChanging(value);
					this.SendPropertyChanging();
					this._B_constrain_cycle = value;
					this.SendPropertyChanged("B_constrain_cycle");
					this.OnB_constrain_cycleChanged();
				}
			}
		}
		
		[Association(Name="adjustment_type_fk2", Storage="_T_adjustment_type", ThisKey="Id_pi", OtherKey="Id_pi_type", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment_type> T_adjustment_type
		{
			get
			{
				return this._T_adjustment_type;
			}
			set
			{
				this._T_adjustment_type.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_PI", Storage="_T_base_props", ThisKey="Id_pi", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_pi = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_pi = this;
						this._Id_pi = value.Id_prop;
					}
					else
					{
						this._Id_pi = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK1_T_PI_RULESETDEF_MAP", Storage="_T_pi_rulesetdef_map", ThisKey="Id_pi", OtherKey="Id_pi", DeleteRule="NO ACTION")]
		public EntitySet<T_pi_rulesetdef_map> T_pi_rulesetdef_map
		{
			get
			{
				return this._T_pi_rulesetdef_map;
			}
			set
			{
				this._T_pi_rulesetdef_map.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_pi", Storage="_Id_parentT_pi", ThisKey="Id_parent", OtherKey="Id_pi", IsForeignKey=true)]
		public T_pi Id_parentT_pi
		{
			get
			{
				return this._Id_parentT_pi.Entity;
			}
			set
			{
				T_pi previousValue = this._Id_parentT_pi.Entity;
				if (((previousValue != value) 
							|| (this._Id_parentT_pi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_parentT_pi.Entity = null;
						previousValue.Id_piT_pi.Remove(this);
					}
					this._Id_parentT_pi.Entity = value;
					if ((value != null))
					{
						value.Id_piT_pi.Add(this);
						this._Id_parent = value.Id_pi;
					}
					else
					{
						this._Id_parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Id_parentT_pi");
				}
			}
		}
		
		[Association(Name="fk2_t_pi", Storage="_Id_piT_pi", ThisKey="Id_pi", OtherKey="Id_parent", DeleteRule="NO ACTION")]
		public EntitySet<T_pi> Id_piT_pi
		{
			get
			{
				return this._Id_piT_pi;
			}
			set
			{
				this._Id_piT_pi.Assign(value);
			}
		}
		
		[Association(Name="t_charge_FK1", Storage="_T_charge", ThisKey="Id_pi", OtherKey="Id_pi", DeleteRule="NO ACTION")]
		public EntitySet<T_charge> T_charge
		{
			get
			{
				return this._T_charge;
			}
			set
			{
				this._T_charge.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_adjustment_type(T_adjustment_type entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = this;
		}
		
		private void detach_T_adjustment_type(T_adjustment_type entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = null;
		}
		
		private void attach_T_pi_rulesetdef_map(T_pi_rulesetdef_map entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = this;
		}
		
		private void detach_T_pi_rulesetdef_map(T_pi_rulesetdef_map entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = null;
		}
		
		private void attach_Id_piT_pi(T_pi entity)
		{
			this.SendPropertyChanging();
			entity.Id_parentT_pi = this;
		}
		
		private void detach_Id_piT_pi(T_pi entity)
		{
			this.SendPropertyChanging();
			entity.Id_parentT_pi = null;
		}
		
		private void attach_T_charge(T_charge entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = this;
		}
		
		private void detach_T_charge(T_charge entity)
		{
			this.SendPropertyChanging();
			entity.T_pi = null;
		}
	}
	
	[Table(Name="dbo.t_pi_rulesetdef_map")]
	public partial class T_pi_rulesetdef_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pi;
		
		private int _Id_pt;
		
		private EntityRef<T_pi> _T_pi;
		
		private EntityRef<T_rulesetdefinition> _T_rulesetdefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    partial void OnId_ptChanging(int value);
    partial void OnId_ptChanged();
    #endregion
		
		public T_pi_rulesetdef_map()
		{
			this._T_pi = default(EntityRef<T_pi>);
			this._T_rulesetdefinition = default(EntityRef<T_rulesetdefinition>);
			OnCreated();
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Column(Name="id_pt", Storage="_Id_pt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pt
		{
			get
			{
				return this._Id_pt;
			}
			set
			{
				if ((this._Id_pt != value))
				{
					this.OnId_ptChanging(value);
					this.SendPropertyChanging();
					this._Id_pt = value;
					this.SendPropertyChanged("Id_pt");
					this.OnId_ptChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PI_RULESETDEF_MAP", Storage="_T_pi", ThisKey="Id_pi", OtherKey="Id_pi", IsForeignKey=true)]
		public T_pi T_pi
		{
			get
			{
				return this._T_pi.Entity;
			}
			set
			{
				T_pi previousValue = this._T_pi.Entity;
				if (((previousValue != value) 
							|| (this._T_pi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pi.Entity = null;
						previousValue.T_pi_rulesetdef_map.Remove(this);
					}
					this._T_pi.Entity = value;
					if ((value != null))
					{
						value.T_pi_rulesetdef_map.Add(this);
						this._Id_pi = value.Id_pi;
					}
					else
					{
						this._Id_pi = default(int);
					}
					this.SendPropertyChanged("T_pi");
				}
			}
		}
		
		[Association(Name="FK1_T_RULESETDEF_MAP", Storage="_T_rulesetdefinition", ThisKey="Id_pt", OtherKey="Id_paramtable", IsForeignKey=true)]
		public T_rulesetdefinition T_rulesetdefinition
		{
			get
			{
				return this._T_rulesetdefinition.Entity;
			}
			set
			{
				T_rulesetdefinition previousValue = this._T_rulesetdefinition.Entity;
				if (((previousValue != value) 
							|| (this._T_rulesetdefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rulesetdefinition.Entity = null;
						previousValue.T_pi_rulesetdef_map.Remove(this);
					}
					this._T_rulesetdefinition.Entity = value;
					if ((value != null))
					{
						value.T_pi_rulesetdef_map.Add(this);
						this._Id_pt = value.Id_paramtable;
					}
					else
					{
						this._Id_pt = default(int);
					}
					this.SendPropertyChanged("T_rulesetdefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pi_template")]
	public partial class T_pi_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_template;
		
		private System.Nullable<int> _Id_template_parent;
		
		private int _Id_pi;
		
		private EntitySet<T_adjustment> _T_adjustment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_templateChanging(int value);
    partial void OnId_templateChanged();
    partial void OnId_template_parentChanging(System.Nullable<int> value);
    partial void OnId_template_parentChanged();
    partial void OnId_piChanging(int value);
    partial void OnId_piChanged();
    #endregion
		
		public T_pi_template()
		{
			this._T_adjustment = new EntitySet<T_adjustment>(new Action<T_adjustment>(this.attach_T_adjustment), new Action<T_adjustment>(this.detach_T_adjustment));
			OnCreated();
		}
		
		[Column(Name="id_template", Storage="_Id_template", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_template
		{
			get
			{
				return this._Id_template;
			}
			set
			{
				if ((this._Id_template != value))
				{
					this.OnId_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_template = value;
					this.SendPropertyChanged("Id_template");
					this.OnId_templateChanged();
				}
			}
		}
		
		[Column(Name="id_template_parent", Storage="_Id_template_parent", DbType="Int")]
		public System.Nullable<int> Id_template_parent
		{
			get
			{
				return this._Id_template_parent;
			}
			set
			{
				if ((this._Id_template_parent != value))
				{
					this.OnId_template_parentChanging(value);
					this.SendPropertyChanging();
					this._Id_template_parent = value;
					this.SendPropertyChanged("Id_template_parent");
					this.OnId_template_parentChanged();
				}
			}
		}
		
		[Column(Name="id_pi", Storage="_Id_pi", DbType="Int NOT NULL")]
		public int Id_pi
		{
			get
			{
				return this._Id_pi;
			}
			set
			{
				if ((this._Id_pi != value))
				{
					this.OnId_piChanging(value);
					this.SendPropertyChanging();
					this._Id_pi = value;
					this.SendPropertyChanged("Id_pi");
					this.OnId_piChanged();
				}
			}
		}
		
		[Association(Name="t_adjustment_fk2", Storage="_T_adjustment", ThisKey="Id_template", OtherKey="Id_pi_template", DeleteRule="NO ACTION")]
		public EntitySet<T_adjustment> T_adjustment
		{
			get
			{
				return this._T_adjustment;
			}
			set
			{
				this._T_adjustment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_pi_template = this;
		}
		
		private void detach_T_adjustment(T_adjustment entity)
		{
			this.SendPropertyChanging();
			entity.T_pi_template = null;
		}
	}
	
	[Table(Name="dbo.t_pipeline")]
	public partial class T_pipeline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pipeline;
		
		private string _Tx_machine;
		
		private string _B_online;
		
		private string _B_paused;
		
		private string _B_processing;
		
		private EntitySet<T_pipeline_service> _T_pipeline_service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pipelineChanging(int value);
    partial void OnId_pipelineChanged();
    partial void OnTx_machineChanging(string value);
    partial void OnTx_machineChanged();
    partial void OnB_onlineChanging(string value);
    partial void OnB_onlineChanged();
    partial void OnB_pausedChanging(string value);
    partial void OnB_pausedChanged();
    partial void OnB_processingChanging(string value);
    partial void OnB_processingChanged();
    #endregion
		
		public T_pipeline()
		{
			this._T_pipeline_service = new EntitySet<T_pipeline_service>(new Action<T_pipeline_service>(this.attach_T_pipeline_service), new Action<T_pipeline_service>(this.detach_T_pipeline_service));
			OnCreated();
		}
		
		[Column(Name="id_pipeline", Storage="_Id_pipeline", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_pipeline
		{
			get
			{
				return this._Id_pipeline;
			}
			set
			{
				if ((this._Id_pipeline != value))
				{
					this.OnId_pipelineChanging(value);
					this.SendPropertyChanging();
					this._Id_pipeline = value;
					this.SendPropertyChanged("Id_pipeline");
					this.OnId_pipelineChanged();
				}
			}
		}
		
		[Column(Name="tx_machine", Storage="_Tx_machine", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_machine
		{
			get
			{
				return this._Tx_machine;
			}
			set
			{
				if ((this._Tx_machine != value))
				{
					this.OnTx_machineChanging(value);
					this.SendPropertyChanging();
					this._Tx_machine = value;
					this.SendPropertyChanged("Tx_machine");
					this.OnTx_machineChanged();
				}
			}
		}
		
		[Column(Name="b_online", Storage="_B_online", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_online
		{
			get
			{
				return this._B_online;
			}
			set
			{
				if ((this._B_online != value))
				{
					this.OnB_onlineChanging(value);
					this.SendPropertyChanging();
					this._B_online = value;
					this.SendPropertyChanged("B_online");
					this.OnB_onlineChanged();
				}
			}
		}
		
		[Column(Name="b_paused", Storage="_B_paused", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_paused
		{
			get
			{
				return this._B_paused;
			}
			set
			{
				if ((this._B_paused != value))
				{
					this.OnB_pausedChanging(value);
					this.SendPropertyChanging();
					this._B_paused = value;
					this.SendPropertyChanged("B_paused");
					this.OnB_pausedChanged();
				}
			}
		}
		
		[Column(Name="b_processing", Storage="_B_processing", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_processing
		{
			get
			{
				return this._B_processing;
			}
			set
			{
				if ((this._B_processing != value))
				{
					this.OnB_processingChanging(value);
					this.SendPropertyChanging();
					this._B_processing = value;
					this.SendPropertyChanged("B_processing");
					this.OnB_processingChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PIPELINE_SERVICE", Storage="_T_pipeline_service", ThisKey="Id_pipeline", OtherKey="Id_pipeline", DeleteRule="NO ACTION")]
		public EntitySet<T_pipeline_service> T_pipeline_service
		{
			get
			{
				return this._T_pipeline_service;
			}
			set
			{
				this._T_pipeline_service.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_pipeline_service(T_pipeline_service entity)
		{
			this.SendPropertyChanging();
			entity.T_pipeline = this;
		}
		
		private void detach_T_pipeline_service(T_pipeline_service entity)
		{
			this.SendPropertyChanging();
			entity.T_pipeline = null;
		}
	}
	
	[Table(Name="dbo.t_pipeline_service")]
	public partial class T_pipeline_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pipeline;
		
		private int _Id_svc;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private EntityRef<T_pipeline> _T_pipeline;
		
		private EntityRef<T_enum_data> _T_enum_data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pipelineChanging(int value);
    partial void OnId_pipelineChanged();
    partial void OnId_svcChanging(int value);
    partial void OnId_svcChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    #endregion
		
		public T_pipeline_service()
		{
			this._T_pipeline = default(EntityRef<T_pipeline>);
			this._T_enum_data = default(EntityRef<T_enum_data>);
			OnCreated();
		}
		
		[Column(Name="id_pipeline", Storage="_Id_pipeline", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pipeline
		{
			get
			{
				return this._Id_pipeline;
			}
			set
			{
				if ((this._Id_pipeline != value))
				{
					this.OnId_pipelineChanging(value);
					this.SendPropertyChanging();
					this._Id_pipeline = value;
					this.SendPropertyChanged("Id_pipeline");
					this.OnId_pipelineChanged();
				}
			}
		}
		
		[Column(Name="id_svc", Storage="_Id_svc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_svc
		{
			get
			{
				return this._Id_svc;
			}
			set
			{
				if ((this._Id_svc != value))
				{
					this.OnId_svcChanging(value);
					this.SendPropertyChanging();
					this._Id_svc = value;
					this.SendPropertyChanged("Id_svc");
					this.OnId_svcChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PIPELINE_SERVICE", Storage="_T_pipeline", ThisKey="Id_pipeline", OtherKey="Id_pipeline", IsForeignKey=true)]
		public T_pipeline T_pipeline
		{
			get
			{
				return this._T_pipeline.Entity;
			}
			set
			{
				T_pipeline previousValue = this._T_pipeline.Entity;
				if (((previousValue != value) 
							|| (this._T_pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pipeline.Entity = null;
						previousValue.T_pipeline_service.Remove(this);
					}
					this._T_pipeline.Entity = value;
					if ((value != null))
					{
						value.T_pipeline_service.Add(this);
						this._Id_pipeline = value.Id_pipeline;
					}
					else
					{
						this._Id_pipeline = default(int);
					}
					this.SendPropertyChanged("T_pipeline");
				}
			}
		}
		
		[Association(Name="FK2_T_PIPELINE_SERVICE", Storage="_T_enum_data", ThisKey="Id_svc", OtherKey="Id_enum_data", IsForeignKey=true)]
		public T_enum_data T_enum_data
		{
			get
			{
				return this._T_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._T_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_data.Entity = null;
						previousValue.T_pipeline_service.Remove(this);
					}
					this._T_enum_data.Entity = value;
					if ((value != null))
					{
						value.T_pipeline_service.Add(this);
						this._Id_svc = value.Id_enum_data;
					}
					else
					{
						this._Id_svc = default(int);
					}
					this.SendPropertyChanged("T_enum_data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pl_map")]
	public partial class T_pl_map
	{
		
		private System.Nullable<System.DateTime> _Dt_modified;
		
		private System.Nullable<int> _Id_paramtable;
		
		private System.Nullable<int> _Id_pi_type;
		
		private System.Nullable<int> _Id_pi_template;
		
		private System.Nullable<int> _Id_pi_instance;
		
		private System.Nullable<int> _Id_pi_instance_parent;
		
		private System.Nullable<int> _Id_sub;
		
		private System.Nullable<int> _Id_acc;
		
		private System.Nullable<int> _Id_po;
		
		private System.Nullable<int> _Id_pricelist;
		
		private string _B_canICB;
		
		public T_pl_map()
		{
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this._Dt_modified = value;
				}
			}
		}
		
		[Column(Name="id_paramtable", Storage="_Id_paramtable", DbType="Int")]
		public System.Nullable<int> Id_paramtable
		{
			get
			{
				return this._Id_paramtable;
			}
			set
			{
				if ((this._Id_paramtable != value))
				{
					this._Id_paramtable = value;
				}
			}
		}
		
		[Column(Name="id_pi_type", Storage="_Id_pi_type", DbType="Int")]
		public System.Nullable<int> Id_pi_type
		{
			get
			{
				return this._Id_pi_type;
			}
			set
			{
				if ((this._Id_pi_type != value))
				{
					this._Id_pi_type = value;
				}
			}
		}
		
		[Column(Name="id_pi_template", Storage="_Id_pi_template", DbType="Int")]
		public System.Nullable<int> Id_pi_template
		{
			get
			{
				return this._Id_pi_template;
			}
			set
			{
				if ((this._Id_pi_template != value))
				{
					this._Id_pi_template = value;
				}
			}
		}
		
		[Column(Name="id_pi_instance", Storage="_Id_pi_instance", DbType="Int")]
		public System.Nullable<int> Id_pi_instance
		{
			get
			{
				return this._Id_pi_instance;
			}
			set
			{
				if ((this._Id_pi_instance != value))
				{
					this._Id_pi_instance = value;
				}
			}
		}
		
		[Column(Name="id_pi_instance_parent", Storage="_Id_pi_instance_parent", DbType="Int")]
		public System.Nullable<int> Id_pi_instance_parent
		{
			get
			{
				return this._Id_pi_instance_parent;
			}
			set
			{
				if ((this._Id_pi_instance_parent != value))
				{
					this._Id_pi_instance_parent = value;
				}
			}
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int")]
		public System.Nullable<int> Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this._Id_sub = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int")]
		public System.Nullable<int> Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
		
		[Column(Name="id_pricelist", Storage="_Id_pricelist", DbType="Int")]
		public System.Nullable<int> Id_pricelist
		{
			get
			{
				return this._Id_pricelist;
			}
			set
			{
				if ((this._Id_pricelist != value))
				{
					this._Id_pricelist = value;
				}
			}
		}
		
		[Column(Name="b_canICB", Storage="_B_canICB", DbType="Char(1)")]
		public string B_canICB
		{
			get
			{
				return this._B_canICB;
			}
			set
			{
				if ((this._B_canICB != value))
				{
					this._B_canICB = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_po")]
	public partial class T_po : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_po;
		
		private int _Id_eff_date;
		
		private int _Id_avail;
		
		private string _B_user_subscribe;
		
		private string _B_user_unsubscribe;
		
		private int _Id_nonshared_pl;
		
		private string _B_hidden;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_effectivedate> _T_effectivedate;
		
		private EntitySet<T_acc_usage> _T_acc_usage;
		
		private EntityRef<T_effectivedate> _Id_availT_effectivedate;
		
		private EntityRef<T_pricelist> _T_pricelist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_poChanging(int value);
    partial void OnId_poChanged();
    partial void OnId_eff_dateChanging(int value);
    partial void OnId_eff_dateChanged();
    partial void OnId_availChanging(int value);
    partial void OnId_availChanged();
    partial void OnB_user_subscribeChanging(string value);
    partial void OnB_user_subscribeChanged();
    partial void OnB_user_unsubscribeChanging(string value);
    partial void OnB_user_unsubscribeChanged();
    partial void OnId_nonshared_plChanging(int value);
    partial void OnId_nonshared_plChanged();
    partial void OnB_hiddenChanging(string value);
    partial void OnB_hiddenChanged();
    #endregion
		
		public T_po()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_effectivedate = default(EntityRef<T_effectivedate>);
			this._T_acc_usage = new EntitySet<T_acc_usage>(new Action<T_acc_usage>(this.attach_T_acc_usage), new Action<T_acc_usage>(this.detach_T_acc_usage));
			this._Id_availT_effectivedate = default(EntityRef<T_effectivedate>);
			this._T_pricelist = default(EntityRef<T_pricelist>);
			OnCreated();
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this.OnId_poChanging(value);
					this.SendPropertyChanging();
					this._Id_po = value;
					this.SendPropertyChanged("Id_po");
					this.OnId_poChanged();
				}
			}
		}
		
		[Column(Name="id_eff_date", Storage="_Id_eff_date", DbType="Int NOT NULL")]
		public int Id_eff_date
		{
			get
			{
				return this._Id_eff_date;
			}
			set
			{
				if ((this._Id_eff_date != value))
				{
					this.OnId_eff_dateChanging(value);
					this.SendPropertyChanging();
					this._Id_eff_date = value;
					this.SendPropertyChanged("Id_eff_date");
					this.OnId_eff_dateChanged();
				}
			}
		}
		
		[Column(Name="id_avail", Storage="_Id_avail", DbType="Int NOT NULL")]
		public int Id_avail
		{
			get
			{
				return this._Id_avail;
			}
			set
			{
				if ((this._Id_avail != value))
				{
					this.OnId_availChanging(value);
					this.SendPropertyChanging();
					this._Id_avail = value;
					this.SendPropertyChanged("Id_avail");
					this.OnId_availChanged();
				}
			}
		}
		
		[Column(Name="b_user_subscribe", Storage="_B_user_subscribe", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_subscribe
		{
			get
			{
				return this._B_user_subscribe;
			}
			set
			{
				if ((this._B_user_subscribe != value))
				{
					this.OnB_user_subscribeChanging(value);
					this.SendPropertyChanging();
					this._B_user_subscribe = value;
					this.SendPropertyChanged("B_user_subscribe");
					this.OnB_user_subscribeChanged();
				}
			}
		}
		
		[Column(Name="b_user_unsubscribe", Storage="_B_user_unsubscribe", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_unsubscribe
		{
			get
			{
				return this._B_user_unsubscribe;
			}
			set
			{
				if ((this._B_user_unsubscribe != value))
				{
					this.OnB_user_unsubscribeChanging(value);
					this.SendPropertyChanging();
					this._B_user_unsubscribe = value;
					this.SendPropertyChanged("B_user_unsubscribe");
					this.OnB_user_unsubscribeChanged();
				}
			}
		}
		
		[Column(Name="id_nonshared_pl", Storage="_Id_nonshared_pl", DbType="Int NOT NULL")]
		public int Id_nonshared_pl
		{
			get
			{
				return this._Id_nonshared_pl;
			}
			set
			{
				if ((this._Id_nonshared_pl != value))
				{
					this.OnId_nonshared_plChanging(value);
					this.SendPropertyChanging();
					this._Id_nonshared_pl = value;
					this.SendPropertyChanged("Id_nonshared_pl");
					this.OnId_nonshared_plChanged();
				}
			}
		}
		
		[Column(Name="b_hidden", Storage="_B_hidden", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_hidden
		{
			get
			{
				return this._B_hidden;
			}
			set
			{
				if ((this._B_hidden != value))
				{
					this.OnB_hiddenChanging(value);
					this.SendPropertyChanging();
					this._B_hidden = value;
					this.SendPropertyChanged("B_hidden");
					this.OnB_hiddenChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PO", Storage="_T_base_props", ThisKey="Id_po", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_po = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_po = this;
						this._Id_po = value.Id_prop;
					}
					else
					{
						this._Id_po = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK2_T_PO", Storage="_T_effectivedate", ThisKey="Id_eff_date", OtherKey="Id_eff_date", IsForeignKey=true)]
		public T_effectivedate T_effectivedate
		{
			get
			{
				return this._T_effectivedate.Entity;
			}
			set
			{
				T_effectivedate previousValue = this._T_effectivedate.Entity;
				if (((previousValue != value) 
							|| (this._T_effectivedate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_effectivedate.Entity = null;
						previousValue.T_po.Remove(this);
					}
					this._T_effectivedate.Entity = value;
					if ((value != null))
					{
						value.T_po.Add(this);
						this._Id_eff_date = value.Id_eff_date;
					}
					else
					{
						this._Id_eff_date = default(int);
					}
					this.SendPropertyChanged("T_effectivedate");
				}
			}
		}
		
		[Association(Name="fk3_t_acc_usage", Storage="_T_acc_usage", ThisKey="Id_po", OtherKey="Id_prod", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_usage> T_acc_usage
		{
			get
			{
				return this._T_acc_usage;
			}
			set
			{
				this._T_acc_usage.Assign(value);
			}
		}
		
		[Association(Name="FK3_T_PO", Storage="_Id_availT_effectivedate", ThisKey="Id_avail", OtherKey="Id_eff_date", IsForeignKey=true)]
		public T_effectivedate Id_availT_effectivedate
		{
			get
			{
				return this._Id_availT_effectivedate.Entity;
			}
			set
			{
				T_effectivedate previousValue = this._Id_availT_effectivedate.Entity;
				if (((previousValue != value) 
							|| (this._Id_availT_effectivedate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_availT_effectivedate.Entity = null;
						previousValue.Id_eff_dateT_po.Remove(this);
					}
					this._Id_availT_effectivedate.Entity = value;
					if ((value != null))
					{
						value.Id_eff_dateT_po.Add(this);
						this._Id_avail = value.Id_eff_date;
					}
					else
					{
						this._Id_avail = default(int);
					}
					this.SendPropertyChanged("Id_availT_effectivedate");
				}
			}
		}
		
		[Association(Name="t_po_FK1", Storage="_T_pricelist", ThisKey="Id_nonshared_pl", OtherKey="Id_pricelist", IsForeignKey=true)]
		public T_pricelist T_pricelist
		{
			get
			{
				return this._T_pricelist.Entity;
			}
			set
			{
				T_pricelist previousValue = this._T_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pricelist.Entity = null;
						previousValue.T_po.Remove(this);
					}
					this._T_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_po.Add(this);
						this._Id_nonshared_pl = value.Id_pricelist;
					}
					else
					{
						this._Id_nonshared_pl = default(int);
					}
					this.SendPropertyChanged("T_pricelist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_acc_usage(T_acc_usage entity)
		{
			this.SendPropertyChanging();
			entity.T_po = this;
		}
		
		private void detach_T_acc_usage(T_acc_usage entity)
		{
			this.SendPropertyChanging();
			entity.T_po = null;
		}
	}
	
	[Table(Name="dbo.t_po_account_type_map")]
	public partial class T_po_account_type_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_po;
		
		private int _Id_account_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_poChanging(int value);
    partial void OnId_poChanged();
    partial void OnId_account_typeChanging(int value);
    partial void OnId_account_typeChanged();
    #endregion
		
		public T_po_account_type_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this.OnId_poChanging(value);
					this.SendPropertyChanging();
					this._Id_po = value;
					this.SendPropertyChanged("Id_po");
					this.OnId_poChanged();
				}
			}
		}
		
		[Column(Name="id_account_type", Storage="_Id_account_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_account_type
		{
			get
			{
				return this._Id_account_type;
			}
			set
			{
				if ((this._Id_account_type != value))
				{
					this.OnId_account_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_account_type = value;
					this.SendPropertyChanged("Id_account_type");
					this.OnId_account_typeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_policy_role")]
	public partial class T_policy_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_policy;
		
		private int _Id_role;
		
		private EntityRef<T_principal_policy> _T_principal_policy;
		
		private EntityRef<T_role> _T_role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_policyChanging(int value);
    partial void OnId_policyChanged();
    partial void OnId_roleChanging(int value);
    partial void OnId_roleChanged();
    #endregion
		
		public T_policy_role()
		{
			this._T_principal_policy = default(EntityRef<T_principal_policy>);
			this._T_role = default(EntityRef<T_role>);
			OnCreated();
		}
		
		[Column(Name="id_policy", Storage="_Id_policy", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_policy
		{
			get
			{
				return this._Id_policy;
			}
			set
			{
				if ((this._Id_policy != value))
				{
					this.OnId_policyChanging(value);
					this.SendPropertyChanging();
					this._Id_policy = value;
					this.SendPropertyChanged("Id_policy");
					this.OnId_policyChanged();
				}
			}
		}
		
		[Column(Name="id_role", Storage="_Id_role", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_role
		{
			get
			{
				return this._Id_role;
			}
			set
			{
				if ((this._Id_role != value))
				{
					this.OnId_roleChanging(value);
					this.SendPropertyChanging();
					this._Id_role = value;
					this.SendPropertyChanged("Id_role");
					this.OnId_roleChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_POLICY_ROLE", Storage="_T_principal_policy", ThisKey="Id_policy", OtherKey="Id_policy", IsForeignKey=true)]
		public T_principal_policy T_principal_policy
		{
			get
			{
				return this._T_principal_policy.Entity;
			}
			set
			{
				T_principal_policy previousValue = this._T_principal_policy.Entity;
				if (((previousValue != value) 
							|| (this._T_principal_policy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_principal_policy.Entity = null;
						previousValue.T_policy_role.Remove(this);
					}
					this._T_principal_policy.Entity = value;
					if ((value != null))
					{
						value.T_policy_role.Add(this);
						this._Id_policy = value.Id_policy;
					}
					else
					{
						this._Id_policy = default(int);
					}
					this.SendPropertyChanged("T_principal_policy");
				}
			}
		}
		
		[Association(Name="FK2_T_POLICY_ROLE", Storage="_T_role", ThisKey="Id_role", OtherKey="Id_role", IsForeignKey=true)]
		public T_role T_role
		{
			get
			{
				return this._T_role.Entity;
			}
			set
			{
				T_role previousValue = this._T_role.Entity;
				if (((previousValue != value) 
							|| (this._T_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_role.Entity = null;
						previousValue.T_policy_role.Remove(this);
					}
					this._T_role.Entity = value;
					if ((value != null))
					{
						value.T_policy_role.Add(this);
						this._Id_role = value.Id_role;
					}
					else
					{
						this._Id_role = default(int);
					}
					this.SendPropertyChanged("T_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pricelist")]
	public partial class T_pricelist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pricelist;
		
		private int _N_type;
		
		private string _Nm_currency_code;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_rsched> _T_rsched;
		
		private EntitySet<T_rsched_pub> _T_rsched_pub;
		
		private EntitySet<T_av_Internal> _T_av_Internal;
		
		private EntitySet<T_po> _T_po;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pricelistChanging(int value);
    partial void OnId_pricelistChanged();
    partial void OnN_typeChanging(int value);
    partial void OnN_typeChanged();
    partial void OnNm_currency_codeChanging(string value);
    partial void OnNm_currency_codeChanged();
    #endregion
		
		public T_pricelist()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_rsched = new EntitySet<T_rsched>(new Action<T_rsched>(this.attach_T_rsched), new Action<T_rsched>(this.detach_T_rsched));
			this._T_rsched_pub = new EntitySet<T_rsched_pub>(new Action<T_rsched_pub>(this.attach_T_rsched_pub), new Action<T_rsched_pub>(this.detach_T_rsched_pub));
			this._T_av_Internal = new EntitySet<T_av_Internal>(new Action<T_av_Internal>(this.attach_T_av_Internal), new Action<T_av_Internal>(this.detach_T_av_Internal));
			this._T_po = new EntitySet<T_po>(new Action<T_po>(this.attach_T_po), new Action<T_po>(this.detach_T_po));
			OnCreated();
		}
		
		[Column(Name="id_pricelist", Storage="_Id_pricelist", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_pricelist
		{
			get
			{
				return this._Id_pricelist;
			}
			set
			{
				if ((this._Id_pricelist != value))
				{
					this.OnId_pricelistChanging(value);
					this.SendPropertyChanging();
					this._Id_pricelist = value;
					this.SendPropertyChanged("Id_pricelist");
					this.OnId_pricelistChanged();
				}
			}
		}
		
		[Column(Name="n_type", Storage="_N_type", DbType="Int NOT NULL")]
		public int N_type
		{
			get
			{
				return this._N_type;
			}
			set
			{
				if ((this._N_type != value))
				{
					this.OnN_typeChanging(value);
					this.SendPropertyChanging();
					this._N_type = value;
					this.SendPropertyChanged("N_type");
					this.OnN_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_currency_code", Storage="_Nm_currency_code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Nm_currency_code
		{
			get
			{
				return this._Nm_currency_code;
			}
			set
			{
				if ((this._Nm_currency_code != value))
				{
					this.OnNm_currency_codeChanging(value);
					this.SendPropertyChanging();
					this._Nm_currency_code = value;
					this.SendPropertyChanged("Nm_currency_code");
					this.OnNm_currency_codeChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_PRICELIST", Storage="_T_base_props", ThisKey="Id_pricelist", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_pricelist = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_pricelist = this;
						this._Id_pricelist = value.Id_prop;
					}
					else
					{
						this._Id_pricelist = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK4_T_RSCHED", Storage="_T_rsched", ThisKey="Id_pricelist", OtherKey="Id_pricelist", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched> T_rsched
		{
			get
			{
				return this._T_rsched;
			}
			set
			{
				this._T_rsched.Assign(value);
			}
		}
		
		[Association(Name="fk4_t_rsched_pub", Storage="_T_rsched_pub", ThisKey="Id_pricelist", OtherKey="Id_pricelist", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched_pub> T_rsched_pub
		{
			get
			{
				return this._T_rsched_pub;
			}
			set
			{
				this._T_rsched_pub.Assign(value);
			}
		}
		
		[Association(Name="t_av_Internal_FK1", Storage="_T_av_Internal", ThisKey="Id_pricelist", OtherKey="C_PriceList", DeleteRule="NO ACTION")]
		public EntitySet<T_av_Internal> T_av_Internal
		{
			get
			{
				return this._T_av_Internal;
			}
			set
			{
				this._T_av_Internal.Assign(value);
			}
		}
		
		[Association(Name="t_po_FK1", Storage="_T_po", ThisKey="Id_pricelist", OtherKey="Id_nonshared_pl", DeleteRule="NO ACTION")]
		public EntitySet<T_po> T_po
		{
			get
			{
				return this._T_po;
			}
			set
			{
				this._T_po.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = this;
		}
		
		private void detach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = null;
		}
		
		private void attach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = this;
		}
		
		private void detach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = null;
		}
		
		private void attach_T_av_Internal(T_av_Internal entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = this;
		}
		
		private void detach_T_av_Internal(T_av_Internal entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = null;
		}
		
		private void attach_T_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = this;
		}
		
		private void detach_T_po(T_po entity)
		{
			this.SendPropertyChanging();
			entity.T_pricelist = null;
		}
	}
	
	[Table(Name="dbo.t_principal_policy")]
	public partial class T_principal_policy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_policy;
		
		private System.Nullable<int> _Id_acc;
		
		private System.Nullable<int> _Id_role;
		
		private string _Policy_type;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private EntitySet<T_capability_instance> _T_capability_instance;
		
		private EntitySet<T_policy_role> _T_policy_role;
		
		private EntityRef<T_account> _T_account;
		
		private EntityRef<T_role> _T_role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_policyChanging(int value);
    partial void OnId_policyChanged();
    partial void OnId_accChanging(System.Nullable<int> value);
    partial void OnId_accChanged();
    partial void OnId_roleChanging(System.Nullable<int> value);
    partial void OnId_roleChanged();
    partial void OnPolicy_typeChanging(string value);
    partial void OnPolicy_typeChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    #endregion
		
		public T_principal_policy()
		{
			this._T_capability_instance = new EntitySet<T_capability_instance>(new Action<T_capability_instance>(this.attach_T_capability_instance), new Action<T_capability_instance>(this.detach_T_capability_instance));
			this._T_policy_role = new EntitySet<T_policy_role>(new Action<T_policy_role>(this.attach_T_policy_role), new Action<T_policy_role>(this.detach_T_policy_role));
			this._T_account = default(EntityRef<T_account>);
			this._T_role = default(EntityRef<T_role>);
			OnCreated();
		}
		
		[Column(Name="id_policy", Storage="_Id_policy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_policy
		{
			get
			{
				return this._Id_policy;
			}
			set
			{
				if ((this._Id_policy != value))
				{
					this.OnId_policyChanging(value);
					this.SendPropertyChanging();
					this._Id_policy = value;
					this.SendPropertyChanged("Id_policy");
					this.OnId_policyChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_role", Storage="_Id_role", DbType="Int")]
		public System.Nullable<int> Id_role
		{
			get
			{
				return this._Id_role;
			}
			set
			{
				if ((this._Id_role != value))
				{
					this.OnId_roleChanging(value);
					this.SendPropertyChanging();
					this._Id_role = value;
					this.SendPropertyChanged("Id_role");
					this.OnId_roleChanged();
				}
			}
		}
		
		[Column(Name="policy_type", Storage="_Policy_type", DbType="VarChar(1)")]
		public string Policy_type
		{
			get
			{
				return this._Policy_type;
			}
			set
			{
				if ((this._Policy_type != value))
				{
					this.OnPolicy_typeChanging(value);
					this.SendPropertyChanging();
					this._Policy_type = value;
					this.SendPropertyChanged("Policy_type");
					this.OnPolicy_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255)")]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_CAPABILITY_INSTANCE", Storage="_T_capability_instance", ThisKey="Id_policy", OtherKey="Id_policy", DeleteRule="NO ACTION")]
		public EntitySet<T_capability_instance> T_capability_instance
		{
			get
			{
				return this._T_capability_instance;
			}
			set
			{
				this._T_capability_instance.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_POLICY_ROLE", Storage="_T_policy_role", ThisKey="Id_policy", OtherKey="Id_policy", DeleteRule="NO ACTION")]
		public EntitySet<T_policy_role> T_policy_role
		{
			get
			{
				return this._T_policy_role;
			}
			set
			{
				this._T_policy_role.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_PRINCIPAL_POLICY", Storage="_T_account", ThisKey="Id_acc", OtherKey="Id_acc", IsForeignKey=true)]
		public T_account T_account
		{
			get
			{
				return this._T_account.Entity;
			}
			set
			{
				T_account previousValue = this._T_account.Entity;
				if (((previousValue != value) 
							|| (this._T_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account.Entity = null;
						previousValue.T_principal_policy.Remove(this);
					}
					this._T_account.Entity = value;
					if ((value != null))
					{
						value.T_principal_policy.Add(this);
						this._Id_acc = value.Id_acc;
					}
					else
					{
						this._Id_acc = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_account");
				}
			}
		}
		
		[Association(Name="FK2_T_PRINCIPAL_POLICY", Storage="_T_role", ThisKey="Id_role", OtherKey="Id_role", IsForeignKey=true)]
		public T_role T_role
		{
			get
			{
				return this._T_role.Entity;
			}
			set
			{
				T_role previousValue = this._T_role.Entity;
				if (((previousValue != value) 
							|| (this._T_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_role.Entity = null;
						previousValue.T_principal_policy.Remove(this);
					}
					this._T_role.Entity = value;
					if ((value != null))
					{
						value.T_principal_policy.Add(this);
						this._Id_role = value.Id_role;
					}
					else
					{
						this._Id_role = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_capability_instance(T_capability_instance entity)
		{
			this.SendPropertyChanging();
			entity.T_principal_policy = this;
		}
		
		private void detach_T_capability_instance(T_capability_instance entity)
		{
			this.SendPropertyChanging();
			entity.T_principal_policy = null;
		}
		
		private void attach_T_policy_role(T_policy_role entity)
		{
			this.SendPropertyChanging();
			entity.T_principal_policy = this;
		}
		
		private void detach_T_policy_role(T_policy_role entity)
		{
			this.SendPropertyChanging();
			entity.T_principal_policy = null;
		}
	}
	
	[Table(Name="dbo.t_principals")]
	public partial class T_principals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_principal;
		
		private string _Nm_table_name;
		
		private string _Nm_pk;
		
		private string _Nm_sprocname;
		
		private string _Nm_inherit_sprocname;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_principalChanging(int value);
    partial void OnId_principalChanged();
    partial void OnNm_table_nameChanging(string value);
    partial void OnNm_table_nameChanged();
    partial void OnNm_pkChanging(string value);
    partial void OnNm_pkChanged();
    partial void OnNm_sprocnameChanging(string value);
    partial void OnNm_sprocnameChanged();
    partial void OnNm_inherit_sprocnameChanging(string value);
    partial void OnNm_inherit_sprocnameChanged();
    #endregion
		
		public T_principals()
		{
			OnCreated();
		}
		
		[Column(Name="id_principal", Storage="_Id_principal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_principal
		{
			get
			{
				return this._Id_principal;
			}
			set
			{
				if ((this._Id_principal != value))
				{
					this.OnId_principalChanging(value);
					this.SendPropertyChanging();
					this._Id_principal = value;
					this.SendPropertyChanged("Id_principal");
					this.OnId_principalChanged();
				}
			}
		}
		
		[Column(Name="nm_table_name", Storage="_Nm_table_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_table_name
		{
			get
			{
				return this._Nm_table_name;
			}
			set
			{
				if ((this._Nm_table_name != value))
				{
					this.OnNm_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_table_name = value;
					this.SendPropertyChanged("Nm_table_name");
					this.OnNm_table_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_pk", Storage="_Nm_pk", DbType="VarChar(100)")]
		public string Nm_pk
		{
			get
			{
				return this._Nm_pk;
			}
			set
			{
				if ((this._Nm_pk != value))
				{
					this.OnNm_pkChanging(value);
					this.SendPropertyChanging();
					this._Nm_pk = value;
					this.SendPropertyChanged("Nm_pk");
					this.OnNm_pkChanged();
				}
			}
		}
		
		[Column(Name="nm_sprocname", Storage="_Nm_sprocname", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_sprocname
		{
			get
			{
				return this._Nm_sprocname;
			}
			set
			{
				if ((this._Nm_sprocname != value))
				{
					this.OnNm_sprocnameChanging(value);
					this.SendPropertyChanging();
					this._Nm_sprocname = value;
					this.SendPropertyChanged("Nm_sprocname");
					this.OnNm_sprocnameChanged();
				}
			}
		}
		
		[Column(Name="nm_inherit_sprocname", Storage="_Nm_inherit_sprocname", DbType="VarChar(256)")]
		public string Nm_inherit_sprocname
		{
			get
			{
				return this._Nm_inherit_sprocname;
			}
			set
			{
				if ((this._Nm_inherit_sprocname != value))
				{
					this.OnNm_inherit_sprocnameChanging(value);
					this.SendPropertyChanging();
					this._Nm_inherit_sprocname = value;
					this.SendPropertyChanged("Nm_inherit_sprocname");
					this.OnNm_inherit_sprocnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_prod_view")]
	public partial class T_prod_view : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prod_view;
		
		private int _Id_view;
		
		private System.Nullable<System.DateTime> _Dt_modified;
		
		private string _Nm_name;
		
		private string _Nm_table_name;
		
		private string _B_can_resubmit_from;
		
		private EntitySet<T_unique_cons> _T_unique_cons;
		
		private EntityRef<T_enum_data> _T_enum_data;
		
		private EntitySet<T_prod_view_prop> _T_prod_view_prop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_prod_viewChanging(int value);
    partial void OnId_prod_viewChanged();
    partial void OnId_viewChanging(int value);
    partial void OnId_viewChanged();
    partial void OnDt_modifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_modifiedChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_table_nameChanging(string value);
    partial void OnNm_table_nameChanged();
    partial void OnB_can_resubmit_fromChanging(string value);
    partial void OnB_can_resubmit_fromChanged();
    #endregion
		
		public T_prod_view()
		{
			this._T_unique_cons = new EntitySet<T_unique_cons>(new Action<T_unique_cons>(this.attach_T_unique_cons), new Action<T_unique_cons>(this.detach_T_unique_cons));
			this._T_enum_data = default(EntityRef<T_enum_data>);
			this._T_prod_view_prop = new EntitySet<T_prod_view_prop>(new Action<T_prod_view_prop>(this.attach_T_prod_view_prop), new Action<T_prod_view_prop>(this.detach_T_prod_view_prop));
			OnCreated();
		}
		
		[Column(Name="id_prod_view", Storage="_Id_prod_view", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prod_view
		{
			get
			{
				return this._Id_prod_view;
			}
			set
			{
				if ((this._Id_prod_view != value))
				{
					this.OnId_prod_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view = value;
					this.SendPropertyChanged("Id_prod_view");
					this.OnId_prod_viewChanged();
				}
			}
		}
		
		[Column(Name="id_view", Storage="_Id_view", DbType="Int NOT NULL")]
		public int Id_view
		{
			get
			{
				return this._Id_view;
			}
			set
			{
				if ((this._Id_view != value))
				{
					this.OnId_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_view = value;
					this.SendPropertyChanged("Id_view");
					this.OnId_viewChanged();
				}
			}
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this.OnDt_modifiedChanging(value);
					this.SendPropertyChanging();
					this._Dt_modified = value;
					this.SendPropertyChanged("Dt_modified");
					this.OnDt_modifiedChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255)")]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_table_name", Storage="_Nm_table_name", DbType="VarChar(255)")]
		public string Nm_table_name
		{
			get
			{
				return this._Nm_table_name;
			}
			set
			{
				if ((this._Nm_table_name != value))
				{
					this.OnNm_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_table_name = value;
					this.SendPropertyChanged("Nm_table_name");
					this.OnNm_table_nameChanged();
				}
			}
		}
		
		[Column(Name="b_can_resubmit_from", Storage="_B_can_resubmit_from", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_can_resubmit_from
		{
			get
			{
				return this._B_can_resubmit_from;
			}
			set
			{
				if ((this._B_can_resubmit_from != value))
				{
					this.OnB_can_resubmit_fromChanging(value);
					this.SendPropertyChanging();
					this._B_can_resubmit_from = value;
					this.SendPropertyChanged("B_can_resubmit_from");
					this.OnB_can_resubmit_fromChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_unique_cons", Storage="_T_unique_cons", ThisKey="Id_prod_view", OtherKey="Id_prod_view", DeleteRule="NO ACTION")]
		public EntitySet<T_unique_cons> T_unique_cons
		{
			get
			{
				return this._T_unique_cons;
			}
			set
			{
				this._T_unique_cons.Assign(value);
			}
		}
		
		[Association(Name="t_prod_view_FK1", Storage="_T_enum_data", ThisKey="Id_view", OtherKey="Id_enum_data", IsForeignKey=true)]
		public T_enum_data T_enum_data
		{
			get
			{
				return this._T_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._T_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_data.Entity = null;
						previousValue.T_prod_view = null;
					}
					this._T_enum_data.Entity = value;
					if ((value != null))
					{
						value.T_prod_view = this;
						this._Id_view = value.Id_enum_data;
					}
					else
					{
						this._Id_view = default(int);
					}
					this.SendPropertyChanged("T_enum_data");
				}
			}
		}
		
		[Association(Name="t_prod_view_prop_FK1", Storage="_T_prod_view_prop", ThisKey="Id_prod_view", OtherKey="Id_prod_view", DeleteRule="NO ACTION")]
		public EntitySet<T_prod_view_prop> T_prod_view_prop
		{
			get
			{
				return this._T_prod_view_prop;
			}
			set
			{
				this._T_prod_view_prop.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_unique_cons(T_unique_cons entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view = this;
		}
		
		private void detach_T_unique_cons(T_unique_cons entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view = null;
		}
		
		private void attach_T_prod_view_prop(T_prod_view_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view = this;
		}
		
		private void detach_T_prod_view_prop(T_prod_view_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view = null;
		}
	}
	
	[Table(Name="dbo.t_prod_view_prop")]
	public partial class T_prod_view_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prod_view_prop;
		
		private int _Id_prod_view;
		
		private string _Nm_name;
		
		private string _Nm_data_type;
		
		private string _Nm_column_name;
		
		private string _B_required;
		
		private string _B_composite_idx;
		
		private string _B_single_idx;
		
		private string _B_part_of_key;
		
		private string _B_exportable;
		
		private string _B_filterable;
		
		private string _B_user_visible;
		
		private string _Nm_default_value;
		
		private int _N_prop_type;
		
		private string _Nm_space;
		
		private string _Nm_enum;
		
		private string _B_core;
		
		private string _Description;
		
		private EntitySet<T_counter_param_predicate> _T_counter_param_predicate;
		
		private EntitySet<T_unique_cons_columns> _T_unique_cons_columns;
		
		private EntitySet<T_charge> _T_charge;
		
		private EntitySet<T_charge_prop> _T_charge_prop;
		
		private EntityRef<T_prod_view> _T_prod_view;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_prod_view_propChanging(int value);
    partial void OnId_prod_view_propChanged();
    partial void OnId_prod_viewChanging(int value);
    partial void OnId_prod_viewChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_data_typeChanging(string value);
    partial void OnNm_data_typeChanged();
    partial void OnNm_column_nameChanging(string value);
    partial void OnNm_column_nameChanged();
    partial void OnB_requiredChanging(string value);
    partial void OnB_requiredChanged();
    partial void OnB_composite_idxChanging(string value);
    partial void OnB_composite_idxChanged();
    partial void OnB_single_idxChanging(string value);
    partial void OnB_single_idxChanged();
    partial void OnB_part_of_keyChanging(string value);
    partial void OnB_part_of_keyChanged();
    partial void OnB_exportableChanging(string value);
    partial void OnB_exportableChanged();
    partial void OnB_filterableChanging(string value);
    partial void OnB_filterableChanged();
    partial void OnB_user_visibleChanging(string value);
    partial void OnB_user_visibleChanged();
    partial void OnNm_default_valueChanging(string value);
    partial void OnNm_default_valueChanged();
    partial void OnN_prop_typeChanging(int value);
    partial void OnN_prop_typeChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnNm_enumChanging(string value);
    partial void OnNm_enumChanged();
    partial void OnB_coreChanging(string value);
    partial void OnB_coreChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public T_prod_view_prop()
		{
			this._T_counter_param_predicate = new EntitySet<T_counter_param_predicate>(new Action<T_counter_param_predicate>(this.attach_T_counter_param_predicate), new Action<T_counter_param_predicate>(this.detach_T_counter_param_predicate));
			this._T_unique_cons_columns = new EntitySet<T_unique_cons_columns>(new Action<T_unique_cons_columns>(this.attach_T_unique_cons_columns), new Action<T_unique_cons_columns>(this.detach_T_unique_cons_columns));
			this._T_charge = new EntitySet<T_charge>(new Action<T_charge>(this.attach_T_charge), new Action<T_charge>(this.detach_T_charge));
			this._T_charge_prop = new EntitySet<T_charge_prop>(new Action<T_charge_prop>(this.attach_T_charge_prop), new Action<T_charge_prop>(this.detach_T_charge_prop));
			this._T_prod_view = default(EntityRef<T_prod_view>);
			OnCreated();
		}
		
		[Column(Name="id_prod_view_prop", Storage="_Id_prod_view_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_prod_view_prop
		{
			get
			{
				return this._Id_prod_view_prop;
			}
			set
			{
				if ((this._Id_prod_view_prop != value))
				{
					this.OnId_prod_view_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view_prop = value;
					this.SendPropertyChanged("Id_prod_view_prop");
					this.OnId_prod_view_propChanged();
				}
			}
		}
		
		[Column(Name="id_prod_view", Storage="_Id_prod_view", DbType="Int NOT NULL")]
		public int Id_prod_view
		{
			get
			{
				return this._Id_prod_view;
			}
			set
			{
				if ((this._Id_prod_view != value))
				{
					this.OnId_prod_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view = value;
					this.SendPropertyChanged("Id_prod_view");
					this.OnId_prod_viewChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_data_type", Storage="_Nm_data_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_data_type
		{
			get
			{
				return this._Nm_data_type;
			}
			set
			{
				if ((this._Nm_data_type != value))
				{
					this.OnNm_data_typeChanging(value);
					this.SendPropertyChanging();
					this._Nm_data_type = value;
					this.SendPropertyChanged("Nm_data_type");
					this.OnNm_data_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_column_name", Storage="_Nm_column_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_column_name
		{
			get
			{
				return this._Nm_column_name;
			}
			set
			{
				if ((this._Nm_column_name != value))
				{
					this.OnNm_column_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_column_name = value;
					this.SendPropertyChanged("Nm_column_name");
					this.OnNm_column_nameChanged();
				}
			}
		}
		
		[Column(Name="b_required", Storage="_B_required", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_required
		{
			get
			{
				return this._B_required;
			}
			set
			{
				if ((this._B_required != value))
				{
					this.OnB_requiredChanging(value);
					this.SendPropertyChanging();
					this._B_required = value;
					this.SendPropertyChanged("B_required");
					this.OnB_requiredChanged();
				}
			}
		}
		
		[Column(Name="b_composite_idx", Storage="_B_composite_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_composite_idx
		{
			get
			{
				return this._B_composite_idx;
			}
			set
			{
				if ((this._B_composite_idx != value))
				{
					this.OnB_composite_idxChanging(value);
					this.SendPropertyChanging();
					this._B_composite_idx = value;
					this.SendPropertyChanged("B_composite_idx");
					this.OnB_composite_idxChanged();
				}
			}
		}
		
		[Column(Name="b_single_idx", Storage="_B_single_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_single_idx
		{
			get
			{
				return this._B_single_idx;
			}
			set
			{
				if ((this._B_single_idx != value))
				{
					this.OnB_single_idxChanging(value);
					this.SendPropertyChanging();
					this._B_single_idx = value;
					this.SendPropertyChanged("B_single_idx");
					this.OnB_single_idxChanged();
				}
			}
		}
		
		[Column(Name="b_part_of_key", Storage="_B_part_of_key", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_part_of_key
		{
			get
			{
				return this._B_part_of_key;
			}
			set
			{
				if ((this._B_part_of_key != value))
				{
					this.OnB_part_of_keyChanging(value);
					this.SendPropertyChanging();
					this._B_part_of_key = value;
					this.SendPropertyChanged("B_part_of_key");
					this.OnB_part_of_keyChanged();
				}
			}
		}
		
		[Column(Name="b_exportable", Storage="_B_exportable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_exportable
		{
			get
			{
				return this._B_exportable;
			}
			set
			{
				if ((this._B_exportable != value))
				{
					this.OnB_exportableChanging(value);
					this.SendPropertyChanging();
					this._B_exportable = value;
					this.SendPropertyChanged("B_exportable");
					this.OnB_exportableChanged();
				}
			}
		}
		
		[Column(Name="b_filterable", Storage="_B_filterable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_filterable
		{
			get
			{
				return this._B_filterable;
			}
			set
			{
				if ((this._B_filterable != value))
				{
					this.OnB_filterableChanging(value);
					this.SendPropertyChanging();
					this._B_filterable = value;
					this.SendPropertyChanged("B_filterable");
					this.OnB_filterableChanged();
				}
			}
		}
		
		[Column(Name="b_user_visible", Storage="_B_user_visible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_visible
		{
			get
			{
				return this._B_user_visible;
			}
			set
			{
				if ((this._B_user_visible != value))
				{
					this.OnB_user_visibleChanging(value);
					this.SendPropertyChanging();
					this._B_user_visible = value;
					this.SendPropertyChanged("B_user_visible");
					this.OnB_user_visibleChanged();
				}
			}
		}
		
		[Column(Name="nm_default_value", Storage="_Nm_default_value", DbType="NVarChar(255)")]
		public string Nm_default_value
		{
			get
			{
				return this._Nm_default_value;
			}
			set
			{
				if ((this._Nm_default_value != value))
				{
					this.OnNm_default_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_default_value = value;
					this.SendPropertyChanged("Nm_default_value");
					this.OnNm_default_valueChanged();
				}
			}
		}
		
		[Column(Name="n_prop_type", Storage="_N_prop_type", DbType="Int NOT NULL")]
		public int N_prop_type
		{
			get
			{
				return this._N_prop_type;
			}
			set
			{
				if ((this._N_prop_type != value))
				{
					this.OnN_prop_typeChanging(value);
					this.SendPropertyChanging();
					this._N_prop_type = value;
					this.SendPropertyChanged("N_prop_type");
					this.OnN_prop_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(255)")]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="nm_enum", Storage="_Nm_enum", DbType="NVarChar(255)")]
		public string Nm_enum
		{
			get
			{
				return this._Nm_enum;
			}
			set
			{
				if ((this._Nm_enum != value))
				{
					this.OnNm_enumChanging(value);
					this.SendPropertyChanging();
					this._Nm_enum = value;
					this.SendPropertyChanged("Nm_enum");
					this.OnNm_enumChanged();
				}
			}
		}
		
		[Column(Name="b_core", Storage="_B_core", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_core
		{
			get
			{
				return this._B_core;
			}
			set
			{
				if ((this._B_core != value))
				{
					this.OnB_coreChanging(value);
					this.SendPropertyChanging();
					this._B_core = value;
					this.SendPropertyChanged("B_core");
					this.OnB_coreChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="fk_t_prod_view_prop", Storage="_T_counter_param_predicate", ThisKey="Id_prod_view_prop", OtherKey="Id_pv_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_counter_param_predicate> T_counter_param_predicate
		{
			get
			{
				return this._T_counter_param_predicate;
			}
			set
			{
				this._T_counter_param_predicate.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_unique_cons_col", Storage="_T_unique_cons_columns", ThisKey="Id_prod_view_prop", OtherKey="Id_prod_view_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_unique_cons_columns> T_unique_cons_columns
		{
			get
			{
				return this._T_unique_cons_columns;
			}
			set
			{
				this._T_unique_cons_columns.Assign(value);
			}
		}
		
		[Association(Name="t_charge_FK2", Storage="_T_charge", ThisKey="Id_prod_view_prop", OtherKey="Id_amt_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_charge> T_charge
		{
			get
			{
				return this._T_charge;
			}
			set
			{
				this._T_charge.Assign(value);
			}
		}
		
		[Association(Name="t_charge_prop_FK2", Storage="_T_charge_prop", ThisKey="Id_prod_view_prop", OtherKey="Id_prod_view_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_charge_prop> T_charge_prop
		{
			get
			{
				return this._T_charge_prop;
			}
			set
			{
				this._T_charge_prop.Assign(value);
			}
		}
		
		[Association(Name="t_prod_view_prop_FK1", Storage="_T_prod_view", ThisKey="Id_prod_view", OtherKey="Id_prod_view", IsForeignKey=true)]
		public T_prod_view T_prod_view
		{
			get
			{
				return this._T_prod_view.Entity;
			}
			set
			{
				T_prod_view previousValue = this._T_prod_view.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view.Entity = null;
						previousValue.T_prod_view_prop.Remove(this);
					}
					this._T_prod_view.Entity = value;
					if ((value != null))
					{
						value.T_prod_view_prop.Add(this);
						this._Id_prod_view = value.Id_prod_view;
					}
					else
					{
						this._Id_prod_view = default(int);
					}
					this.SendPropertyChanged("T_prod_view");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_counter_param_predicate(T_counter_param_predicate entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = this;
		}
		
		private void detach_T_counter_param_predicate(T_counter_param_predicate entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = null;
		}
		
		private void attach_T_unique_cons_columns(T_unique_cons_columns entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = this;
		}
		
		private void detach_T_unique_cons_columns(T_unique_cons_columns entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = null;
		}
		
		private void attach_T_charge(T_charge entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = this;
		}
		
		private void detach_T_charge(T_charge entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = null;
		}
		
		private void attach_T_charge_prop(T_charge_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = this;
		}
		
		private void detach_T_charge_prop(T_charge_prop entity)
		{
			this.SendPropertyChanging();
			entity.T_prod_view_prop = null;
		}
	}
	
	[Table(Name="dbo.t_product_view_log")]
	public partial class T_product_view_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_product_view;
		
		private int _Id_revision;
		
		private string _Tx_checksum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_product_viewChanging(string value);
    partial void OnNm_product_viewChanged();
    partial void OnId_revisionChanging(int value);
    partial void OnId_revisionChanged();
    partial void OnTx_checksumChanging(string value);
    partial void OnTx_checksumChanged();
    #endregion
		
		public T_product_view_log()
		{
			OnCreated();
		}
		
		[Column(Name="nm_product_view", Storage="_Nm_product_view", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_product_view
		{
			get
			{
				return this._Nm_product_view;
			}
			set
			{
				if ((this._Nm_product_view != value))
				{
					this.OnNm_product_viewChanging(value);
					this.SendPropertyChanging();
					this._Nm_product_view = value;
					this.SendPropertyChanged("Nm_product_view");
					this.OnNm_product_viewChanged();
				}
			}
		}
		
		[Column(Name="id_revision", Storage="_Id_revision", DbType="Int NOT NULL")]
		public int Id_revision
		{
			get
			{
				return this._Id_revision;
			}
			set
			{
				if ((this._Id_revision != value))
				{
					this.OnId_revisionChanging(value);
					this.SendPropertyChanging();
					this._Id_revision = value;
					this.SendPropertyChanged("Id_revision");
					this.OnId_revisionChanged();
				}
			}
		}
		
		[Column(Name="tx_checksum", Storage="_Tx_checksum", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tx_checksum
		{
			get
			{
				return this._Tx_checksum;
			}
			set
			{
				if ((this._Tx_checksum != value))
				{
					this.OnTx_checksumChanging(value);
					this.SendPropertyChanging();
					this._Tx_checksum = value;
					this.SendPropertyChanged("Tx_checksum");
					this.OnTx_checksumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_profile")]
	public partial class T_profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_profile;
		
		private string _Nm_tag;
		
		private string _Val_tag;
		
		private string _Tx_desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_profileChanging(int value);
    partial void OnId_profileChanged();
    partial void OnNm_tagChanging(string value);
    partial void OnNm_tagChanged();
    partial void OnVal_tagChanging(string value);
    partial void OnVal_tagChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    #endregion
		
		public T_profile()
		{
			OnCreated();
		}
		
		[Column(Name="id_profile", Storage="_Id_profile", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_profile
		{
			get
			{
				return this._Id_profile;
			}
			set
			{
				if ((this._Id_profile != value))
				{
					this.OnId_profileChanging(value);
					this.SendPropertyChanging();
					this._Id_profile = value;
					this.SendPropertyChanged("Id_profile");
					this.OnId_profileChanged();
				}
			}
		}
		
		[Column(Name="nm_tag", Storage="_Nm_tag", DbType="NVarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_tag
		{
			get
			{
				return this._Nm_tag;
			}
			set
			{
				if ((this._Nm_tag != value))
				{
					this.OnNm_tagChanging(value);
					this.SendPropertyChanging();
					this._Nm_tag = value;
					this.SendPropertyChanged("Nm_tag");
					this.OnNm_tagChanged();
				}
			}
		}
		
		[Column(Name="val_tag", Storage="_Val_tag", DbType="NVarChar(80)")]
		public string Val_tag
		{
			get
			{
				return this._Val_tag;
			}
			set
			{
				if ((this._Val_tag != value))
				{
					this.OnVal_tagChanging(value);
					this.SendPropertyChanging();
					this._Val_tag = value;
					this.SendPropertyChanged("Val_tag");
					this.OnVal_tagChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_ach")]
	public partial class T_ps_ach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_instrument;
		
		private string _Nm_routing_number;
		
		private string _Nm_bank_name;
		
		private string _Nm_bank_address;
		
		private string _Nm_bank_city;
		
		private string _Nm_bank_state;
		
		private string _Nm_bank_zip;
		
		private int _Id_country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnNm_routing_numberChanging(string value);
    partial void OnNm_routing_numberChanged();
    partial void OnNm_bank_nameChanging(string value);
    partial void OnNm_bank_nameChanged();
    partial void OnNm_bank_addressChanging(string value);
    partial void OnNm_bank_addressChanged();
    partial void OnNm_bank_cityChanging(string value);
    partial void OnNm_bank_cityChanged();
    partial void OnNm_bank_stateChanging(string value);
    partial void OnNm_bank_stateChanged();
    partial void OnNm_bank_zipChanging(string value);
    partial void OnNm_bank_zipChanged();
    partial void OnId_countryChanging(int value);
    partial void OnId_countryChanged();
    #endregion
		
		public T_ps_ach()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="nm_routing_number", Storage="_Nm_routing_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_routing_number
		{
			get
			{
				return this._Nm_routing_number;
			}
			set
			{
				if ((this._Nm_routing_number != value))
				{
					this.OnNm_routing_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_routing_number = value;
					this.SendPropertyChanged("Nm_routing_number");
					this.OnNm_routing_numberChanged();
				}
			}
		}
		
		[Column(Name="nm_bank_name", Storage="_Nm_bank_name", DbType="VarChar(20)")]
		public string Nm_bank_name
		{
			get
			{
				return this._Nm_bank_name;
			}
			set
			{
				if ((this._Nm_bank_name != value))
				{
					this.OnNm_bank_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_bank_name = value;
					this.SendPropertyChanged("Nm_bank_name");
					this.OnNm_bank_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_bank_address", Storage="_Nm_bank_address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_bank_address
		{
			get
			{
				return this._Nm_bank_address;
			}
			set
			{
				if ((this._Nm_bank_address != value))
				{
					this.OnNm_bank_addressChanging(value);
					this.SendPropertyChanging();
					this._Nm_bank_address = value;
					this.SendPropertyChanged("Nm_bank_address");
					this.OnNm_bank_addressChanged();
				}
			}
		}
		
		[Column(Name="nm_bank_city", Storage="_Nm_bank_city", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_bank_city
		{
			get
			{
				return this._Nm_bank_city;
			}
			set
			{
				if ((this._Nm_bank_city != value))
				{
					this.OnNm_bank_cityChanging(value);
					this.SendPropertyChanging();
					this._Nm_bank_city = value;
					this.SendPropertyChanged("Nm_bank_city");
					this.OnNm_bank_cityChanged();
				}
			}
		}
		
		[Column(Name="nm_bank_state", Storage="_Nm_bank_state", DbType="NVarChar(20)")]
		public string Nm_bank_state
		{
			get
			{
				return this._Nm_bank_state;
			}
			set
			{
				if ((this._Nm_bank_state != value))
				{
					this.OnNm_bank_stateChanging(value);
					this.SendPropertyChanging();
					this._Nm_bank_state = value;
					this.SendPropertyChanged("Nm_bank_state");
					this.OnNm_bank_stateChanged();
				}
			}
		}
		
		[Column(Name="nm_bank_zip", Storage="_Nm_bank_zip", DbType="NVarChar(10)")]
		public string Nm_bank_zip
		{
			get
			{
				return this._Nm_bank_zip;
			}
			set
			{
				if ((this._Nm_bank_zip != value))
				{
					this.OnNm_bank_zipChanging(value);
					this.SendPropertyChanging();
					this._Nm_bank_zip = value;
					this.SendPropertyChanged("Nm_bank_zip");
					this.OnNm_bank_zipChanged();
				}
			}
		}
		
		[Column(Name="id_country", Storage="_Id_country", DbType="Int NOT NULL")]
		public int Id_country
		{
			get
			{
				return this._Id_country;
			}
			set
			{
				if ((this._Id_country != value))
				{
					this.OnId_countryChanging(value);
					this.SendPropertyChanging();
					this._Id_country = value;
					this.SendPropertyChanged("Id_country");
					this.OnId_countryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_audit")]
	public partial class T_ps_audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_audit;
		
		private int _Id_request_type;
		
		private string _Id_transaction;
		
		private System.DateTime _Dt_transaction;
		
		private int _N_payment_method_type;
		
		private string _Nm_truncd_acct_num;
		
		private System.Nullable<int> _N_creditcard_type;
		
		private System.Nullable<int> _N_account_type;
		
		private string _Nm_description;
		
		private string _N_currency;
		
		private decimal _N_amount;
		
		private string _Id_transaction_session_id;
		
		private string _N_state;
		
		private string _N_gateway_response;
		
		private System.DateTime _Dt_last_update;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditChanging(string value);
    partial void OnId_auditChanged();
    partial void OnId_request_typeChanging(int value);
    partial void OnId_request_typeChanged();
    partial void OnId_transactionChanging(string value);
    partial void OnId_transactionChanged();
    partial void OnDt_transactionChanging(System.DateTime value);
    partial void OnDt_transactionChanged();
    partial void OnN_payment_method_typeChanging(int value);
    partial void OnN_payment_method_typeChanged();
    partial void OnNm_truncd_acct_numChanging(string value);
    partial void OnNm_truncd_acct_numChanged();
    partial void OnN_creditcard_typeChanging(System.Nullable<int> value);
    partial void OnN_creditcard_typeChanged();
    partial void OnN_account_typeChanging(System.Nullable<int> value);
    partial void OnN_account_typeChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnN_currencyChanging(string value);
    partial void OnN_currencyChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnId_transaction_session_idChanging(string value);
    partial void OnId_transaction_session_idChanged();
    partial void OnN_stateChanging(string value);
    partial void OnN_stateChanged();
    partial void OnN_gateway_responseChanging(string value);
    partial void OnN_gateway_responseChanged();
    partial void OnDt_last_updateChanging(System.DateTime value);
    partial void OnDt_last_updateChanged();
    #endregion
		
		public T_ps_audit()
		{
			OnCreated();
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="id_request_type", Storage="_Id_request_type", DbType="Int NOT NULL")]
		public int Id_request_type
		{
			get
			{
				return this._Id_request_type;
			}
			set
			{
				if ((this._Id_request_type != value))
				{
					this.OnId_request_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_request_type = value;
					this.SendPropertyChanged("Id_request_type");
					this.OnId_request_typeChanged();
				}
			}
		}
		
		[Column(Name="id_transaction", Storage="_Id_transaction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Id_transaction
		{
			get
			{
				return this._Id_transaction;
			}
			set
			{
				if ((this._Id_transaction != value))
				{
					this.OnId_transactionChanging(value);
					this.SendPropertyChanging();
					this._Id_transaction = value;
					this.SendPropertyChanged("Id_transaction");
					this.OnId_transactionChanged();
				}
			}
		}
		
		[Column(Name="dt_transaction", Storage="_Dt_transaction", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_transaction
		{
			get
			{
				return this._Dt_transaction;
			}
			set
			{
				if ((this._Dt_transaction != value))
				{
					this.OnDt_transactionChanging(value);
					this.SendPropertyChanging();
					this._Dt_transaction = value;
					this.SendPropertyChanged("Dt_transaction");
					this.OnDt_transactionChanged();
				}
			}
		}
		
		[Column(Name="n_payment_method_type", Storage="_N_payment_method_type", DbType="Int NOT NULL")]
		public int N_payment_method_type
		{
			get
			{
				return this._N_payment_method_type;
			}
			set
			{
				if ((this._N_payment_method_type != value))
				{
					this.OnN_payment_method_typeChanging(value);
					this.SendPropertyChanging();
					this._N_payment_method_type = value;
					this.SendPropertyChanged("N_payment_method_type");
					this.OnN_payment_method_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_truncd_acct_num", Storage="_Nm_truncd_acct_num", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_truncd_acct_num
		{
			get
			{
				return this._Nm_truncd_acct_num;
			}
			set
			{
				if ((this._Nm_truncd_acct_num != value))
				{
					this.OnNm_truncd_acct_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_truncd_acct_num = value;
					this.SendPropertyChanged("Nm_truncd_acct_num");
					this.OnNm_truncd_acct_numChanged();
				}
			}
		}
		
		[Column(Name="n_creditcard_type", Storage="_N_creditcard_type", DbType="Int")]
		public System.Nullable<int> N_creditcard_type
		{
			get
			{
				return this._N_creditcard_type;
			}
			set
			{
				if ((this._N_creditcard_type != value))
				{
					this.OnN_creditcard_typeChanging(value);
					this.SendPropertyChanging();
					this._N_creditcard_type = value;
					this.SendPropertyChanged("N_creditcard_type");
					this.OnN_creditcard_typeChanged();
				}
			}
		}
		
		[Column(Name="n_account_type", Storage="_N_account_type", DbType="Int")]
		public System.Nullable<int> N_account_type
		{
			get
			{
				return this._N_account_type;
			}
			set
			{
				if ((this._N_account_type != value))
				{
					this.OnN_account_typeChanging(value);
					this.SendPropertyChanging();
					this._N_account_type = value;
					this.SendPropertyChanged("N_account_type");
					this.OnN_account_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="n_currency", Storage="_N_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string N_currency
		{
			get
			{
				return this._N_currency;
			}
			set
			{
				if ((this._N_currency != value))
				{
					this.OnN_currencyChanging(value);
					this.SendPropertyChanging();
					this._N_currency = value;
					this.SendPropertyChanged("N_currency");
					this.OnN_currencyChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="id_transaction_session_id", Storage="_Id_transaction_session_id", DbType="NVarChar(72) NOT NULL", CanBeNull=false)]
		public string Id_transaction_session_id
		{
			get
			{
				return this._Id_transaction_session_id;
			}
			set
			{
				if ((this._Id_transaction_session_id != value))
				{
					this.OnId_transaction_session_idChanging(value);
					this.SendPropertyChanging();
					this._Id_transaction_session_id = value;
					this.SendPropertyChanged("Id_transaction_session_id");
					this.OnId_transaction_session_idChanged();
				}
			}
		}
		
		[Column(Name="n_state", Storage="_N_state", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string N_state
		{
			get
			{
				return this._N_state;
			}
			set
			{
				if ((this._N_state != value))
				{
					this.OnN_stateChanging(value);
					this.SendPropertyChanging();
					this._N_state = value;
					this.SendPropertyChanged("N_state");
					this.OnN_stateChanged();
				}
			}
		}
		
		[Column(Name="n_gateway_response", Storage="_N_gateway_response", DbType="NVarChar(400)")]
		public string N_gateway_response
		{
			get
			{
				return this._N_gateway_response;
			}
			set
			{
				if ((this._N_gateway_response != value))
				{
					this.OnN_gateway_responseChanging(value);
					this.SendPropertyChanging();
					this._N_gateway_response = value;
					this.SendPropertyChanged("N_gateway_response");
					this.OnN_gateway_responseChanged();
				}
			}
		}
		
		[Column(Name="dt_last_update", Storage="_Dt_last_update", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_last_update
		{
			get
			{
				return this._Dt_last_update;
			}
			set
			{
				if ((this._Dt_last_update != value))
				{
					this.OnDt_last_updateChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_update = value;
					this.SendPropertyChanged("Dt_last_update");
					this.OnDt_last_updateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_audit_details")]
	public partial class T_ps_audit_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_audit_detail;
		
		private string _Id_audit;
		
		private string _Nm_invoice_num;
		
		private System.Nullable<System.DateTime> _Dt_invoice_date;
		
		private string _Nm_po_number;
		
		private System.Nullable<decimal> _N_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_audit_detailChanging(int value);
    partial void OnId_audit_detailChanged();
    partial void OnId_auditChanging(string value);
    partial void OnId_auditChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnDt_invoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_invoice_dateChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    partial void OnN_amountChanging(System.Nullable<decimal> value);
    partial void OnN_amountChanged();
    #endregion
		
		public T_ps_audit_details()
		{
			OnCreated();
		}
		
		[Column(Name="id_audit_detail", Storage="_Id_audit_detail", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit_detail
		{
			get
			{
				return this._Id_audit_detail;
			}
			set
			{
				if ((this._Id_audit_detail != value))
				{
					this.OnId_audit_detailChanging(value);
					this.SendPropertyChanging();
					this._Id_audit_detail = value;
					this.SendPropertyChanged("Id_audit_detail");
					this.OnId_audit_detailChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(50)")]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice_date", Storage="_Dt_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_invoice_date
		{
			get
			{
				return this._Dt_invoice_date;
			}
			set
			{
				if ((this._Dt_invoice_date != value))
				{
					this.OnDt_invoice_dateChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice_date = value;
					this.SendPropertyChanged("Dt_invoice_date");
					this.OnDt_invoice_dateChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(30)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_credit_card")]
	public partial class T_ps_credit_card : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_instrument;
		
		private int _N_credit_card_type;
		
		private string _Nm_expirationdt;
		
		private int _Nm_expirationdt_format;
		
		private string _Nm_startdate;
		
		private string _Nm_issuernumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnN_credit_card_typeChanging(int value);
    partial void OnN_credit_card_typeChanged();
    partial void OnNm_expirationdtChanging(string value);
    partial void OnNm_expirationdtChanged();
    partial void OnNm_expirationdt_formatChanging(int value);
    partial void OnNm_expirationdt_formatChanged();
    partial void OnNm_startdateChanging(string value);
    partial void OnNm_startdateChanged();
    partial void OnNm_issuernumberChanging(string value);
    partial void OnNm_issuernumberChanged();
    #endregion
		
		public T_ps_credit_card()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="n_credit_card_type", Storage="_N_credit_card_type", DbType="Int NOT NULL")]
		public int N_credit_card_type
		{
			get
			{
				return this._N_credit_card_type;
			}
			set
			{
				if ((this._N_credit_card_type != value))
				{
					this.OnN_credit_card_typeChanging(value);
					this.SendPropertyChanging();
					this._N_credit_card_type = value;
					this.SendPropertyChanged("N_credit_card_type");
					this.OnN_credit_card_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_expirationdt", Storage="_Nm_expirationdt", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_expirationdt
		{
			get
			{
				return this._Nm_expirationdt;
			}
			set
			{
				if ((this._Nm_expirationdt != value))
				{
					this.OnNm_expirationdtChanging(value);
					this.SendPropertyChanging();
					this._Nm_expirationdt = value;
					this.SendPropertyChanged("Nm_expirationdt");
					this.OnNm_expirationdtChanged();
				}
			}
		}
		
		[Column(Name="nm_expirationdt_format", Storage="_Nm_expirationdt_format", DbType="Int NOT NULL")]
		public int Nm_expirationdt_format
		{
			get
			{
				return this._Nm_expirationdt_format;
			}
			set
			{
				if ((this._Nm_expirationdt_format != value))
				{
					this.OnNm_expirationdt_formatChanging(value);
					this.SendPropertyChanging();
					this._Nm_expirationdt_format = value;
					this.SendPropertyChanged("Nm_expirationdt_format");
					this.OnNm_expirationdt_formatChanged();
				}
			}
		}
		
		[Column(Name="nm_startdate", Storage="_Nm_startdate", DbType="VarChar(20)")]
		public string Nm_startdate
		{
			get
			{
				return this._Nm_startdate;
			}
			set
			{
				if ((this._Nm_startdate != value))
				{
					this.OnNm_startdateChanging(value);
					this.SendPropertyChanging();
					this._Nm_startdate = value;
					this.SendPropertyChanged("Nm_startdate");
					this.OnNm_startdateChanged();
				}
			}
		}
		
		[Column(Name="nm_issuernumber", Storage="_Nm_issuernumber", DbType="VarChar(20)")]
		public string Nm_issuernumber
		{
			get
			{
				return this._Nm_issuernumber;
			}
			set
			{
				if ((this._Nm_issuernumber != value))
				{
					this.OnNm_issuernumberChanging(value);
					this.SendPropertyChanging();
					this._Nm_issuernumber = value;
					this.SendPropertyChanged("Nm_issuernumber");
					this.OnNm_issuernumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_payment_instrument")]
	public partial class T_ps_payment_instrument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_payment_instrument;
		
		private int _N_payment_method_type;
		
		private string _Nm_account_number;
		
		private string _Nm_first_name;
		
		private string _Nm_middle_name;
		
		private string _Nm_last_name;
		
		private string _Nm_address1;
		
		private string _Nm_address2;
		
		private string _Nm_city;
		
		private string _Nm_state;
		
		private string _Nm_zip;
		
		private int _Id_country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_payment_instrumentChanging(string value);
    partial void OnId_payment_instrumentChanged();
    partial void OnN_payment_method_typeChanging(int value);
    partial void OnN_payment_method_typeChanged();
    partial void OnNm_account_numberChanging(string value);
    partial void OnNm_account_numberChanged();
    partial void OnNm_first_nameChanging(string value);
    partial void OnNm_first_nameChanged();
    partial void OnNm_middle_nameChanging(string value);
    partial void OnNm_middle_nameChanged();
    partial void OnNm_last_nameChanging(string value);
    partial void OnNm_last_nameChanged();
    partial void OnNm_address1Changing(string value);
    partial void OnNm_address1Changed();
    partial void OnNm_address2Changing(string value);
    partial void OnNm_address2Changed();
    partial void OnNm_cityChanging(string value);
    partial void OnNm_cityChanged();
    partial void OnNm_stateChanging(string value);
    partial void OnNm_stateChanged();
    partial void OnNm_zipChanging(string value);
    partial void OnNm_zipChanged();
    partial void OnId_countryChanging(int value);
    partial void OnId_countryChanged();
    #endregion
		
		public T_ps_payment_instrument()
		{
			OnCreated();
		}
		
		[Column(Name="id_payment_instrument", Storage="_Id_payment_instrument", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_payment_instrument
		{
			get
			{
				return this._Id_payment_instrument;
			}
			set
			{
				if ((this._Id_payment_instrument != value))
				{
					this.OnId_payment_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_payment_instrument = value;
					this.SendPropertyChanged("Id_payment_instrument");
					this.OnId_payment_instrumentChanged();
				}
			}
		}
		
		[Column(Name="n_payment_method_type", Storage="_N_payment_method_type", DbType="Int NOT NULL")]
		public int N_payment_method_type
		{
			get
			{
				return this._N_payment_method_type;
			}
			set
			{
				if ((this._N_payment_method_type != value))
				{
					this.OnN_payment_method_typeChanging(value);
					this.SendPropertyChanging();
					this._N_payment_method_type = value;
					this.SendPropertyChanged("N_payment_method_type");
					this.OnN_payment_method_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_account_number", Storage="_Nm_account_number", DbType="VarChar(2048)")]
		public string Nm_account_number
		{
			get
			{
				return this._Nm_account_number;
			}
			set
			{
				if ((this._Nm_account_number != value))
				{
					this.OnNm_account_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_account_number = value;
					this.SendPropertyChanged("Nm_account_number");
					this.OnNm_account_numberChanged();
				}
			}
		}
		
		[Column(Name="nm_first_name", Storage="_Nm_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_first_name
		{
			get
			{
				return this._Nm_first_name;
			}
			set
			{
				if ((this._Nm_first_name != value))
				{
					this.OnNm_first_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_first_name = value;
					this.SendPropertyChanged("Nm_first_name");
					this.OnNm_first_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_middle_name", Storage="_Nm_middle_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_middle_name
		{
			get
			{
				return this._Nm_middle_name;
			}
			set
			{
				if ((this._Nm_middle_name != value))
				{
					this.OnNm_middle_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_middle_name = value;
					this.SendPropertyChanged("Nm_middle_name");
					this.OnNm_middle_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_last_name", Storage="_Nm_last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nm_last_name
		{
			get
			{
				return this._Nm_last_name;
			}
			set
			{
				if ((this._Nm_last_name != value))
				{
					this.OnNm_last_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_last_name = value;
					this.SendPropertyChanged("Nm_last_name");
					this.OnNm_last_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_address1", Storage="_Nm_address1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_address1
		{
			get
			{
				return this._Nm_address1;
			}
			set
			{
				if ((this._Nm_address1 != value))
				{
					this.OnNm_address1Changing(value);
					this.SendPropertyChanging();
					this._Nm_address1 = value;
					this.SendPropertyChanged("Nm_address1");
					this.OnNm_address1Changed();
				}
			}
		}
		
		[Column(Name="nm_address2", Storage="_Nm_address2", DbType="NVarChar(255)")]
		public string Nm_address2
		{
			get
			{
				return this._Nm_address2;
			}
			set
			{
				if ((this._Nm_address2 != value))
				{
					this.OnNm_address2Changing(value);
					this.SendPropertyChanging();
					this._Nm_address2 = value;
					this.SendPropertyChanged("Nm_address2");
					this.OnNm_address2Changed();
				}
			}
		}
		
		[Column(Name="nm_city", Storage="_Nm_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_city
		{
			get
			{
				return this._Nm_city;
			}
			set
			{
				if ((this._Nm_city != value))
				{
					this.OnNm_cityChanging(value);
					this.SendPropertyChanging();
					this._Nm_city = value;
					this.SendPropertyChanged("Nm_city");
					this.OnNm_cityChanged();
				}
			}
		}
		
		[Column(Name="nm_state", Storage="_Nm_state", DbType="NVarChar(40)")]
		public string Nm_state
		{
			get
			{
				return this._Nm_state;
			}
			set
			{
				if ((this._Nm_state != value))
				{
					this.OnNm_stateChanging(value);
					this.SendPropertyChanging();
					this._Nm_state = value;
					this.SendPropertyChanged("Nm_state");
					this.OnNm_stateChanged();
				}
			}
		}
		
		[Column(Name="nm_zip", Storage="_Nm_zip", DbType="NVarChar(10)")]
		public string Nm_zip
		{
			get
			{
				return this._Nm_zip;
			}
			set
			{
				if ((this._Nm_zip != value))
				{
					this.OnNm_zipChanging(value);
					this.SendPropertyChanging();
					this._Nm_zip = value;
					this.SendPropertyChanged("Nm_zip");
					this.OnNm_zipChanged();
				}
			}
		}
		
		[Column(Name="id_country", Storage="_Id_country", DbType="Int NOT NULL")]
		public int Id_country
		{
			get
			{
				return this._Id_country;
			}
			set
			{
				if ((this._Id_country != value))
				{
					this.OnId_countryChanging(value);
					this.SendPropertyChanging();
					this._Id_country = value;
					this.SendPropertyChanged("Id_country");
					this.OnId_countryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_pcard")]
	public partial class T_ps_pcard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _Id_creditcardtype;
		
		private string _Nm_lastfourdigits;
		
		private string _Nm_customerreferenceid;
		
		private string _Nm_customervatnumber;
		
		private string _Nm_companyaddress;
		
		private string _Nm_companypostalcode;
		
		private string _Nm_companyphone;
		
		private string _Nm_reserved1;
		
		private string _Nm_reserved2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_creditcardtypeChanging(int value);
    partial void OnId_creditcardtypeChanged();
    partial void OnNm_lastfourdigitsChanging(string value);
    partial void OnNm_lastfourdigitsChanged();
    partial void OnNm_customerreferenceidChanging(string value);
    partial void OnNm_customerreferenceidChanged();
    partial void OnNm_customervatnumberChanging(string value);
    partial void OnNm_customervatnumberChanged();
    partial void OnNm_companyaddressChanging(string value);
    partial void OnNm_companyaddressChanged();
    partial void OnNm_companypostalcodeChanging(string value);
    partial void OnNm_companypostalcodeChanged();
    partial void OnNm_companyphoneChanging(string value);
    partial void OnNm_companyphoneChanged();
    partial void OnNm_reserved1Changing(string value);
    partial void OnNm_reserved1Changed();
    partial void OnNm_reserved2Changing(string value);
    partial void OnNm_reserved2Changed();
    #endregion
		
		public T_ps_pcard()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_creditcardtype", Storage="_Id_creditcardtype", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_creditcardtype
		{
			get
			{
				return this._Id_creditcardtype;
			}
			set
			{
				if ((this._Id_creditcardtype != value))
				{
					this.OnId_creditcardtypeChanging(value);
					this.SendPropertyChanging();
					this._Id_creditcardtype = value;
					this.SendPropertyChanged("Id_creditcardtype");
					this.OnId_creditcardtypeChanged();
				}
			}
		}
		
		[Column(Name="nm_lastfourdigits", Storage="_Nm_lastfourdigits", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_lastfourdigits
		{
			get
			{
				return this._Nm_lastfourdigits;
			}
			set
			{
				if ((this._Nm_lastfourdigits != value))
				{
					this.OnNm_lastfourdigitsChanging(value);
					this.SendPropertyChanging();
					this._Nm_lastfourdigits = value;
					this.SendPropertyChanged("Nm_lastfourdigits");
					this.OnNm_lastfourdigitsChanged();
				}
			}
		}
		
		[Column(Name="nm_customerreferenceid", Storage="_Nm_customerreferenceid", DbType="VarChar(17)")]
		public string Nm_customerreferenceid
		{
			get
			{
				return this._Nm_customerreferenceid;
			}
			set
			{
				if ((this._Nm_customerreferenceid != value))
				{
					this.OnNm_customerreferenceidChanging(value);
					this.SendPropertyChanging();
					this._Nm_customerreferenceid = value;
					this.SendPropertyChanged("Nm_customerreferenceid");
					this.OnNm_customerreferenceidChanged();
				}
			}
		}
		
		[Column(Name="nm_customervatnumber", Storage="_Nm_customervatnumber", DbType="NVarChar(17)")]
		public string Nm_customervatnumber
		{
			get
			{
				return this._Nm_customervatnumber;
			}
			set
			{
				if ((this._Nm_customervatnumber != value))
				{
					this.OnNm_customervatnumberChanging(value);
					this.SendPropertyChanging();
					this._Nm_customervatnumber = value;
					this.SendPropertyChanged("Nm_customervatnumber");
					this.OnNm_customervatnumberChanged();
				}
			}
		}
		
		[Column(Name="nm_companyaddress", Storage="_Nm_companyaddress", DbType="NVarChar(40)")]
		public string Nm_companyaddress
		{
			get
			{
				return this._Nm_companyaddress;
			}
			set
			{
				if ((this._Nm_companyaddress != value))
				{
					this.OnNm_companyaddressChanging(value);
					this.SendPropertyChanging();
					this._Nm_companyaddress = value;
					this.SendPropertyChanged("Nm_companyaddress");
					this.OnNm_companyaddressChanged();
				}
			}
		}
		
		[Column(Name="nm_companypostalcode", Storage="_Nm_companypostalcode", DbType="NVarChar(10)")]
		public string Nm_companypostalcode
		{
			get
			{
				return this._Nm_companypostalcode;
			}
			set
			{
				if ((this._Nm_companypostalcode != value))
				{
					this.OnNm_companypostalcodeChanging(value);
					this.SendPropertyChanging();
					this._Nm_companypostalcode = value;
					this.SendPropertyChanged("Nm_companypostalcode");
					this.OnNm_companypostalcodeChanged();
				}
			}
		}
		
		[Column(Name="nm_companyphone", Storage="_Nm_companyphone", DbType="NVarChar(40)")]
		public string Nm_companyphone
		{
			get
			{
				return this._Nm_companyphone;
			}
			set
			{
				if ((this._Nm_companyphone != value))
				{
					this.OnNm_companyphoneChanging(value);
					this.SendPropertyChanging();
					this._Nm_companyphone = value;
					this.SendPropertyChanged("Nm_companyphone");
					this.OnNm_companyphoneChanged();
				}
			}
		}
		
		[Column(Name="nm_reserved1", Storage="_Nm_reserved1", DbType="NVarChar(40)")]
		public string Nm_reserved1
		{
			get
			{
				return this._Nm_reserved1;
			}
			set
			{
				if ((this._Nm_reserved1 != value))
				{
					this.OnNm_reserved1Changing(value);
					this.SendPropertyChanging();
					this._Nm_reserved1 = value;
					this.SendPropertyChanged("Nm_reserved1");
					this.OnNm_reserved1Changed();
				}
			}
		}
		
		[Column(Name="nm_reserved2", Storage="_Nm_reserved2", DbType="NVarChar(40)")]
		public string Nm_reserved2
		{
			get
			{
				return this._Nm_reserved2;
			}
			set
			{
				if ((this._Nm_reserved2 != value))
				{
					this.OnNm_reserved2Changing(value);
					this.SendPropertyChanging();
					this._Nm_reserved2 = value;
					this.SendPropertyChanged("Nm_reserved2");
					this.OnNm_reserved2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_preauth")]
	public partial class T_ps_preauth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_preauth_tx_id;
		
		private string _Id_pymt_instrument;
		
		private System.DateTime _Dt_transaction;
		
		private string _Nm_description;
		
		private string _N_currency;
		
		private decimal _N_amount;
		
		private string _N_request_params;
		
		private string _Nm_ar_request_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_preauth_tx_idChanging(string value);
    partial void OnId_preauth_tx_idChanged();
    partial void OnId_pymt_instrumentChanging(string value);
    partial void OnId_pymt_instrumentChanged();
    partial void OnDt_transactionChanging(System.DateTime value);
    partial void OnDt_transactionChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnN_currencyChanging(string value);
    partial void OnN_currencyChanged();
    partial void OnN_amountChanging(decimal value);
    partial void OnN_amountChanged();
    partial void OnN_request_paramsChanging(string value);
    partial void OnN_request_paramsChanged();
    partial void OnNm_ar_request_idChanging(string value);
    partial void OnNm_ar_request_idChanged();
    #endregion
		
		public T_ps_preauth()
		{
			OnCreated();
		}
		
		[Column(Name="id_preauth_tx_id", Storage="_Id_preauth_tx_id", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_preauth_tx_id
		{
			get
			{
				return this._Id_preauth_tx_id;
			}
			set
			{
				if ((this._Id_preauth_tx_id != value))
				{
					this.OnId_preauth_tx_idChanging(value);
					this.SendPropertyChanging();
					this._Id_preauth_tx_id = value;
					this.SendPropertyChanged("Id_preauth_tx_id");
					this.OnId_preauth_tx_idChanged();
				}
			}
		}
		
		[Column(Name="id_pymt_instrument", Storage="_Id_pymt_instrument", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Id_pymt_instrument
		{
			get
			{
				return this._Id_pymt_instrument;
			}
			set
			{
				if ((this._Id_pymt_instrument != value))
				{
					this.OnId_pymt_instrumentChanging(value);
					this.SendPropertyChanging();
					this._Id_pymt_instrument = value;
					this.SendPropertyChanged("Id_pymt_instrument");
					this.OnId_pymt_instrumentChanged();
				}
			}
		}
		
		[Column(Name="dt_transaction", Storage="_Dt_transaction", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_transaction
		{
			get
			{
				return this._Dt_transaction;
			}
			set
			{
				if ((this._Dt_transaction != value))
				{
					this.OnDt_transactionChanging(value);
					this.SendPropertyChanging();
					this._Dt_transaction = value;
					this.SendPropertyChanged("Dt_transaction");
					this.OnDt_transactionChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(10)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="n_currency", Storage="_N_currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string N_currency
		{
			get
			{
				return this._N_currency;
			}
			set
			{
				if ((this._N_currency != value))
				{
					this.OnN_currencyChanging(value);
					this.SendPropertyChanging();
					this._N_currency = value;
					this.SendPropertyChanged("N_currency");
					this.OnN_currencyChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		[Column(Name="n_request_params", Storage="_N_request_params", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string N_request_params
		{
			get
			{
				return this._N_request_params;
			}
			set
			{
				if ((this._N_request_params != value))
				{
					this.OnN_request_paramsChanging(value);
					this.SendPropertyChanging();
					this._N_request_params = value;
					this.SendPropertyChanged("N_request_params");
					this.OnN_request_paramsChanged();
				}
			}
		}
		
		[Column(Name="nm_ar_request_id", Storage="_Nm_ar_request_id", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Nm_ar_request_id
		{
			get
			{
				return this._Nm_ar_request_id;
			}
			set
			{
				if ((this._Nm_ar_request_id != value))
				{
					this.OnNm_ar_request_idChanging(value);
					this.SendPropertyChanging();
					this._Nm_ar_request_id = value;
					this.SendPropertyChanged("Nm_ar_request_id");
					this.OnNm_ar_request_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ps_preauth_details")]
	public partial class T_ps_preauth_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_preauth_tx_id_detail;
		
		private string _Id_preauth_tx_id;
		
		private string _Nm_invoice_num;
		
		private System.Nullable<System.DateTime> _Dt_invoice_date;
		
		private string _Nm_po_number;
		
		private System.Nullable<decimal> _N_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_preauth_tx_id_detailChanging(int value);
    partial void OnId_preauth_tx_id_detailChanged();
    partial void OnId_preauth_tx_idChanging(string value);
    partial void OnId_preauth_tx_idChanged();
    partial void OnNm_invoice_numChanging(string value);
    partial void OnNm_invoice_numChanged();
    partial void OnDt_invoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_invoice_dateChanged();
    partial void OnNm_po_numberChanging(string value);
    partial void OnNm_po_numberChanged();
    partial void OnN_amountChanging(System.Nullable<decimal> value);
    partial void OnN_amountChanged();
    #endregion
		
		public T_ps_preauth_details()
		{
			OnCreated();
		}
		
		[Column(Name="id_preauth_tx_id_detail", Storage="_Id_preauth_tx_id_detail", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_preauth_tx_id_detail
		{
			get
			{
				return this._Id_preauth_tx_id_detail;
			}
			set
			{
				if ((this._Id_preauth_tx_id_detail != value))
				{
					this.OnId_preauth_tx_id_detailChanging(value);
					this.SendPropertyChanging();
					this._Id_preauth_tx_id_detail = value;
					this.SendPropertyChanged("Id_preauth_tx_id_detail");
					this.OnId_preauth_tx_id_detailChanged();
				}
			}
		}
		
		[Column(Name="id_preauth_tx_id", Storage="_Id_preauth_tx_id", DbType="NVarChar(72) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_preauth_tx_id
		{
			get
			{
				return this._Id_preauth_tx_id;
			}
			set
			{
				if ((this._Id_preauth_tx_id != value))
				{
					this.OnId_preauth_tx_idChanging(value);
					this.SendPropertyChanging();
					this._Id_preauth_tx_id = value;
					this.SendPropertyChanged("Id_preauth_tx_id");
					this.OnId_preauth_tx_idChanged();
				}
			}
		}
		
		[Column(Name="nm_invoice_num", Storage="_Nm_invoice_num", DbType="NVarChar(255)")]
		public string Nm_invoice_num
		{
			get
			{
				return this._Nm_invoice_num;
			}
			set
			{
				if ((this._Nm_invoice_num != value))
				{
					this.OnNm_invoice_numChanging(value);
					this.SendPropertyChanging();
					this._Nm_invoice_num = value;
					this.SendPropertyChanged("Nm_invoice_num");
					this.OnNm_invoice_numChanged();
				}
			}
		}
		
		[Column(Name="dt_invoice_date", Storage="_Dt_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_invoice_date
		{
			get
			{
				return this._Dt_invoice_date;
			}
			set
			{
				if ((this._Dt_invoice_date != value))
				{
					this.OnDt_invoice_dateChanging(value);
					this.SendPropertyChanging();
					this._Dt_invoice_date = value;
					this.SendPropertyChanged("Dt_invoice_date");
					this.OnDt_invoice_dateChanged();
				}
			}
		}
		
		[Column(Name="nm_po_number", Storage="_Nm_po_number", DbType="NVarChar(20)")]
		public string Nm_po_number
		{
			get
			{
				return this._Nm_po_number;
			}
			set
			{
				if ((this._Nm_po_number != value))
				{
					this.OnNm_po_numberChanging(value);
					this.SendPropertyChanging();
					this._Nm_po_number = value;
					this.SendPropertyChanged("Nm_po_number");
					this.OnNm_po_numberChanged();
				}
			}
		}
		
		[Column(Name="n_amount", Storage="_N_amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> N_amount
		{
			get
			{
				return this._N_amount;
			}
			set
			{
				if ((this._N_amount != value))
				{
					this.OnN_amountChanging(value);
					this.SendPropertyChanging();
					this._N_amount = value;
					this.SendPropertyChanged("N_amount");
					this.OnN_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_aggrate")]
	public partial class T_pt_aggrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_Counter1;
		
		private string _C_Counter2_op;
		
		private decimal _C_Counter2;
		
		private decimal _C_Rate;
		
		private int _C_MTI;
		
		private decimal _C_MinCharge;
		
		private decimal _C_SetupCharge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_Counter1Changing(decimal value);
    partial void OnC_Counter1Changed();
    partial void OnC_Counter2_opChanging(string value);
    partial void OnC_Counter2_opChanged();
    partial void OnC_Counter2Changing(decimal value);
    partial void OnC_Counter2Changed();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_MTIChanging(int value);
    partial void OnC_MTIChanged();
    partial void OnC_MinChargeChanging(decimal value);
    partial void OnC_MinChargeChanged();
    partial void OnC_SetupChargeChanging(decimal value);
    partial void OnC_SetupChargeChanged();
    #endregion
		
		public T_pt_aggrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Counter1", Storage="_C_Counter1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter1
		{
			get
			{
				return this._C_Counter1;
			}
			set
			{
				if ((this._C_Counter1 != value))
				{
					this.OnC_Counter1Changing(value);
					this.SendPropertyChanging();
					this._C_Counter1 = value;
					this.SendPropertyChanged("C_Counter1");
					this.OnC_Counter1Changed();
				}
			}
		}
		
		[Column(Name="c_Counter2_op", Storage="_C_Counter2_op", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string C_Counter2_op
		{
			get
			{
				return this._C_Counter2_op;
			}
			set
			{
				if ((this._C_Counter2_op != value))
				{
					this.OnC_Counter2_opChanging(value);
					this.SendPropertyChanging();
					this._C_Counter2_op = value;
					this.SendPropertyChanged("C_Counter2_op");
					this.OnC_Counter2_opChanged();
				}
			}
		}
		
		[Column(Name="c_Counter2", Storage="_C_Counter2", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter2
		{
			get
			{
				return this._C_Counter2;
			}
			set
			{
				if ((this._C_Counter2 != value))
				{
					this.OnC_Counter2Changing(value);
					this.SendPropertyChanging();
					this._C_Counter2 = value;
					this.SendPropertyChanged("C_Counter2");
					this.OnC_Counter2Changed();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_MTI", Storage="_C_MTI", DbType="Int NOT NULL")]
		public int C_MTI
		{
			get
			{
				return this._C_MTI;
			}
			set
			{
				if ((this._C_MTI != value))
				{
					this.OnC_MTIChanging(value);
					this.SendPropertyChanging();
					this._C_MTI = value;
					this.SendPropertyChanged("C_MTI");
					this.OnC_MTIChanged();
				}
			}
		}
		
		[Column(Name="c_MinCharge", Storage="_C_MinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_MinCharge
		{
			get
			{
				return this._C_MinCharge;
			}
			set
			{
				if ((this._C_MinCharge != value))
				{
					this.OnC_MinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_MinCharge = value;
					this.SendPropertyChanged("C_MinCharge");
					this.OnC_MinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_basetransportrate")]
	public partial class T_pt_basetransportrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_CallType;
		
		private System.Nullable<int> _C_Mode;
		
		private System.Nullable<int> _C_Transport;
		
		private decimal _C_BaseTransportRate;
		
		private decimal _C_BaseTransportSetupCharge;
		
		private decimal _C_BaseTransportMinCharge;
		
		private int _C_TransportMinUOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CallTypeChanging(System.Nullable<int> value);
    partial void OnC_CallTypeChanged();
    partial void OnC_ModeChanging(System.Nullable<int> value);
    partial void OnC_ModeChanged();
    partial void OnC_TransportChanging(System.Nullable<int> value);
    partial void OnC_TransportChanged();
    partial void OnC_BaseTransportRateChanging(decimal value);
    partial void OnC_BaseTransportRateChanged();
    partial void OnC_BaseTransportSetupChargeChanging(decimal value);
    partial void OnC_BaseTransportSetupChargeChanged();
    partial void OnC_BaseTransportMinChargeChanging(decimal value);
    partial void OnC_BaseTransportMinChargeChanged();
    partial void OnC_TransportMinUOMChanging(int value);
    partial void OnC_TransportMinUOMChanged();
    #endregion
		
		public T_pt_basetransportrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int")]
		public System.Nullable<int> C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int")]
		public System.Nullable<int> C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_Transport", Storage="_C_Transport", DbType="Int")]
		public System.Nullable<int> C_Transport
		{
			get
			{
				return this._C_Transport;
			}
			set
			{
				if ((this._C_Transport != value))
				{
					this.OnC_TransportChanging(value);
					this.SendPropertyChanging();
					this._C_Transport = value;
					this.SendPropertyChanged("C_Transport");
					this.OnC_TransportChanged();
				}
			}
		}
		
		[Column(Name="c_BaseTransportRate", Storage="_C_BaseTransportRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BaseTransportRate
		{
			get
			{
				return this._C_BaseTransportRate;
			}
			set
			{
				if ((this._C_BaseTransportRate != value))
				{
					this.OnC_BaseTransportRateChanging(value);
					this.SendPropertyChanging();
					this._C_BaseTransportRate = value;
					this.SendPropertyChanged("C_BaseTransportRate");
					this.OnC_BaseTransportRateChanged();
				}
			}
		}
		
		[Column(Name="c_BaseTransportSetupCharge", Storage="_C_BaseTransportSetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BaseTransportSetupCharge
		{
			get
			{
				return this._C_BaseTransportSetupCharge;
			}
			set
			{
				if ((this._C_BaseTransportSetupCharge != value))
				{
					this.OnC_BaseTransportSetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BaseTransportSetupCharge = value;
					this.SendPropertyChanged("C_BaseTransportSetupCharge");
					this.OnC_BaseTransportSetupChargeChanged();
				}
			}
		}
		
		[Column(Name="c_BaseTransportMinCharge", Storage="_C_BaseTransportMinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BaseTransportMinCharge
		{
			get
			{
				return this._C_BaseTransportMinCharge;
			}
			set
			{
				if ((this._C_BaseTransportMinCharge != value))
				{
					this.OnC_BaseTransportMinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BaseTransportMinCharge = value;
					this.SendPropertyChanged("C_BaseTransportMinCharge");
					this.OnC_BaseTransportMinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_TransportMinUOM", Storage="_C_TransportMinUOM", DbType="Int NOT NULL")]
		public int C_TransportMinUOM
		{
			get
			{
				return this._C_TransportMinUOM;
			}
			set
			{
				if ((this._C_TransportMinUOM != value))
				{
					this.OnC_TransportMinUOMChanging(value);
					this.SendPropertyChanging();
					this._C_TransportMinUOM = value;
					this.SendPropertyChanged("C_TransportMinUOM");
					this.OnC_TransportMinUOMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_bridgerate")]
	public partial class T_pt_bridgerate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_CalendarCode;
		
		private System.Nullable<int> _C_CallType;
		
		private System.Nullable<int> _C_Mode;
		
		private decimal _C_BridgeRate;
		
		private decimal _C_BridgeSetupCharge;
		
		private decimal _C_BridgeMinCharge;
		
		private int _C_BridgeMinUOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CalendarCodeChanging(System.Nullable<int> value);
    partial void OnC_CalendarCodeChanged();
    partial void OnC_CallTypeChanging(System.Nullable<int> value);
    partial void OnC_CallTypeChanged();
    partial void OnC_ModeChanging(System.Nullable<int> value);
    partial void OnC_ModeChanged();
    partial void OnC_BridgeRateChanging(decimal value);
    partial void OnC_BridgeRateChanged();
    partial void OnC_BridgeSetupChargeChanging(decimal value);
    partial void OnC_BridgeSetupChargeChanged();
    partial void OnC_BridgeMinChargeChanging(decimal value);
    partial void OnC_BridgeMinChargeChanged();
    partial void OnC_BridgeMinUOMChanging(int value);
    partial void OnC_BridgeMinUOMChanged();
    #endregion
		
		public T_pt_bridgerate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_CalendarCode", Storage="_C_CalendarCode", DbType="Int")]
		public System.Nullable<int> C_CalendarCode
		{
			get
			{
				return this._C_CalendarCode;
			}
			set
			{
				if ((this._C_CalendarCode != value))
				{
					this.OnC_CalendarCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CalendarCode = value;
					this.SendPropertyChanged("C_CalendarCode");
					this.OnC_CalendarCodeChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int")]
		public System.Nullable<int> C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int")]
		public System.Nullable<int> C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeRate", Storage="_C_BridgeRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeRate
		{
			get
			{
				return this._C_BridgeRate;
			}
			set
			{
				if ((this._C_BridgeRate != value))
				{
					this.OnC_BridgeRateChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeRate = value;
					this.SendPropertyChanged("C_BridgeRate");
					this.OnC_BridgeRateChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeSetupCharge", Storage="_C_BridgeSetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeSetupCharge
		{
			get
			{
				return this._C_BridgeSetupCharge;
			}
			set
			{
				if ((this._C_BridgeSetupCharge != value))
				{
					this.OnC_BridgeSetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeSetupCharge = value;
					this.SendPropertyChanged("C_BridgeSetupCharge");
					this.OnC_BridgeSetupChargeChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeMinCharge", Storage="_C_BridgeMinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeMinCharge
		{
			get
			{
				return this._C_BridgeMinCharge;
			}
			set
			{
				if ((this._C_BridgeMinCharge != value))
				{
					this.OnC_BridgeMinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeMinCharge = value;
					this.SendPropertyChanged("C_BridgeMinCharge");
					this.OnC_BridgeMinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeMinUOM", Storage="_C_BridgeMinUOM", DbType="Int NOT NULL")]
		public int C_BridgeMinUOM
		{
			get
			{
				return this._C_BridgeMinUOM;
			}
			set
			{
				if ((this._C_BridgeMinUOM != value))
				{
					this.OnC_BridgeMinUOMChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeMinUOM = value;
					this.SendPropertyChanged("C_BridgeMinUOM");
					this.OnC_BridgeMinUOMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_BulkDiscountPT")]
	public partial class T_pt_BulkDiscountPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfUnitRange;
		
		private System.Nullable<int> _C_EndOfUnitRange;
		
		private System.Nullable<int> _C_DiscountPercentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfUnitRangeChanged();
    partial void OnC_EndOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfUnitRangeChanged();
    partial void OnC_DiscountPercentageChanging(System.Nullable<int> value);
    partial void OnC_DiscountPercentageChanged();
    #endregion
		
		public T_pt_BulkDiscountPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfUnitRange", Storage="_C_StartOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_StartOfUnitRange
		{
			get
			{
				return this._C_StartOfUnitRange;
			}
			set
			{
				if ((this._C_StartOfUnitRange != value))
				{
					this.OnC_StartOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfUnitRange = value;
					this.SendPropertyChanged("C_StartOfUnitRange");
					this.OnC_StartOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfUnitRange", Storage="_C_EndOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_EndOfUnitRange
		{
			get
			{
				return this._C_EndOfUnitRange;
			}
			set
			{
				if ((this._C_EndOfUnitRange != value))
				{
					this.OnC_EndOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfUnitRange = value;
					this.SendPropertyChanged("C_EndOfUnitRange");
					this.OnC_EndOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercentage", Storage="_C_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> C_DiscountPercentage
		{
			get
			{
				return this._C_DiscountPercentage;
			}
			set
			{
				if ((this._C_DiscountPercentage != value))
				{
					this.OnC_DiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercentage = value;
					this.SendPropertyChanged("C_DiscountPercentage");
					this.OnC_DiscountPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_BulkEventRatesPT")]
	public partial class T_pt_BulkEventRatesPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfEventCountRange;
		
		private System.Nullable<int> _C_EndOfEventCountRange;
		
		private System.Nullable<decimal> _C_OverrideRateForEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfEventCountRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfEventCountRangeChanged();
    partial void OnC_EndOfEventCountRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfEventCountRangeChanged();
    partial void OnC_OverrideRateForEventsChanging(System.Nullable<decimal> value);
    partial void OnC_OverrideRateForEventsChanged();
    #endregion
		
		public T_pt_BulkEventRatesPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfEventCountRange", Storage="_C_StartOfEventCountRange", DbType="Int")]
		public System.Nullable<int> C_StartOfEventCountRange
		{
			get
			{
				return this._C_StartOfEventCountRange;
			}
			set
			{
				if ((this._C_StartOfEventCountRange != value))
				{
					this.OnC_StartOfEventCountRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfEventCountRange = value;
					this.SendPropertyChanged("C_StartOfEventCountRange");
					this.OnC_StartOfEventCountRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfEventCountRange", Storage="_C_EndOfEventCountRange", DbType="Int")]
		public System.Nullable<int> C_EndOfEventCountRange
		{
			get
			{
				return this._C_EndOfEventCountRange;
			}
			set
			{
				if ((this._C_EndOfEventCountRange != value))
				{
					this.OnC_EndOfEventCountRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfEventCountRange = value;
					this.SendPropertyChanged("C_EndOfEventCountRange");
					this.OnC_EndOfEventCountRangeChanged();
				}
			}
		}
		
		[Column(Name="c_OverrideRateForEvents", Storage="_C_OverrideRateForEvents", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_OverrideRateForEvents
		{
			get
			{
				return this._C_OverrideRateForEvents;
			}
			set
			{
				if ((this._C_OverrideRateForEvents != value))
				{
					this.OnC_OverrideRateForEventsChanging(value);
					this.SendPropertyChanging();
					this._C_OverrideRateForEvents = value;
					this.SendPropertyChanged("C_OverrideRateForEvents");
					this.OnC_OverrideRateForEventsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_BulkUnitRatesPT")]
	public partial class T_pt_BulkUnitRatesPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfUnitRange;
		
		private System.Nullable<int> _C_EndOfUnitRange;
		
		private System.Nullable<decimal> _C_OverrideRateForUnits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfUnitRangeChanged();
    partial void OnC_EndOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfUnitRangeChanged();
    partial void OnC_OverrideRateForUnitsChanging(System.Nullable<decimal> value);
    partial void OnC_OverrideRateForUnitsChanged();
    #endregion
		
		public T_pt_BulkUnitRatesPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfUnitRange", Storage="_C_StartOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_StartOfUnitRange
		{
			get
			{
				return this._C_StartOfUnitRange;
			}
			set
			{
				if ((this._C_StartOfUnitRange != value))
				{
					this.OnC_StartOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfUnitRange = value;
					this.SendPropertyChanged("C_StartOfUnitRange");
					this.OnC_StartOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfUnitRange", Storage="_C_EndOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_EndOfUnitRange
		{
			get
			{
				return this._C_EndOfUnitRange;
			}
			set
			{
				if ((this._C_EndOfUnitRange != value))
				{
					this.OnC_EndOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfUnitRange = value;
					this.SendPropertyChanged("C_EndOfUnitRange");
					this.OnC_EndOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_OverrideRateForUnits", Storage="_C_OverrideRateForUnits", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_OverrideRateForUnits
		{
			get
			{
				return this._C_OverrideRateForUnits;
			}
			set
			{
				if ((this._C_OverrideRateForUnits != value))
				{
					this.OnC_OverrideRateForUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_OverrideRateForUnits = value;
					this.SendPropertyChanged("C_OverrideRateForUnits");
					this.OnC_OverrideRateForUnitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_Calendar")]
	public partial class T_pt_Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_Calendar_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_Calendar_IDChanging(int value);
    partial void OnC_Calendar_IDChanged();
    #endregion
		
		public T_pt_Calendar()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Calendar_ID", Storage="_C_Calendar_ID", DbType="Int NOT NULL")]
		public int C_Calendar_ID
		{
			get
			{
				return this._C_Calendar_ID;
			}
			set
			{
				if ((this._C_Calendar_ID != value))
				{
					this.OnC_Calendar_IDChanging(value);
					this.SendPropertyChanging();
					this._C_Calendar_ID = value;
					this.SendPropertyChanged("C_Calendar_ID");
					this.OnC_Calendar_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_cancelapplic")]
	public partial class T_pt_cancelapplic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private string _C_Notice_op;
		
		private System.Nullable<int> _C_Notice;
		
		private string _C_CancelApplicBool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_Notice_opChanging(string value);
    partial void OnC_Notice_opChanged();
    partial void OnC_NoticeChanging(System.Nullable<int> value);
    partial void OnC_NoticeChanged();
    partial void OnC_CancelApplicBoolChanging(string value);
    partial void OnC_CancelApplicBoolChanged();
    #endregion
		
		public T_pt_cancelapplic()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_Notice_op", Storage="_C_Notice_op", DbType="NVarChar(5)")]
		public string C_Notice_op
		{
			get
			{
				return this._C_Notice_op;
			}
			set
			{
				if ((this._C_Notice_op != value))
				{
					this.OnC_Notice_opChanging(value);
					this.SendPropertyChanging();
					this._C_Notice_op = value;
					this.SendPropertyChanged("C_Notice_op");
					this.OnC_Notice_opChanged();
				}
			}
		}
		
		[Column(Name="c_Notice", Storage="_C_Notice", DbType="Int")]
		public System.Nullable<int> C_Notice
		{
			get
			{
				return this._C_Notice;
			}
			set
			{
				if ((this._C_Notice != value))
				{
					this.OnC_NoticeChanging(value);
					this.SendPropertyChanging();
					this._C_Notice = value;
					this.SendPropertyChanged("C_Notice");
					this.OnC_NoticeChanged();
				}
			}
		}
		
		[Column(Name="c_CancelApplicBool", Storage="_C_CancelApplicBool", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_CancelApplicBool
		{
			get
			{
				return this._C_CancelApplicBool;
			}
			set
			{
				if ((this._C_CancelApplicBool != value))
				{
					this.OnC_CancelApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_CancelApplicBool = value;
					this.SendPropertyChanged("C_CancelApplicBool");
					this.OnC_CancelApplicBoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_cancelrate")]
	public partial class T_pt_cancelrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private string _C_ScheduledDuration_op;
		
		private System.Nullable<int> _C_ScheduledDuration;
		
		private string _C_Notice_op;
		
		private System.Nullable<int> _C_Notice;
		
		private int _C_CancelChargeType;
		
		private System.Nullable<decimal> _C_CancelMaxCharge;
		
		private decimal _C_CancelRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ScheduledDuration_opChanging(string value);
    partial void OnC_ScheduledDuration_opChanged();
    partial void OnC_ScheduledDurationChanging(System.Nullable<int> value);
    partial void OnC_ScheduledDurationChanged();
    partial void OnC_Notice_opChanging(string value);
    partial void OnC_Notice_opChanged();
    partial void OnC_NoticeChanging(System.Nullable<int> value);
    partial void OnC_NoticeChanged();
    partial void OnC_CancelChargeTypeChanging(int value);
    partial void OnC_CancelChargeTypeChanged();
    partial void OnC_CancelMaxChargeChanging(System.Nullable<decimal> value);
    partial void OnC_CancelMaxChargeChanged();
    partial void OnC_CancelRateChanging(decimal value);
    partial void OnC_CancelRateChanged();
    #endregion
		
		public T_pt_cancelrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledDuration_op", Storage="_C_ScheduledDuration_op", DbType="NVarChar(5)")]
		public string C_ScheduledDuration_op
		{
			get
			{
				return this._C_ScheduledDuration_op;
			}
			set
			{
				if ((this._C_ScheduledDuration_op != value))
				{
					this.OnC_ScheduledDuration_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledDuration_op = value;
					this.SendPropertyChanged("C_ScheduledDuration_op");
					this.OnC_ScheduledDuration_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledDuration", Storage="_C_ScheduledDuration", DbType="Int")]
		public System.Nullable<int> C_ScheduledDuration
		{
			get
			{
				return this._C_ScheduledDuration;
			}
			set
			{
				if ((this._C_ScheduledDuration != value))
				{
					this.OnC_ScheduledDurationChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledDuration = value;
					this.SendPropertyChanged("C_ScheduledDuration");
					this.OnC_ScheduledDurationChanged();
				}
			}
		}
		
		[Column(Name="c_Notice_op", Storage="_C_Notice_op", DbType="NVarChar(5)")]
		public string C_Notice_op
		{
			get
			{
				return this._C_Notice_op;
			}
			set
			{
				if ((this._C_Notice_op != value))
				{
					this.OnC_Notice_opChanging(value);
					this.SendPropertyChanging();
					this._C_Notice_op = value;
					this.SendPropertyChanged("C_Notice_op");
					this.OnC_Notice_opChanged();
				}
			}
		}
		
		[Column(Name="c_Notice", Storage="_C_Notice", DbType="Int")]
		public System.Nullable<int> C_Notice
		{
			get
			{
				return this._C_Notice;
			}
			set
			{
				if ((this._C_Notice != value))
				{
					this.OnC_NoticeChanging(value);
					this.SendPropertyChanging();
					this._C_Notice = value;
					this.SendPropertyChanged("C_Notice");
					this.OnC_NoticeChanged();
				}
			}
		}
		
		[Column(Name="c_CancelChargeType", Storage="_C_CancelChargeType", DbType="Int NOT NULL")]
		public int C_CancelChargeType
		{
			get
			{
				return this._C_CancelChargeType;
			}
			set
			{
				if ((this._C_CancelChargeType != value))
				{
					this.OnC_CancelChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CancelChargeType = value;
					this.SendPropertyChanged("C_CancelChargeType");
					this.OnC_CancelChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_CancelMaxCharge", Storage="_C_CancelMaxCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_CancelMaxCharge
		{
			get
			{
				return this._C_CancelMaxCharge;
			}
			set
			{
				if ((this._C_CancelMaxCharge != value))
				{
					this.OnC_CancelMaxChargeChanging(value);
					this.SendPropertyChanging();
					this._C_CancelMaxCharge = value;
					this.SendPropertyChanged("C_CancelMaxCharge");
					this.OnC_CancelMaxChargeChanged();
				}
			}
		}
		
		[Column(Name="c_CancelRate", Storage="_C_CancelRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_CancelRate
		{
			get
			{
				return this._C_CancelRate;
			}
			set
			{
				if ((this._C_CancelRate != value))
				{
					this.OnC_CancelRateChanging(value);
					this.SendPropertyChanging();
					this._C_CancelRate = value;
					this.SendPropertyChanged("C_CancelRate");
					this.OnC_CancelRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_CommitmentPT")]
	public partial class T_pt_CommitmentPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_EndOfAmountRange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_EndOfAmountRangeChanging(System.Nullable<decimal> value);
    partial void OnC_EndOfAmountRangeChanged();
    #endregion
		
		public T_pt_CommitmentPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfAmountRange", Storage="_C_EndOfAmountRange", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_EndOfAmountRange
		{
			get
			{
				return this._C_EndOfAmountRange;
			}
			set
			{
				if ((this._C_EndOfAmountRange != value))
				{
					this.OnC_EndOfAmountRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfAmountRange = value;
					this.SendPropertyChanged("C_EndOfAmountRange");
					this.OnC_EndOfAmountRangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_confcalldiscount")]
	public partial class T_pt_confcalldiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_qualifier_op;
		
		private System.Nullable<decimal> _C_qualifier;
		
		private decimal _C_NoShowDiscountPercent;
		
		private decimal _C_UnusedPortDiscountPercent;
		
		private decimal _C_SetupDiscountPercent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_qualifier_opChanging(string value);
    partial void OnC_qualifier_opChanged();
    partial void OnC_qualifierChanging(System.Nullable<decimal> value);
    partial void OnC_qualifierChanged();
    partial void OnC_NoShowDiscountPercentChanging(decimal value);
    partial void OnC_NoShowDiscountPercentChanged();
    partial void OnC_UnusedPortDiscountPercentChanging(decimal value);
    partial void OnC_UnusedPortDiscountPercentChanged();
    partial void OnC_SetupDiscountPercentChanging(decimal value);
    partial void OnC_SetupDiscountPercentChanged();
    #endregion
		
		public T_pt_confcalldiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_qualifier_op", Storage="_C_qualifier_op", DbType="NVarChar(5)")]
		public string C_qualifier_op
		{
			get
			{
				return this._C_qualifier_op;
			}
			set
			{
				if ((this._C_qualifier_op != value))
				{
					this.OnC_qualifier_opChanging(value);
					this.SendPropertyChanging();
					this._C_qualifier_op = value;
					this.SendPropertyChanged("C_qualifier_op");
					this.OnC_qualifier_opChanged();
				}
			}
		}
		
		[Column(Name="c_qualifier", Storage="_C_qualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_qualifier
		{
			get
			{
				return this._C_qualifier;
			}
			set
			{
				if ((this._C_qualifier != value))
				{
					this.OnC_qualifierChanging(value);
					this.SendPropertyChanging();
					this._C_qualifier = value;
					this.SendPropertyChanged("C_qualifier");
					this.OnC_qualifierChanged();
				}
			}
		}
		
		[Column(Name="c_NoShowDiscountPercent", Storage="_C_NoShowDiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_NoShowDiscountPercent
		{
			get
			{
				return this._C_NoShowDiscountPercent;
			}
			set
			{
				if ((this._C_NoShowDiscountPercent != value))
				{
					this.OnC_NoShowDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_NoShowDiscountPercent = value;
					this.SendPropertyChanged("C_NoShowDiscountPercent");
					this.OnC_NoShowDiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortDiscountPercent", Storage="_C_UnusedPortDiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnusedPortDiscountPercent
		{
			get
			{
				return this._C_UnusedPortDiscountPercent;
			}
			set
			{
				if ((this._C_UnusedPortDiscountPercent != value))
				{
					this.OnC_UnusedPortDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortDiscountPercent = value;
					this.SendPropertyChanged("C_UnusedPortDiscountPercent");
					this.OnC_UnusedPortDiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_SetupDiscountPercent", Storage="_C_SetupDiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupDiscountPercent
		{
			get
			{
				return this._C_SetupDiscountPercent;
			}
			set
			{
				if ((this._C_SetupDiscountPercent != value))
				{
					this.OnC_SetupDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_SetupDiscountPercent = value;
					this.SendPropertyChanged("C_SetupDiscountPercent");
					this.OnC_SetupDiscountPercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_CurrencyExchangeRates")]
	public partial class T_pt_CurrencyExchangeRates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_SourceCurrency;
		
		private int _C_TargetCurrency;
		
		private decimal _C_ExchangeRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_SourceCurrencyChanging(int value);
    partial void OnC_SourceCurrencyChanged();
    partial void OnC_TargetCurrencyChanging(int value);
    partial void OnC_TargetCurrencyChanged();
    partial void OnC_ExchangeRatesChanging(decimal value);
    partial void OnC_ExchangeRatesChanged();
    #endregion
		
		public T_pt_CurrencyExchangeRates()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_SourceCurrency", Storage="_C_SourceCurrency", DbType="Int NOT NULL")]
		public int C_SourceCurrency
		{
			get
			{
				return this._C_SourceCurrency;
			}
			set
			{
				if ((this._C_SourceCurrency != value))
				{
					this.OnC_SourceCurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_SourceCurrency = value;
					this.SendPropertyChanged("C_SourceCurrency");
					this.OnC_SourceCurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_TargetCurrency", Storage="_C_TargetCurrency", DbType="Int NOT NULL")]
		public int C_TargetCurrency
		{
			get
			{
				return this._C_TargetCurrency;
			}
			set
			{
				if ((this._C_TargetCurrency != value))
				{
					this.OnC_TargetCurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_TargetCurrency = value;
					this.SendPropertyChanged("C_TargetCurrency");
					this.OnC_TargetCurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_ExchangeRates", Storage="_C_ExchangeRates", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ExchangeRates
		{
			get
			{
				return this._C_ExchangeRates;
			}
			set
			{
				if ((this._C_ExchangeRates != value))
				{
					this.OnC_ExchangeRatesChanging(value);
					this.SendPropertyChanging();
					this._C_ExchangeRates = value;
					this.SendPropertyChanged("C_ExchangeRates");
					this.OnC_ExchangeRatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_decimalcalc")]
	public partial class T_pt_decimalcalc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_decprop3_op;
		
		private System.Nullable<decimal> _C_DecProp3;
		
		private string _C_DecProp4Applic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_decprop3_opChanging(string value);
    partial void OnC_decprop3_opChanged();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    partial void OnC_DecProp4ApplicChanging(string value);
    partial void OnC_DecProp4ApplicChanged();
    #endregion
		
		public T_pt_decimalcalc()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_decprop3_op", Storage="_C_decprop3_op", DbType="NVarChar(5)")]
		public string C_decprop3_op
		{
			get
			{
				return this._C_decprop3_op;
			}
			set
			{
				if ((this._C_decprop3_op != value))
				{
					this.OnC_decprop3_opChanging(value);
					this.SendPropertyChanging();
					this._C_decprop3_op = value;
					this.SendPropertyChanged("C_decprop3_op");
					this.OnC_decprop3_opChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp4Applic", Storage="_C_DecProp4Applic", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_DecProp4Applic
		{
			get
			{
				return this._C_DecProp4Applic;
			}
			set
			{
				if ((this._C_DecProp4Applic != value))
				{
					this.OnC_DecProp4ApplicChanging(value);
					this.SendPropertyChanging();
					this._C_DecProp4Applic = value;
					this.SendPropertyChanged("C_DecProp4Applic");
					this.OnC_DecProp4ApplicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_featuresetupcharge")]
	public partial class T_pt_featuresetupcharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_FeatureType;
		
		private decimal _C_SetupCharge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_FeatureTypeChanging(int value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_SetupChargeChanging(decimal value);
    partial void OnC_SetupChargeChanged();
    #endregion
		
		public T_pt_featuresetupcharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int NOT NULL")]
		public int C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_FlatDiscount")]
	public partial class T_pt_FlatDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_FlatRateQualifier_op;
		
		private System.Nullable<decimal> _C_FlatRateQualifier;
		
		private decimal _C_FlatDiscountAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_FlatRateQualifier_opChanging(string value);
    partial void OnC_FlatRateQualifier_opChanged();
    partial void OnC_FlatRateQualifierChanging(System.Nullable<decimal> value);
    partial void OnC_FlatRateQualifierChanged();
    partial void OnC_FlatDiscountAmountChanging(decimal value);
    partial void OnC_FlatDiscountAmountChanged();
    #endregion
		
		public T_pt_FlatDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_FlatRateQualifier_op", Storage="_C_FlatRateQualifier_op", DbType="NVarChar(5)")]
		public string C_FlatRateQualifier_op
		{
			get
			{
				return this._C_FlatRateQualifier_op;
			}
			set
			{
				if ((this._C_FlatRateQualifier_op != value))
				{
					this.OnC_FlatRateQualifier_opChanging(value);
					this.SendPropertyChanging();
					this._C_FlatRateQualifier_op = value;
					this.SendPropertyChanged("C_FlatRateQualifier_op");
					this.OnC_FlatRateQualifier_opChanged();
				}
			}
		}
		
		[Column(Name="c_FlatRateQualifier", Storage="_C_FlatRateQualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_FlatRateQualifier
		{
			get
			{
				return this._C_FlatRateQualifier;
			}
			set
			{
				if ((this._C_FlatRateQualifier != value))
				{
					this.OnC_FlatRateQualifierChanging(value);
					this.SendPropertyChanging();
					this._C_FlatRateQualifier = value;
					this.SendPropertyChanged("C_FlatRateQualifier");
					this.OnC_FlatRateQualifierChanged();
				}
			}
		}
		
		[Column(Name="c_FlatDiscountAmount", Storage="_C_FlatDiscountAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_FlatDiscountAmount
		{
			get
			{
				return this._C_FlatDiscountAmount;
			}
			set
			{
				if ((this._C_FlatDiscountAmount != value))
				{
					this.OnC_FlatDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_FlatDiscountAmount = value;
					this.SendPropertyChanged("C_FlatDiscountAmount");
					this.OnC_FlatDiscountAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_FlatDiscount_NoCond")]
	public partial class T_pt_FlatDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_FlatUncondDiscountAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_FlatUncondDiscountAmountChanging(decimal value);
    partial void OnC_FlatUncondDiscountAmountChanged();
    #endregion
		
		public T_pt_FlatDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_FlatUncondDiscountAmount", Storage="_C_FlatUncondDiscountAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_FlatUncondDiscountAmount
		{
			get
			{
				return this._C_FlatUncondDiscountAmount;
			}
			set
			{
				if ((this._C_FlatUncondDiscountAmount != value))
				{
					this.OnC_FlatUncondDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_FlatUncondDiscountAmount = value;
					this.SendPropertyChanged("C_FlatUncondDiscountAmount");
					this.OnC_FlatUncondDiscountAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_FlatRecurringCharge")]
	public partial class T_pt_FlatRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_RCAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_RCAmountChanging(decimal value);
    partial void OnC_RCAmountChanged();
    #endregion
		
		public T_pt_FlatRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_RCAmount", Storage="_C_RCAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_RCAmount
		{
			get
			{
				return this._C_RCAmount;
			}
			set
			{
				if ((this._C_RCAmount != value))
				{
					this.OnC_RCAmountChanging(value);
					this.SendPropertyChanging();
					this._C_RCAmount = value;
					this.SendPropertyChanged("C_RCAmount");
					this.OnC_RCAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_FreeUsagePT")]
	public partial class T_pt_FreeUsagePT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_EndOfUnitRange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_EndOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfUnitRangeChanged();
    #endregion
		
		public T_pt_FreeUsagePT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfUnitRange", Storage="_C_EndOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_EndOfUnitRange
		{
			get
			{
				return this._C_EndOfUnitRange;
			}
			set
			{
				if ((this._C_EndOfUnitRange != value))
				{
					this.OnC_EndOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfUnitRange = value;
					this.SendPropertyChanged("C_EndOfUnitRange");
					this.OnC_EndOfUnitRangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_globalactions")]
	public partial class T_pt_globalactions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_DomesticMTI;
		
		private int _C_IntlMTI;
		
		private int _C_BridgeMTI;
		
		private int _C_Precision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_DomesticMTIChanging(int value);
    partial void OnC_DomesticMTIChanged();
    partial void OnC_IntlMTIChanging(int value);
    partial void OnC_IntlMTIChanged();
    partial void OnC_BridgeMTIChanging(int value);
    partial void OnC_BridgeMTIChanged();
    partial void OnC_PrecisionChanging(int value);
    partial void OnC_PrecisionChanged();
    #endregion
		
		public T_pt_globalactions()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_DomesticMTI", Storage="_C_DomesticMTI", DbType="Int NOT NULL")]
		public int C_DomesticMTI
		{
			get
			{
				return this._C_DomesticMTI;
			}
			set
			{
				if ((this._C_DomesticMTI != value))
				{
					this.OnC_DomesticMTIChanging(value);
					this.SendPropertyChanging();
					this._C_DomesticMTI = value;
					this.SendPropertyChanged("C_DomesticMTI");
					this.OnC_DomesticMTIChanged();
				}
			}
		}
		
		[Column(Name="c_IntlMTI", Storage="_C_IntlMTI", DbType="Int NOT NULL")]
		public int C_IntlMTI
		{
			get
			{
				return this._C_IntlMTI;
			}
			set
			{
				if ((this._C_IntlMTI != value))
				{
					this.OnC_IntlMTIChanging(value);
					this.SendPropertyChanging();
					this._C_IntlMTI = value;
					this.SendPropertyChanged("C_IntlMTI");
					this.OnC_IntlMTIChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeMTI", Storage="_C_BridgeMTI", DbType="Int NOT NULL")]
		public int C_BridgeMTI
		{
			get
			{
				return this._C_BridgeMTI;
			}
			set
			{
				if ((this._C_BridgeMTI != value))
				{
					this.OnC_BridgeMTIChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeMTI = value;
					this.SendPropertyChanged("C_BridgeMTI");
					this.OnC_BridgeMTIChanged();
				}
			}
		}
		
		[Column(Name="c_Precision", Storage="_C_Precision", DbType="Int NOT NULL")]
		public int C_Precision
		{
			get
			{
				return this._C_Precision;
			}
			set
			{
				if ((this._C_Precision != value))
				{
					this.OnC_PrecisionChanging(value);
					this.SendPropertyChanging();
					this._C_Precision = value;
					this.SendPropertyChanged("C_Precision");
					this.OnC_PrecisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_includedrole")]
	public partial class T_pt_includedrole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_UserRole;
		
		private int _C_IncludedRole;
		
		private int _C_ConferenceConnection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_UserRoleChanging(System.Nullable<int> value);
    partial void OnC_UserRoleChanged();
    partial void OnC_IncludedRoleChanging(int value);
    partial void OnC_IncludedRoleChanged();
    partial void OnC_ConferenceConnectionChanging(int value);
    partial void OnC_ConferenceConnectionChanged();
    #endregion
		
		public T_pt_includedrole()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_UserRole", Storage="_C_UserRole", DbType="Int")]
		public System.Nullable<int> C_UserRole
		{
			get
			{
				return this._C_UserRole;
			}
			set
			{
				if ((this._C_UserRole != value))
				{
					this.OnC_UserRoleChanging(value);
					this.SendPropertyChanging();
					this._C_UserRole = value;
					this.SendPropertyChanged("C_UserRole");
					this.OnC_UserRoleChanged();
				}
			}
		}
		
		[Column(Name="c_IncludedRole", Storage="_C_IncludedRole", DbType="Int NOT NULL")]
		public int C_IncludedRole
		{
			get
			{
				return this._C_IncludedRole;
			}
			set
			{
				if ((this._C_IncludedRole != value))
				{
					this.OnC_IncludedRoleChanging(value);
					this.SendPropertyChanging();
					this._C_IncludedRole = value;
					this.SendPropertyChanged("C_IncludedRole");
					this.OnC_IncludedRoleChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceConnection", Storage="_C_ConferenceConnection", DbType="Int NOT NULL")]
		public int C_ConferenceConnection
		{
			get
			{
				return this._C_ConferenceConnection;
			}
			set
			{
				if ((this._C_ConferenceConnection != value))
				{
					this.OnC_ConferenceConnectionChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceConnection = value;
					this.SendPropertyChanged("C_ConferenceConnection");
					this.OnC_ConferenceConnectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_IncrementalDiscountPT")]
	public partial class T_pt_IncrementalDiscountPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfUnitRange;
		
		private System.Nullable<int> _C_EndOfUnitRange;
		
		private System.Nullable<int> _C_DiscountPercentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfUnitRangeChanged();
    partial void OnC_EndOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfUnitRangeChanged();
    partial void OnC_DiscountPercentageChanging(System.Nullable<int> value);
    partial void OnC_DiscountPercentageChanged();
    #endregion
		
		public T_pt_IncrementalDiscountPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfUnitRange", Storage="_C_StartOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_StartOfUnitRange
		{
			get
			{
				return this._C_StartOfUnitRange;
			}
			set
			{
				if ((this._C_StartOfUnitRange != value))
				{
					this.OnC_StartOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfUnitRange = value;
					this.SendPropertyChanged("C_StartOfUnitRange");
					this.OnC_StartOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfUnitRange", Storage="_C_EndOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_EndOfUnitRange
		{
			get
			{
				return this._C_EndOfUnitRange;
			}
			set
			{
				if ((this._C_EndOfUnitRange != value))
				{
					this.OnC_EndOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfUnitRange = value;
					this.SendPropertyChanged("C_EndOfUnitRange");
					this.OnC_EndOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercentage", Storage="_C_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> C_DiscountPercentage
		{
			get
			{
				return this._C_DiscountPercentage;
			}
			set
			{
				if ((this._C_DiscountPercentage != value))
				{
					this.OnC_DiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercentage = value;
					this.SendPropertyChanged("C_DiscountPercentage");
					this.OnC_DiscountPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_intlrate")]
	public partial class T_pt_intlrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_CallType;
		
		private System.Nullable<int> _C_Mode;
		
		private System.Nullable<int> _C_Transport;
		
		private System.Nullable<int> _C_CountryName;
		
		private decimal _C_IntlRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CallTypeChanging(System.Nullable<int> value);
    partial void OnC_CallTypeChanged();
    partial void OnC_ModeChanging(System.Nullable<int> value);
    partial void OnC_ModeChanged();
    partial void OnC_TransportChanging(System.Nullable<int> value);
    partial void OnC_TransportChanged();
    partial void OnC_CountryNameChanging(System.Nullable<int> value);
    partial void OnC_CountryNameChanged();
    partial void OnC_IntlRateChanging(decimal value);
    partial void OnC_IntlRateChanged();
    #endregion
		
		public T_pt_intlrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int")]
		public System.Nullable<int> C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int")]
		public System.Nullable<int> C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_Transport", Storage="_C_Transport", DbType="Int")]
		public System.Nullable<int> C_Transport
		{
			get
			{
				return this._C_Transport;
			}
			set
			{
				if ((this._C_Transport != value))
				{
					this.OnC_TransportChanging(value);
					this.SendPropertyChanging();
					this._C_Transport = value;
					this.SendPropertyChanged("C_Transport");
					this.OnC_TransportChanged();
				}
			}
		}
		
		[Column(Name="c_CountryName", Storage="_C_CountryName", DbType="Int")]
		public System.Nullable<int> C_CountryName
		{
			get
			{
				return this._C_CountryName;
			}
			set
			{
				if ((this._C_CountryName != value))
				{
					this.OnC_CountryNameChanging(value);
					this.SendPropertyChanging();
					this._C_CountryName = value;
					this.SendPropertyChanged("C_CountryName");
					this.OnC_CountryNameChanged();
				}
			}
		}
		
		[Column(Name="c_IntlRate", Storage="_C_IntlRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_IntlRate
		{
			get
			{
				return this._C_IntlRate;
			}
			set
			{
				if ((this._C_IntlRate != value))
				{
					this.OnC_IntlRateChanging(value);
					this.SendPropertyChanging();
					this._C_IntlRate = value;
					this.SendPropertyChanged("C_IntlRate");
					this.OnC_IntlRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_ldrate")]
	public partial class T_pt_ldrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_CallType;
		
		private System.Nullable<int> _C_Mode;
		
		private System.Nullable<int> _C_Transport;
		
		private string _C_Destination;
		
		private decimal _C_LDRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CallTypeChanging(System.Nullable<int> value);
    partial void OnC_CallTypeChanged();
    partial void OnC_ModeChanging(System.Nullable<int> value);
    partial void OnC_ModeChanged();
    partial void OnC_TransportChanging(System.Nullable<int> value);
    partial void OnC_TransportChanged();
    partial void OnC_DestinationChanging(string value);
    partial void OnC_DestinationChanged();
    partial void OnC_LDRateChanging(decimal value);
    partial void OnC_LDRateChanged();
    #endregion
		
		public T_pt_ldrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int")]
		public System.Nullable<int> C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int")]
		public System.Nullable<int> C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_Transport", Storage="_C_Transport", DbType="Int")]
		public System.Nullable<int> C_Transport
		{
			get
			{
				return this._C_Transport;
			}
			set
			{
				if ((this._C_Transport != value))
				{
					this.OnC_TransportChanging(value);
					this.SendPropertyChanging();
					this._C_Transport = value;
					this.SendPropertyChanged("C_Transport");
					this.OnC_TransportChanged();
				}
			}
		}
		
		[Column(Name="c_Destination", Storage="_C_Destination", DbType="NVarChar(255)")]
		public string C_Destination
		{
			get
			{
				return this._C_Destination;
			}
			set
			{
				if ((this._C_Destination != value))
				{
					this.OnC_DestinationChanging(value);
					this.SendPropertyChanging();
					this._C_Destination = value;
					this.SendPropertyChanged("C_Destination");
					this.OnC_DestinationChanged();
				}
			}
		}
		
		[Column(Name="c_LDRate", Storage="_C_LDRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_LDRate
		{
			get
			{
				return this._C_LDRate;
			}
			set
			{
				if ((this._C_LDRate != value))
				{
					this.OnC_LDRateChanging(value);
					this.SendPropertyChanging();
					this._C_LDRate = value;
					this.SendPropertyChanged("C_LDRate");
					this.OnC_LDRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_metricfeaturerate")]
	public partial class T_pt_metricfeaturerate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_FeatureType;
		
		private decimal _C_PerQuantityRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_FeatureTypeChanging(System.Nullable<int> value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_PerQuantityRateChanging(decimal value);
    partial void OnC_PerQuantityRateChanged();
    #endregion
		
		public T_pt_metricfeaturerate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int")]
		public System.Nullable<int> C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_PerQuantityRate", Storage="_C_PerQuantityRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerQuantityRate
		{
			get
			{
				return this._C_PerQuantityRate;
			}
			set
			{
				if ((this._C_PerQuantityRate != value))
				{
					this.OnC_PerQuantityRateChanging(value);
					this.SendPropertyChanging();
					this._C_PerQuantityRate = value;
					this.SendPropertyChanged("C_PerQuantityRate");
					this.OnC_PerQuantityRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_minapplic")]
	public partial class T_pt_minapplic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ConfChargeMinimumApplicBool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ConfChargeMinimumApplicBoolChanging(string value);
    partial void OnC_ConfChargeMinimumApplicBoolChanged();
    #endregion
		
		public T_pt_minapplic()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ConfChargeMinimumApplicBool", Storage="_C_ConfChargeMinimumApplicBool", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ConfChargeMinimumApplicBool
		{
			get
			{
				return this._C_ConfChargeMinimumApplicBool;
			}
			set
			{
				if ((this._C_ConfChargeMinimumApplicBool != value))
				{
					this.OnC_ConfChargeMinimumApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_ConfChargeMinimumApplicBool = value;
					this.SendPropertyChanged("C_ConfChargeMinimumApplicBool");
					this.OnC_ConfChargeMinimumApplicBoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_mincharge")]
	public partial class T_pt_mincharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ConfChargeMinimumApplicBool;
		
		private decimal _C_ConfChargeMinimum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ConfChargeMinimumApplicBoolChanging(string value);
    partial void OnC_ConfChargeMinimumApplicBoolChanged();
    partial void OnC_ConfChargeMinimumChanging(decimal value);
    partial void OnC_ConfChargeMinimumChanged();
    #endregion
		
		public T_pt_mincharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ConfChargeMinimumApplicBool", Storage="_C_ConfChargeMinimumApplicBool", DbType="Char(1)")]
		public string C_ConfChargeMinimumApplicBool
		{
			get
			{
				return this._C_ConfChargeMinimumApplicBool;
			}
			set
			{
				if ((this._C_ConfChargeMinimumApplicBool != value))
				{
					this.OnC_ConfChargeMinimumApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_ConfChargeMinimumApplicBool = value;
					this.SendPropertyChanged("C_ConfChargeMinimumApplicBool");
					this.OnC_ConfChargeMinimumApplicBoolChanged();
				}
			}
		}
		
		[Column(Name="c_ConfChargeMinimum", Storage="_C_ConfChargeMinimum", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConfChargeMinimum
		{
			get
			{
				return this._C_ConfChargeMinimum;
			}
			set
			{
				if ((this._C_ConfChargeMinimum != value))
				{
					this.OnC_ConfChargeMinimumChanging(value);
					this.SendPropertyChanging();
					this._C_ConfChargeMinimum = value;
					this.SendPropertyChanged("C_ConfChargeMinimum");
					this.OnC_ConfChargeMinimumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_NonRecurringCharge")]
	public partial class T_pt_NonRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_NRCAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_NRCAmountChanging(decimal value);
    partial void OnC_NRCAmountChanged();
    #endregion
		
		public T_pt_NonRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_NRCAmount", Storage="_C_NRCAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_NRCAmount
		{
			get
			{
				return this._C_NRCAmount;
			}
			set
			{
				if ((this._C_NRCAmount != value))
				{
					this.OnC_NRCAmountChanging(value);
					this.SendPropertyChanging();
					this._C_NRCAmount = value;
					this.SendPropertyChanged("C_NRCAmount");
					this.OnC_NRCAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_overusedportapplic")]
	public partial class T_pt_overusedportapplic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_Notice_op;
		
		private System.Nullable<int> _C_Notice;
		
		private string _C_OverusedPortApplicBool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_Notice_opChanging(string value);
    partial void OnC_Notice_opChanged();
    partial void OnC_NoticeChanging(System.Nullable<int> value);
    partial void OnC_NoticeChanged();
    partial void OnC_OverusedPortApplicBoolChanging(string value);
    partial void OnC_OverusedPortApplicBoolChanged();
    #endregion
		
		public T_pt_overusedportapplic()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_Notice_op", Storage="_C_Notice_op", DbType="NVarChar(5)")]
		public string C_Notice_op
		{
			get
			{
				return this._C_Notice_op;
			}
			set
			{
				if ((this._C_Notice_op != value))
				{
					this.OnC_Notice_opChanging(value);
					this.SendPropertyChanging();
					this._C_Notice_op = value;
					this.SendPropertyChanged("C_Notice_op");
					this.OnC_Notice_opChanged();
				}
			}
		}
		
		[Column(Name="c_Notice", Storage="_C_Notice", DbType="Int")]
		public System.Nullable<int> C_Notice
		{
			get
			{
				return this._C_Notice;
			}
			set
			{
				if ((this._C_Notice != value))
				{
					this.OnC_NoticeChanging(value);
					this.SendPropertyChanging();
					this._C_Notice = value;
					this.SendPropertyChanged("C_Notice");
					this.OnC_NoticeChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedPortApplicBool", Storage="_C_OverusedPortApplicBool", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_OverusedPortApplicBool
		{
			get
			{
				return this._C_OverusedPortApplicBool;
			}
			set
			{
				if ((this._C_OverusedPortApplicBool != value))
				{
					this.OnC_OverusedPortApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedPortApplicBool = value;
					this.SendPropertyChanged("C_OverusedPortApplicBool");
					this.OnC_OverusedPortApplicBoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_overusedportdef")]
	public partial class T_pt_overusedportdef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_OverusedPortChargeDef;
		
		private int _C_OverusedThresholdFree;
		
		private int _C_OverusedPortDelta;
		
		private int _C_OverusedAdvancedPercentage;
		
		private string _C_OverusedExcludeRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_OverusedPortChargeDefChanging(System.Nullable<int> value);
    partial void OnC_OverusedPortChargeDefChanged();
    partial void OnC_OverusedThresholdFreeChanging(int value);
    partial void OnC_OverusedThresholdFreeChanged();
    partial void OnC_OverusedPortDeltaChanging(int value);
    partial void OnC_OverusedPortDeltaChanged();
    partial void OnC_OverusedAdvancedPercentageChanging(int value);
    partial void OnC_OverusedAdvancedPercentageChanged();
    partial void OnC_OverusedExcludeRolesChanging(string value);
    partial void OnC_OverusedExcludeRolesChanged();
    #endregion
		
		public T_pt_overusedportdef()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedPortChargeDef", Storage="_C_OverusedPortChargeDef", DbType="Int")]
		public System.Nullable<int> C_OverusedPortChargeDef
		{
			get
			{
				return this._C_OverusedPortChargeDef;
			}
			set
			{
				if ((this._C_OverusedPortChargeDef != value))
				{
					this.OnC_OverusedPortChargeDefChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedPortChargeDef = value;
					this.SendPropertyChanged("C_OverusedPortChargeDef");
					this.OnC_OverusedPortChargeDefChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedThresholdFree", Storage="_C_OverusedThresholdFree", DbType="Int NOT NULL")]
		public int C_OverusedThresholdFree
		{
			get
			{
				return this._C_OverusedThresholdFree;
			}
			set
			{
				if ((this._C_OverusedThresholdFree != value))
				{
					this.OnC_OverusedThresholdFreeChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedThresholdFree = value;
					this.SendPropertyChanged("C_OverusedThresholdFree");
					this.OnC_OverusedThresholdFreeChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedPortDelta", Storage="_C_OverusedPortDelta", DbType="Int NOT NULL")]
		public int C_OverusedPortDelta
		{
			get
			{
				return this._C_OverusedPortDelta;
			}
			set
			{
				if ((this._C_OverusedPortDelta != value))
				{
					this.OnC_OverusedPortDeltaChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedPortDelta = value;
					this.SendPropertyChanged("C_OverusedPortDelta");
					this.OnC_OverusedPortDeltaChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedAdvancedPercentage", Storage="_C_OverusedAdvancedPercentage", DbType="Int NOT NULL")]
		public int C_OverusedAdvancedPercentage
		{
			get
			{
				return this._C_OverusedAdvancedPercentage;
			}
			set
			{
				if ((this._C_OverusedAdvancedPercentage != value))
				{
					this.OnC_OverusedAdvancedPercentageChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedAdvancedPercentage = value;
					this.SendPropertyChanged("C_OverusedAdvancedPercentage");
					this.OnC_OverusedAdvancedPercentageChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedExcludeRoles", Storage="_C_OverusedExcludeRoles", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_OverusedExcludeRoles
		{
			get
			{
				return this._C_OverusedExcludeRoles;
			}
			set
			{
				if ((this._C_OverusedExcludeRoles != value))
				{
					this.OnC_OverusedExcludeRolesChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedExcludeRoles = value;
					this.SendPropertyChanged("C_OverusedExcludeRoles");
					this.OnC_OverusedExcludeRolesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_overusedportrate")]
	public partial class T_pt_overusedportrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_NumOverusedPorts_op;
		
		private System.Nullable<int> _C_NumOverusedPorts;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private int _C_OverusedChargeType;
		
		private decimal _C_OverusedPortRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_NumOverusedPorts_opChanging(string value);
    partial void OnC_NumOverusedPorts_opChanged();
    partial void OnC_NumOverusedPortsChanging(System.Nullable<int> value);
    partial void OnC_NumOverusedPortsChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_OverusedChargeTypeChanging(int value);
    partial void OnC_OverusedChargeTypeChanged();
    partial void OnC_OverusedPortRateChanging(decimal value);
    partial void OnC_OverusedPortRateChanged();
    #endregion
		
		public T_pt_overusedportrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_NumOverusedPorts_op", Storage="_C_NumOverusedPorts_op", DbType="NVarChar(5)")]
		public string C_NumOverusedPorts_op
		{
			get
			{
				return this._C_NumOverusedPorts_op;
			}
			set
			{
				if ((this._C_NumOverusedPorts_op != value))
				{
					this.OnC_NumOverusedPorts_opChanging(value);
					this.SendPropertyChanging();
					this._C_NumOverusedPorts_op = value;
					this.SendPropertyChanged("C_NumOverusedPorts_op");
					this.OnC_NumOverusedPorts_opChanged();
				}
			}
		}
		
		[Column(Name="c_NumOverusedPorts", Storage="_C_NumOverusedPorts", DbType="Int")]
		public System.Nullable<int> C_NumOverusedPorts
		{
			get
			{
				return this._C_NumOverusedPorts;
			}
			set
			{
				if ((this._C_NumOverusedPorts != value))
				{
					this.OnC_NumOverusedPortsChanging(value);
					this.SendPropertyChanging();
					this._C_NumOverusedPorts = value;
					this.SendPropertyChanged("C_NumOverusedPorts");
					this.OnC_NumOverusedPortsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedChargeType", Storage="_C_OverusedChargeType", DbType="Int NOT NULL")]
		public int C_OverusedChargeType
		{
			get
			{
				return this._C_OverusedChargeType;
			}
			set
			{
				if ((this._C_OverusedChargeType != value))
				{
					this.OnC_OverusedChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedChargeType = value;
					this.SendPropertyChanged("C_OverusedChargeType");
					this.OnC_OverusedChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedPortRate", Storage="_C_OverusedPortRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_OverusedPortRate
		{
			get
			{
				return this._C_OverusedPortRate;
			}
			set
			{
				if ((this._C_OverusedPortRate != value))
				{
					this.OnC_OverusedPortRateChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedPortRate = value;
					this.SendPropertyChanged("C_OverusedPortRate");
					this.OnC_OverusedPortRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_PercentDiscount")]
	public partial class T_pt_PercentDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_Qualifier_op;
		
		private System.Nullable<decimal> _C_Qualifier;
		
		private decimal _C_DiscountPercent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_Qualifier_opChanging(string value);
    partial void OnC_Qualifier_opChanged();
    partial void OnC_QualifierChanging(System.Nullable<decimal> value);
    partial void OnC_QualifierChanged();
    partial void OnC_DiscountPercentChanging(decimal value);
    partial void OnC_DiscountPercentChanged();
    #endregion
		
		public T_pt_PercentDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Qualifier_op", Storage="_C_Qualifier_op", DbType="NVarChar(5)")]
		public string C_Qualifier_op
		{
			get
			{
				return this._C_Qualifier_op;
			}
			set
			{
				if ((this._C_Qualifier_op != value))
				{
					this.OnC_Qualifier_opChanging(value);
					this.SendPropertyChanging();
					this._C_Qualifier_op = value;
					this.SendPropertyChanged("C_Qualifier_op");
					this.OnC_Qualifier_opChanged();
				}
			}
		}
		
		[Column(Name="c_Qualifier", Storage="_C_Qualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Qualifier
		{
			get
			{
				return this._C_Qualifier;
			}
			set
			{
				if ((this._C_Qualifier != value))
				{
					this.OnC_QualifierChanging(value);
					this.SendPropertyChanging();
					this._C_Qualifier = value;
					this.SendPropertyChanged("C_Qualifier");
					this.OnC_QualifierChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercent", Storage="_C_DiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DiscountPercent
		{
			get
			{
				return this._C_DiscountPercent;
			}
			set
			{
				if ((this._C_DiscountPercent != value))
				{
					this.OnC_DiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercent = value;
					this.SendPropertyChanged("C_DiscountPercent");
					this.OnC_DiscountPercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_PercentDiscount_NoCond")]
	public partial class T_pt_PercentDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_DiscountPercent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_DiscountPercentChanging(decimal value);
    partial void OnC_DiscountPercentChanged();
    #endregion
		
		public T_pt_PercentDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercent", Storage="_C_DiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DiscountPercent
		{
			get
			{
				return this._C_DiscountPercent;
			}
			set
			{
				if ((this._C_DiscountPercent != value))
				{
					this.OnC_DiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercent = value;
					this.SendPropertyChanged("C_DiscountPercent");
					this.OnC_DiscountPercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_PopcornPrices")]
	public partial class T_pt_PopcornPrices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_TotalPopcorns;
		
		private decimal _C_PerPopcornBag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_TotalPopcornsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalPopcornsChanged();
    partial void OnC_PerPopcornBagChanging(decimal value);
    partial void OnC_PerPopcornBagChanged();
    #endregion
		
		public T_pt_PopcornPrices()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_TotalPopcorns", Storage="_C_TotalPopcorns", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalPopcorns
		{
			get
			{
				return this._C_TotalPopcorns;
			}
			set
			{
				if ((this._C_TotalPopcorns != value))
				{
					this.OnC_TotalPopcornsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalPopcorns = value;
					this.SendPropertyChanged("C_TotalPopcorns");
					this.OnC_TotalPopcornsChanged();
				}
			}
		}
		
		[Column(Name="c_PerPopcornBag", Storage="_C_PerPopcornBag", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerPopcornBag
		{
			get
			{
				return this._C_PerPopcornBag;
			}
			set
			{
				if ((this._C_PerPopcornBag != value))
				{
					this.OnC_PerPopcornBagChanging(value);
					this.SendPropertyChanging();
					this._C_PerPopcornBag = value;
					this.SendPropertyChanged("C_PerPopcornBag");
					this.OnC_PerPopcornBagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_rateconn")]
	public partial class T_pt_rateconn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_duration_op;
		
		private int _C_duration;
		
		private System.Nullable<int> _C_CalendarCode;
		
		private decimal _C_Rate;
		
		private int _C_MTI;
		
		private decimal _C_MinCharge;
		
		private decimal _C_SetupCharge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_duration_opChanging(string value);
    partial void OnC_duration_opChanged();
    partial void OnC_durationChanging(int value);
    partial void OnC_durationChanged();
    partial void OnC_CalendarCodeChanging(System.Nullable<int> value);
    partial void OnC_CalendarCodeChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_MTIChanging(int value);
    partial void OnC_MTIChanged();
    partial void OnC_MinChargeChanging(decimal value);
    partial void OnC_MinChargeChanged();
    partial void OnC_SetupChargeChanging(decimal value);
    partial void OnC_SetupChargeChanged();
    #endregion
		
		public T_pt_rateconn()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_duration_op", Storage="_C_duration_op", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string C_duration_op
		{
			get
			{
				return this._C_duration_op;
			}
			set
			{
				if ((this._C_duration_op != value))
				{
					this.OnC_duration_opChanging(value);
					this.SendPropertyChanging();
					this._C_duration_op = value;
					this.SendPropertyChanged("C_duration_op");
					this.OnC_duration_opChanged();
				}
			}
		}
		
		[Column(Name="c_duration", Storage="_C_duration", DbType="Int NOT NULL")]
		public int C_duration
		{
			get
			{
				return this._C_duration;
			}
			set
			{
				if ((this._C_duration != value))
				{
					this.OnC_durationChanging(value);
					this.SendPropertyChanging();
					this._C_duration = value;
					this.SendPropertyChanged("C_duration");
					this.OnC_durationChanged();
				}
			}
		}
		
		[Column(Name="c_CalendarCode", Storage="_C_CalendarCode", DbType="Int")]
		public System.Nullable<int> C_CalendarCode
		{
			get
			{
				return this._C_CalendarCode;
			}
			set
			{
				if ((this._C_CalendarCode != value))
				{
					this.OnC_CalendarCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CalendarCode = value;
					this.SendPropertyChanged("C_CalendarCode");
					this.OnC_CalendarCodeChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_MTI", Storage="_C_MTI", DbType="Int NOT NULL")]
		public int C_MTI
		{
			get
			{
				return this._C_MTI;
			}
			set
			{
				if ((this._C_MTI != value))
				{
					this.OnC_MTIChanging(value);
					this.SendPropertyChanging();
					this._C_MTI = value;
					this.SendPropertyChanged("C_MTI");
					this.OnC_MTIChanged();
				}
			}
		}
		
		[Column(Name="c_MinCharge", Storage="_C_MinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_MinCharge
		{
			get
			{
				return this._C_MinCharge;
			}
			set
			{
				if ((this._C_MinCharge != value))
				{
					this.OnC_MinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_MinCharge = value;
					this.SendPropertyChanged("C_MinCharge");
					this.OnC_MinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_rateSMS")]
	public partial class T_pt_rateSMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_SMStype_op;
		
		private int _C_SMStype;
		
		private decimal _C_Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_SMStype_opChanging(string value);
    partial void OnC_SMStype_opChanged();
    partial void OnC_SMStypeChanging(int value);
    partial void OnC_SMStypeChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    #endregion
		
		public T_pt_rateSMS()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_SMStype_op", Storage="_C_SMStype_op", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string C_SMStype_op
		{
			get
			{
				return this._C_SMStype_op;
			}
			set
			{
				if ((this._C_SMStype_op != value))
				{
					this.OnC_SMStype_opChanging(value);
					this.SendPropertyChanging();
					this._C_SMStype_op = value;
					this.SendPropertyChanged("C_SMStype_op");
					this.OnC_SMStype_opChanged();
				}
			}
		}
		
		[Column(Name="c_SMStype", Storage="_C_SMStype", DbType="Int NOT NULL")]
		public int C_SMStype
		{
			get
			{
				return this._C_SMStype;
			}
			set
			{
				if ((this._C_SMStype != value))
				{
					this.OnC_SMStypeChanging(value);
					this.SendPropertyChanging();
					this._C_SMStype = value;
					this.SendPropertyChanged("C_SMStype");
					this.OnC_SMStypeChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_reservationapplic")]
	public partial class T_pt_reservationapplic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private string _C_ActualNumConnections_op;
		
		private System.Nullable<int> _C_ActualNumConnections;
		
		private string _C_NumUnusedPorts_op;
		
		private System.Nullable<int> _C_NumUnusedPorts;
		
		private string _C_Notice_op;
		
		private System.Nullable<int> _C_Notice;
		
		private string _C_ReserveApplicBool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ActualNumConnections_opChanging(string value);
    partial void OnC_ActualNumConnections_opChanged();
    partial void OnC_ActualNumConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ActualNumConnectionsChanged();
    partial void OnC_NumUnusedPorts_opChanging(string value);
    partial void OnC_NumUnusedPorts_opChanged();
    partial void OnC_NumUnusedPortsChanging(System.Nullable<int> value);
    partial void OnC_NumUnusedPortsChanged();
    partial void OnC_Notice_opChanging(string value);
    partial void OnC_Notice_opChanged();
    partial void OnC_NoticeChanging(System.Nullable<int> value);
    partial void OnC_NoticeChanged();
    partial void OnC_ReserveApplicBoolChanging(string value);
    partial void OnC_ReserveApplicBoolChanged();
    #endregion
		
		public T_pt_reservationapplic()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ActualNumConnections_op", Storage="_C_ActualNumConnections_op", DbType="NVarChar(5)")]
		public string C_ActualNumConnections_op
		{
			get
			{
				return this._C_ActualNumConnections_op;
			}
			set
			{
				if ((this._C_ActualNumConnections_op != value))
				{
					this.OnC_ActualNumConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ActualNumConnections_op = value;
					this.SendPropertyChanged("C_ActualNumConnections_op");
					this.OnC_ActualNumConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ActualNumConnections", Storage="_C_ActualNumConnections", DbType="Int")]
		public System.Nullable<int> C_ActualNumConnections
		{
			get
			{
				return this._C_ActualNumConnections;
			}
			set
			{
				if ((this._C_ActualNumConnections != value))
				{
					this.OnC_ActualNumConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ActualNumConnections = value;
					this.SendPropertyChanged("C_ActualNumConnections");
					this.OnC_ActualNumConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnusedPorts_op", Storage="_C_NumUnusedPorts_op", DbType="NVarChar(5)")]
		public string C_NumUnusedPorts_op
		{
			get
			{
				return this._C_NumUnusedPorts_op;
			}
			set
			{
				if ((this._C_NumUnusedPorts_op != value))
				{
					this.OnC_NumUnusedPorts_opChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnusedPorts_op = value;
					this.SendPropertyChanged("C_NumUnusedPorts_op");
					this.OnC_NumUnusedPorts_opChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnusedPorts", Storage="_C_NumUnusedPorts", DbType="Int")]
		public System.Nullable<int> C_NumUnusedPorts
		{
			get
			{
				return this._C_NumUnusedPorts;
			}
			set
			{
				if ((this._C_NumUnusedPorts != value))
				{
					this.OnC_NumUnusedPortsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnusedPorts = value;
					this.SendPropertyChanged("C_NumUnusedPorts");
					this.OnC_NumUnusedPortsChanged();
				}
			}
		}
		
		[Column(Name="c_Notice_op", Storage="_C_Notice_op", DbType="NVarChar(5)")]
		public string C_Notice_op
		{
			get
			{
				return this._C_Notice_op;
			}
			set
			{
				if ((this._C_Notice_op != value))
				{
					this.OnC_Notice_opChanging(value);
					this.SendPropertyChanging();
					this._C_Notice_op = value;
					this.SendPropertyChanged("C_Notice_op");
					this.OnC_Notice_opChanged();
				}
			}
		}
		
		[Column(Name="c_Notice", Storage="_C_Notice", DbType="Int")]
		public System.Nullable<int> C_Notice
		{
			get
			{
				return this._C_Notice;
			}
			set
			{
				if ((this._C_Notice != value))
				{
					this.OnC_NoticeChanging(value);
					this.SendPropertyChanging();
					this._C_Notice = value;
					this.SendPropertyChanged("C_Notice");
					this.OnC_NoticeChanged();
				}
			}
		}
		
		[Column(Name="c_ReserveApplicBool", Storage="_C_ReserveApplicBool", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ReserveApplicBool
		{
			get
			{
				return this._C_ReserveApplicBool;
			}
			set
			{
				if ((this._C_ReserveApplicBool != value))
				{
					this.OnC_ReserveApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_ReserveApplicBool = value;
					this.SendPropertyChanged("C_ReserveApplicBool");
					this.OnC_ReserveApplicBoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_reserverate")]
	public partial class T_pt_reserverate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private int _C_ReserveChargeType;
		
		private decimal _C_ReserveRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ReserveChargeTypeChanging(int value);
    partial void OnC_ReserveChargeTypeChanged();
    partial void OnC_ReserveRateChanging(decimal value);
    partial void OnC_ReserveRateChanged();
    #endregion
		
		public T_pt_reserverate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ReserveChargeType", Storage="_C_ReserveChargeType", DbType="Int NOT NULL")]
		public int C_ReserveChargeType
		{
			get
			{
				return this._C_ReserveChargeType;
			}
			set
			{
				if ((this._C_ReserveChargeType != value))
				{
					this.OnC_ReserveChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ReserveChargeType = value;
					this.SendPropertyChanged("C_ReserveChargeType");
					this.OnC_ReserveChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ReserveRate", Storage="_C_ReserveRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ReserveRate
		{
			get
			{
				return this._C_ReserveRate;
			}
			set
			{
				if ((this._C_ReserveRate != value))
				{
					this.OnC_ReserveRateChanging(value);
					this.SendPropertyChanging();
					this._C_ReserveRate = value;
					this.SendPropertyChanged("C_ReserveRate");
					this.OnC_ReserveRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_songdownloads")]
	public partial class T_pt_songdownloads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_TotalBytes;
		
		private string _C_TotalSongs_op;
		
		private System.Nullable<decimal> _C_TotalSongs;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_TotalBytesChanging(System.Nullable<decimal> value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_TotalSongs_opChanging(string value);
    partial void OnC_TotalSongs_opChanged();
    partial void OnC_TotalSongsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pt_songdownloads()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs_op", Storage="_C_TotalSongs_op", DbType="NVarChar(5)")]
		public string C_TotalSongs_op
		{
			get
			{
				return this._C_TotalSongs_op;
			}
			set
			{
				if ((this._C_TotalSongs_op != value))
				{
					this.OnC_TotalSongs_opChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs_op = value;
					this.SendPropertyChanged("C_TotalSongs_op");
					this.OnC_TotalSongs_opChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_songsession")]
	public partial class T_pt_songsession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_Duration;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_DurationChanging(System.Nullable<decimal> value);
    partial void OnC_DurationChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pt_songsession()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_songsessionchild")]
	public partial class T_pt_songsessionchild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_TotalBytes;
		
		private string _C_TotalSongs_op;
		
		private System.Nullable<decimal> _C_TotalSongs;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_TotalBytesChanging(System.Nullable<decimal> value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_TotalSongs_opChanging(string value);
    partial void OnC_TotalSongs_opChanged();
    partial void OnC_TotalSongsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pt_songsessionchild()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs_op", Storage="_C_TotalSongs_op", DbType="NVarChar(5)")]
		public string C_TotalSongs_op
		{
			get
			{
				return this._C_TotalSongs_op;
			}
			set
			{
				if ((this._C_TotalSongs_op != value))
				{
					this.OnC_TotalSongs_opChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs_op = value;
					this.SendPropertyChanged("C_TotalSongs_op");
					this.OnC_TotalSongs_opChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_SpecialCharacters")]
	public partial class T_pt_SpecialCharacters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<decimal> _C_TotalTickets;
		
		private System.Nullable<int> _C_SpecialCharactersEnumTest;
		
		private string _C_LabelForBill;
		
		private decimal _C_PerTicket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_TotalTicketsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalTicketsChanged();
    partial void OnC_SpecialCharactersEnumTestChanging(System.Nullable<int> value);
    partial void OnC_SpecialCharactersEnumTestChanged();
    partial void OnC_LabelForBillChanging(string value);
    partial void OnC_LabelForBillChanged();
    partial void OnC_PerTicketChanging(decimal value);
    partial void OnC_PerTicketChanged();
    #endregion
		
		public T_pt_SpecialCharacters()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_TotalTickets", Storage="_C_TotalTickets", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalTickets
		{
			get
			{
				return this._C_TotalTickets;
			}
			set
			{
				if ((this._C_TotalTickets != value))
				{
					this.OnC_TotalTicketsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalTickets = value;
					this.SendPropertyChanged("C_TotalTickets");
					this.OnC_TotalTicketsChanged();
				}
			}
		}
		
		[Column(Name="c_SpecialCharactersEnumTest", Storage="_C_SpecialCharactersEnumTest", DbType="Int")]
		public System.Nullable<int> C_SpecialCharactersEnumTest
		{
			get
			{
				return this._C_SpecialCharactersEnumTest;
			}
			set
			{
				if ((this._C_SpecialCharactersEnumTest != value))
				{
					this.OnC_SpecialCharactersEnumTestChanging(value);
					this.SendPropertyChanging();
					this._C_SpecialCharactersEnumTest = value;
					this.SendPropertyChanged("C_SpecialCharactersEnumTest");
					this.OnC_SpecialCharactersEnumTestChanged();
				}
			}
		}
		
		[Column(Name="c_LabelForBill", Storage="_C_LabelForBill", DbType="NVarChar(100)")]
		public string C_LabelForBill
		{
			get
			{
				return this._C_LabelForBill;
			}
			set
			{
				if ((this._C_LabelForBill != value))
				{
					this.OnC_LabelForBillChanging(value);
					this.SendPropertyChanging();
					this._C_LabelForBill = value;
					this.SendPropertyChanged("C_LabelForBill");
					this.OnC_LabelForBillChanged();
				}
			}
		}
		
		[Column(Name="c_PerTicket", Storage="_C_PerTicket", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerTicket
		{
			get
			{
				return this._C_PerTicket;
			}
			set
			{
				if ((this._C_PerTicket != value))
				{
					this.OnC_PerTicketChanging(value);
					this.SendPropertyChanging();
					this._C_PerTicket = value;
					this.SendPropertyChanged("C_PerTicket");
					this.OnC_PerTicketChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_taxBand")]
	public partial class T_pt_taxBand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_Country;
		
		private string _C_ProductCode;
		
		private int _C_TaxBand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CountryChanging(int value);
    partial void OnC_CountryChanged();
    partial void OnC_ProductCodeChanging(string value);
    partial void OnC_ProductCodeChanged();
    partial void OnC_TaxBandChanging(int value);
    partial void OnC_TaxBandChanged();
    #endregion
		
		public T_pt_taxBand()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int NOT NULL")]
		public int C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c_ProductCode", Storage="_C_ProductCode", DbType="NVarChar(64)")]
		public string C_ProductCode
		{
			get
			{
				return this._C_ProductCode;
			}
			set
			{
				if ((this._C_ProductCode != value))
				{
					this.OnC_ProductCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ProductCode = value;
					this.SendPropertyChanged("C_ProductCode");
					this.OnC_ProductCodeChanged();
				}
			}
		}
		
		[Column(Name="c_TaxBand", Storage="_C_TaxBand", DbType="Int NOT NULL")]
		public int C_TaxBand
		{
			get
			{
				return this._C_TaxBand;
			}
			set
			{
				if ((this._C_TaxBand != value))
				{
					this.OnC_TaxBandChanging(value);
					this.SendPropertyChanging();
					this._C_TaxBand = value;
					this.SendPropertyChanged("C_TaxBand");
					this.OnC_TaxBandChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_taxRate")]
	public partial class T_pt_taxRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private int _C_Country;
		
		private int _C_TaxZone;
		
		private int _C_TaxBand;
		
		private decimal _C_TaxRate;
		
		private string _C_TaxName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CountryChanging(int value);
    partial void OnC_CountryChanged();
    partial void OnC_TaxZoneChanging(int value);
    partial void OnC_TaxZoneChanged();
    partial void OnC_TaxBandChanging(int value);
    partial void OnC_TaxBandChanged();
    partial void OnC_TaxRateChanging(decimal value);
    partial void OnC_TaxRateChanged();
    partial void OnC_TaxNameChanging(string value);
    partial void OnC_TaxNameChanged();
    #endregion
		
		public T_pt_taxRate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int NOT NULL")]
		public int C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c_TaxZone", Storage="_C_TaxZone", DbType="Int NOT NULL")]
		public int C_TaxZone
		{
			get
			{
				return this._C_TaxZone;
			}
			set
			{
				if ((this._C_TaxZone != value))
				{
					this.OnC_TaxZoneChanging(value);
					this.SendPropertyChanging();
					this._C_TaxZone = value;
					this.SendPropertyChanged("C_TaxZone");
					this.OnC_TaxZoneChanged();
				}
			}
		}
		
		[Column(Name="c_TaxBand", Storage="_C_TaxBand", DbType="Int NOT NULL")]
		public int C_TaxBand
		{
			get
			{
				return this._C_TaxBand;
			}
			set
			{
				if ((this._C_TaxBand != value))
				{
					this.OnC_TaxBandChanging(value);
					this.SendPropertyChanging();
					this._C_TaxBand = value;
					this.SendPropertyChanged("C_TaxBand");
					this.OnC_TaxBandChanged();
				}
			}
		}
		
		[Column(Name="c_TaxRate", Storage="_C_TaxRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TaxRate
		{
			get
			{
				return this._C_TaxRate;
			}
			set
			{
				if ((this._C_TaxRate != value))
				{
					this.OnC_TaxRateChanging(value);
					this.SendPropertyChanging();
					this._C_TaxRate = value;
					this.SendPropertyChanged("C_TaxRate");
					this.OnC_TaxRateChanged();
				}
			}
		}
		
		[Column(Name="c_TaxName", Storage="_C_TaxName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string C_TaxName
		{
			get
			{
				return this._C_TaxName;
			}
			set
			{
				if ((this._C_TaxName != value))
				{
					this.OnC_TaxNameChanging(value);
					this.SendPropertyChanging();
					this._C_TaxName = value;
					this.SendPropertyChanged("C_TaxName");
					this.OnC_TaxNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_test")]
	public partial class T_pt_test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_condition_op;
		
		private int _C_condition;
		
		private decimal _C_result1;
		
		private int _C_result2;
		
		private string _C_result3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_condition_opChanging(string value);
    partial void OnC_condition_opChanged();
    partial void OnC_conditionChanging(int value);
    partial void OnC_conditionChanged();
    partial void OnC_result1Changing(decimal value);
    partial void OnC_result1Changed();
    partial void OnC_result2Changing(int value);
    partial void OnC_result2Changed();
    partial void OnC_result3Changing(string value);
    partial void OnC_result3Changed();
    #endregion
		
		public T_pt_test()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_condition_op", Storage="_C_condition_op", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string C_condition_op
		{
			get
			{
				return this._C_condition_op;
			}
			set
			{
				if ((this._C_condition_op != value))
				{
					this.OnC_condition_opChanging(value);
					this.SendPropertyChanging();
					this._C_condition_op = value;
					this.SendPropertyChanged("C_condition_op");
					this.OnC_condition_opChanged();
				}
			}
		}
		
		[Column(Name="c_condition", Storage="_C_condition", DbType="Int NOT NULL")]
		public int C_condition
		{
			get
			{
				return this._C_condition;
			}
			set
			{
				if ((this._C_condition != value))
				{
					this.OnC_conditionChanging(value);
					this.SendPropertyChanging();
					this._C_condition = value;
					this.SendPropertyChanged("C_condition");
					this.OnC_conditionChanged();
				}
			}
		}
		
		[Column(Name="c_result1", Storage="_C_result1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_result1
		{
			get
			{
				return this._C_result1;
			}
			set
			{
				if ((this._C_result1 != value))
				{
					this.OnC_result1Changing(value);
					this.SendPropertyChanging();
					this._C_result1 = value;
					this.SendPropertyChanged("C_result1");
					this.OnC_result1Changed();
				}
			}
		}
		
		[Column(Name="c_result2", Storage="_C_result2", DbType="Int NOT NULL")]
		public int C_result2
		{
			get
			{
				return this._C_result2;
			}
			set
			{
				if ((this._C_result2 != value))
				{
					this.OnC_result2Changing(value);
					this.SendPropertyChanging();
					this._C_result2 = value;
					this.SendPropertyChanged("C_result2");
					this.OnC_result2Changed();
				}
			}
		}
		
		[Column(Name="c_result3", Storage="_C_result3", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string C_result3
		{
			get
			{
				return this._C_result3;
			}
			set
			{
				if ((this._C_result3 != value))
				{
					this.OnC_result3Changing(value);
					this.SendPropertyChanging();
					this._C_result3 = value;
					this.SendPropertyChanged("C_result3");
					this.OnC_result3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_TestAggregate")]
	public partial class T_pt_TestAggregate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private System.Nullable<int> _C_Transport;
		
		private System.Nullable<int> _C_ActionBand;
		
		private System.Nullable<int> _C_CountryBridge;
		
		private System.Nullable<int> _C_CountryOrigin;
		
		private System.Nullable<int> _C_CountryDestination;
		
		private System.Nullable<int> _C_UserRole;
		
		private System.Nullable<int> _C_CalendarCode;
		
		private string _C_TotalQualifiedMinutes_op;
		
		private System.Nullable<decimal> _C_TotalQualifiedMinutes;
		
		private decimal _C_BridgeRate;
		
		private decimal _C_BridgeSetupCharge;
		
		private decimal _C_BridgeMinCharge;
		
		private int _C_BridgeMinUOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_TransportChanging(System.Nullable<int> value);
    partial void OnC_TransportChanged();
    partial void OnC_ActionBandChanging(System.Nullable<int> value);
    partial void OnC_ActionBandChanged();
    partial void OnC_CountryBridgeChanging(System.Nullable<int> value);
    partial void OnC_CountryBridgeChanged();
    partial void OnC_CountryOriginChanging(System.Nullable<int> value);
    partial void OnC_CountryOriginChanged();
    partial void OnC_CountryDestinationChanging(System.Nullable<int> value);
    partial void OnC_CountryDestinationChanged();
    partial void OnC_UserRoleChanging(System.Nullable<int> value);
    partial void OnC_UserRoleChanged();
    partial void OnC_CalendarCodeChanging(System.Nullable<int> value);
    partial void OnC_CalendarCodeChanged();
    partial void OnC_TotalQualifiedMinutes_opChanging(string value);
    partial void OnC_TotalQualifiedMinutes_opChanged();
    partial void OnC_TotalQualifiedMinutesChanging(System.Nullable<decimal> value);
    partial void OnC_TotalQualifiedMinutesChanged();
    partial void OnC_BridgeRateChanging(decimal value);
    partial void OnC_BridgeRateChanged();
    partial void OnC_BridgeSetupChargeChanging(decimal value);
    partial void OnC_BridgeSetupChargeChanged();
    partial void OnC_BridgeMinChargeChanging(decimal value);
    partial void OnC_BridgeMinChargeChanged();
    partial void OnC_BridgeMinUOMChanging(int value);
    partial void OnC_BridgeMinUOMChanged();
    #endregion
		
		public T_pt_TestAggregate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_Transport", Storage="_C_Transport", DbType="Int")]
		public System.Nullable<int> C_Transport
		{
			get
			{
				return this._C_Transport;
			}
			set
			{
				if ((this._C_Transport != value))
				{
					this.OnC_TransportChanging(value);
					this.SendPropertyChanging();
					this._C_Transport = value;
					this.SendPropertyChanged("C_Transport");
					this.OnC_TransportChanged();
				}
			}
		}
		
		[Column(Name="c_ActionBand", Storage="_C_ActionBand", DbType="Int")]
		public System.Nullable<int> C_ActionBand
		{
			get
			{
				return this._C_ActionBand;
			}
			set
			{
				if ((this._C_ActionBand != value))
				{
					this.OnC_ActionBandChanging(value);
					this.SendPropertyChanging();
					this._C_ActionBand = value;
					this.SendPropertyChanged("C_ActionBand");
					this.OnC_ActionBandChanged();
				}
			}
		}
		
		[Column(Name="c_CountryBridge", Storage="_C_CountryBridge", DbType="Int")]
		public System.Nullable<int> C_CountryBridge
		{
			get
			{
				return this._C_CountryBridge;
			}
			set
			{
				if ((this._C_CountryBridge != value))
				{
					this.OnC_CountryBridgeChanging(value);
					this.SendPropertyChanging();
					this._C_CountryBridge = value;
					this.SendPropertyChanged("C_CountryBridge");
					this.OnC_CountryBridgeChanged();
				}
			}
		}
		
		[Column(Name="c_CountryOrigin", Storage="_C_CountryOrigin", DbType="Int")]
		public System.Nullable<int> C_CountryOrigin
		{
			get
			{
				return this._C_CountryOrigin;
			}
			set
			{
				if ((this._C_CountryOrigin != value))
				{
					this.OnC_CountryOriginChanging(value);
					this.SendPropertyChanging();
					this._C_CountryOrigin = value;
					this.SendPropertyChanged("C_CountryOrigin");
					this.OnC_CountryOriginChanged();
				}
			}
		}
		
		[Column(Name="c_CountryDestination", Storage="_C_CountryDestination", DbType="Int")]
		public System.Nullable<int> C_CountryDestination
		{
			get
			{
				return this._C_CountryDestination;
			}
			set
			{
				if ((this._C_CountryDestination != value))
				{
					this.OnC_CountryDestinationChanging(value);
					this.SendPropertyChanging();
					this._C_CountryDestination = value;
					this.SendPropertyChanged("C_CountryDestination");
					this.OnC_CountryDestinationChanged();
				}
			}
		}
		
		[Column(Name="c_UserRole", Storage="_C_UserRole", DbType="Int")]
		public System.Nullable<int> C_UserRole
		{
			get
			{
				return this._C_UserRole;
			}
			set
			{
				if ((this._C_UserRole != value))
				{
					this.OnC_UserRoleChanging(value);
					this.SendPropertyChanging();
					this._C_UserRole = value;
					this.SendPropertyChanged("C_UserRole");
					this.OnC_UserRoleChanged();
				}
			}
		}
		
		[Column(Name="c_CalendarCode", Storage="_C_CalendarCode", DbType="Int")]
		public System.Nullable<int> C_CalendarCode
		{
			get
			{
				return this._C_CalendarCode;
			}
			set
			{
				if ((this._C_CalendarCode != value))
				{
					this.OnC_CalendarCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CalendarCode = value;
					this.SendPropertyChanged("C_CalendarCode");
					this.OnC_CalendarCodeChanged();
				}
			}
		}
		
		[Column(Name="c_TotalQualifiedMinutes_op", Storage="_C_TotalQualifiedMinutes_op", DbType="NVarChar(5)")]
		public string C_TotalQualifiedMinutes_op
		{
			get
			{
				return this._C_TotalQualifiedMinutes_op;
			}
			set
			{
				if ((this._C_TotalQualifiedMinutes_op != value))
				{
					this.OnC_TotalQualifiedMinutes_opChanging(value);
					this.SendPropertyChanging();
					this._C_TotalQualifiedMinutes_op = value;
					this.SendPropertyChanged("C_TotalQualifiedMinutes_op");
					this.OnC_TotalQualifiedMinutes_opChanged();
				}
			}
		}
		
		[Column(Name="c_TotalQualifiedMinutes", Storage="_C_TotalQualifiedMinutes", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalQualifiedMinutes
		{
			get
			{
				return this._C_TotalQualifiedMinutes;
			}
			set
			{
				if ((this._C_TotalQualifiedMinutes != value))
				{
					this.OnC_TotalQualifiedMinutesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalQualifiedMinutes = value;
					this.SendPropertyChanged("C_TotalQualifiedMinutes");
					this.OnC_TotalQualifiedMinutesChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeRate", Storage="_C_BridgeRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeRate
		{
			get
			{
				return this._C_BridgeRate;
			}
			set
			{
				if ((this._C_BridgeRate != value))
				{
					this.OnC_BridgeRateChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeRate = value;
					this.SendPropertyChanged("C_BridgeRate");
					this.OnC_BridgeRateChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeSetupCharge", Storage="_C_BridgeSetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeSetupCharge
		{
			get
			{
				return this._C_BridgeSetupCharge;
			}
			set
			{
				if ((this._C_BridgeSetupCharge != value))
				{
					this.OnC_BridgeSetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeSetupCharge = value;
					this.SendPropertyChanged("C_BridgeSetupCharge");
					this.OnC_BridgeSetupChargeChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeMinCharge", Storage="_C_BridgeMinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BridgeMinCharge
		{
			get
			{
				return this._C_BridgeMinCharge;
			}
			set
			{
				if ((this._C_BridgeMinCharge != value))
				{
					this.OnC_BridgeMinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeMinCharge = value;
					this.SendPropertyChanged("C_BridgeMinCharge");
					this.OnC_BridgeMinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeMinUOM", Storage="_C_BridgeMinUOM", DbType="Int NOT NULL")]
		public int C_BridgeMinUOM
		{
			get
			{
				return this._C_BridgeMinUOM;
			}
			set
			{
				if ((this._C_BridgeMinUOM != value))
				{
					this.OnC_BridgeMinUOMChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeMinUOM = value;
					this.SendPropertyChanged("C_BridgeMinUOM");
					this.OnC_BridgeMinUOMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_TestNonAggregate")]
	public partial class T_pt_TestNonAggregate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private System.Nullable<int> _C_FeatureType;
		
		private string _C_Units_op;
		
		private System.Nullable<decimal> _C_Units;
		
		private System.Nullable<decimal> _C_MetricRate;
		
		private System.Nullable<int> _C_RateUOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_FeatureTypeChanging(System.Nullable<int> value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_Units_opChanging(string value);
    partial void OnC_Units_opChanged();
    partial void OnC_UnitsChanging(System.Nullable<decimal> value);
    partial void OnC_UnitsChanged();
    partial void OnC_MetricRateChanging(System.Nullable<decimal> value);
    partial void OnC_MetricRateChanged();
    partial void OnC_RateUOMChanging(System.Nullable<int> value);
    partial void OnC_RateUOMChanged();
    #endregion
		
		public T_pt_TestNonAggregate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int")]
		public System.Nullable<int> C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Units_op", Storage="_C_Units_op", DbType="NVarChar(5)")]
		public string C_Units_op
		{
			get
			{
				return this._C_Units_op;
			}
			set
			{
				if ((this._C_Units_op != value))
				{
					this.OnC_Units_opChanging(value);
					this.SendPropertyChanging();
					this._C_Units_op = value;
					this.SendPropertyChanged("C_Units_op");
					this.OnC_Units_opChanged();
				}
			}
		}
		
		[Column(Name="c_Units", Storage="_C_Units", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Units
		{
			get
			{
				return this._C_Units;
			}
			set
			{
				if ((this._C_Units != value))
				{
					this.OnC_UnitsChanging(value);
					this.SendPropertyChanging();
					this._C_Units = value;
					this.SendPropertyChanged("C_Units");
					this.OnC_UnitsChanged();
				}
			}
		}
		
		[Column(Name="c_MetricRate", Storage="_C_MetricRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_MetricRate
		{
			get
			{
				return this._C_MetricRate;
			}
			set
			{
				if ((this._C_MetricRate != value))
				{
					this.OnC_MetricRateChanging(value);
					this.SendPropertyChanging();
					this._C_MetricRate = value;
					this.SendPropertyChanged("C_MetricRate");
					this.OnC_MetricRateChanged();
				}
			}
		}
		
		[Column(Name="c_RateUOM", Storage="_C_RateUOM", DbType="Int")]
		public System.Nullable<int> C_RateUOM
		{
			get
			{
				return this._C_RateUOM;
			}
			set
			{
				if ((this._C_RateUOM != value))
				{
					this.OnC_RateUOMChanging(value);
					this.SendPropertyChanging();
					this._C_RateUOM = value;
					this.SendPropertyChanged("C_RateUOM");
					this.OnC_RateUOMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_TicketPrices")]
	public partial class T_pt_TicketPrices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_TotalTickets;
		
		private decimal _C_PerTicket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_TotalTicketsChanging(decimal value);
    partial void OnC_TotalTicketsChanged();
    partial void OnC_PerTicketChanging(decimal value);
    partial void OnC_PerTicketChanged();
    #endregion
		
		public T_pt_TicketPrices()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_TotalTickets", Storage="_C_TotalTickets", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalTickets
		{
			get
			{
				return this._C_TotalTickets;
			}
			set
			{
				if ((this._C_TotalTickets != value))
				{
					this.OnC_TotalTicketsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalTickets = value;
					this.SendPropertyChanged("C_TotalTickets");
					this.OnC_TotalTicketsChanged();
				}
			}
		}
		
		[Column(Name="c_PerTicket", Storage="_C_PerTicket", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerTicket
		{
			get
			{
				return this._C_PerTicket;
			}
			set
			{
				if ((this._C_PerTicket != value))
				{
					this.OnC_PerTicketChanging(value);
					this.SendPropertyChanging();
					this._C_PerTicket = value;
					this.SendPropertyChanged("C_PerTicket");
					this.OnC_PerTicketChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_TieredEventRatesPT")]
	public partial class T_pt_TieredEventRatesPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfEventCountRange;
		
		private System.Nullable<int> _C_EndOfEventCountRange;
		
		private System.Nullable<decimal> _C_OverrideRateForEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfEventCountRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfEventCountRangeChanged();
    partial void OnC_EndOfEventCountRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfEventCountRangeChanged();
    partial void OnC_OverrideRateForEventsChanging(System.Nullable<decimal> value);
    partial void OnC_OverrideRateForEventsChanged();
    #endregion
		
		public T_pt_TieredEventRatesPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfEventCountRange", Storage="_C_StartOfEventCountRange", DbType="Int")]
		public System.Nullable<int> C_StartOfEventCountRange
		{
			get
			{
				return this._C_StartOfEventCountRange;
			}
			set
			{
				if ((this._C_StartOfEventCountRange != value))
				{
					this.OnC_StartOfEventCountRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfEventCountRange = value;
					this.SendPropertyChanged("C_StartOfEventCountRange");
					this.OnC_StartOfEventCountRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfEventCountRange", Storage="_C_EndOfEventCountRange", DbType="Int")]
		public System.Nullable<int> C_EndOfEventCountRange
		{
			get
			{
				return this._C_EndOfEventCountRange;
			}
			set
			{
				if ((this._C_EndOfEventCountRange != value))
				{
					this.OnC_EndOfEventCountRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfEventCountRange = value;
					this.SendPropertyChanged("C_EndOfEventCountRange");
					this.OnC_EndOfEventCountRangeChanged();
				}
			}
		}
		
		[Column(Name="c_OverrideRateForEvents", Storage="_C_OverrideRateForEvents", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_OverrideRateForEvents
		{
			get
			{
				return this._C_OverrideRateForEvents;
			}
			set
			{
				if ((this._C_OverrideRateForEvents != value))
				{
					this.OnC_OverrideRateForEventsChanging(value);
					this.SendPropertyChanging();
					this._C_OverrideRateForEvents = value;
					this.SendPropertyChanged("C_OverrideRateForEvents");
					this.OnC_OverrideRateForEventsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_TieredUnitRatesPT")]
	public partial class T_pt_TieredUnitRatesPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_StartOfUnitRange;
		
		private System.Nullable<int> _C_EndOfUnitRange;
		
		private System.Nullable<decimal> _C_OverrideRateForUnits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_StartOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_StartOfUnitRangeChanged();
    partial void OnC_EndOfUnitRangeChanging(System.Nullable<int> value);
    partial void OnC_EndOfUnitRangeChanged();
    partial void OnC_OverrideRateForUnitsChanging(System.Nullable<decimal> value);
    partial void OnC_OverrideRateForUnitsChanged();
    #endregion
		
		public T_pt_TieredUnitRatesPT()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_StartOfUnitRange", Storage="_C_StartOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_StartOfUnitRange
		{
			get
			{
				return this._C_StartOfUnitRange;
			}
			set
			{
				if ((this._C_StartOfUnitRange != value))
				{
					this.OnC_StartOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_StartOfUnitRange = value;
					this.SendPropertyChanged("C_StartOfUnitRange");
					this.OnC_StartOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_EndOfUnitRange", Storage="_C_EndOfUnitRange", DbType="Int")]
		public System.Nullable<int> C_EndOfUnitRange
		{
			get
			{
				return this._C_EndOfUnitRange;
			}
			set
			{
				if ((this._C_EndOfUnitRange != value))
				{
					this.OnC_EndOfUnitRangeChanging(value);
					this.SendPropertyChanging();
					this._C_EndOfUnitRange = value;
					this.SendPropertyChanged("C_EndOfUnitRange");
					this.OnC_EndOfUnitRangeChanged();
				}
			}
		}
		
		[Column(Name="c_OverrideRateForUnits", Storage="_C_OverrideRateForUnits", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_OverrideRateForUnits
		{
			get
			{
				return this._C_OverrideRateForUnits;
			}
			set
			{
				if ((this._C_OverrideRateForUnits != value))
				{
					this.OnC_OverrideRateForUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_OverrideRateForUnits = value;
					this.SendPropertyChanged("C_OverrideRateForUnits");
					this.OnC_OverrideRateForUnitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_timefeaturerate")]
	public partial class T_pt_timefeaturerate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_FeatureType;
		
		private int _C_Round;
		
		private int _C_MTI;
		
		private int _C_MTIUOM;
		
		private decimal _C_TimeBasedRate;
		
		private int _C_TimeBasedRateUOM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_FeatureTypeChanging(System.Nullable<int> value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_RoundChanging(int value);
    partial void OnC_RoundChanged();
    partial void OnC_MTIChanging(int value);
    partial void OnC_MTIChanged();
    partial void OnC_MTIUOMChanging(int value);
    partial void OnC_MTIUOMChanged();
    partial void OnC_TimeBasedRateChanging(decimal value);
    partial void OnC_TimeBasedRateChanged();
    partial void OnC_TimeBasedRateUOMChanging(int value);
    partial void OnC_TimeBasedRateUOMChanged();
    #endregion
		
		public T_pt_timefeaturerate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int")]
		public System.Nullable<int> C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Round", Storage="_C_Round", DbType="Int NOT NULL")]
		public int C_Round
		{
			get
			{
				return this._C_Round;
			}
			set
			{
				if ((this._C_Round != value))
				{
					this.OnC_RoundChanging(value);
					this.SendPropertyChanging();
					this._C_Round = value;
					this.SendPropertyChanged("C_Round");
					this.OnC_RoundChanged();
				}
			}
		}
		
		[Column(Name="c_MTI", Storage="_C_MTI", DbType="Int NOT NULL")]
		public int C_MTI
		{
			get
			{
				return this._C_MTI;
			}
			set
			{
				if ((this._C_MTI != value))
				{
					this.OnC_MTIChanging(value);
					this.SendPropertyChanging();
					this._C_MTI = value;
					this.SendPropertyChanged("C_MTI");
					this.OnC_MTIChanged();
				}
			}
		}
		
		[Column(Name="c_MTIUOM", Storage="_C_MTIUOM", DbType="Int NOT NULL")]
		public int C_MTIUOM
		{
			get
			{
				return this._C_MTIUOM;
			}
			set
			{
				if ((this._C_MTIUOM != value))
				{
					this.OnC_MTIUOMChanging(value);
					this.SendPropertyChanging();
					this._C_MTIUOM = value;
					this.SendPropertyChanged("C_MTIUOM");
					this.OnC_MTIUOMChanged();
				}
			}
		}
		
		[Column(Name="c_TimeBasedRate", Storage="_C_TimeBasedRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TimeBasedRate
		{
			get
			{
				return this._C_TimeBasedRate;
			}
			set
			{
				if ((this._C_TimeBasedRate != value))
				{
					this.OnC_TimeBasedRateChanging(value);
					this.SendPropertyChanging();
					this._C_TimeBasedRate = value;
					this.SendPropertyChanged("C_TimeBasedRate");
					this.OnC_TimeBasedRateChanged();
				}
			}
		}
		
		[Column(Name="c_TimeBasedRateUOM", Storage="_C_TimeBasedRateUOM", DbType="Int NOT NULL")]
		public int C_TimeBasedRateUOM
		{
			get
			{
				return this._C_TimeBasedRateUOM;
			}
			set
			{
				if ((this._C_TimeBasedRateUOM != value))
				{
					this.OnC_TimeBasedRateUOMChanging(value);
					this.SendPropertyChanging();
					this._C_TimeBasedRateUOM = value;
					this.SendPropertyChanged("C_TimeBasedRateUOM");
					this.OnC_TimeBasedRateUOMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_tollfreerate")]
	public partial class T_pt_tollfreerate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_CallType;
		
		private string _C_DNISDigits;
		
		private System.Nullable<int> _C_CountryName;
		
		private decimal _C_TollFreeRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_CallTypeChanging(System.Nullable<int> value);
    partial void OnC_CallTypeChanged();
    partial void OnC_DNISDigitsChanging(string value);
    partial void OnC_DNISDigitsChanged();
    partial void OnC_CountryNameChanging(System.Nullable<int> value);
    partial void OnC_CountryNameChanged();
    partial void OnC_TollFreeRateChanging(decimal value);
    partial void OnC_TollFreeRateChanged();
    #endregion
		
		public T_pt_tollfreerate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int")]
		public System.Nullable<int> C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_DNISDigits", Storage="_C_DNISDigits", DbType="NVarChar(255)")]
		public string C_DNISDigits
		{
			get
			{
				return this._C_DNISDigits;
			}
			set
			{
				if ((this._C_DNISDigits != value))
				{
					this.OnC_DNISDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_DNISDigits = value;
					this.SendPropertyChanged("C_DNISDigits");
					this.OnC_DNISDigitsChanged();
				}
			}
		}
		
		[Column(Name="c_CountryName", Storage="_C_CountryName", DbType="Int")]
		public System.Nullable<int> C_CountryName
		{
			get
			{
				return this._C_CountryName;
			}
			set
			{
				if ((this._C_CountryName != value))
				{
					this.OnC_CountryNameChanging(value);
					this.SendPropertyChanging();
					this._C_CountryName = value;
					this.SendPropertyChanged("C_CountryName");
					this.OnC_CountryNameChanged();
				}
			}
		}
		
		[Column(Name="c_TollFreeRate", Storage="_C_TollFreeRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TollFreeRate
		{
			get
			{
				return this._C_TollFreeRate;
			}
			set
			{
				if ((this._C_TollFreeRate != value))
				{
					this.OnC_TollFreeRateChanging(value);
					this.SendPropertyChanging();
					this._C_TollFreeRate = value;
					this.SendPropertyChanged("C_TollFreeRate");
					this.OnC_TollFreeRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_UDRCTapered")]
	public partial class T_pt_UDRCTapered : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private decimal _C_UnitValue;
		
		private decimal _C_UnitAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_UnitValueChanging(decimal value);
    partial void OnC_UnitValueChanged();
    partial void OnC_UnitAmountChanging(decimal value);
    partial void OnC_UnitAmountChanged();
    #endregion
		
		public T_pt_UDRCTapered()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValue", Storage="_C_UnitValue", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnitValue
		{
			get
			{
				return this._C_UnitValue;
			}
			set
			{
				if ((this._C_UnitValue != value))
				{
					this.OnC_UnitValueChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValue = value;
					this.SendPropertyChanged("C_UnitValue");
					this.OnC_UnitValueChanged();
				}
			}
		}
		
		[Column(Name="c_UnitAmount", Storage="_C_UnitAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnitAmount
		{
			get
			{
				return this._C_UnitAmount;
			}
			set
			{
				if ((this._C_UnitAmount != value))
				{
					this.OnC_UnitAmountChanging(value);
					this.SendPropertyChanging();
					this._C_UnitAmount = value;
					this.SendPropertyChanged("C_UnitAmount");
					this.OnC_UnitAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_UDRCTiered")]
	public partial class T_pt_UDRCTiered : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_UnitValue_op;
		
		private System.Nullable<decimal> _C_UnitValue;
		
		private decimal _C_BaseAmount;
		
		private decimal _C_UnitAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_UnitValue_opChanging(string value);
    partial void OnC_UnitValue_opChanged();
    partial void OnC_UnitValueChanging(System.Nullable<decimal> value);
    partial void OnC_UnitValueChanged();
    partial void OnC_BaseAmountChanging(decimal value);
    partial void OnC_BaseAmountChanged();
    partial void OnC_UnitAmountChanging(decimal value);
    partial void OnC_UnitAmountChanged();
    #endregion
		
		public T_pt_UDRCTiered()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValue_op", Storage="_C_UnitValue_op", DbType="NVarChar(5)")]
		public string C_UnitValue_op
		{
			get
			{
				return this._C_UnitValue_op;
			}
			set
			{
				if ((this._C_UnitValue_op != value))
				{
					this.OnC_UnitValue_opChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValue_op = value;
					this.SendPropertyChanged("C_UnitValue_op");
					this.OnC_UnitValue_opChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValue", Storage="_C_UnitValue", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_UnitValue
		{
			get
			{
				return this._C_UnitValue;
			}
			set
			{
				if ((this._C_UnitValue != value))
				{
					this.OnC_UnitValueChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValue = value;
					this.SendPropertyChanged("C_UnitValue");
					this.OnC_UnitValueChanged();
				}
			}
		}
		
		[Column(Name="c_BaseAmount", Storage="_C_BaseAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_BaseAmount
		{
			get
			{
				return this._C_BaseAmount;
			}
			set
			{
				if ((this._C_BaseAmount != value))
				{
					this.OnC_BaseAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BaseAmount = value;
					this.SendPropertyChanged("C_BaseAmount");
					this.OnC_BaseAmountChanged();
				}
			}
		}
		
		[Column(Name="c_UnitAmount", Storage="_C_UnitAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnitAmount
		{
			get
			{
				return this._C_UnitAmount;
			}
			set
			{
				if ((this._C_UnitAmount != value))
				{
					this.OnC_UnitAmountChanging(value);
					this.SendPropertyChanging();
					this._C_UnitAmount = value;
					this.SendPropertyChanged("C_UnitAmount");
					this.OnC_UnitAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_unusedportapplic")]
	public partial class T_pt_unusedportapplic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_Notice_op;
		
		private System.Nullable<int> _C_Notice;
		
		private string _C_UnusedPortApplicBool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_Notice_opChanging(string value);
    partial void OnC_Notice_opChanged();
    partial void OnC_NoticeChanging(System.Nullable<int> value);
    partial void OnC_NoticeChanged();
    partial void OnC_UnusedPortApplicBoolChanging(string value);
    partial void OnC_UnusedPortApplicBoolChanged();
    #endregion
		
		public T_pt_unusedportapplic()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_Notice_op", Storage="_C_Notice_op", DbType="NVarChar(5)")]
		public string C_Notice_op
		{
			get
			{
				return this._C_Notice_op;
			}
			set
			{
				if ((this._C_Notice_op != value))
				{
					this.OnC_Notice_opChanging(value);
					this.SendPropertyChanging();
					this._C_Notice_op = value;
					this.SendPropertyChanged("C_Notice_op");
					this.OnC_Notice_opChanged();
				}
			}
		}
		
		[Column(Name="c_Notice", Storage="_C_Notice", DbType="Int")]
		public System.Nullable<int> C_Notice
		{
			get
			{
				return this._C_Notice;
			}
			set
			{
				if ((this._C_Notice != value))
				{
					this.OnC_NoticeChanging(value);
					this.SendPropertyChanging();
					this._C_Notice = value;
					this.SendPropertyChanged("C_Notice");
					this.OnC_NoticeChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortApplicBool", Storage="_C_UnusedPortApplicBool", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_UnusedPortApplicBool
		{
			get
			{
				return this._C_UnusedPortApplicBool;
			}
			set
			{
				if ((this._C_UnusedPortApplicBool != value))
				{
					this.OnC_UnusedPortApplicBoolChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortApplicBool = value;
					this.SendPropertyChanged("C_UnusedPortApplicBool");
					this.OnC_UnusedPortApplicBoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_unusedportdef")]
	public partial class T_pt_unusedportdef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private System.Nullable<int> _C_UnusedPortChargeDef;
		
		private int _C_UnusedThresholdFree;
		
		private int _C_UnusedPortDelta;
		
		private int _C_UnusedAdvancedPercentage;
		
		private string _C_UnusedExcludeRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_UnusedPortChargeDefChanging(System.Nullable<int> value);
    partial void OnC_UnusedPortChargeDefChanged();
    partial void OnC_UnusedThresholdFreeChanging(int value);
    partial void OnC_UnusedThresholdFreeChanged();
    partial void OnC_UnusedPortDeltaChanging(int value);
    partial void OnC_UnusedPortDeltaChanged();
    partial void OnC_UnusedAdvancedPercentageChanging(int value);
    partial void OnC_UnusedAdvancedPercentageChanged();
    partial void OnC_UnusedExcludeRolesChanging(string value);
    partial void OnC_UnusedExcludeRolesChanged();
    #endregion
		
		public T_pt_unusedportdef()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortChargeDef", Storage="_C_UnusedPortChargeDef", DbType="Int")]
		public System.Nullable<int> C_UnusedPortChargeDef
		{
			get
			{
				return this._C_UnusedPortChargeDef;
			}
			set
			{
				if ((this._C_UnusedPortChargeDef != value))
				{
					this.OnC_UnusedPortChargeDefChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortChargeDef = value;
					this.SendPropertyChanged("C_UnusedPortChargeDef");
					this.OnC_UnusedPortChargeDefChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedThresholdFree", Storage="_C_UnusedThresholdFree", DbType="Int NOT NULL")]
		public int C_UnusedThresholdFree
		{
			get
			{
				return this._C_UnusedThresholdFree;
			}
			set
			{
				if ((this._C_UnusedThresholdFree != value))
				{
					this.OnC_UnusedThresholdFreeChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedThresholdFree = value;
					this.SendPropertyChanged("C_UnusedThresholdFree");
					this.OnC_UnusedThresholdFreeChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortDelta", Storage="_C_UnusedPortDelta", DbType="Int NOT NULL")]
		public int C_UnusedPortDelta
		{
			get
			{
				return this._C_UnusedPortDelta;
			}
			set
			{
				if ((this._C_UnusedPortDelta != value))
				{
					this.OnC_UnusedPortDeltaChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortDelta = value;
					this.SendPropertyChanged("C_UnusedPortDelta");
					this.OnC_UnusedPortDeltaChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedAdvancedPercentage", Storage="_C_UnusedAdvancedPercentage", DbType="Int NOT NULL")]
		public int C_UnusedAdvancedPercentage
		{
			get
			{
				return this._C_UnusedAdvancedPercentage;
			}
			set
			{
				if ((this._C_UnusedAdvancedPercentage != value))
				{
					this.OnC_UnusedAdvancedPercentageChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedAdvancedPercentage = value;
					this.SendPropertyChanged("C_UnusedAdvancedPercentage");
					this.OnC_UnusedAdvancedPercentageChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedExcludeRoles", Storage="_C_UnusedExcludeRoles", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_UnusedExcludeRoles
		{
			get
			{
				return this._C_UnusedExcludeRoles;
			}
			set
			{
				if ((this._C_UnusedExcludeRoles != value))
				{
					this.OnC_UnusedExcludeRolesChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedExcludeRoles = value;
					this.SendPropertyChanged("C_UnusedExcludeRoles");
					this.OnC_UnusedExcludeRolesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pt_unusedportrate")]
	public partial class T_pt_unusedportrate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _N_order;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private int _Id_audit;
		
		private string _C_ServiceLevel_op;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private string _C_NumUnusedPorts_op;
		
		private System.Nullable<int> _C_NumUnusedPorts;
		
		private string _C_ScheduledConnections_op;
		
		private System.Nullable<int> _C_ScheduledConnections;
		
		private int _C_UnusedChargeType;
		
		private decimal _C_UnusedPortRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnN_orderChanging(int value);
    partial void OnN_orderChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnC_ServiceLevel_opChanging(string value);
    partial void OnC_ServiceLevel_opChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_NumUnusedPorts_opChanging(string value);
    partial void OnC_NumUnusedPorts_opChanged();
    partial void OnC_NumUnusedPortsChanging(System.Nullable<int> value);
    partial void OnC_NumUnusedPortsChanged();
    partial void OnC_ScheduledConnections_opChanging(string value);
    partial void OnC_ScheduledConnections_opChanged();
    partial void OnC_ScheduledConnectionsChanging(System.Nullable<int> value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_UnusedChargeTypeChanging(int value);
    partial void OnC_UnusedChargeTypeChanged();
    partial void OnC_UnusedPortRateChanging(decimal value);
    partial void OnC_UnusedPortRateChanged();
    #endregion
		
		public T_pt_unusedportrate()
		{
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="n_order", Storage="_N_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N_order
		{
			get
			{
				return this._N_order;
			}
			set
			{
				if ((this._N_order != value))
				{
					this.OnN_orderChanging(value);
					this.SendPropertyChanging();
					this._N_order = value;
					this.SendPropertyChanged("N_order");
					this.OnN_orderChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel_op", Storage="_C_ServiceLevel_op", DbType="NVarChar(5)")]
		public string C_ServiceLevel_op
		{
			get
			{
				return this._C_ServiceLevel_op;
			}
			set
			{
				if ((this._C_ServiceLevel_op != value))
				{
					this.OnC_ServiceLevel_opChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel_op = value;
					this.SendPropertyChanged("C_ServiceLevel_op");
					this.OnC_ServiceLevel_opChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnusedPorts_op", Storage="_C_NumUnusedPorts_op", DbType="NVarChar(5)")]
		public string C_NumUnusedPorts_op
		{
			get
			{
				return this._C_NumUnusedPorts_op;
			}
			set
			{
				if ((this._C_NumUnusedPorts_op != value))
				{
					this.OnC_NumUnusedPorts_opChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnusedPorts_op = value;
					this.SendPropertyChanged("C_NumUnusedPorts_op");
					this.OnC_NumUnusedPorts_opChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnusedPorts", Storage="_C_NumUnusedPorts", DbType="Int")]
		public System.Nullable<int> C_NumUnusedPorts
		{
			get
			{
				return this._C_NumUnusedPorts;
			}
			set
			{
				if ((this._C_NumUnusedPorts != value))
				{
					this.OnC_NumUnusedPortsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnusedPorts = value;
					this.SendPropertyChanged("C_NumUnusedPorts");
					this.OnC_NumUnusedPortsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections_op", Storage="_C_ScheduledConnections_op", DbType="NVarChar(5)")]
		public string C_ScheduledConnections_op
		{
			get
			{
				return this._C_ScheduledConnections_op;
			}
			set
			{
				if ((this._C_ScheduledConnections_op != value))
				{
					this.OnC_ScheduledConnections_opChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections_op = value;
					this.SendPropertyChanged("C_ScheduledConnections_op");
					this.OnC_ScheduledConnections_opChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int")]
		public System.Nullable<int> C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedChargeType", Storage="_C_UnusedChargeType", DbType="Int NOT NULL")]
		public int C_UnusedChargeType
		{
			get
			{
				return this._C_UnusedChargeType;
			}
			set
			{
				if ((this._C_UnusedChargeType != value))
				{
					this.OnC_UnusedChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedChargeType = value;
					this.SendPropertyChanged("C_UnusedChargeType");
					this.OnC_UnusedChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortRate", Storage="_C_UnusedPortRate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnusedPortRate
		{
			get
			{
				return this._C_UnusedPortRate;
			}
			set
			{
				if ((this._C_UnusedPortRate != value))
				{
					this.OnC_UnusedPortRateChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortRate = value;
					this.SendPropertyChanged("C_UnusedPortRate");
					this.OnC_UnusedPortRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_AccountCredit")]
	public partial class T_pv_AccountCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_CreditTime;
		
		private string _C_Status;
		
		private System.Nullable<long> _C_RequestID;
		
		private string _C_ContentionSessionID;
		
		private string _C_EmailNotification;
		
		private string _C_EmailAddress;
		
		private string _C_EmailText;
		
		private string _C_Issuer;
		
		private int _C_Reason;
		
		private string _C_Other;
		
		private string _C_InvoiceComment;
		
		private string _C_InternalComment;
		
		private string _C_AccountingCode;
		
		private System.Nullable<decimal> _C_RequestAmount;
		
		private System.Nullable<decimal> _C_CreditAmount;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.Nullable<int> _C_SubscriberAccountID;
		
		private string _C_Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_CreditTimeChanging(System.DateTime value);
    partial void OnC_CreditTimeChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_RequestIDChanging(System.Nullable<long> value);
    partial void OnC_RequestIDChanged();
    partial void OnC_ContentionSessionIDChanging(string value);
    partial void OnC_ContentionSessionIDChanged();
    partial void OnC_EmailNotificationChanging(string value);
    partial void OnC_EmailNotificationChanged();
    partial void OnC_EmailAddressChanging(string value);
    partial void OnC_EmailAddressChanged();
    partial void OnC_EmailTextChanging(string value);
    partial void OnC_EmailTextChanged();
    partial void OnC_IssuerChanging(string value);
    partial void OnC_IssuerChanged();
    partial void OnC_ReasonChanging(int value);
    partial void OnC_ReasonChanged();
    partial void OnC_OtherChanging(string value);
    partial void OnC_OtherChanged();
    partial void OnC_InvoiceCommentChanging(string value);
    partial void OnC_InvoiceCommentChanged();
    partial void OnC_InternalCommentChanging(string value);
    partial void OnC_InternalCommentChanged();
    partial void OnC_AccountingCodeChanging(string value);
    partial void OnC_AccountingCodeChanged();
    partial void OnC_RequestAmountChanging(System.Nullable<decimal> value);
    partial void OnC_RequestAmountChanged();
    partial void OnC_CreditAmountChanging(System.Nullable<decimal> value);
    partial void OnC_CreditAmountChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC_SubscriberAccountIDChanging(System.Nullable<int> value);
    partial void OnC_SubscriberAccountIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_pv_AccountCredit()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_CreditTime", Storage="_C_CreditTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_CreditTime
		{
			get
			{
				return this._C_CreditTime;
			}
			set
			{
				if ((this._C_CreditTime != value))
				{
					this.OnC_CreditTimeChanging(value);
					this.SendPropertyChanging();
					this._C_CreditTime = value;
					this.SendPropertyChanged("C_CreditTime");
					this.OnC_CreditTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_RequestID", Storage="_C_RequestID", DbType="BigInt")]
		public System.Nullable<long> C_RequestID
		{
			get
			{
				return this._C_RequestID;
			}
			set
			{
				if ((this._C_RequestID != value))
				{
					this.OnC_RequestIDChanging(value);
					this.SendPropertyChanging();
					this._C_RequestID = value;
					this.SendPropertyChanged("C_RequestID");
					this.OnC_RequestIDChanged();
				}
			}
		}
		
		[Column(Name="c_ContentionSessionID", Storage="_C_ContentionSessionID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_ContentionSessionID
		{
			get
			{
				return this._C_ContentionSessionID;
			}
			set
			{
				if ((this._C_ContentionSessionID != value))
				{
					this.OnC_ContentionSessionIDChanging(value);
					this.SendPropertyChanging();
					this._C_ContentionSessionID = value;
					this.SendPropertyChanged("C_ContentionSessionID");
					this.OnC_ContentionSessionIDChanged();
				}
			}
		}
		
		[Column(Name="c_EmailNotification", Storage="_C_EmailNotification", DbType="NVarChar(1)")]
		public string C_EmailNotification
		{
			get
			{
				return this._C_EmailNotification;
			}
			set
			{
				if ((this._C_EmailNotification != value))
				{
					this.OnC_EmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._C_EmailNotification = value;
					this.SendPropertyChanged("C_EmailNotification");
					this.OnC_EmailNotificationChanged();
				}
			}
		}
		
		[Column(Name="c_EmailAddress", Storage="_C_EmailAddress", DbType="NVarChar(50)")]
		public string C_EmailAddress
		{
			get
			{
				return this._C_EmailAddress;
			}
			set
			{
				if ((this._C_EmailAddress != value))
				{
					this.OnC_EmailAddressChanging(value);
					this.SendPropertyChanging();
					this._C_EmailAddress = value;
					this.SendPropertyChanged("C_EmailAddress");
					this.OnC_EmailAddressChanged();
				}
			}
		}
		
		[Column(Name="c_EmailText", Storage="_C_EmailText", DbType="NVarChar(255)")]
		public string C_EmailText
		{
			get
			{
				return this._C_EmailText;
			}
			set
			{
				if ((this._C_EmailText != value))
				{
					this.OnC_EmailTextChanging(value);
					this.SendPropertyChanging();
					this._C_EmailText = value;
					this.SendPropertyChanged("C_EmailText");
					this.OnC_EmailTextChanged();
				}
			}
		}
		
		[Column(Name="c_Issuer", Storage="_C_Issuer", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string C_Issuer
		{
			get
			{
				return this._C_Issuer;
			}
			set
			{
				if ((this._C_Issuer != value))
				{
					this.OnC_IssuerChanging(value);
					this.SendPropertyChanging();
					this._C_Issuer = value;
					this.SendPropertyChanged("C_Issuer");
					this.OnC_IssuerChanged();
				}
			}
		}
		
		[Column(Name="c_Reason", Storage="_C_Reason", DbType="Int NOT NULL")]
		public int C_Reason
		{
			get
			{
				return this._C_Reason;
			}
			set
			{
				if ((this._C_Reason != value))
				{
					this.OnC_ReasonChanging(value);
					this.SendPropertyChanging();
					this._C_Reason = value;
					this.SendPropertyChanged("C_Reason");
					this.OnC_ReasonChanged();
				}
			}
		}
		
		[Column(Name="c_Other", Storage="_C_Other", DbType="NVarChar(255)")]
		public string C_Other
		{
			get
			{
				return this._C_Other;
			}
			set
			{
				if ((this._C_Other != value))
				{
					this.OnC_OtherChanging(value);
					this.SendPropertyChanging();
					this._C_Other = value;
					this.SendPropertyChanged("C_Other");
					this.OnC_OtherChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceComment", Storage="_C_InvoiceComment", DbType="NVarChar(255)")]
		public string C_InvoiceComment
		{
			get
			{
				return this._C_InvoiceComment;
			}
			set
			{
				if ((this._C_InvoiceComment != value))
				{
					this.OnC_InvoiceCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceComment = value;
					this.SendPropertyChanged("C_InvoiceComment");
					this.OnC_InvoiceCommentChanged();
				}
			}
		}
		
		[Column(Name="c_InternalComment", Storage="_C_InternalComment", DbType="NVarChar(255)")]
		public string C_InternalComment
		{
			get
			{
				return this._C_InternalComment;
			}
			set
			{
				if ((this._C_InternalComment != value))
				{
					this.OnC_InternalCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InternalComment = value;
					this.SendPropertyChanged("C_InternalComment");
					this.OnC_InternalCommentChanged();
				}
			}
		}
		
		[Column(Name="c_AccountingCode", Storage="_C_AccountingCode", DbType="NVarChar(10)")]
		public string C_AccountingCode
		{
			get
			{
				return this._C_AccountingCode;
			}
			set
			{
				if ((this._C_AccountingCode != value))
				{
					this.OnC_AccountingCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountingCode = value;
					this.SendPropertyChanged("C_AccountingCode");
					this.OnC_AccountingCodeChanged();
				}
			}
		}
		
		[Column(Name="c_RequestAmount", Storage="_C_RequestAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_RequestAmount
		{
			get
			{
				return this._C_RequestAmount;
			}
			set
			{
				if ((this._C_RequestAmount != value))
				{
					this.OnC_RequestAmountChanging(value);
					this.SendPropertyChanging();
					this._C_RequestAmount = value;
					this.SendPropertyChanged("C_RequestAmount");
					this.OnC_RequestAmountChanged();
				}
			}
		}
		
		[Column(Name="c_CreditAmount", Storage="_C_CreditAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_CreditAmount
		{
			get
			{
				return this._C_CreditAmount;
			}
			set
			{
				if ((this._C_CreditAmount != value))
				{
					this.OnC_CreditAmountChanging(value);
					this.SendPropertyChanging();
					this._C_CreditAmount = value;
					this.SendPropertyChanged("C_CreditAmount");
					this.OnC_CreditAmountChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int")]
		public System.Nullable<int> C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_AccountCreditRequest")]
	public partial class T_pv_AccountCreditRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private int _C_Reason;
		
		private string _C_Other;
		
		private string _C_Status;
		
		private System.Nullable<decimal> _C_CreditAmount;
		
		private string _C_EmailNotification;
		
		private string _C_EmailAddress;
		
		private string _C_ContentionSessionID;
		
		private string _C_Description;
		
		private int _C_SubscriberAccountID;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ReasonChanging(int value);
    partial void OnC_ReasonChanged();
    partial void OnC_OtherChanging(string value);
    partial void OnC_OtherChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_CreditAmountChanging(System.Nullable<decimal> value);
    partial void OnC_CreditAmountChanged();
    partial void OnC_EmailNotificationChanging(string value);
    partial void OnC_EmailNotificationChanged();
    partial void OnC_EmailAddressChanging(string value);
    partial void OnC_EmailAddressChanged();
    partial void OnC_ContentionSessionIDChanging(string value);
    partial void OnC_ContentionSessionIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_SubscriberAccountIDChanging(int value);
    partial void OnC_SubscriberAccountIDChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    #endregion
		
		public T_pv_AccountCreditRequest()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Reason", Storage="_C_Reason", DbType="Int NOT NULL")]
		public int C_Reason
		{
			get
			{
				return this._C_Reason;
			}
			set
			{
				if ((this._C_Reason != value))
				{
					this.OnC_ReasonChanging(value);
					this.SendPropertyChanging();
					this._C_Reason = value;
					this.SendPropertyChanged("C_Reason");
					this.OnC_ReasonChanged();
				}
			}
		}
		
		[Column(Name="c_Other", Storage="_C_Other", DbType="NVarChar(255)")]
		public string C_Other
		{
			get
			{
				return this._C_Other;
			}
			set
			{
				if ((this._C_Other != value))
				{
					this.OnC_OtherChanging(value);
					this.SendPropertyChanging();
					this._C_Other = value;
					this.SendPropertyChanged("C_Other");
					this.OnC_OtherChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_CreditAmount", Storage="_C_CreditAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_CreditAmount
		{
			get
			{
				return this._C_CreditAmount;
			}
			set
			{
				if ((this._C_CreditAmount != value))
				{
					this.OnC_CreditAmountChanging(value);
					this.SendPropertyChanging();
					this._C_CreditAmount = value;
					this.SendPropertyChanged("C_CreditAmount");
					this.OnC_CreditAmountChanged();
				}
			}
		}
		
		[Column(Name="c_EmailNotification", Storage="_C_EmailNotification", DbType="NVarChar(1)")]
		public string C_EmailNotification
		{
			get
			{
				return this._C_EmailNotification;
			}
			set
			{
				if ((this._C_EmailNotification != value))
				{
					this.OnC_EmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._C_EmailNotification = value;
					this.SendPropertyChanged("C_EmailNotification");
					this.OnC_EmailNotificationChanged();
				}
			}
		}
		
		[Column(Name="c_EmailAddress", Storage="_C_EmailAddress", DbType="NVarChar(50)")]
		public string C_EmailAddress
		{
			get
			{
				return this._C_EmailAddress;
			}
			set
			{
				if ((this._C_EmailAddress != value))
				{
					this.OnC_EmailAddressChanging(value);
					this.SendPropertyChanging();
					this._C_EmailAddress = value;
					this.SendPropertyChanged("C_EmailAddress");
					this.OnC_EmailAddressChanged();
				}
			}
		}
		
		[Column(Name="c_ContentionSessionID", Storage="_C_ContentionSessionID", DbType="NVarChar(50)")]
		public string C_ContentionSessionID
		{
			get
			{
				return this._C_ContentionSessionID;
			}
			set
			{
				if ((this._C_ContentionSessionID != value))
				{
					this.OnC_ContentionSessionIDChanging(value);
					this.SendPropertyChanging();
					this._C_ContentionSessionID = value;
					this.SendPropertyChanged("C_ContentionSessionID");
					this.OnC_ContentionSessionIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int NOT NULL")]
		public int C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_AddCharge")]
	public partial class T_pv_AddCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private int _C_ChargeType;
		
		private string _C_OtherChargeTypeComment;
		
		private System.Nullable<int> _C_TaxType;
		
		private string _C_Issuer;
		
		private string _C_RelateToPreviousCharge;
		
		private string _C_InvoiceComment;
		
		private string _C_InternalComment;
		
		private string _C_GeneralLedgerCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ChargeTypeChanging(int value);
    partial void OnC_ChargeTypeChanged();
    partial void OnC_OtherChargeTypeCommentChanging(string value);
    partial void OnC_OtherChargeTypeCommentChanged();
    partial void OnC_TaxTypeChanging(System.Nullable<int> value);
    partial void OnC_TaxTypeChanged();
    partial void OnC_IssuerChanging(string value);
    partial void OnC_IssuerChanged();
    partial void OnC_RelateToPreviousChargeChanging(string value);
    partial void OnC_RelateToPreviousChargeChanged();
    partial void OnC_InvoiceCommentChanging(string value);
    partial void OnC_InvoiceCommentChanged();
    partial void OnC_InternalCommentChanging(string value);
    partial void OnC_InternalCommentChanged();
    partial void OnC_GeneralLedgerCodeChanging(string value);
    partial void OnC_GeneralLedgerCodeChanged();
    #endregion
		
		public T_pv_AddCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeType", Storage="_C_ChargeType", DbType="Int NOT NULL")]
		public int C_ChargeType
		{
			get
			{
				return this._C_ChargeType;
			}
			set
			{
				if ((this._C_ChargeType != value))
				{
					this.OnC_ChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeType = value;
					this.SendPropertyChanged("C_ChargeType");
					this.OnC_ChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_OtherChargeTypeComment", Storage="_C_OtherChargeTypeComment", DbType="NVarChar(128)")]
		public string C_OtherChargeTypeComment
		{
			get
			{
				return this._C_OtherChargeTypeComment;
			}
			set
			{
				if ((this._C_OtherChargeTypeComment != value))
				{
					this.OnC_OtherChargeTypeCommentChanging(value);
					this.SendPropertyChanging();
					this._C_OtherChargeTypeComment = value;
					this.SendPropertyChanged("C_OtherChargeTypeComment");
					this.OnC_OtherChargeTypeCommentChanged();
				}
			}
		}
		
		[Column(Name="c_TaxType", Storage="_C_TaxType", DbType="Int")]
		public System.Nullable<int> C_TaxType
		{
			get
			{
				return this._C_TaxType;
			}
			set
			{
				if ((this._C_TaxType != value))
				{
					this.OnC_TaxTypeChanging(value);
					this.SendPropertyChanging();
					this._C_TaxType = value;
					this.SendPropertyChanged("C_TaxType");
					this.OnC_TaxTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Issuer", Storage="_C_Issuer", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string C_Issuer
		{
			get
			{
				return this._C_Issuer;
			}
			set
			{
				if ((this._C_Issuer != value))
				{
					this.OnC_IssuerChanging(value);
					this.SendPropertyChanging();
					this._C_Issuer = value;
					this.SendPropertyChanged("C_Issuer");
					this.OnC_IssuerChanged();
				}
			}
		}
		
		[Column(Name="c_RelateToPreviousCharge", Storage="_C_RelateToPreviousCharge", DbType="NVarChar(128)")]
		public string C_RelateToPreviousCharge
		{
			get
			{
				return this._C_RelateToPreviousCharge;
			}
			set
			{
				if ((this._C_RelateToPreviousCharge != value))
				{
					this.OnC_RelateToPreviousChargeChanging(value);
					this.SendPropertyChanging();
					this._C_RelateToPreviousCharge = value;
					this.SendPropertyChanged("C_RelateToPreviousCharge");
					this.OnC_RelateToPreviousChargeChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceComment", Storage="_C_InvoiceComment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_InvoiceComment
		{
			get
			{
				return this._C_InvoiceComment;
			}
			set
			{
				if ((this._C_InvoiceComment != value))
				{
					this.OnC_InvoiceCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceComment = value;
					this.SendPropertyChanged("C_InvoiceComment");
					this.OnC_InvoiceCommentChanged();
				}
			}
		}
		
		[Column(Name="c_InternalComment", Storage="_C_InternalComment", DbType="NVarChar(255)")]
		public string C_InternalComment
		{
			get
			{
				return this._C_InternalComment;
			}
			set
			{
				if ((this._C_InternalComment != value))
				{
					this.OnC_InternalCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InternalComment = value;
					this.SendPropertyChanged("C_InternalComment");
					this.OnC_InternalCommentChanged();
				}
			}
		}
		
		[Column(Name="c_GeneralLedgerCode", Storage="_C_GeneralLedgerCode", DbType="NVarChar(32)")]
		public string C_GeneralLedgerCode
		{
			get
			{
				return this._C_GeneralLedgerCode;
			}
			set
			{
				if ((this._C_GeneralLedgerCode != value))
				{
					this.OnC_GeneralLedgerCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GeneralLedgerCode = value;
					this.SendPropertyChanged("C_GeneralLedgerCode");
					this.OnC_GeneralLedgerCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_ARAdjustment")]
	public partial class T_pv_ARAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private System.Nullable<System.DateTime> _C_EventDate;
		
		private string _C_Source;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private string _C_ReferenceID;
		
		private System.Nullable<int> _C_TargetInterval;
		
		private string _C_ARBatchID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_EventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EventDateChanged();
    partial void OnC_SourceChanging(string value);
    partial void OnC_SourceChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_ReferenceIDChanging(string value);
    partial void OnC_ReferenceIDChanged();
    partial void OnC_TargetIntervalChanging(System.Nullable<int> value);
    partial void OnC_TargetIntervalChanged();
    partial void OnC_ARBatchIDChanging(string value);
    partial void OnC_ARBatchIDChanged();
    #endregion
		
		public T_pv_ARAdjustment()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_EventDate", Storage="_C_EventDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EventDate
		{
			get
			{
				return this._C_EventDate;
			}
			set
			{
				if ((this._C_EventDate != value))
				{
					this.OnC_EventDateChanging(value);
					this.SendPropertyChanging();
					this._C_EventDate = value;
					this.SendPropertyChanged("C_EventDate");
					this.OnC_EventDateChanged();
				}
			}
		}
		
		[Column(Name="c_Source", Storage="_C_Source", DbType="NVarChar(2)")]
		public string C_Source
		{
			get
			{
				return this._C_Source;
			}
			set
			{
				if ((this._C_Source != value))
				{
					this.OnC_SourceChanging(value);
					this.SendPropertyChanging();
					this._C_Source = value;
					this.SendPropertyChanged("C_Source");
					this.OnC_SourceChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ReferenceID", Storage="_C_ReferenceID", DbType="NVarChar(50)")]
		public string C_ReferenceID
		{
			get
			{
				return this._C_ReferenceID;
			}
			set
			{
				if ((this._C_ReferenceID != value))
				{
					this.OnC_ReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ReferenceID = value;
					this.SendPropertyChanged("C_ReferenceID");
					this.OnC_ReferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetInterval", Storage="_C_TargetInterval", DbType="Int")]
		public System.Nullable<int> C_TargetInterval
		{
			get
			{
				return this._C_TargetInterval;
			}
			set
			{
				if ((this._C_TargetInterval != value))
				{
					this.OnC_TargetIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_TargetInterval = value;
					this.SendPropertyChanged("C_TargetInterval");
					this.OnC_TargetIntervalChanged();
				}
			}
		}
		
		[Column(Name="c_ARBatchID", Storage="_C_ARBatchID", DbType="NVarChar(15)")]
		public string C_ARBatchID
		{
			get
			{
				return this._C_ARBatchID;
			}
			set
			{
				if ((this._C_ARBatchID != value))
				{
					this.OnC_ARBatchIDChanging(value);
					this.SendPropertyChanging();
					this._C_ARBatchID = value;
					this.SendPropertyChanged("C_ARBatchID");
					this.OnC_ARBatchIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_audioconfcall")]
	public partial class T_pv_audioconfcall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_ConferenceID;
		
		private string _C_Payer;
		
		private string _C_AccountingCode;
		
		private string _C_ConferenceName;
		
		private string _C_ConferenceSubject;
		
		private string _C_OrganizationName;
		
		private string _C_SpecialInfo;
		
		private string _C_SchedulerComments;
		
		private int _C_ScheduledConnections;
		
		private System.DateTime _C_ScheduledStartTime;
		
		private decimal _C_ScheduledTimeGMTOffset;
		
		private int _C_ScheduledDuration;
		
		private string _C_CancelledFlag;
		
		private System.DateTime _C_CancellationTime;
		
		private int _C_ServiceLevel;
		
		private string _C_TerminationReason;
		
		private string _C_SystemName;
		
		private string _C_SalesPersonID;
		
		private string _C_OperatorID;
		
		private int _C_ActualNumConnections;
		
		private System.DateTime _C_ActualStartTime;
		
		private decimal _C_ActualDuration;
		
		private System.DateTime _C_ConferenceEndTime;
		
		private decimal _C_ConferenceTotal;
		
		private string _C_LeaderName;
		
		private decimal _C_ReservationCharges;
		
		private decimal _C_CancelCharges;
		
		private decimal _C_UnusedPortCharges;
		
		private decimal _C_ConnectionTotalAmount;
		
		private System.Nullable<decimal> _C_AdjustmentAmount;
		
		private decimal _C_OverusedPortCharges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ConferenceIDChanging(string value);
    partial void OnC_ConferenceIDChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_AccountingCodeChanging(string value);
    partial void OnC_AccountingCodeChanged();
    partial void OnC_ConferenceNameChanging(string value);
    partial void OnC_ConferenceNameChanged();
    partial void OnC_ConferenceSubjectChanging(string value);
    partial void OnC_ConferenceSubjectChanged();
    partial void OnC_OrganizationNameChanging(string value);
    partial void OnC_OrganizationNameChanged();
    partial void OnC_SpecialInfoChanging(string value);
    partial void OnC_SpecialInfoChanged();
    partial void OnC_SchedulerCommentsChanging(string value);
    partial void OnC_SchedulerCommentsChanged();
    partial void OnC_ScheduledConnectionsChanging(int value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ScheduledStartTimeChanging(System.DateTime value);
    partial void OnC_ScheduledStartTimeChanged();
    partial void OnC_ScheduledTimeGMTOffsetChanging(decimal value);
    partial void OnC_ScheduledTimeGMTOffsetChanged();
    partial void OnC_ScheduledDurationChanging(int value);
    partial void OnC_ScheduledDurationChanged();
    partial void OnC_CancelledFlagChanging(string value);
    partial void OnC_CancelledFlagChanged();
    partial void OnC_CancellationTimeChanging(System.DateTime value);
    partial void OnC_CancellationTimeChanged();
    partial void OnC_ServiceLevelChanging(int value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_TerminationReasonChanging(string value);
    partial void OnC_TerminationReasonChanged();
    partial void OnC_SystemNameChanging(string value);
    partial void OnC_SystemNameChanged();
    partial void OnC_SalesPersonIDChanging(string value);
    partial void OnC_SalesPersonIDChanged();
    partial void OnC_OperatorIDChanging(string value);
    partial void OnC_OperatorIDChanged();
    partial void OnC_ActualNumConnectionsChanging(int value);
    partial void OnC_ActualNumConnectionsChanged();
    partial void OnC_ActualStartTimeChanging(System.DateTime value);
    partial void OnC_ActualStartTimeChanged();
    partial void OnC_ActualDurationChanging(decimal value);
    partial void OnC_ActualDurationChanged();
    partial void OnC_ConferenceEndTimeChanging(System.DateTime value);
    partial void OnC_ConferenceEndTimeChanged();
    partial void OnC_ConferenceTotalChanging(decimal value);
    partial void OnC_ConferenceTotalChanged();
    partial void OnC_LeaderNameChanging(string value);
    partial void OnC_LeaderNameChanged();
    partial void OnC_ReservationChargesChanging(decimal value);
    partial void OnC_ReservationChargesChanged();
    partial void OnC_CancelChargesChanging(decimal value);
    partial void OnC_CancelChargesChanged();
    partial void OnC_UnusedPortChargesChanging(decimal value);
    partial void OnC_UnusedPortChargesChanged();
    partial void OnC_ConnectionTotalAmountChanging(decimal value);
    partial void OnC_ConnectionTotalAmountChanged();
    partial void OnC_AdjustmentAmountChanging(System.Nullable<decimal> value);
    partial void OnC_AdjustmentAmountChanged();
    partial void OnC_OverusedPortChargesChanging(decimal value);
    partial void OnC_OverusedPortChargesChanged();
    #endregion
		
		public T_pv_audioconfcall()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceID", Storage="_C_ConferenceID", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string C_ConferenceID
		{
			get
			{
				return this._C_ConferenceID;
			}
			set
			{
				if ((this._C_ConferenceID != value))
				{
					this.OnC_ConferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceID = value;
					this.SendPropertyChanged("C_ConferenceID");
					this.OnC_ConferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_AccountingCode", Storage="_C_AccountingCode", DbType="NVarChar(10)")]
		public string C_AccountingCode
		{
			get
			{
				return this._C_AccountingCode;
			}
			set
			{
				if ((this._C_AccountingCode != value))
				{
					this.OnC_AccountingCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountingCode = value;
					this.SendPropertyChanged("C_AccountingCode");
					this.OnC_AccountingCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceName", Storage="_C_ConferenceName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_ConferenceName
		{
			get
			{
				return this._C_ConferenceName;
			}
			set
			{
				if ((this._C_ConferenceName != value))
				{
					this.OnC_ConferenceNameChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceName = value;
					this.SendPropertyChanged("C_ConferenceName");
					this.OnC_ConferenceNameChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceSubject", Storage="_C_ConferenceSubject", DbType="NVarChar(50)")]
		public string C_ConferenceSubject
		{
			get
			{
				return this._C_ConferenceSubject;
			}
			set
			{
				if ((this._C_ConferenceSubject != value))
				{
					this.OnC_ConferenceSubjectChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceSubject = value;
					this.SendPropertyChanged("C_ConferenceSubject");
					this.OnC_ConferenceSubjectChanged();
				}
			}
		}
		
		[Column(Name="c_OrganizationName", Storage="_C_OrganizationName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_OrganizationName
		{
			get
			{
				return this._C_OrganizationName;
			}
			set
			{
				if ((this._C_OrganizationName != value))
				{
					this.OnC_OrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._C_OrganizationName = value;
					this.SendPropertyChanged("C_OrganizationName");
					this.OnC_OrganizationNameChanged();
				}
			}
		}
		
		[Column(Name="c_SpecialInfo", Storage="_C_SpecialInfo", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_SpecialInfo
		{
			get
			{
				return this._C_SpecialInfo;
			}
			set
			{
				if ((this._C_SpecialInfo != value))
				{
					this.OnC_SpecialInfoChanging(value);
					this.SendPropertyChanging();
					this._C_SpecialInfo = value;
					this.SendPropertyChanged("C_SpecialInfo");
					this.OnC_SpecialInfoChanged();
				}
			}
		}
		
		[Column(Name="c_SchedulerComments", Storage="_C_SchedulerComments", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string C_SchedulerComments
		{
			get
			{
				return this._C_SchedulerComments;
			}
			set
			{
				if ((this._C_SchedulerComments != value))
				{
					this.OnC_SchedulerCommentsChanging(value);
					this.SendPropertyChanging();
					this._C_SchedulerComments = value;
					this.SendPropertyChanged("C_SchedulerComments");
					this.OnC_SchedulerCommentsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int NOT NULL")]
		public int C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledStartTime", Storage="_C_ScheduledStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ScheduledStartTime
		{
			get
			{
				return this._C_ScheduledStartTime;
			}
			set
			{
				if ((this._C_ScheduledStartTime != value))
				{
					this.OnC_ScheduledStartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledStartTime = value;
					this.SendPropertyChanged("C_ScheduledStartTime");
					this.OnC_ScheduledStartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledTimeGMTOffset", Storage="_C_ScheduledTimeGMTOffset", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ScheduledTimeGMTOffset
		{
			get
			{
				return this._C_ScheduledTimeGMTOffset;
			}
			set
			{
				if ((this._C_ScheduledTimeGMTOffset != value))
				{
					this.OnC_ScheduledTimeGMTOffsetChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledTimeGMTOffset = value;
					this.SendPropertyChanged("C_ScheduledTimeGMTOffset");
					this.OnC_ScheduledTimeGMTOffsetChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledDuration", Storage="_C_ScheduledDuration", DbType="Int NOT NULL")]
		public int C_ScheduledDuration
		{
			get
			{
				return this._C_ScheduledDuration;
			}
			set
			{
				if ((this._C_ScheduledDuration != value))
				{
					this.OnC_ScheduledDurationChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledDuration = value;
					this.SendPropertyChanged("C_ScheduledDuration");
					this.OnC_ScheduledDurationChanged();
				}
			}
		}
		
		[Column(Name="c_CancelledFlag", Storage="_C_CancelledFlag", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string C_CancelledFlag
		{
			get
			{
				return this._C_CancelledFlag;
			}
			set
			{
				if ((this._C_CancelledFlag != value))
				{
					this.OnC_CancelledFlagChanging(value);
					this.SendPropertyChanging();
					this._C_CancelledFlag = value;
					this.SendPropertyChanged("C_CancelledFlag");
					this.OnC_CancelledFlagChanged();
				}
			}
		}
		
		[Column(Name="c_CancellationTime", Storage="_C_CancellationTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_CancellationTime
		{
			get
			{
				return this._C_CancellationTime;
			}
			set
			{
				if ((this._C_CancellationTime != value))
				{
					this.OnC_CancellationTimeChanging(value);
					this.SendPropertyChanging();
					this._C_CancellationTime = value;
					this.SendPropertyChanged("C_CancellationTime");
					this.OnC_CancellationTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int NOT NULL")]
		public int C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_TerminationReason", Storage="_C_TerminationReason", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_TerminationReason
		{
			get
			{
				return this._C_TerminationReason;
			}
			set
			{
				if ((this._C_TerminationReason != value))
				{
					this.OnC_TerminationReasonChanging(value);
					this.SendPropertyChanging();
					this._C_TerminationReason = value;
					this.SendPropertyChanged("C_TerminationReason");
					this.OnC_TerminationReasonChanged();
				}
			}
		}
		
		[Column(Name="c_SystemName", Storage="_C_SystemName", DbType="NVarChar(22) NOT NULL", CanBeNull=false)]
		public string C_SystemName
		{
			get
			{
				return this._C_SystemName;
			}
			set
			{
				if ((this._C_SystemName != value))
				{
					this.OnC_SystemNameChanging(value);
					this.SendPropertyChanging();
					this._C_SystemName = value;
					this.SendPropertyChanged("C_SystemName");
					this.OnC_SystemNameChanged();
				}
			}
		}
		
		[Column(Name="c_SalesPersonID", Storage="_C_SalesPersonID", DbType="NVarChar(10)")]
		public string C_SalesPersonID
		{
			get
			{
				return this._C_SalesPersonID;
			}
			set
			{
				if ((this._C_SalesPersonID != value))
				{
					this.OnC_SalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._C_SalesPersonID = value;
					this.SendPropertyChanged("C_SalesPersonID");
					this.OnC_SalesPersonIDChanged();
				}
			}
		}
		
		[Column(Name="c_OperatorID", Storage="_C_OperatorID", DbType="NVarChar(10)")]
		public string C_OperatorID
		{
			get
			{
				return this._C_OperatorID;
			}
			set
			{
				if ((this._C_OperatorID != value))
				{
					this.OnC_OperatorIDChanging(value);
					this.SendPropertyChanging();
					this._C_OperatorID = value;
					this.SendPropertyChanged("C_OperatorID");
					this.OnC_OperatorIDChanged();
				}
			}
		}
		
		[Column(Name="c_ActualNumConnections", Storage="_C_ActualNumConnections", DbType="Int NOT NULL")]
		public int C_ActualNumConnections
		{
			get
			{
				return this._C_ActualNumConnections;
			}
			set
			{
				if ((this._C_ActualNumConnections != value))
				{
					this.OnC_ActualNumConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ActualNumConnections = value;
					this.SendPropertyChanged("C_ActualNumConnections");
					this.OnC_ActualNumConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ActualStartTime", Storage="_C_ActualStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ActualStartTime
		{
			get
			{
				return this._C_ActualStartTime;
			}
			set
			{
				if ((this._C_ActualStartTime != value))
				{
					this.OnC_ActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ActualStartTime = value;
					this.SendPropertyChanged("C_ActualStartTime");
					this.OnC_ActualStartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ActualDuration", Storage="_C_ActualDuration", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ActualDuration
		{
			get
			{
				return this._C_ActualDuration;
			}
			set
			{
				if ((this._C_ActualDuration != value))
				{
					this.OnC_ActualDurationChanging(value);
					this.SendPropertyChanging();
					this._C_ActualDuration = value;
					this.SendPropertyChanged("C_ActualDuration");
					this.OnC_ActualDurationChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceEndTime", Storage="_C_ConferenceEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ConferenceEndTime
		{
			get
			{
				return this._C_ConferenceEndTime;
			}
			set
			{
				if ((this._C_ConferenceEndTime != value))
				{
					this.OnC_ConferenceEndTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceEndTime = value;
					this.SendPropertyChanged("C_ConferenceEndTime");
					this.OnC_ConferenceEndTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceTotal", Storage="_C_ConferenceTotal", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConferenceTotal
		{
			get
			{
				return this._C_ConferenceTotal;
			}
			set
			{
				if ((this._C_ConferenceTotal != value))
				{
					this.OnC_ConferenceTotalChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceTotal = value;
					this.SendPropertyChanged("C_ConferenceTotal");
					this.OnC_ConferenceTotalChanged();
				}
			}
		}
		
		[Column(Name="c_LeaderName", Storage="_C_LeaderName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string C_LeaderName
		{
			get
			{
				return this._C_LeaderName;
			}
			set
			{
				if ((this._C_LeaderName != value))
				{
					this.OnC_LeaderNameChanging(value);
					this.SendPropertyChanging();
					this._C_LeaderName = value;
					this.SendPropertyChanged("C_LeaderName");
					this.OnC_LeaderNameChanged();
				}
			}
		}
		
		[Column(Name="c_ReservationCharges", Storage="_C_ReservationCharges", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ReservationCharges
		{
			get
			{
				return this._C_ReservationCharges;
			}
			set
			{
				if ((this._C_ReservationCharges != value))
				{
					this.OnC_ReservationChargesChanging(value);
					this.SendPropertyChanging();
					this._C_ReservationCharges = value;
					this.SendPropertyChanged("C_ReservationCharges");
					this.OnC_ReservationChargesChanged();
				}
			}
		}
		
		[Column(Name="c_CancelCharges", Storage="_C_CancelCharges", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_CancelCharges
		{
			get
			{
				return this._C_CancelCharges;
			}
			set
			{
				if ((this._C_CancelCharges != value))
				{
					this.OnC_CancelChargesChanging(value);
					this.SendPropertyChanging();
					this._C_CancelCharges = value;
					this.SendPropertyChanged("C_CancelCharges");
					this.OnC_CancelChargesChanged();
				}
			}
		}
		
		[Column(Name="c_UnusedPortCharges", Storage="_C_UnusedPortCharges", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnusedPortCharges
		{
			get
			{
				return this._C_UnusedPortCharges;
			}
			set
			{
				if ((this._C_UnusedPortCharges != value))
				{
					this.OnC_UnusedPortChargesChanging(value);
					this.SendPropertyChanging();
					this._C_UnusedPortCharges = value;
					this.SendPropertyChanged("C_UnusedPortCharges");
					this.OnC_UnusedPortChargesChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionTotalAmount", Storage="_C_ConnectionTotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionTotalAmount
		{
			get
			{
				return this._C_ConnectionTotalAmount;
			}
			set
			{
				if ((this._C_ConnectionTotalAmount != value))
				{
					this.OnC_ConnectionTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionTotalAmount = value;
					this.SendPropertyChanged("C_ConnectionTotalAmount");
					this.OnC_ConnectionTotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c_AdjustmentAmount", Storage="_C_AdjustmentAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_AdjustmentAmount
		{
			get
			{
				return this._C_AdjustmentAmount;
			}
			set
			{
				if ((this._C_AdjustmentAmount != value))
				{
					this.OnC_AdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._C_AdjustmentAmount = value;
					this.SendPropertyChanged("C_AdjustmentAmount");
					this.OnC_AdjustmentAmountChanged();
				}
			}
		}
		
		[Column(Name="c_OverusedPortCharges", Storage="_C_OverusedPortCharges", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_OverusedPortCharges
		{
			get
			{
				return this._C_OverusedPortCharges;
			}
			set
			{
				if ((this._C_OverusedPortCharges != value))
				{
					this.OnC_OverusedPortChargesChanging(value);
					this.SendPropertyChanging();
					this._C_OverusedPortCharges = value;
					this.SendPropertyChanged("C_OverusedPortCharges");
					this.OnC_OverusedPortChargesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_audioconfconnection")]
	public partial class T_pv_audioconfconnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_ConferenceID;
		
		private string _C_Payer;
		
		private string _C_UserBilled;
		
		private string _C_UserName;
		
		private int _C_UserRole;
		
		private string _C_OrganizationName;
		
		private string _C_userphonenumber;
		
		private string _C_specialinfo;
		
		private int _C_CallType;
		
		private int _C_transport;
		
		private int _C_Mode;
		
		private System.DateTime _C_ConnectTime;
		
		private System.DateTime _C_EnteredConferenceTime;
		
		private System.DateTime _C_ExitedConferenceTime;
		
		private System.DateTime _C_DisconnectTime;
		
		private string _C_Transferred;
		
		private string _C_TerminationReason;
		
		private int _C_ISDNDisconnectCause;
		
		private int _C_TrunkNumber;
		
		private int _C_LineNumber;
		
		private string _C_DNISDigits;
		
		private string _C_ANIDigits;
		
		private decimal _C_ConnectionMinutes;
		
		private int _C_CalendarCode;
		
		private System.Nullable<int> _C_CountryNameID;
		
		private System.Nullable<int> _C_ServiceLevel;
		
		private System.Nullable<decimal> _C_BridgeAmount;
		
		private System.Nullable<decimal> _C_TransportAmount;
		
		private System.Nullable<decimal> _C_BridgeFederalTaxAmount;
		
		private System.Nullable<decimal> _C_BridgeStateTaxAmount;
		
		private System.Nullable<decimal> _C_BridgeCountyTaxAmount;
		
		private System.Nullable<decimal> _C_BridgeLocalTaxAmount;
		
		private System.Nullable<decimal> _C_BridgeOtherTaxAmount;
		
		private System.Nullable<decimal> _C_TransportFederalTaxAmount;
		
		private System.Nullable<decimal> _C_TransportStateTaxAmount;
		
		private System.Nullable<decimal> _C_TransportCountyTaxAmount;
		
		private System.Nullable<decimal> _C_TransportLocalTaxAmount;
		
		private System.Nullable<decimal> _C_TransportOtherTaxAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ConferenceIDChanging(string value);
    partial void OnC_ConferenceIDChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_UserBilledChanging(string value);
    partial void OnC_UserBilledChanged();
    partial void OnC_UserNameChanging(string value);
    partial void OnC_UserNameChanged();
    partial void OnC_UserRoleChanging(int value);
    partial void OnC_UserRoleChanged();
    partial void OnC_OrganizationNameChanging(string value);
    partial void OnC_OrganizationNameChanged();
    partial void OnC_userphonenumberChanging(string value);
    partial void OnC_userphonenumberChanged();
    partial void OnC_specialinfoChanging(string value);
    partial void OnC_specialinfoChanged();
    partial void OnC_CallTypeChanging(int value);
    partial void OnC_CallTypeChanged();
    partial void OnC_transportChanging(int value);
    partial void OnC_transportChanged();
    partial void OnC_ModeChanging(int value);
    partial void OnC_ModeChanged();
    partial void OnC_ConnectTimeChanging(System.DateTime value);
    partial void OnC_ConnectTimeChanged();
    partial void OnC_EnteredConferenceTimeChanging(System.DateTime value);
    partial void OnC_EnteredConferenceTimeChanged();
    partial void OnC_ExitedConferenceTimeChanging(System.DateTime value);
    partial void OnC_ExitedConferenceTimeChanged();
    partial void OnC_DisconnectTimeChanging(System.DateTime value);
    partial void OnC_DisconnectTimeChanged();
    partial void OnC_TransferredChanging(string value);
    partial void OnC_TransferredChanged();
    partial void OnC_TerminationReasonChanging(string value);
    partial void OnC_TerminationReasonChanged();
    partial void OnC_ISDNDisconnectCauseChanging(int value);
    partial void OnC_ISDNDisconnectCauseChanged();
    partial void OnC_TrunkNumberChanging(int value);
    partial void OnC_TrunkNumberChanged();
    partial void OnC_LineNumberChanging(int value);
    partial void OnC_LineNumberChanged();
    partial void OnC_DNISDigitsChanging(string value);
    partial void OnC_DNISDigitsChanged();
    partial void OnC_ANIDigitsChanging(string value);
    partial void OnC_ANIDigitsChanged();
    partial void OnC_ConnectionMinutesChanging(decimal value);
    partial void OnC_ConnectionMinutesChanged();
    partial void OnC_CalendarCodeChanging(int value);
    partial void OnC_CalendarCodeChanged();
    partial void OnC_CountryNameIDChanging(System.Nullable<int> value);
    partial void OnC_CountryNameIDChanged();
    partial void OnC_ServiceLevelChanging(System.Nullable<int> value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_BridgeAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeAmountChanged();
    partial void OnC_TransportAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportAmountChanged();
    partial void OnC_BridgeFederalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeFederalTaxAmountChanged();
    partial void OnC_BridgeStateTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeStateTaxAmountChanged();
    partial void OnC_BridgeCountyTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeCountyTaxAmountChanged();
    partial void OnC_BridgeLocalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeLocalTaxAmountChanged();
    partial void OnC_BridgeOtherTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_BridgeOtherTaxAmountChanged();
    partial void OnC_TransportFederalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportFederalTaxAmountChanged();
    partial void OnC_TransportStateTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportStateTaxAmountChanged();
    partial void OnC_TransportCountyTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportCountyTaxAmountChanged();
    partial void OnC_TransportLocalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportLocalTaxAmountChanged();
    partial void OnC_TransportOtherTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_TransportOtherTaxAmountChanged();
    #endregion
		
		public T_pv_audioconfconnection()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceID", Storage="_C_ConferenceID", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string C_ConferenceID
		{
			get
			{
				return this._C_ConferenceID;
			}
			set
			{
				if ((this._C_ConferenceID != value))
				{
					this.OnC_ConferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceID = value;
					this.SendPropertyChanged("C_ConferenceID");
					this.OnC_ConferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_UserBilled", Storage="_C_UserBilled", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string C_UserBilled
		{
			get
			{
				return this._C_UserBilled;
			}
			set
			{
				if ((this._C_UserBilled != value))
				{
					this.OnC_UserBilledChanging(value);
					this.SendPropertyChanging();
					this._C_UserBilled = value;
					this.SendPropertyChanged("C_UserBilled");
					this.OnC_UserBilledChanged();
				}
			}
		}
		
		[Column(Name="c_UserName", Storage="_C_UserName", DbType="NVarChar(255)")]
		public string C_UserName
		{
			get
			{
				return this._C_UserName;
			}
			set
			{
				if ((this._C_UserName != value))
				{
					this.OnC_UserNameChanging(value);
					this.SendPropertyChanging();
					this._C_UserName = value;
					this.SendPropertyChanged("C_UserName");
					this.OnC_UserNameChanged();
				}
			}
		}
		
		[Column(Name="c_UserRole", Storage="_C_UserRole", DbType="Int NOT NULL")]
		public int C_UserRole
		{
			get
			{
				return this._C_UserRole;
			}
			set
			{
				if ((this._C_UserRole != value))
				{
					this.OnC_UserRoleChanging(value);
					this.SendPropertyChanging();
					this._C_UserRole = value;
					this.SendPropertyChanged("C_UserRole");
					this.OnC_UserRoleChanged();
				}
			}
		}
		
		[Column(Name="c_OrganizationName", Storage="_C_OrganizationName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_OrganizationName
		{
			get
			{
				return this._C_OrganizationName;
			}
			set
			{
				if ((this._C_OrganizationName != value))
				{
					this.OnC_OrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._C_OrganizationName = value;
					this.SendPropertyChanged("C_OrganizationName");
					this.OnC_OrganizationNameChanged();
				}
			}
		}
		
		[Column(Name="c_userphonenumber", Storage="_C_userphonenumber", DbType="NVarChar(38) NOT NULL", CanBeNull=false)]
		public string C_userphonenumber
		{
			get
			{
				return this._C_userphonenumber;
			}
			set
			{
				if ((this._C_userphonenumber != value))
				{
					this.OnC_userphonenumberChanging(value);
					this.SendPropertyChanging();
					this._C_userphonenumber = value;
					this.SendPropertyChanged("C_userphonenumber");
					this.OnC_userphonenumberChanged();
				}
			}
		}
		
		[Column(Name="c_specialinfo", Storage="_C_specialinfo", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_specialinfo
		{
			get
			{
				return this._C_specialinfo;
			}
			set
			{
				if ((this._C_specialinfo != value))
				{
					this.OnC_specialinfoChanging(value);
					this.SendPropertyChanging();
					this._C_specialinfo = value;
					this.SendPropertyChanged("C_specialinfo");
					this.OnC_specialinfoChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int NOT NULL")]
		public int C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_transport", Storage="_C_transport", DbType="Int NOT NULL")]
		public int C_transport
		{
			get
			{
				return this._C_transport;
			}
			set
			{
				if ((this._C_transport != value))
				{
					this.OnC_transportChanging(value);
					this.SendPropertyChanging();
					this._C_transport = value;
					this.SendPropertyChanged("C_transport");
					this.OnC_transportChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int NOT NULL")]
		public int C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectTime", Storage="_C_ConnectTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ConnectTime
		{
			get
			{
				return this._C_ConnectTime;
			}
			set
			{
				if ((this._C_ConnectTime != value))
				{
					this.OnC_ConnectTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectTime = value;
					this.SendPropertyChanged("C_ConnectTime");
					this.OnC_ConnectTimeChanged();
				}
			}
		}
		
		[Column(Name="c_EnteredConferenceTime", Storage="_C_EnteredConferenceTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_EnteredConferenceTime
		{
			get
			{
				return this._C_EnteredConferenceTime;
			}
			set
			{
				if ((this._C_EnteredConferenceTime != value))
				{
					this.OnC_EnteredConferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._C_EnteredConferenceTime = value;
					this.SendPropertyChanged("C_EnteredConferenceTime");
					this.OnC_EnteredConferenceTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ExitedConferenceTime", Storage="_C_ExitedConferenceTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ExitedConferenceTime
		{
			get
			{
				return this._C_ExitedConferenceTime;
			}
			set
			{
				if ((this._C_ExitedConferenceTime != value))
				{
					this.OnC_ExitedConferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ExitedConferenceTime = value;
					this.SendPropertyChanged("C_ExitedConferenceTime");
					this.OnC_ExitedConferenceTimeChanged();
				}
			}
		}
		
		[Column(Name="c_DisconnectTime", Storage="_C_DisconnectTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_DisconnectTime
		{
			get
			{
				return this._C_DisconnectTime;
			}
			set
			{
				if ((this._C_DisconnectTime != value))
				{
					this.OnC_DisconnectTimeChanging(value);
					this.SendPropertyChanging();
					this._C_DisconnectTime = value;
					this.SendPropertyChanged("C_DisconnectTime");
					this.OnC_DisconnectTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Transferred", Storage="_C_Transferred", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string C_Transferred
		{
			get
			{
				return this._C_Transferred;
			}
			set
			{
				if ((this._C_Transferred != value))
				{
					this.OnC_TransferredChanging(value);
					this.SendPropertyChanging();
					this._C_Transferred = value;
					this.SendPropertyChanged("C_Transferred");
					this.OnC_TransferredChanged();
				}
			}
		}
		
		[Column(Name="c_TerminationReason", Storage="_C_TerminationReason", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string C_TerminationReason
		{
			get
			{
				return this._C_TerminationReason;
			}
			set
			{
				if ((this._C_TerminationReason != value))
				{
					this.OnC_TerminationReasonChanging(value);
					this.SendPropertyChanging();
					this._C_TerminationReason = value;
					this.SendPropertyChanged("C_TerminationReason");
					this.OnC_TerminationReasonChanged();
				}
			}
		}
		
		[Column(Name="c_ISDNDisconnectCause", Storage="_C_ISDNDisconnectCause", DbType="Int NOT NULL")]
		public int C_ISDNDisconnectCause
		{
			get
			{
				return this._C_ISDNDisconnectCause;
			}
			set
			{
				if ((this._C_ISDNDisconnectCause != value))
				{
					this.OnC_ISDNDisconnectCauseChanging(value);
					this.SendPropertyChanging();
					this._C_ISDNDisconnectCause = value;
					this.SendPropertyChanged("C_ISDNDisconnectCause");
					this.OnC_ISDNDisconnectCauseChanged();
				}
			}
		}
		
		[Column(Name="c_TrunkNumber", Storage="_C_TrunkNumber", DbType="Int NOT NULL")]
		public int C_TrunkNumber
		{
			get
			{
				return this._C_TrunkNumber;
			}
			set
			{
				if ((this._C_TrunkNumber != value))
				{
					this.OnC_TrunkNumberChanging(value);
					this.SendPropertyChanging();
					this._C_TrunkNumber = value;
					this.SendPropertyChanged("C_TrunkNumber");
					this.OnC_TrunkNumberChanged();
				}
			}
		}
		
		[Column(Name="c_LineNumber", Storage="_C_LineNumber", DbType="Int NOT NULL")]
		public int C_LineNumber
		{
			get
			{
				return this._C_LineNumber;
			}
			set
			{
				if ((this._C_LineNumber != value))
				{
					this.OnC_LineNumberChanging(value);
					this.SendPropertyChanging();
					this._C_LineNumber = value;
					this.SendPropertyChanged("C_LineNumber");
					this.OnC_LineNumberChanged();
				}
			}
		}
		
		[Column(Name="c_DNISDigits", Storage="_C_DNISDigits", DbType="NVarChar(23) NOT NULL", CanBeNull=false)]
		public string C_DNISDigits
		{
			get
			{
				return this._C_DNISDigits;
			}
			set
			{
				if ((this._C_DNISDigits != value))
				{
					this.OnC_DNISDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_DNISDigits = value;
					this.SendPropertyChanged("C_DNISDigits");
					this.OnC_DNISDigitsChanged();
				}
			}
		}
		
		[Column(Name="c_ANIDigits", Storage="_C_ANIDigits", DbType="NVarChar(23) NOT NULL", CanBeNull=false)]
		public string C_ANIDigits
		{
			get
			{
				return this._C_ANIDigits;
			}
			set
			{
				if ((this._C_ANIDigits != value))
				{
					this.OnC_ANIDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_ANIDigits = value;
					this.SendPropertyChanged("C_ANIDigits");
					this.OnC_ANIDigitsChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionMinutes", Storage="_C_ConnectionMinutes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionMinutes
		{
			get
			{
				return this._C_ConnectionMinutes;
			}
			set
			{
				if ((this._C_ConnectionMinutes != value))
				{
					this.OnC_ConnectionMinutesChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionMinutes = value;
					this.SendPropertyChanged("C_ConnectionMinutes");
					this.OnC_ConnectionMinutesChanged();
				}
			}
		}
		
		[Column(Name="c_CalendarCode", Storage="_C_CalendarCode", DbType="Int NOT NULL")]
		public int C_CalendarCode
		{
			get
			{
				return this._C_CalendarCode;
			}
			set
			{
				if ((this._C_CalendarCode != value))
				{
					this.OnC_CalendarCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CalendarCode = value;
					this.SendPropertyChanged("C_CalendarCode");
					this.OnC_CalendarCodeChanged();
				}
			}
		}
		
		[Column(Name="c_CountryNameID", Storage="_C_CountryNameID", DbType="Int")]
		public System.Nullable<int> C_CountryNameID
		{
			get
			{
				return this._C_CountryNameID;
			}
			set
			{
				if ((this._C_CountryNameID != value))
				{
					this.OnC_CountryNameIDChanging(value);
					this.SendPropertyChanging();
					this._C_CountryNameID = value;
					this.SendPropertyChanged("C_CountryNameID");
					this.OnC_CountryNameIDChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int")]
		public System.Nullable<int> C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeAmount", Storage="_C_BridgeAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeAmount
		{
			get
			{
				return this._C_BridgeAmount;
			}
			set
			{
				if ((this._C_BridgeAmount != value))
				{
					this.OnC_BridgeAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeAmount = value;
					this.SendPropertyChanged("C_BridgeAmount");
					this.OnC_BridgeAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportAmount", Storage="_C_TransportAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportAmount
		{
			get
			{
				return this._C_TransportAmount;
			}
			set
			{
				if ((this._C_TransportAmount != value))
				{
					this.OnC_TransportAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportAmount = value;
					this.SendPropertyChanged("C_TransportAmount");
					this.OnC_TransportAmountChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeFederalTaxAmount", Storage="_C_BridgeFederalTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeFederalTaxAmount
		{
			get
			{
				return this._C_BridgeFederalTaxAmount;
			}
			set
			{
				if ((this._C_BridgeFederalTaxAmount != value))
				{
					this.OnC_BridgeFederalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeFederalTaxAmount = value;
					this.SendPropertyChanged("C_BridgeFederalTaxAmount");
					this.OnC_BridgeFederalTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeStateTaxAmount", Storage="_C_BridgeStateTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeStateTaxAmount
		{
			get
			{
				return this._C_BridgeStateTaxAmount;
			}
			set
			{
				if ((this._C_BridgeStateTaxAmount != value))
				{
					this.OnC_BridgeStateTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeStateTaxAmount = value;
					this.SendPropertyChanged("C_BridgeStateTaxAmount");
					this.OnC_BridgeStateTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeCountyTaxAmount", Storage="_C_BridgeCountyTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeCountyTaxAmount
		{
			get
			{
				return this._C_BridgeCountyTaxAmount;
			}
			set
			{
				if ((this._C_BridgeCountyTaxAmount != value))
				{
					this.OnC_BridgeCountyTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeCountyTaxAmount = value;
					this.SendPropertyChanged("C_BridgeCountyTaxAmount");
					this.OnC_BridgeCountyTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeLocalTaxAmount", Storage="_C_BridgeLocalTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeLocalTaxAmount
		{
			get
			{
				return this._C_BridgeLocalTaxAmount;
			}
			set
			{
				if ((this._C_BridgeLocalTaxAmount != value))
				{
					this.OnC_BridgeLocalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeLocalTaxAmount = value;
					this.SendPropertyChanged("C_BridgeLocalTaxAmount");
					this.OnC_BridgeLocalTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_BridgeOtherTaxAmount", Storage="_C_BridgeOtherTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_BridgeOtherTaxAmount
		{
			get
			{
				return this._C_BridgeOtherTaxAmount;
			}
			set
			{
				if ((this._C_BridgeOtherTaxAmount != value))
				{
					this.OnC_BridgeOtherTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_BridgeOtherTaxAmount = value;
					this.SendPropertyChanged("C_BridgeOtherTaxAmount");
					this.OnC_BridgeOtherTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportFederalTaxAmount", Storage="_C_TransportFederalTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportFederalTaxAmount
		{
			get
			{
				return this._C_TransportFederalTaxAmount;
			}
			set
			{
				if ((this._C_TransportFederalTaxAmount != value))
				{
					this.OnC_TransportFederalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportFederalTaxAmount = value;
					this.SendPropertyChanged("C_TransportFederalTaxAmount");
					this.OnC_TransportFederalTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportStateTaxAmount", Storage="_C_TransportStateTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportStateTaxAmount
		{
			get
			{
				return this._C_TransportStateTaxAmount;
			}
			set
			{
				if ((this._C_TransportStateTaxAmount != value))
				{
					this.OnC_TransportStateTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportStateTaxAmount = value;
					this.SendPropertyChanged("C_TransportStateTaxAmount");
					this.OnC_TransportStateTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportCountyTaxAmount", Storage="_C_TransportCountyTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportCountyTaxAmount
		{
			get
			{
				return this._C_TransportCountyTaxAmount;
			}
			set
			{
				if ((this._C_TransportCountyTaxAmount != value))
				{
					this.OnC_TransportCountyTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportCountyTaxAmount = value;
					this.SendPropertyChanged("C_TransportCountyTaxAmount");
					this.OnC_TransportCountyTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportLocalTaxAmount", Storage="_C_TransportLocalTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportLocalTaxAmount
		{
			get
			{
				return this._C_TransportLocalTaxAmount;
			}
			set
			{
				if ((this._C_TransportLocalTaxAmount != value))
				{
					this.OnC_TransportLocalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportLocalTaxAmount = value;
					this.SendPropertyChanged("C_TransportLocalTaxAmount");
					this.OnC_TransportLocalTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_TransportOtherTaxAmount", Storage="_C_TransportOtherTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TransportOtherTaxAmount
		{
			get
			{
				return this._C_TransportOtherTaxAmount;
			}
			set
			{
				if ((this._C_TransportOtherTaxAmount != value))
				{
					this.OnC_TransportOtherTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TransportOtherTaxAmount = value;
					this.SendPropertyChanged("C_TransportOtherTaxAmount");
					this.OnC_TransportOtherTaxAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_audioconffeature")]
	public partial class T_pv_audioconffeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Payer;
		
		private int _C_FeatureType;
		
		private System.Nullable<decimal> _C_Metric;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
		private System.Nullable<System.DateTime> _C_EndTime;
		
		private string _C_TransactionID;
		
		private System.Nullable<int> _C_Duration;
		
		private System.Nullable<decimal> _C_MetricCharge;
		
		private System.Nullable<int> _C_RoundedDuration;
		
		private System.Nullable<decimal> _C_SetupCharge;
		
		private System.Nullable<decimal> _C_TimeBasedCharge;
		
		private string _C_GLCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_FeatureTypeChanging(int value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_MetricChanging(System.Nullable<decimal> value);
    partial void OnC_MetricChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    partial void OnC_EndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndTimeChanged();
    partial void OnC_TransactionIDChanging(string value);
    partial void OnC_TransactionIDChanged();
    partial void OnC_DurationChanging(System.Nullable<int> value);
    partial void OnC_DurationChanged();
    partial void OnC_MetricChargeChanging(System.Nullable<decimal> value);
    partial void OnC_MetricChargeChanged();
    partial void OnC_RoundedDurationChanging(System.Nullable<int> value);
    partial void OnC_RoundedDurationChanged();
    partial void OnC_SetupChargeChanging(System.Nullable<decimal> value);
    partial void OnC_SetupChargeChanged();
    partial void OnC_TimeBasedChargeChanging(System.Nullable<decimal> value);
    partial void OnC_TimeBasedChargeChanged();
    partial void OnC_GLCodeChanging(string value);
    partial void OnC_GLCodeChanged();
    #endregion
		
		public T_pv_audioconffeature()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int NOT NULL")]
		public int C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Metric", Storage="_C_Metric", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Metric
		{
			get
			{
				return this._C_Metric;
			}
			set
			{
				if ((this._C_Metric != value))
				{
					this.OnC_MetricChanging(value);
					this.SendPropertyChanging();
					this._C_Metric = value;
					this.SendPropertyChanged("C_Metric");
					this.OnC_MetricChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_EndTime", Storage="_C_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndTime
		{
			get
			{
				return this._C_EndTime;
			}
			set
			{
				if ((this._C_EndTime != value))
				{
					this.OnC_EndTimeChanging(value);
					this.SendPropertyChanging();
					this._C_EndTime = value;
					this.SendPropertyChanged("C_EndTime");
					this.OnC_EndTimeChanged();
				}
			}
		}
		
		[Column(Name="c_TransactionID", Storage="_C_TransactionID", DbType="NVarChar(40)")]
		public string C_TransactionID
		{
			get
			{
				return this._C_TransactionID;
			}
			set
			{
				if ((this._C_TransactionID != value))
				{
					this.OnC_TransactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_TransactionID = value;
					this.SendPropertyChanged("C_TransactionID");
					this.OnC_TransactionIDChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Int")]
		public System.Nullable<int> C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_MetricCharge", Storage="_C_MetricCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_MetricCharge
		{
			get
			{
				return this._C_MetricCharge;
			}
			set
			{
				if ((this._C_MetricCharge != value))
				{
					this.OnC_MetricChargeChanging(value);
					this.SendPropertyChanging();
					this._C_MetricCharge = value;
					this.SendPropertyChanged("C_MetricCharge");
					this.OnC_MetricChargeChanged();
				}
			}
		}
		
		[Column(Name="c_RoundedDuration", Storage="_C_RoundedDuration", DbType="Int")]
		public System.Nullable<int> C_RoundedDuration
		{
			get
			{
				return this._C_RoundedDuration;
			}
			set
			{
				if ((this._C_RoundedDuration != value))
				{
					this.OnC_RoundedDurationChanging(value);
					this.SendPropertyChanging();
					this._C_RoundedDuration = value;
					this.SendPropertyChanged("C_RoundedDuration");
					this.OnC_RoundedDurationChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		[Column(Name="c_TimeBasedCharge", Storage="_C_TimeBasedCharge", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TimeBasedCharge
		{
			get
			{
				return this._C_TimeBasedCharge;
			}
			set
			{
				if ((this._C_TimeBasedCharge != value))
				{
					this.OnC_TimeBasedChargeChanging(value);
					this.SendPropertyChanging();
					this._C_TimeBasedCharge = value;
					this.SendPropertyChanged("C_TimeBasedCharge");
					this.OnC_TimeBasedChargeChanged();
				}
			}
		}
		
		[Column(Name="c_GLCode", Storage="_C_GLCode", DbType="NVarChar(100)")]
		public string C_GLCode
		{
			get
			{
				return this._C_GLCode;
			}
			set
			{
				if ((this._C_GLCode != value))
				{
					this.OnC_GLCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GLCode = value;
					this.SendPropertyChanged("C_GLCode");
					this.OnC_GLCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_Audit")]
	public partial class T_pv_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private string _C_CSRID;
		
		private int _C_SubscriberAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_CSRIDChanging(string value);
    partial void OnC_CSRIDChanged();
    partial void OnC_SubscriberAccountIDChanging(int value);
    partial void OnC_SubscriberAccountIDChanged();
    #endregion
		
		public T_pv_Audit()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_CSRID", Storage="_C_CSRID", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string C_CSRID
		{
			get
			{
				return this._C_CSRID;
			}
			set
			{
				if ((this._C_CSRID != value))
				{
					this.OnC_CSRIDChanging(value);
					this.SendPropertyChanging();
					this._C_CSRID = value;
					this.SendPropertyChanged("C_CSRID");
					this.OnC_CSRIDChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int NOT NULL")]
		public int C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_BillSoftPCode")]
	public partial class T_pv_BillSoftPCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private long _C_PCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_PCodeChanging(long value);
    partial void OnC_PCodeChanged();
    #endregion
		
		public T_pv_BillSoftPCode()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_PCode", Storage="_C_PCode", DbType="BigInt NOT NULL")]
		public long C_PCode
		{
			get
			{
				return this._C_PCode;
			}
			set
			{
				if ((this._C_PCode != value))
				{
					this.OnC_PCodeChanging(value);
					this.SendPropertyChanging();
					this._C_PCode = value;
					this.SendPropertyChanged("C_PCode");
					this.OnC_PCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_Commitment")]
	public partial class T_pv_Commitment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private decimal _C_TrueUpAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_TrueUpAmountChanging(decimal value);
    partial void OnC_TrueUpAmountChanged();
    #endregion
		
		public T_pv_Commitment()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_TrueUpAmount", Storage="_C_TrueUpAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TrueUpAmount
		{
			get
			{
				return this._C_TrueUpAmount;
			}
			set
			{
				if ((this._C_TrueUpAmount != value))
				{
					this.OnC_TrueUpAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TrueUpAmount = value;
					this.SendPropertyChanged("C_TrueUpAmount");
					this.OnC_TrueUpAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_FlatDiscount")]
	public partial class T_pv_FlatDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_FlatRateQualifier;
		
		private string _C_GroupSubscriptionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_FlatRateQualifierChanging(System.Nullable<decimal> value);
    partial void OnC_FlatRateQualifierChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    #endregion
		
		public T_pv_FlatDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_FlatRateQualifier", Storage="_C_FlatRateQualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_FlatRateQualifier
		{
			get
			{
				return this._C_FlatRateQualifier;
			}
			set
			{
				if ((this._C_FlatRateQualifier != value))
				{
					this.OnC_FlatRateQualifierChanging(value);
					this.SendPropertyChanging();
					this._C_FlatRateQualifier = value;
					this.SendPropertyChanged("C_FlatRateQualifier");
					this.OnC_FlatRateQualifierChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(100)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_FlatDiscount_NoCond")]
	public partial class T_pv_FlatDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private string _C_GroupSubscriptionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    #endregion
		
		public T_pv_FlatDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(100)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_FlatRecurringCharge")]
	public partial class T_pv_FlatRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_RCIntervalStart;
		
		private System.DateTime _C_RCIntervalEnd;
		
		private System.DateTime _C_BillingIntervalStart;
		
		private System.DateTime _C_BillingIntervalEnd;
		
		private System.DateTime _C_RCIntervalSubscriptionStart;
		
		private System.DateTime _C_RCIntervalSubscriptionEnd;
		
		private string _C_Advance;
		
		private string _C_ProrateOnSubscription;
		
		private string _C_ProrateInstantly;
		
		private string _C_ProrateOnUnsubscription;
		
		private System.DateTime _C_ProratedIntervalStart;
		
		private System.DateTime _C_ProratedIntervalEnd;
		
		private System.Nullable<int> _C_ProratedDays;
		
		private System.Nullable<decimal> _C_ProratedDailyRate;
		
		private System.Nullable<decimal> _C_RCAmount;
		
		private string _C_ProratedOnSubscription;
		
		private string _C_ProratedInstantly;
		
		private string _C_ProratedOnUnsubscription;
		
		private int _C__SubscriptionID;
		
		private System.Nullable<System.DateTime> _C_FinalizeDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_RCIntervalStartChanging(System.DateTime value);
    partial void OnC_RCIntervalStartChanged();
    partial void OnC_RCIntervalEndChanging(System.DateTime value);
    partial void OnC_RCIntervalEndChanged();
    partial void OnC_BillingIntervalStartChanging(System.DateTime value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.DateTime value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC_RCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionStartChanged();
    partial void OnC_RCIntervalSubscriptionEndChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionEndChanged();
    partial void OnC_AdvanceChanging(string value);
    partial void OnC_AdvanceChanged();
    partial void OnC_ProrateOnSubscriptionChanging(string value);
    partial void OnC_ProrateOnSubscriptionChanged();
    partial void OnC_ProrateInstantlyChanging(string value);
    partial void OnC_ProrateInstantlyChanged();
    partial void OnC_ProrateOnUnsubscriptionChanging(string value);
    partial void OnC_ProrateOnUnsubscriptionChanged();
    partial void OnC_ProratedIntervalStartChanging(System.DateTime value);
    partial void OnC_ProratedIntervalStartChanged();
    partial void OnC_ProratedIntervalEndChanging(System.DateTime value);
    partial void OnC_ProratedIntervalEndChanged();
    partial void OnC_ProratedDaysChanging(System.Nullable<int> value);
    partial void OnC_ProratedDaysChanged();
    partial void OnC_ProratedDailyRateChanging(System.Nullable<decimal> value);
    partial void OnC_ProratedDailyRateChanged();
    partial void OnC_RCAmountChanging(System.Nullable<decimal> value);
    partial void OnC_RCAmountChanged();
    partial void OnC_ProratedOnSubscriptionChanging(string value);
    partial void OnC_ProratedOnSubscriptionChanged();
    partial void OnC_ProratedInstantlyChanging(string value);
    partial void OnC_ProratedInstantlyChanged();
    partial void OnC_ProratedOnUnsubscriptionChanging(string value);
    partial void OnC_ProratedOnUnsubscriptionChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    partial void OnC_FinalizeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_FinalizeDateChanged();
    #endregion
		
		public T_pv_FlatRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalStart", Storage="_C_RCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalStart
		{
			get
			{
				return this._C_RCIntervalStart;
			}
			set
			{
				if ((this._C_RCIntervalStart != value))
				{
					this.OnC_RCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalStart = value;
					this.SendPropertyChanged("C_RCIntervalStart");
					this.OnC_RCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalEnd", Storage="_C_RCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalEnd
		{
			get
			{
				return this._C_RCIntervalEnd;
			}
			set
			{
				if ((this._C_RCIntervalEnd != value))
				{
					this.OnC_RCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalEnd = value;
					this.SendPropertyChanged("C_RCIntervalEnd");
					this.OnC_RCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionStart", Storage="_C_RCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionStart
		{
			get
			{
				return this._C_RCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionStart != value))
				{
					this.OnC_RCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionStart");
					this.OnC_RCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionEnd", Storage="_C_RCIntervalSubscriptionEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_RCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionEnd != value))
				{
					this.OnC_RCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionEnd");
					this.OnC_RCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_Advance", Storage="_C_Advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_Advance
		{
			get
			{
				return this._C_Advance;
			}
			set
			{
				if ((this._C_Advance != value))
				{
					this.OnC_AdvanceChanging(value);
					this.SendPropertyChanging();
					this._C_Advance = value;
					this.SendPropertyChanged("C_Advance");
					this.OnC_AdvanceChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnSubscription", Storage="_C_ProrateOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnSubscription
		{
			get
			{
				return this._C_ProrateOnSubscription;
			}
			set
			{
				if ((this._C_ProrateOnSubscription != value))
				{
					this.OnC_ProrateOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnSubscription = value;
					this.SendPropertyChanged("C_ProrateOnSubscription");
					this.OnC_ProrateOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateInstantly", Storage="_C_ProrateInstantly", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateInstantly
		{
			get
			{
				return this._C_ProrateInstantly;
			}
			set
			{
				if ((this._C_ProrateInstantly != value))
				{
					this.OnC_ProrateInstantlyChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateInstantly = value;
					this.SendPropertyChanged("C_ProrateInstantly");
					this.OnC_ProrateInstantlyChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnUnsubscription", Storage="_C_ProrateOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnUnsubscription
		{
			get
			{
				return this._C_ProrateOnUnsubscription;
			}
			set
			{
				if ((this._C_ProrateOnUnsubscription != value))
				{
					this.OnC_ProrateOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnUnsubscription = value;
					this.SendPropertyChanged("C_ProrateOnUnsubscription");
					this.OnC_ProrateOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedIntervalStart", Storage="_C_ProratedIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_ProratedIntervalStart
		{
			get
			{
				return this._C_ProratedIntervalStart;
			}
			set
			{
				if ((this._C_ProratedIntervalStart != value))
				{
					this.OnC_ProratedIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedIntervalStart = value;
					this.SendPropertyChanged("C_ProratedIntervalStart");
					this.OnC_ProratedIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedIntervalEnd", Storage="_C_ProratedIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_ProratedIntervalEnd
		{
			get
			{
				return this._C_ProratedIntervalEnd;
			}
			set
			{
				if ((this._C_ProratedIntervalEnd != value))
				{
					this.OnC_ProratedIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedIntervalEnd = value;
					this.SendPropertyChanged("C_ProratedIntervalEnd");
					this.OnC_ProratedIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedDays", Storage="_C_ProratedDays", DbType="Int")]
		public System.Nullable<int> C_ProratedDays
		{
			get
			{
				return this._C_ProratedDays;
			}
			set
			{
				if ((this._C_ProratedDays != value))
				{
					this.OnC_ProratedDaysChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedDays = value;
					this.SendPropertyChanged("C_ProratedDays");
					this.OnC_ProratedDaysChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedDailyRate", Storage="_C_ProratedDailyRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_ProratedDailyRate
		{
			get
			{
				return this._C_ProratedDailyRate;
			}
			set
			{
				if ((this._C_ProratedDailyRate != value))
				{
					this.OnC_ProratedDailyRateChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedDailyRate = value;
					this.SendPropertyChanged("C_ProratedDailyRate");
					this.OnC_ProratedDailyRateChanged();
				}
			}
		}
		
		[Column(Name="c_RCAmount", Storage="_C_RCAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_RCAmount
		{
			get
			{
				return this._C_RCAmount;
			}
			set
			{
				if ((this._C_RCAmount != value))
				{
					this.OnC_RCAmountChanging(value);
					this.SendPropertyChanging();
					this._C_RCAmount = value;
					this.SendPropertyChanged("C_RCAmount");
					this.OnC_RCAmountChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedOnSubscription", Storage="_C_ProratedOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedOnSubscription
		{
			get
			{
				return this._C_ProratedOnSubscription;
			}
			set
			{
				if ((this._C_ProratedOnSubscription != value))
				{
					this.OnC_ProratedOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedOnSubscription = value;
					this.SendPropertyChanged("C_ProratedOnSubscription");
					this.OnC_ProratedOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedInstantly", Storage="_C_ProratedInstantly", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedInstantly
		{
			get
			{
				return this._C_ProratedInstantly;
			}
			set
			{
				if ((this._C_ProratedInstantly != value))
				{
					this.OnC_ProratedInstantlyChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedInstantly = value;
					this.SendPropertyChanged("C_ProratedInstantly");
					this.OnC_ProratedInstantlyChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedOnUnsubscription", Storage="_C_ProratedOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedOnUnsubscription
		{
			get
			{
				return this._C_ProratedOnUnsubscription;
			}
			set
			{
				if ((this._C_ProratedOnUnsubscription != value))
				{
					this.OnC_ProratedOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedOnUnsubscription = value;
					this.SendPropertyChanged("C_ProratedOnUnsubscription");
					this.OnC_ProratedOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_FinalizeDate", Storage="_C_FinalizeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_FinalizeDate
		{
			get
			{
				return this._C_FinalizeDate;
			}
			set
			{
				if ((this._C_FinalizeDate != value))
				{
					this.OnC_FinalizeDateChanging(value);
					this.SendPropertyChanging();
					this._C_FinalizeDate = value;
					this.SendPropertyChanged("C_FinalizeDate");
					this.OnC_FinalizeDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_FreeUsage")]
	public partial class T_pv_FreeUsage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _C_DummyProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_DummyPropertyChanged();
    #endregion
		
		public T_pv_FreeUsage()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_DummyProperty", Storage="_C_DummyProperty", DbType="Int")]
		public System.Nullable<int> C_DummyProperty
		{
			get
			{
				return this._C_DummyProperty;
			}
			set
			{
				if ((this._C_DummyProperty != value))
				{
					this.OnC_DummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DummyProperty = value;
					this.SendPropertyChanged("C_DummyProperty");
					this.OnC_DummyPropertyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_GroupDiscount_Temp")]
	public partial class T_pv_GroupDiscount_Temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private int _C_GroupDiscountIntervalID;
		
		private int _C_GroupSubscriptionID;
		
		private decimal _C_GroupDiscountAmount;
		
		private System.Nullable<decimal> _C_DiscountPercent;
		
		private decimal _C_DistributionCounter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_GroupDiscountIntervalIDChanging(int value);
    partial void OnC_GroupDiscountIntervalIDChanged();
    partial void OnC_GroupSubscriptionIDChanging(int value);
    partial void OnC_GroupSubscriptionIDChanged();
    partial void OnC_GroupDiscountAmountChanging(decimal value);
    partial void OnC_GroupDiscountAmountChanged();
    partial void OnC_DiscountPercentChanging(System.Nullable<decimal> value);
    partial void OnC_DiscountPercentChanged();
    partial void OnC_DistributionCounterChanging(decimal value);
    partial void OnC_DistributionCounterChanged();
    #endregion
		
		public T_pv_GroupDiscount_Temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountIntervalID", Storage="_C_GroupDiscountIntervalID", DbType="Int NOT NULL")]
		public int C_GroupDiscountIntervalID
		{
			get
			{
				return this._C_GroupDiscountIntervalID;
			}
			set
			{
				if ((this._C_GroupDiscountIntervalID != value))
				{
					this.OnC_GroupDiscountIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountIntervalID = value;
					this.SendPropertyChanged("C_GroupDiscountIntervalID");
					this.OnC_GroupDiscountIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionID", Storage="_C_GroupSubscriptionID", DbType="Int NOT NULL")]
		public int C_GroupSubscriptionID
		{
			get
			{
				return this._C_GroupSubscriptionID;
			}
			set
			{
				if ((this._C_GroupSubscriptionID != value))
				{
					this.OnC_GroupSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionID = value;
					this.SendPropertyChanged("C_GroupSubscriptionID");
					this.OnC_GroupSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountAmount", Storage="_C_GroupDiscountAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_GroupDiscountAmount
		{
			get
			{
				return this._C_GroupDiscountAmount;
			}
			set
			{
				if ((this._C_GroupDiscountAmount != value))
				{
					this.OnC_GroupDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountAmount = value;
					this.SendPropertyChanged("C_GroupDiscountAmount");
					this.OnC_GroupDiscountAmountChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercent", Storage="_C_DiscountPercent", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DiscountPercent
		{
			get
			{
				return this._C_DiscountPercent;
			}
			set
			{
				if ((this._C_DiscountPercent != value))
				{
					this.OnC_DiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercent = value;
					this.SendPropertyChanged("C_DiscountPercent");
					this.OnC_DiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_DistributionCounter", Storage="_C_DistributionCounter", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DistributionCounter
		{
			get
			{
				return this._C_DistributionCounter;
			}
			set
			{
				if ((this._C_DistributionCounter != value))
				{
					this.OnC_DistributionCounterChanging(value);
					this.SendPropertyChanging();
					this._C_DistributionCounter = value;
					this.SendPropertyChanged("C_DistributionCounter");
					this.OnC_DistributionCounterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_MetraTax")]
	public partial class T_pv_MetraTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_TransactionTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_TransactionTimeChanging(System.DateTime value);
    partial void OnC_TransactionTimeChanged();
    #endregion
		
		public T_pv_MetraTax()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_TransactionTime", Storage="_C_TransactionTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_TransactionTime
		{
			get
			{
				return this._C_TransactionTime;
			}
			set
			{
				if ((this._C_TransactionTime != value))
				{
					this.OnC_TransactionTimeChanging(value);
					this.SendPropertyChanging();
					this._C_TransactionTime = value;
					this.SendPropertyChanged("C_TransactionTime");
					this.OnC_TransactionTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_movietickets")]
	public partial class T_pv_movietickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private decimal _C_ticketspurchased;
		
		private System.DateTime _C_transactiontime;
		
		private string _C_moviename;
		
		private decimal _C_popcorns;
		
		private decimal _C_PerTicket;
		
		private decimal _C_PerPopcornBag;
		
		private string _C_payer;
		
		private string _C_transactionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ticketspurchasedChanging(decimal value);
    partial void OnC_ticketspurchasedChanged();
    partial void OnC_transactiontimeChanging(System.DateTime value);
    partial void OnC_transactiontimeChanged();
    partial void OnC_movienameChanging(string value);
    partial void OnC_movienameChanged();
    partial void OnC_popcornsChanging(decimal value);
    partial void OnC_popcornsChanged();
    partial void OnC_PerTicketChanging(decimal value);
    partial void OnC_PerTicketChanged();
    partial void OnC_PerPopcornBagChanging(decimal value);
    partial void OnC_PerPopcornBagChanged();
    partial void OnC_payerChanging(string value);
    partial void OnC_payerChanged();
    partial void OnC_transactionIDChanging(string value);
    partial void OnC_transactionIDChanged();
    #endregion
		
		public T_pv_movietickets()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ticketspurchased", Storage="_C_ticketspurchased", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ticketspurchased
		{
			get
			{
				return this._C_ticketspurchased;
			}
			set
			{
				if ((this._C_ticketspurchased != value))
				{
					this.OnC_ticketspurchasedChanging(value);
					this.SendPropertyChanging();
					this._C_ticketspurchased = value;
					this.SendPropertyChanged("C_ticketspurchased");
					this.OnC_ticketspurchasedChanged();
				}
			}
		}
		
		[Column(Name="c_transactiontime", Storage="_C_transactiontime", DbType="DateTime NOT NULL")]
		public System.DateTime C_transactiontime
		{
			get
			{
				return this._C_transactiontime;
			}
			set
			{
				if ((this._C_transactiontime != value))
				{
					this.OnC_transactiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_transactiontime = value;
					this.SendPropertyChanged("C_transactiontime");
					this.OnC_transactiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_moviename", Storage="_C_moviename", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_moviename
		{
			get
			{
				return this._C_moviename;
			}
			set
			{
				if ((this._C_moviename != value))
				{
					this.OnC_movienameChanging(value);
					this.SendPropertyChanging();
					this._C_moviename = value;
					this.SendPropertyChanged("C_moviename");
					this.OnC_movienameChanged();
				}
			}
		}
		
		[Column(Name="c_popcorns", Storage="_C_popcorns", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_popcorns
		{
			get
			{
				return this._C_popcorns;
			}
			set
			{
				if ((this._C_popcorns != value))
				{
					this.OnC_popcornsChanging(value);
					this.SendPropertyChanging();
					this._C_popcorns = value;
					this.SendPropertyChanged("C_popcorns");
					this.OnC_popcornsChanged();
				}
			}
		}
		
		[Column(Name="c_PerTicket", Storage="_C_PerTicket", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerTicket
		{
			get
			{
				return this._C_PerTicket;
			}
			set
			{
				if ((this._C_PerTicket != value))
				{
					this.OnC_PerTicketChanging(value);
					this.SendPropertyChanging();
					this._C_PerTicket = value;
					this.SendPropertyChanged("C_PerTicket");
					this.OnC_PerTicketChanged();
				}
			}
		}
		
		[Column(Name="c_PerPopcornBag", Storage="_C_PerPopcornBag", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerPopcornBag
		{
			get
			{
				return this._C_PerPopcornBag;
			}
			set
			{
				if ((this._C_PerPopcornBag != value))
				{
					this.OnC_PerPopcornBagChanging(value);
					this.SendPropertyChanging();
					this._C_PerPopcornBag = value;
					this.SendPropertyChanged("C_PerPopcornBag");
					this.OnC_PerPopcornBagChanged();
				}
			}
		}
		
		[Column(Name="c_payer", Storage="_C_payer", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_payer
		{
			get
			{
				return this._C_payer;
			}
			set
			{
				if ((this._C_payer != value))
				{
					this.OnC_payerChanging(value);
					this.SendPropertyChanging();
					this._C_payer = value;
					this.SendPropertyChanged("C_payer");
					this.OnC_payerChanged();
				}
			}
		}
		
		[Column(Name="c_transactionID", Storage="_C_transactionID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_transactionID
		{
			get
			{
				return this._C_transactionID;
			}
			set
			{
				if ((this._C_transactionID != value))
				{
					this.OnC_transactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_transactionID = value;
					this.SendPropertyChanged("C_transactionID");
					this.OnC_transactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_movietickets_temp")]
	public partial class T_pv_movietickets_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private decimal _C_ticketspurchased;
		
		private System.DateTime _C_transactiontime;
		
		private string _C_moviename;
		
		private decimal _C_popcorns;
		
		private string _C_transactionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ticketspurchasedChanging(decimal value);
    partial void OnC_ticketspurchasedChanged();
    partial void OnC_transactiontimeChanging(System.DateTime value);
    partial void OnC_transactiontimeChanged();
    partial void OnC_movienameChanging(string value);
    partial void OnC_movienameChanged();
    partial void OnC_popcornsChanging(decimal value);
    partial void OnC_popcornsChanged();
    partial void OnC_transactionIDChanging(string value);
    partial void OnC_transactionIDChanged();
    #endregion
		
		public T_pv_movietickets_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ticketspurchased", Storage="_C_ticketspurchased", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ticketspurchased
		{
			get
			{
				return this._C_ticketspurchased;
			}
			set
			{
				if ((this._C_ticketspurchased != value))
				{
					this.OnC_ticketspurchasedChanging(value);
					this.SendPropertyChanging();
					this._C_ticketspurchased = value;
					this.SendPropertyChanged("C_ticketspurchased");
					this.OnC_ticketspurchasedChanged();
				}
			}
		}
		
		[Column(Name="c_transactiontime", Storage="_C_transactiontime", DbType="DateTime NOT NULL")]
		public System.DateTime C_transactiontime
		{
			get
			{
				return this._C_transactiontime;
			}
			set
			{
				if ((this._C_transactiontime != value))
				{
					this.OnC_transactiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_transactiontime = value;
					this.SendPropertyChanged("C_transactiontime");
					this.OnC_transactiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_moviename", Storage="_C_moviename", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_moviename
		{
			get
			{
				return this._C_moviename;
			}
			set
			{
				if ((this._C_moviename != value))
				{
					this.OnC_movienameChanging(value);
					this.SendPropertyChanging();
					this._C_moviename = value;
					this.SendPropertyChanged("C_moviename");
					this.OnC_movienameChanged();
				}
			}
		}
		
		[Column(Name="c_popcorns", Storage="_C_popcorns", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_popcorns
		{
			get
			{
				return this._C_popcorns;
			}
			set
			{
				if ((this._C_popcorns != value))
				{
					this.OnC_popcornsChanging(value);
					this.SendPropertyChanging();
					this._C_popcorns = value;
					this.SendPropertyChanged("C_popcorns");
					this.OnC_popcornsChanged();
				}
			}
		}
		
		[Column(Name="c_transactionID", Storage="_C_transactionID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_transactionID
		{
			get
			{
				return this._C_transactionID;
			}
			set
			{
				if ((this._C_transactionID != value))
				{
					this.OnC_transactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_transactionID = value;
					this.SendPropertyChanged("C_transactionID");
					this.OnC_transactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_MultiBucketDiscount")]
	public partial class T_pv_MultiBucketDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _C_dummyProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    #endregion
		
		public T_pv_MultiBucketDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_MultiBucketPricing")]
	public partial class T_pv_MultiBucketPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _C_dummyProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    #endregion
		
		public T_pv_MultiBucketPricing()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_NonRecurringCharge")]
	public partial class T_pv_NonRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private int _C_NRCEventType;
		
		private System.DateTime _C_NRCIntervalStart;
		
		private System.DateTime _C_NRCIntervalEnd;
		
		private System.DateTime _C_NRCIntervalSubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_NRCIntervalSubscriptionEnd;
		
		private int _C__SubscriptionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_NRCEventTypeChanging(int value);
    partial void OnC_NRCEventTypeChanged();
    partial void OnC_NRCIntervalStartChanging(System.DateTime value);
    partial void OnC_NRCIntervalStartChanged();
    partial void OnC_NRCIntervalEndChanging(System.DateTime value);
    partial void OnC_NRCIntervalEndChanged();
    partial void OnC_NRCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_NRCIntervalSubscriptionStartChanged();
    partial void OnC_NRCIntervalSubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_NRCIntervalSubscriptionEndChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    #endregion
		
		public T_pv_NonRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_NRCEventType", Storage="_C_NRCEventType", DbType="Int NOT NULL")]
		public int C_NRCEventType
		{
			get
			{
				return this._C_NRCEventType;
			}
			set
			{
				if ((this._C_NRCEventType != value))
				{
					this.OnC_NRCEventTypeChanging(value);
					this.SendPropertyChanging();
					this._C_NRCEventType = value;
					this.SendPropertyChanged("C_NRCEventType");
					this.OnC_NRCEventTypeChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalStart", Storage="_C_NRCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalStart
		{
			get
			{
				return this._C_NRCIntervalStart;
			}
			set
			{
				if ((this._C_NRCIntervalStart != value))
				{
					this.OnC_NRCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalStart = value;
					this.SendPropertyChanged("C_NRCIntervalStart");
					this.OnC_NRCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalEnd", Storage="_C_NRCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalEnd
		{
			get
			{
				return this._C_NRCIntervalEnd;
			}
			set
			{
				if ((this._C_NRCIntervalEnd != value))
				{
					this.OnC_NRCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalEnd = value;
					this.SendPropertyChanged("C_NRCIntervalEnd");
					this.OnC_NRCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalSubscriptionStart", Storage="_C_NRCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalSubscriptionStart
		{
			get
			{
				return this._C_NRCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_NRCIntervalSubscriptionStart != value))
				{
					this.OnC_NRCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_NRCIntervalSubscriptionStart");
					this.OnC_NRCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalSubscriptionEnd", Storage="_C_NRCIntervalSubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_NRCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_NRCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_NRCIntervalSubscriptionEnd != value))
				{
					this.OnC_NRCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_NRCIntervalSubscriptionEnd");
					this.OnC_NRCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_NonStandardCharge")]
	public partial class T_pv_NonStandardCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private string _C_Status;
		
		private string _C_ChargeCurrency;
		
		private string _C_GLCode;
		
		private int _C_IssuerAccountId;
		
		private int _C_ReasonCode;
		
		private System.Nullable<int> _C_AdditionalCode;
		
		private System.Nullable<decimal> _C_ChargeTaxAmount;
		
		private decimal _C_ChargeAmount;
		
		private string _C_ExternalChargeId;
		
		private long _C_InternalChargeId;
		
		private System.Nullable<int> _C_NumUnits;
		
		private decimal _C_Rate;
		
		private System.Nullable<decimal> _C_AdditionalRate;
		
		private int _C_SubscriberAccountID;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.DateTime _C_IssueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_ChargeCurrencyChanging(string value);
    partial void OnC_ChargeCurrencyChanged();
    partial void OnC_GLCodeChanging(string value);
    partial void OnC_GLCodeChanged();
    partial void OnC_IssuerAccountIdChanging(int value);
    partial void OnC_IssuerAccountIdChanged();
    partial void OnC_ReasonCodeChanging(int value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_AdditionalCodeChanging(System.Nullable<int> value);
    partial void OnC_AdditionalCodeChanged();
    partial void OnC_ChargeTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_ChargeTaxAmountChanged();
    partial void OnC_ChargeAmountChanging(decimal value);
    partial void OnC_ChargeAmountChanged();
    partial void OnC_ExternalChargeIdChanging(string value);
    partial void OnC_ExternalChargeIdChanged();
    partial void OnC_InternalChargeIdChanging(long value);
    partial void OnC_InternalChargeIdChanged();
    partial void OnC_NumUnitsChanging(System.Nullable<int> value);
    partial void OnC_NumUnitsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_AdditionalRateChanging(System.Nullable<decimal> value);
    partial void OnC_AdditionalRateChanged();
    partial void OnC_SubscriberAccountIDChanging(int value);
    partial void OnC_SubscriberAccountIDChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC_IssueTimeChanging(System.DateTime value);
    partial void OnC_IssueTimeChanged();
    #endregion
		
		public T_pv_NonStandardCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(100)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeCurrency", Storage="_C_ChargeCurrency", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string C_ChargeCurrency
		{
			get
			{
				return this._C_ChargeCurrency;
			}
			set
			{
				if ((this._C_ChargeCurrency != value))
				{
					this.OnC_ChargeCurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeCurrency = value;
					this.SendPropertyChanged("C_ChargeCurrency");
					this.OnC_ChargeCurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_GLCode", Storage="_C_GLCode", DbType="NVarChar(10)")]
		public string C_GLCode
		{
			get
			{
				return this._C_GLCode;
			}
			set
			{
				if ((this._C_GLCode != value))
				{
					this.OnC_GLCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GLCode = value;
					this.SendPropertyChanged("C_GLCode");
					this.OnC_GLCodeChanged();
				}
			}
		}
		
		[Column(Name="c_IssuerAccountId", Storage="_C_IssuerAccountId", DbType="Int NOT NULL")]
		public int C_IssuerAccountId
		{
			get
			{
				return this._C_IssuerAccountId;
			}
			set
			{
				if ((this._C_IssuerAccountId != value))
				{
					this.OnC_IssuerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_IssuerAccountId = value;
					this.SendPropertyChanged("C_IssuerAccountId");
					this.OnC_IssuerAccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int NOT NULL")]
		public int C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalCode", Storage="_C_AdditionalCode", DbType="Int")]
		public System.Nullable<int> C_AdditionalCode
		{
			get
			{
				return this._C_AdditionalCode;
			}
			set
			{
				if ((this._C_AdditionalCode != value))
				{
					this.OnC_AdditionalCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalCode = value;
					this.SendPropertyChanged("C_AdditionalCode");
					this.OnC_AdditionalCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeTaxAmount", Storage="_C_ChargeTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_ChargeTaxAmount
		{
			get
			{
				return this._C_ChargeTaxAmount;
			}
			set
			{
				if ((this._C_ChargeTaxAmount != value))
				{
					this.OnC_ChargeTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeTaxAmount = value;
					this.SendPropertyChanged("C_ChargeTaxAmount");
					this.OnC_ChargeTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeAmount", Storage="_C_ChargeAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ChargeAmount
		{
			get
			{
				return this._C_ChargeAmount;
			}
			set
			{
				if ((this._C_ChargeAmount != value))
				{
					this.OnC_ChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAmount = value;
					this.SendPropertyChanged("C_ChargeAmount");
					this.OnC_ChargeAmountChanged();
				}
			}
		}
		
		[Column(Name="c_ExternalChargeId", Storage="_C_ExternalChargeId", DbType="NVarChar(10)")]
		public string C_ExternalChargeId
		{
			get
			{
				return this._C_ExternalChargeId;
			}
			set
			{
				if ((this._C_ExternalChargeId != value))
				{
					this.OnC_ExternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_ExternalChargeId = value;
					this.SendPropertyChanged("C_ExternalChargeId");
					this.OnC_ExternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_InternalChargeId", Storage="_C_InternalChargeId", DbType="BigInt NOT NULL")]
		public long C_InternalChargeId
		{
			get
			{
				return this._C_InternalChargeId;
			}
			set
			{
				if ((this._C_InternalChargeId != value))
				{
					this.OnC_InternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_InternalChargeId = value;
					this.SendPropertyChanged("C_InternalChargeId");
					this.OnC_InternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnits", Storage="_C_NumUnits", DbType="Int")]
		public System.Nullable<int> C_NumUnits
		{
			get
			{
				return this._C_NumUnits;
			}
			set
			{
				if ((this._C_NumUnits != value))
				{
					this.OnC_NumUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnits = value;
					this.SendPropertyChanged("C_NumUnits");
					this.OnC_NumUnitsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalRate", Storage="_C_AdditionalRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_AdditionalRate
		{
			get
			{
				return this._C_AdditionalRate;
			}
			set
			{
				if ((this._C_AdditionalRate != value))
				{
					this.OnC_AdditionalRateChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalRate = value;
					this.SendPropertyChanged("C_AdditionalRate");
					this.OnC_AdditionalRateChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int NOT NULL")]
		public int C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_IssueTime", Storage="_C_IssueTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_IssueTime
		{
			get
			{
				return this._C_IssueTime;
			}
			set
			{
				if ((this._C_IssueTime != value))
				{
					this.OnC_IssueTimeChanging(value);
					this.SendPropertyChanging();
					this._C_IssueTime = value;
					this.SendPropertyChanged("C_IssueTime");
					this.OnC_IssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_NonStandardChargeRequest")]
	public partial class T_pv_NonStandardChargeRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private string _C_Status;
		
		private string _C_ChargeCurrency;
		
		private string _C_GLCode;
		
		private int _C_IssuerAccountId;
		
		private int _C_ReasonCode;
		
		private System.Nullable<int> _C_AdditionalCode;
		
		private System.Nullable<decimal> _C_ChargeTaxAmount;
		
		private decimal _C_ChargeAmount;
		
		private long _C_InternalChargeID;
		
		private string _C_ExternalChargeID;
		
		private System.Nullable<int> _C_NumUnits;
		
		private decimal _C_Rate;
		
		private System.Nullable<decimal> _C_AdditionalRate;
		
		private int _C_SubscriberAccountID;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.DateTime _C_IssueTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_ChargeCurrencyChanging(string value);
    partial void OnC_ChargeCurrencyChanged();
    partial void OnC_GLCodeChanging(string value);
    partial void OnC_GLCodeChanged();
    partial void OnC_IssuerAccountIdChanging(int value);
    partial void OnC_IssuerAccountIdChanged();
    partial void OnC_ReasonCodeChanging(int value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_AdditionalCodeChanging(System.Nullable<int> value);
    partial void OnC_AdditionalCodeChanged();
    partial void OnC_ChargeTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnC_ChargeTaxAmountChanged();
    partial void OnC_ChargeAmountChanging(decimal value);
    partial void OnC_ChargeAmountChanged();
    partial void OnC_InternalChargeIDChanging(long value);
    partial void OnC_InternalChargeIDChanged();
    partial void OnC_ExternalChargeIDChanging(string value);
    partial void OnC_ExternalChargeIDChanged();
    partial void OnC_NumUnitsChanging(System.Nullable<int> value);
    partial void OnC_NumUnitsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_AdditionalRateChanging(System.Nullable<decimal> value);
    partial void OnC_AdditionalRateChanged();
    partial void OnC_SubscriberAccountIDChanging(int value);
    partial void OnC_SubscriberAccountIDChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC_IssueTimeChanging(System.DateTime value);
    partial void OnC_IssueTimeChanged();
    #endregion
		
		public T_pv_NonStandardChargeRequest()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(100)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeCurrency", Storage="_C_ChargeCurrency", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string C_ChargeCurrency
		{
			get
			{
				return this._C_ChargeCurrency;
			}
			set
			{
				if ((this._C_ChargeCurrency != value))
				{
					this.OnC_ChargeCurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeCurrency = value;
					this.SendPropertyChanged("C_ChargeCurrency");
					this.OnC_ChargeCurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_GLCode", Storage="_C_GLCode", DbType="NVarChar(10)")]
		public string C_GLCode
		{
			get
			{
				return this._C_GLCode;
			}
			set
			{
				if ((this._C_GLCode != value))
				{
					this.OnC_GLCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GLCode = value;
					this.SendPropertyChanged("C_GLCode");
					this.OnC_GLCodeChanged();
				}
			}
		}
		
		[Column(Name="c_IssuerAccountId", Storage="_C_IssuerAccountId", DbType="Int NOT NULL")]
		public int C_IssuerAccountId
		{
			get
			{
				return this._C_IssuerAccountId;
			}
			set
			{
				if ((this._C_IssuerAccountId != value))
				{
					this.OnC_IssuerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_IssuerAccountId = value;
					this.SendPropertyChanged("C_IssuerAccountId");
					this.OnC_IssuerAccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int NOT NULL")]
		public int C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalCode", Storage="_C_AdditionalCode", DbType="Int")]
		public System.Nullable<int> C_AdditionalCode
		{
			get
			{
				return this._C_AdditionalCode;
			}
			set
			{
				if ((this._C_AdditionalCode != value))
				{
					this.OnC_AdditionalCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalCode = value;
					this.SendPropertyChanged("C_AdditionalCode");
					this.OnC_AdditionalCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeTaxAmount", Storage="_C_ChargeTaxAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_ChargeTaxAmount
		{
			get
			{
				return this._C_ChargeTaxAmount;
			}
			set
			{
				if ((this._C_ChargeTaxAmount != value))
				{
					this.OnC_ChargeTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeTaxAmount = value;
					this.SendPropertyChanged("C_ChargeTaxAmount");
					this.OnC_ChargeTaxAmountChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeAmount", Storage="_C_ChargeAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ChargeAmount
		{
			get
			{
				return this._C_ChargeAmount;
			}
			set
			{
				if ((this._C_ChargeAmount != value))
				{
					this.OnC_ChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeAmount = value;
					this.SendPropertyChanged("C_ChargeAmount");
					this.OnC_ChargeAmountChanged();
				}
			}
		}
		
		[Column(Name="c_InternalChargeID", Storage="_C_InternalChargeID", DbType="BigInt NOT NULL")]
		public long C_InternalChargeID
		{
			get
			{
				return this._C_InternalChargeID;
			}
			set
			{
				if ((this._C_InternalChargeID != value))
				{
					this.OnC_InternalChargeIDChanging(value);
					this.SendPropertyChanging();
					this._C_InternalChargeID = value;
					this.SendPropertyChanged("C_InternalChargeID");
					this.OnC_InternalChargeIDChanged();
				}
			}
		}
		
		[Column(Name="c_ExternalChargeID", Storage="_C_ExternalChargeID", DbType="NVarChar(10)")]
		public string C_ExternalChargeID
		{
			get
			{
				return this._C_ExternalChargeID;
			}
			set
			{
				if ((this._C_ExternalChargeID != value))
				{
					this.OnC_ExternalChargeIDChanging(value);
					this.SendPropertyChanging();
					this._C_ExternalChargeID = value;
					this.SendPropertyChanged("C_ExternalChargeID");
					this.OnC_ExternalChargeIDChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnits", Storage="_C_NumUnits", DbType="Int")]
		public System.Nullable<int> C_NumUnits
		{
			get
			{
				return this._C_NumUnits;
			}
			set
			{
				if ((this._C_NumUnits != value))
				{
					this.OnC_NumUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnits = value;
					this.SendPropertyChanged("C_NumUnits");
					this.OnC_NumUnitsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalRate", Storage="_C_AdditionalRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_AdditionalRate
		{
			get
			{
				return this._C_AdditionalRate;
			}
			set
			{
				if ((this._C_AdditionalRate != value))
				{
					this.OnC_AdditionalRateChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalRate = value;
					this.SendPropertyChanged("C_AdditionalRate");
					this.OnC_AdditionalRateChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int NOT NULL")]
		public int C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_IssueTime", Storage="_C_IssueTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_IssueTime
		{
			get
			{
				return this._C_IssueTime;
			}
			set
			{
				if ((this._C_IssueTime != value))
				{
					this.OnC_IssueTimeChanging(value);
					this.SendPropertyChanging();
					this._C_IssueTime = value;
					this.SendPropertyChanged("C_IssueTime");
					this.OnC_IssueTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_Payment")]
	public partial class T_pv_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private System.Nullable<System.DateTime> _C_EventDate;
		
		private string _C_Source;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private System.Nullable<int> _C_PaymentMethod;
		
		private System.Nullable<int> _C_CCType;
		
		private string _C_CheckOrCardNumber;
		
		private string _C_ReferenceID;
		
		private System.Nullable<int> _C_TargetInterval;
		
		private string _C_ARBatchID;
		
		private string _C_PaymentTxnID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_EventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EventDateChanged();
    partial void OnC_SourceChanging(string value);
    partial void OnC_SourceChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_CCTypeChanging(System.Nullable<int> value);
    partial void OnC_CCTypeChanged();
    partial void OnC_CheckOrCardNumberChanging(string value);
    partial void OnC_CheckOrCardNumberChanged();
    partial void OnC_ReferenceIDChanging(string value);
    partial void OnC_ReferenceIDChanged();
    partial void OnC_TargetIntervalChanging(System.Nullable<int> value);
    partial void OnC_TargetIntervalChanged();
    partial void OnC_ARBatchIDChanging(string value);
    partial void OnC_ARBatchIDChanged();
    partial void OnC_PaymentTxnIDChanging(string value);
    partial void OnC_PaymentTxnIDChanged();
    #endregion
		
		public T_pv_Payment()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_EventDate", Storage="_C_EventDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EventDate
		{
			get
			{
				return this._C_EventDate;
			}
			set
			{
				if ((this._C_EventDate != value))
				{
					this.OnC_EventDateChanging(value);
					this.SendPropertyChanging();
					this._C_EventDate = value;
					this.SendPropertyChanged("C_EventDate");
					this.OnC_EventDateChanged();
				}
			}
		}
		
		[Column(Name="c_Source", Storage="_C_Source", DbType="NVarChar(2)")]
		public string C_Source
		{
			get
			{
				return this._C_Source;
			}
			set
			{
				if ((this._C_Source != value))
				{
					this.OnC_SourceChanging(value);
					this.SendPropertyChanging();
					this._C_Source = value;
					this.SendPropertyChanged("C_Source");
					this.OnC_SourceChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int")]
		public System.Nullable<int> C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_CCType", Storage="_C_CCType", DbType="Int")]
		public System.Nullable<int> C_CCType
		{
			get
			{
				return this._C_CCType;
			}
			set
			{
				if ((this._C_CCType != value))
				{
					this.OnC_CCTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CCType = value;
					this.SendPropertyChanged("C_CCType");
					this.OnC_CCTypeChanged();
				}
			}
		}
		
		[Column(Name="c_CheckOrCardNumber", Storage="_C_CheckOrCardNumber", DbType="NVarChar(20)")]
		public string C_CheckOrCardNumber
		{
			get
			{
				return this._C_CheckOrCardNumber;
			}
			set
			{
				if ((this._C_CheckOrCardNumber != value))
				{
					this.OnC_CheckOrCardNumberChanging(value);
					this.SendPropertyChanging();
					this._C_CheckOrCardNumber = value;
					this.SendPropertyChanged("C_CheckOrCardNumber");
					this.OnC_CheckOrCardNumberChanged();
				}
			}
		}
		
		[Column(Name="c_ReferenceID", Storage="_C_ReferenceID", DbType="NVarChar(50)")]
		public string C_ReferenceID
		{
			get
			{
				return this._C_ReferenceID;
			}
			set
			{
				if ((this._C_ReferenceID != value))
				{
					this.OnC_ReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ReferenceID = value;
					this.SendPropertyChanged("C_ReferenceID");
					this.OnC_ReferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetInterval", Storage="_C_TargetInterval", DbType="Int")]
		public System.Nullable<int> C_TargetInterval
		{
			get
			{
				return this._C_TargetInterval;
			}
			set
			{
				if ((this._C_TargetInterval != value))
				{
					this.OnC_TargetIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_TargetInterval = value;
					this.SendPropertyChanged("C_TargetInterval");
					this.OnC_TargetIntervalChanged();
				}
			}
		}
		
		[Column(Name="c_ARBatchID", Storage="_C_ARBatchID", DbType="NVarChar(15)")]
		public string C_ARBatchID
		{
			get
			{
				return this._C_ARBatchID;
			}
			set
			{
				if ((this._C_ARBatchID != value))
				{
					this.OnC_ARBatchIDChanging(value);
					this.SendPropertyChanging();
					this._C_ARBatchID = value;
					this.SendPropertyChanged("C_ARBatchID");
					this.OnC_ARBatchIDChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentTxnID", Storage="_C_PaymentTxnID", DbType="NVarChar(120)")]
		public string C_PaymentTxnID
		{
			get
			{
				return this._C_PaymentTxnID;
			}
			set
			{
				if ((this._C_PaymentTxnID != value))
				{
					this.OnC_PaymentTxnIDChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentTxnID = value;
					this.SendPropertyChanged("C_PaymentTxnID");
					this.OnC_PaymentTxnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_PaymentDetails")]
	public partial class T_pv_PaymentDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_InvoiceNum;
		
		private string _C_PONumber;
		
		private System.Nullable<System.DateTime> _C_InvoiceDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_InvoiceNumChanging(string value);
    partial void OnC_InvoiceNumChanged();
    partial void OnC_PONumberChanging(string value);
    partial void OnC_PONumberChanged();
    partial void OnC_InvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_InvoiceDateChanged();
    #endregion
		
		public T_pv_PaymentDetails()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceNum", Storage="_C_InvoiceNum", DbType="NVarChar(40)")]
		public string C_InvoiceNum
		{
			get
			{
				return this._C_InvoiceNum;
			}
			set
			{
				if ((this._C_InvoiceNum != value))
				{
					this.OnC_InvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceNum = value;
					this.SendPropertyChanged("C_InvoiceNum");
					this.OnC_InvoiceNumChanged();
				}
			}
		}
		
		[Column(Name="c_PONumber", Storage="_C_PONumber", DbType="NVarChar(40)")]
		public string C_PONumber
		{
			get
			{
				return this._C_PONumber;
			}
			set
			{
				if ((this._C_PONumber != value))
				{
					this.OnC_PONumberChanging(value);
					this.SendPropertyChanging();
					this._C_PONumber = value;
					this.SendPropertyChanged("C_PONumber");
					this.OnC_PONumberChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceDate", Storage="_C_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_InvoiceDate
		{
			get
			{
				return this._C_InvoiceDate;
			}
			set
			{
				if ((this._C_InvoiceDate != value))
				{
					this.OnC_InvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceDate = value;
					this.SendPropertyChanged("C_InvoiceDate");
					this.OnC_InvoiceDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_PercentDiscount")]
	public partial class T_pv_PercentDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_Qualifier;
		
		private System.Nullable<decimal> _C_Target;
		
		private decimal _C_DiscountPercent;
		
		private string _C_GroupSubscriptionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_QualifierChanging(System.Nullable<decimal> value);
    partial void OnC_QualifierChanged();
    partial void OnC_TargetChanging(System.Nullable<decimal> value);
    partial void OnC_TargetChanged();
    partial void OnC_DiscountPercentChanging(decimal value);
    partial void OnC_DiscountPercentChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    #endregion
		
		public T_pv_PercentDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_Qualifier", Storage="_C_Qualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Qualifier
		{
			get
			{
				return this._C_Qualifier;
			}
			set
			{
				if ((this._C_Qualifier != value))
				{
					this.OnC_QualifierChanging(value);
					this.SendPropertyChanging();
					this._C_Qualifier = value;
					this.SendPropertyChanged("C_Qualifier");
					this.OnC_QualifierChanged();
				}
			}
		}
		
		[Column(Name="c_Target", Storage="_C_Target", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Target
		{
			get
			{
				return this._C_Target;
			}
			set
			{
				if ((this._C_Target != value))
				{
					this.OnC_TargetChanging(value);
					this.SendPropertyChanging();
					this._C_Target = value;
					this.SendPropertyChanged("C_Target");
					this.OnC_TargetChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercent", Storage="_C_DiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DiscountPercent
		{
			get
			{
				return this._C_DiscountPercent;
			}
			set
			{
				if ((this._C_DiscountPercent != value))
				{
					this.OnC_DiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercent = value;
					this.SendPropertyChanged("C_DiscountPercent");
					this.OnC_DiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(100)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_PercentDiscount_NoCond")]
	public partial class T_pv_PercentDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_Target;
		
		private decimal _C_DiscountPercent;
		
		private string _C_GroupSubscriptionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_TargetChanging(System.Nullable<decimal> value);
    partial void OnC_TargetChanged();
    partial void OnC_DiscountPercentChanging(decimal value);
    partial void OnC_DiscountPercentChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    #endregion
		
		public T_pv_PercentDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_Target", Storage="_C_Target", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Target
		{
			get
			{
				return this._C_Target;
			}
			set
			{
				if ((this._C_Target != value))
				{
					this.OnC_TargetChanging(value);
					this.SendPropertyChanging();
					this._C_Target = value;
					this.SendPropertyChanged("C_Target");
					this.OnC_TargetChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountPercent", Storage="_C_DiscountPercent", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DiscountPercent
		{
			get
			{
				return this._C_DiscountPercent;
			}
			set
			{
				if ((this._C_DiscountPercent != value))
				{
					this.OnC_DiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountPercent = value;
					this.SendPropertyChanged("C_DiscountPercent");
					this.OnC_DiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(100)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_SingleBucketPricing")]
	public partial class T_pv_SingleBucketPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.Nullable<int> _C_dummyProperty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    #endregion
		
		public T_pv_SingleBucketPricing()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_smokeaggrcnt")]
	public partial class T_pv_smokeaggrcnt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private decimal _C_TotalAmount;
		
		private long _C__FirstPassID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    #endregion
		
		public T_pv_smokeaggrcnt()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_smokeaggrcnt_temp")]
	public partial class T_pv_smokeaggrcnt_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_pv_smokeaggrcnt_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_smokeaggrdec")]
	public partial class T_pv_smokeaggrdec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private decimal _C_TotalAmount;
		
		private long _C__FirstPassID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    #endregion
		
		public T_pv_smokeaggrdec()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_smokeaggrdec_temp")]
	public partial class T_pv_smokeaggrdec_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    #endregion
		
		public T_pv_smokeaggrdec_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_smoketestpriceableitem")]
	public partial class T_pv_smoketestpriceableitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private decimal _C_ticketspurchased;
		
		private System.DateTime _C_transactiontime;
		
		private string _C_moviename;
		
		private decimal _C_popcorns;
		
		private decimal _C_PerTicket;
		
		private decimal _C_PerPopcornBag;
		
		private string _C_payer;
		
		private string _C_transactionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_ticketspurchasedChanging(decimal value);
    partial void OnC_ticketspurchasedChanged();
    partial void OnC_transactiontimeChanging(System.DateTime value);
    partial void OnC_transactiontimeChanged();
    partial void OnC_movienameChanging(string value);
    partial void OnC_movienameChanged();
    partial void OnC_popcornsChanging(decimal value);
    partial void OnC_popcornsChanged();
    partial void OnC_PerTicketChanging(decimal value);
    partial void OnC_PerTicketChanged();
    partial void OnC_PerPopcornBagChanging(decimal value);
    partial void OnC_PerPopcornBagChanged();
    partial void OnC_payerChanging(string value);
    partial void OnC_payerChanged();
    partial void OnC_transactionIDChanging(string value);
    partial void OnC_transactionIDChanged();
    #endregion
		
		public T_pv_smoketestpriceableitem()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_ticketspurchased", Storage="_C_ticketspurchased", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ticketspurchased
		{
			get
			{
				return this._C_ticketspurchased;
			}
			set
			{
				if ((this._C_ticketspurchased != value))
				{
					this.OnC_ticketspurchasedChanging(value);
					this.SendPropertyChanging();
					this._C_ticketspurchased = value;
					this.SendPropertyChanged("C_ticketspurchased");
					this.OnC_ticketspurchasedChanged();
				}
			}
		}
		
		[Column(Name="c_transactiontime", Storage="_C_transactiontime", DbType="DateTime NOT NULL")]
		public System.DateTime C_transactiontime
		{
			get
			{
				return this._C_transactiontime;
			}
			set
			{
				if ((this._C_transactiontime != value))
				{
					this.OnC_transactiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_transactiontime = value;
					this.SendPropertyChanged("C_transactiontime");
					this.OnC_transactiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_moviename", Storage="_C_moviename", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_moviename
		{
			get
			{
				return this._C_moviename;
			}
			set
			{
				if ((this._C_moviename != value))
				{
					this.OnC_movienameChanging(value);
					this.SendPropertyChanging();
					this._C_moviename = value;
					this.SendPropertyChanged("C_moviename");
					this.OnC_movienameChanged();
				}
			}
		}
		
		[Column(Name="c_popcorns", Storage="_C_popcorns", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_popcorns
		{
			get
			{
				return this._C_popcorns;
			}
			set
			{
				if ((this._C_popcorns != value))
				{
					this.OnC_popcornsChanging(value);
					this.SendPropertyChanging();
					this._C_popcorns = value;
					this.SendPropertyChanged("C_popcorns");
					this.OnC_popcornsChanged();
				}
			}
		}
		
		[Column(Name="c_PerTicket", Storage="_C_PerTicket", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerTicket
		{
			get
			{
				return this._C_PerTicket;
			}
			set
			{
				if ((this._C_PerTicket != value))
				{
					this.OnC_PerTicketChanging(value);
					this.SendPropertyChanging();
					this._C_PerTicket = value;
					this.SendPropertyChanged("C_PerTicket");
					this.OnC_PerTicketChanged();
				}
			}
		}
		
		[Column(Name="c_PerPopcornBag", Storage="_C_PerPopcornBag", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_PerPopcornBag
		{
			get
			{
				return this._C_PerPopcornBag;
			}
			set
			{
				if ((this._C_PerPopcornBag != value))
				{
					this.OnC_PerPopcornBagChanging(value);
					this.SendPropertyChanging();
					this._C_PerPopcornBag = value;
					this.SendPropertyChanged("C_PerPopcornBag");
					this.OnC_PerPopcornBagChanged();
				}
			}
		}
		
		[Column(Name="c_payer", Storage="_C_payer", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_payer
		{
			get
			{
				return this._C_payer;
			}
			set
			{
				if ((this._C_payer != value))
				{
					this.OnC_payerChanging(value);
					this.SendPropertyChanging();
					this._C_payer = value;
					this.SendPropertyChanged("C_payer");
					this.OnC_payerChanged();
				}
			}
		}
		
		[Column(Name="c_transactionID", Storage="_C_transactionID", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_transactionID
		{
			get
			{
				return this._C_transactionID;
			}
			set
			{
				if ((this._C_transactionID != value))
				{
					this.OnC_transactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_transactionID = value;
					this.SendPropertyChanged("C_transactionID");
					this.OnC_transactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_SMSService")]
	public partial class T_pv_SMSService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_accountname;
		
		private string _C_Message;
		
		private string _C_Description;
		
		private string _C_MobileNumber;
		
		private int _C_SMStype;
		
		private string _C_IPAddress;
		
		private decimal _C_TotalAmount;
		
		private System.DateTime _C_Timesent;
		
		private string _C_SMSId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_MessageChanging(string value);
    partial void OnC_MessageChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_MobileNumberChanging(string value);
    partial void OnC_MobileNumberChanged();
    partial void OnC_SMStypeChanging(int value);
    partial void OnC_SMStypeChanged();
    partial void OnC_IPAddressChanging(string value);
    partial void OnC_IPAddressChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    partial void OnC_TimesentChanging(System.DateTime value);
    partial void OnC_TimesentChanged();
    partial void OnC_SMSIdChanging(string value);
    partial void OnC_SMSIdChanged();
    #endregion
		
		public T_pv_SMSService()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_Message", Storage="_C_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Message
		{
			get
			{
				return this._C_Message;
			}
			set
			{
				if ((this._C_Message != value))
				{
					this.OnC_MessageChanging(value);
					this.SendPropertyChanging();
					this._C_Message = value;
					this.SendPropertyChanged("C_Message");
					this.OnC_MessageChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(80)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_MobileNumber", Storage="_C_MobileNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string C_MobileNumber
		{
			get
			{
				return this._C_MobileNumber;
			}
			set
			{
				if ((this._C_MobileNumber != value))
				{
					this.OnC_MobileNumberChanging(value);
					this.SendPropertyChanging();
					this._C_MobileNumber = value;
					this.SendPropertyChanged("C_MobileNumber");
					this.OnC_MobileNumberChanged();
				}
			}
		}
		
		[Column(Name="c_SMStype", Storage="_C_SMStype", DbType="Int NOT NULL")]
		public int C_SMStype
		{
			get
			{
				return this._C_SMStype;
			}
			set
			{
				if ((this._C_SMStype != value))
				{
					this.OnC_SMStypeChanging(value);
					this.SendPropertyChanging();
					this._C_SMStype = value;
					this.SendPropertyChanged("C_SMStype");
					this.OnC_SMStypeChanged();
				}
			}
		}
		
		[Column(Name="c_IPAddress", Storage="_C_IPAddress", DbType="NVarChar(20)")]
		public string C_IPAddress
		{
			get
			{
				return this._C_IPAddress;
			}
			set
			{
				if ((this._C_IPAddress != value))
				{
					this.OnC_IPAddressChanging(value);
					this.SendPropertyChanging();
					this._C_IPAddress = value;
					this.SendPropertyChanged("C_IPAddress");
					this.OnC_IPAddressChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c_Timesent", Storage="_C_Timesent", DbType="DateTime NOT NULL")]
		public System.DateTime C_Timesent
		{
			get
			{
				return this._C_Timesent;
			}
			set
			{
				if ((this._C_Timesent != value))
				{
					this.OnC_TimesentChanging(value);
					this.SendPropertyChanging();
					this._C_Timesent = value;
					this.SendPropertyChanged("C_Timesent");
					this.OnC_TimesentChanged();
				}
			}
		}
		
		[Column(Name="c_SMSId", Storage="_C_SMSId", DbType="NVarChar(60)")]
		public string C_SMSId
		{
			get
			{
				return this._C_SMSId;
			}
			set
			{
				if ((this._C_SMSId != value))
				{
					this.OnC_SMSIdChanging(value);
					this.SendPropertyChanging();
					this._C_SMSId = value;
					this.SendPropertyChanged("C_SMSId");
					this.OnC_SMSIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songdownloads")]
	public partial class T_pv_songdownloads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_starttime;
		
		private decimal _C_TotalSongs;
		
		private decimal _C_TotalBytes;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_starttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_starttimeChanged();
    partial void OnC_TotalSongsChanging(decimal value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_TotalBytesChanging(decimal value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pv_songdownloads()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_starttime", Storage="_C_starttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_starttime
		{
			get
			{
				return this._C_starttime;
			}
			set
			{
				if ((this._C_starttime != value))
				{
					this.OnC_starttimeChanging(value);
					this.SendPropertyChanging();
					this._C_starttime = value;
					this.SendPropertyChanged("C_starttime");
					this.OnC_starttimeChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songdownloads_temp")]
	public partial class T_pv_songdownloads_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_starttime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_starttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_starttimeChanged();
    #endregion
		
		public T_pv_songdownloads_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_starttime", Storage="_C_starttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_starttime
		{
			get
			{
				return this._C_starttime;
			}
			set
			{
				if ((this._C_starttime != value))
				{
					this.OnC_starttimeChanging(value);
					this.SendPropertyChanging();
					this._C_starttime = value;
					this.SendPropertyChanged("C_starttime");
					this.OnC_starttimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songsession")]
	public partial class T_pv_songsession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_Duration;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_DurationChanging(decimal value);
    partial void OnC_DurationChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pv_songsession()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songsession_temp")]
	public partial class T_pv_songsession_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_Duration;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_DurationChanging(decimal value);
    partial void OnC_DurationChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    #endregion
		
		public T_pv_songsession_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songsessionchild")]
	public partial class T_pv_songsessionchild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private decimal _C_TotalSongs;
		
		private decimal _C_TotalBytes;
		
		private decimal _C_Rate;
		
		private decimal _C_ConnectionFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_TotalSongsChanging(decimal value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_TotalBytesChanging(decimal value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_ConnectionFeeChanging(decimal value);
    partial void OnC_ConnectionFeeChanged();
    #endregion
		
		public T_pv_songsessionchild()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectionFee", Storage="_C_ConnectionFee", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ConnectionFee
		{
			get
			{
				return this._C_ConnectionFee;
			}
			set
			{
				if ((this._C_ConnectionFee != value))
				{
					this.OnC_ConnectionFeeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectionFee = value;
					this.SendPropertyChanged("C_ConnectionFee");
					this.OnC_ConnectionFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_songsessionchild_temp")]
	public partial class T_pv_songsessionchild_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    #endregion
		
		public T_pv_songsessionchild_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_stocks")]
	public partial class T_pv_stocks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_symbol;
		
		private int _C_quantity;
		
		private System.DateTime _C_ordertime;
		
		private System.Nullable<System.DateTime> _C_executiontime;
		
		private string _C_tx_batchid;
		
		private System.Nullable<decimal> _C_price;
		
		private string _C_transactionid;
		
		private string _C_broker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_symbolChanging(string value);
    partial void OnC_symbolChanged();
    partial void OnC_quantityChanging(int value);
    partial void OnC_quantityChanged();
    partial void OnC_ordertimeChanging(System.DateTime value);
    partial void OnC_ordertimeChanged();
    partial void OnC_executiontimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_executiontimeChanged();
    partial void OnC_tx_batchidChanging(string value);
    partial void OnC_tx_batchidChanged();
    partial void OnC_priceChanging(System.Nullable<decimal> value);
    partial void OnC_priceChanged();
    partial void OnC_transactionidChanging(string value);
    partial void OnC_transactionidChanged();
    partial void OnC_brokerChanging(string value);
    partial void OnC_brokerChanged();
    #endregion
		
		public T_pv_stocks()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_symbol", Storage="_C_symbol", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string C_symbol
		{
			get
			{
				return this._C_symbol;
			}
			set
			{
				if ((this._C_symbol != value))
				{
					this.OnC_symbolChanging(value);
					this.SendPropertyChanging();
					this._C_symbol = value;
					this.SendPropertyChanged("C_symbol");
					this.OnC_symbolChanged();
				}
			}
		}
		
		[Column(Name="c_quantity", Storage="_C_quantity", DbType="Int NOT NULL")]
		public int C_quantity
		{
			get
			{
				return this._C_quantity;
			}
			set
			{
				if ((this._C_quantity != value))
				{
					this.OnC_quantityChanging(value);
					this.SendPropertyChanging();
					this._C_quantity = value;
					this.SendPropertyChanged("C_quantity");
					this.OnC_quantityChanged();
				}
			}
		}
		
		[Column(Name="c_ordertime", Storage="_C_ordertime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ordertime
		{
			get
			{
				return this._C_ordertime;
			}
			set
			{
				if ((this._C_ordertime != value))
				{
					this.OnC_ordertimeChanging(value);
					this.SendPropertyChanging();
					this._C_ordertime = value;
					this.SendPropertyChanged("C_ordertime");
					this.OnC_ordertimeChanged();
				}
			}
		}
		
		[Column(Name="c_executiontime", Storage="_C_executiontime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_executiontime
		{
			get
			{
				return this._C_executiontime;
			}
			set
			{
				if ((this._C_executiontime != value))
				{
					this.OnC_executiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_executiontime = value;
					this.SendPropertyChanged("C_executiontime");
					this.OnC_executiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_tx_batchid", Storage="_C_tx_batchid", DbType="NVarChar(64)")]
		public string C_tx_batchid
		{
			get
			{
				return this._C_tx_batchid;
			}
			set
			{
				if ((this._C_tx_batchid != value))
				{
					this.OnC_tx_batchidChanging(value);
					this.SendPropertyChanging();
					this._C_tx_batchid = value;
					this.SendPropertyChanged("C_tx_batchid");
					this.OnC_tx_batchidChanged();
				}
			}
		}
		
		[Column(Name="c_price", Storage="_C_price", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_price
		{
			get
			{
				return this._C_price;
			}
			set
			{
				if ((this._C_price != value))
				{
					this.OnC_priceChanging(value);
					this.SendPropertyChanging();
					this._C_price = value;
					this.SendPropertyChanged("C_price");
					this.OnC_priceChanged();
				}
			}
		}
		
		[Column(Name="c_transactionid", Storage="_C_transactionid", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string C_transactionid
		{
			get
			{
				return this._C_transactionid;
			}
			set
			{
				if ((this._C_transactionid != value))
				{
					this.OnC_transactionidChanging(value);
					this.SendPropertyChanging();
					this._C_transactionid = value;
					this.SendPropertyChanged("C_transactionid");
					this.OnC_transactionidChanged();
				}
			}
		}
		
		[Column(Name="c_broker", Storage="_C_broker", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string C_broker
		{
			get
			{
				return this._C_broker;
			}
			set
			{
				if ((this._C_broker != value))
				{
					this.OnC_brokerChanging(value);
					this.SendPropertyChanging();
					this._C_broker = value;
					this.SendPropertyChanged("C_broker");
					this.OnC_brokerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_TestParent")]
	public partial class T_pv_TestParent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private System.DateTime _C_Time;
		
		private decimal _C_TotalUnits;
		
		private decimal _C_TotalAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TimeChanging(System.DateTime value);
    partial void OnC_TimeChanged();
    partial void OnC_TotalUnitsChanging(decimal value);
    partial void OnC_TotalUnitsChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    #endregion
		
		public T_pv_TestParent()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Time", Storage="_C_Time", DbType="DateTime NOT NULL")]
		public System.DateTime C_Time
		{
			get
			{
				return this._C_Time;
			}
			set
			{
				if ((this._C_Time != value))
				{
					this.OnC_TimeChanging(value);
					this.SendPropertyChanging();
					this._C_Time = value;
					this.SendPropertyChanged("C_Time");
					this.OnC_TimeChanged();
				}
			}
		}
		
		[Column(Name="c_TotalUnits", Storage="_C_TotalUnits", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalUnits
		{
			get
			{
				return this._C_TotalUnits;
			}
			set
			{
				if ((this._C_TotalUnits != value))
				{
					this.OnC_TotalUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalUnits = value;
					this.SendPropertyChanged("C_TotalUnits");
					this.OnC_TotalUnitsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_testpi")]
	public partial class T_pv_testpi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_accountname;
		
		private string _C_description;
		
		private System.DateTime _C_time;
		
		private int _C_timezoneID;
		
		private int _C_CalendarCode;
		
		private int _C_duration;
		
		private decimal _C_units;
		
		private decimal _C_Rate;
		
		private int _C_MTI;
		
		private decimal _C_MinCharge;
		
		private decimal _C_SetupCharge;
		
		private System.Nullable<decimal> _C_DecProp1;
		
		private System.Nullable<decimal> _C_DecProp2;
		
		private System.Nullable<decimal> _C_DecProp3;
		
		private System.Nullable<decimal> _C_DecProp4;
		
		private System.Nullable<int> _C_internalmtaccountid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_timeChanging(System.DateTime value);
    partial void OnC_timeChanged();
    partial void OnC_timezoneIDChanging(int value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_CalendarCodeChanging(int value);
    partial void OnC_CalendarCodeChanged();
    partial void OnC_durationChanging(int value);
    partial void OnC_durationChanged();
    partial void OnC_unitsChanging(decimal value);
    partial void OnC_unitsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_MTIChanging(int value);
    partial void OnC_MTIChanged();
    partial void OnC_MinChargeChanging(decimal value);
    partial void OnC_MinChargeChanged();
    partial void OnC_SetupChargeChanging(decimal value);
    partial void OnC_SetupChargeChanged();
    partial void OnC_DecProp1Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    partial void OnC_DecProp4Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp4Changed();
    partial void OnC_internalmtaccountidChanging(System.Nullable<int> value);
    partial void OnC_internalmtaccountidChanged();
    #endregion
		
		public T_pv_testpi()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(20)")]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_time", Storage="_C_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_time
		{
			get
			{
				return this._C_time;
			}
			set
			{
				if ((this._C_time != value))
				{
					this.OnC_timeChanging(value);
					this.SendPropertyChanging();
					this._C_time = value;
					this.SendPropertyChanged("C_time");
					this.OnC_timeChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int NOT NULL")]
		public int C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_CalendarCode", Storage="_C_CalendarCode", DbType="Int NOT NULL")]
		public int C_CalendarCode
		{
			get
			{
				return this._C_CalendarCode;
			}
			set
			{
				if ((this._C_CalendarCode != value))
				{
					this.OnC_CalendarCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CalendarCode = value;
					this.SendPropertyChanged("C_CalendarCode");
					this.OnC_CalendarCodeChanged();
				}
			}
		}
		
		[Column(Name="c_duration", Storage="_C_duration", DbType="Int NOT NULL")]
		public int C_duration
		{
			get
			{
				return this._C_duration;
			}
			set
			{
				if ((this._C_duration != value))
				{
					this.OnC_durationChanging(value);
					this.SendPropertyChanging();
					this._C_duration = value;
					this.SendPropertyChanged("C_duration");
					this.OnC_durationChanged();
				}
			}
		}
		
		[Column(Name="c_units", Storage="_C_units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_units
		{
			get
			{
				return this._C_units;
			}
			set
			{
				if ((this._C_units != value))
				{
					this.OnC_unitsChanging(value);
					this.SendPropertyChanging();
					this._C_units = value;
					this.SendPropertyChanged("C_units");
					this.OnC_unitsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_MTI", Storage="_C_MTI", DbType="Int NOT NULL")]
		public int C_MTI
		{
			get
			{
				return this._C_MTI;
			}
			set
			{
				if ((this._C_MTI != value))
				{
					this.OnC_MTIChanging(value);
					this.SendPropertyChanging();
					this._C_MTI = value;
					this.SendPropertyChanged("C_MTI");
					this.OnC_MTIChanged();
				}
			}
		}
		
		[Column(Name="c_MinCharge", Storage="_C_MinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_MinCharge
		{
			get
			{
				return this._C_MinCharge;
			}
			set
			{
				if ((this._C_MinCharge != value))
				{
					this.OnC_MinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_MinCharge = value;
					this.SendPropertyChanged("C_MinCharge");
					this.OnC_MinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp4", Storage="_C_DecProp4", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp4
		{
			get
			{
				return this._C_DecProp4;
			}
			set
			{
				if ((this._C_DecProp4 != value))
				{
					this.OnC_DecProp4Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp4 = value;
					this.SendPropertyChanged("C_DecProp4");
					this.OnC_DecProp4Changed();
				}
			}
		}
		
		[Column(Name="c_internalmtaccountid", Storage="_C_internalmtaccountid", DbType="Int")]
		public System.Nullable<int> C_internalmtaccountid
		{
			get
			{
				return this._C_internalmtaccountid;
			}
			set
			{
				if ((this._C_internalmtaccountid != value))
				{
					this.OnC_internalmtaccountidChanging(value);
					this.SendPropertyChanging();
					this._C_internalmtaccountid = value;
					this.SendPropertyChanged("C_internalmtaccountid");
					this.OnC_internalmtaccountidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_testpi2")]
	public partial class T_pv_testpi2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_description;
		
		private System.DateTime _C_time;
		
		private decimal _C_units;
		
		private int _C_duration;
		
		private decimal _C_DecProp1;
		
		private decimal _C_DecProp2;
		
		private decimal _C_DecProp3;
		
		private decimal _C_DecProp4;
		
		private decimal _C_Counter2;
		
		private decimal _C_Counter1;
		
		private decimal _C_Rate;
		
		private int _C_MTI;
		
		private decimal _C_MinCharge;
		
		private decimal _C_SetupCharge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_timeChanging(System.DateTime value);
    partial void OnC_timeChanged();
    partial void OnC_unitsChanging(decimal value);
    partial void OnC_unitsChanged();
    partial void OnC_durationChanging(int value);
    partial void OnC_durationChanged();
    partial void OnC_DecProp1Changing(decimal value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(decimal value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(decimal value);
    partial void OnC_DecProp3Changed();
    partial void OnC_DecProp4Changing(decimal value);
    partial void OnC_DecProp4Changed();
    partial void OnC_Counter2Changing(decimal value);
    partial void OnC_Counter2Changed();
    partial void OnC_Counter1Changing(decimal value);
    partial void OnC_Counter1Changed();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_MTIChanging(int value);
    partial void OnC_MTIChanged();
    partial void OnC_MinChargeChanging(decimal value);
    partial void OnC_MinChargeChanged();
    partial void OnC_SetupChargeChanging(decimal value);
    partial void OnC_SetupChargeChanged();
    #endregion
		
		public T_pv_testpi2()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_time", Storage="_C_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_time
		{
			get
			{
				return this._C_time;
			}
			set
			{
				if ((this._C_time != value))
				{
					this.OnC_timeChanging(value);
					this.SendPropertyChanging();
					this._C_time = value;
					this.SendPropertyChanged("C_time");
					this.OnC_timeChanged();
				}
			}
		}
		
		[Column(Name="c_units", Storage="_C_units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_units
		{
			get
			{
				return this._C_units;
			}
			set
			{
				if ((this._C_units != value))
				{
					this.OnC_unitsChanging(value);
					this.SendPropertyChanging();
					this._C_units = value;
					this.SendPropertyChanged("C_units");
					this.OnC_unitsChanged();
				}
			}
		}
		
		[Column(Name="c_duration", Storage="_C_duration", DbType="Int NOT NULL")]
		public int C_duration
		{
			get
			{
				return this._C_duration;
			}
			set
			{
				if ((this._C_duration != value))
				{
					this.OnC_durationChanging(value);
					this.SendPropertyChanging();
					this._C_duration = value;
					this.SendPropertyChanged("C_duration");
					this.OnC_durationChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp4", Storage="_C_DecProp4", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp4
		{
			get
			{
				return this._C_DecProp4;
			}
			set
			{
				if ((this._C_DecProp4 != value))
				{
					this.OnC_DecProp4Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp4 = value;
					this.SendPropertyChanged("C_DecProp4");
					this.OnC_DecProp4Changed();
				}
			}
		}
		
		[Column(Name="c_Counter2", Storage="_C_Counter2", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter2
		{
			get
			{
				return this._C_Counter2;
			}
			set
			{
				if ((this._C_Counter2 != value))
				{
					this.OnC_Counter2Changing(value);
					this.SendPropertyChanging();
					this._C_Counter2 = value;
					this.SendPropertyChanged("C_Counter2");
					this.OnC_Counter2Changed();
				}
			}
		}
		
		[Column(Name="c_Counter1", Storage="_C_Counter1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter1
		{
			get
			{
				return this._C_Counter1;
			}
			set
			{
				if ((this._C_Counter1 != value))
				{
					this.OnC_Counter1Changing(value);
					this.SendPropertyChanging();
					this._C_Counter1 = value;
					this.SendPropertyChanged("C_Counter1");
					this.OnC_Counter1Changed();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_MTI", Storage="_C_MTI", DbType="Int NOT NULL")]
		public int C_MTI
		{
			get
			{
				return this._C_MTI;
			}
			set
			{
				if ((this._C_MTI != value))
				{
					this.OnC_MTIChanging(value);
					this.SendPropertyChanging();
					this._C_MTI = value;
					this.SendPropertyChanged("C_MTI");
					this.OnC_MTIChanged();
				}
			}
		}
		
		[Column(Name="c_MinCharge", Storage="_C_MinCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_MinCharge
		{
			get
			{
				return this._C_MinCharge;
			}
			set
			{
				if ((this._C_MinCharge != value))
				{
					this.OnC_MinChargeChanging(value);
					this.SendPropertyChanging();
					this._C_MinCharge = value;
					this.SendPropertyChanged("C_MinCharge");
					this.OnC_MinChargeChanged();
				}
			}
		}
		
		[Column(Name="c_SetupCharge", Storage="_C_SetupCharge", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_SetupCharge
		{
			get
			{
				return this._C_SetupCharge;
			}
			set
			{
				if ((this._C_SetupCharge != value))
				{
					this.OnC_SetupChargeChanging(value);
					this.SendPropertyChanging();
					this._C_SetupCharge = value;
					this.SendPropertyChanged("C_SetupCharge");
					this.OnC_SetupChargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_TestService")]
	public partial class T_pv_TestService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_Description;
		
		private System.DateTime _C_Time;
		
		private decimal _C_Units;
		
		private System.Nullable<decimal> _C_DecProp1;
		
		private System.Nullable<decimal> _C_DecProp2;
		
		private System.Nullable<decimal> _C_DecProp3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TimeChanging(System.DateTime value);
    partial void OnC_TimeChanged();
    partial void OnC_UnitsChanging(decimal value);
    partial void OnC_UnitsChanged();
    partial void OnC_DecProp1Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    #endregion
		
		public T_pv_TestService()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Time", Storage="_C_Time", DbType="DateTime NOT NULL")]
		public System.DateTime C_Time
		{
			get
			{
				return this._C_Time;
			}
			set
			{
				if ((this._C_Time != value))
				{
					this.OnC_TimeChanging(value);
					this.SendPropertyChanging();
					this._C_Time = value;
					this.SendPropertyChanged("C_Time");
					this.OnC_TimeChanged();
				}
			}
		}
		
		[Column(Name="c_Units", Storage="_C_Units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Units
		{
			get
			{
				return this._C_Units;
			}
			set
			{
				if ((this._C_Units != value))
				{
					this.OnC_UnitsChanging(value);
					this.SendPropertyChanging();
					this._C_Units = value;
					this.SendPropertyChanged("C_Units");
					this.OnC_UnitsChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_pv_UDRecurringCharge")]
	public partial class T_pv_UDRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id_sess;
		
		private int _Id_usage_interval;
		
		private string _C_RCActionType;
		
		private System.DateTime _C_RCIntervalStart;
		
		private System.DateTime _C_RCIntervalEnd;
		
		private System.DateTime _C_BillingIntervalStart;
		
		private System.DateTime _C_BillingIntervalEnd;
		
		private System.DateTime _C_RCIntervalSubscriptionStart;
		
		private System.DateTime _C_RCIntervalSubscriptionEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private string _C_Advance;
		
		private string _C_ProrateOnSubscription;
		
		private System.DateTime _C_UnitValueStart;
		
		private System.DateTime _C_UnitValueEnd;
		
		private decimal _C_UnitValue;
		
		private int _C_RatingType;
		
		private string _C_ProrateOnUnsubscription;
		
		private int _C_ProrationCycleLength;
		
		private System.Nullable<System.DateTime> _C_BilledRateDate;
		
		private int _C__SubscriptionID;
		
		private System.DateTime _C_ProratedIntervalStart;
		
		private System.DateTime _C_ProratedIntervalEnd;
		
		private System.Nullable<int> _C_ProratedDays;
		
		private System.Nullable<decimal> _C_ProratedDailyRate;
		
		private System.Nullable<decimal> _C_RCAmount;
		
		private string _C_ProratedOnSubscription;
		
		private string _C_ProratedOnUnsubscription;
		
		private string _C_ProratedOnUnitValueChange;
		
		private System.Nullable<System.DateTime> _C_FinalizeDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(long value);
    partial void OnId_sessChanged();
    partial void OnId_usage_intervalChanging(int value);
    partial void OnId_usage_intervalChanged();
    partial void OnC_RCActionTypeChanging(string value);
    partial void OnC_RCActionTypeChanged();
    partial void OnC_RCIntervalStartChanging(System.DateTime value);
    partial void OnC_RCIntervalStartChanged();
    partial void OnC_RCIntervalEndChanging(System.DateTime value);
    partial void OnC_RCIntervalEndChanged();
    partial void OnC_BillingIntervalStartChanging(System.DateTime value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.DateTime value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC_RCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionStartChanged();
    partial void OnC_RCIntervalSubscriptionEndChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_AdvanceChanging(string value);
    partial void OnC_AdvanceChanged();
    partial void OnC_ProrateOnSubscriptionChanging(string value);
    partial void OnC_ProrateOnSubscriptionChanged();
    partial void OnC_UnitValueStartChanging(System.DateTime value);
    partial void OnC_UnitValueStartChanged();
    partial void OnC_UnitValueEndChanging(System.DateTime value);
    partial void OnC_UnitValueEndChanged();
    partial void OnC_UnitValueChanging(decimal value);
    partial void OnC_UnitValueChanged();
    partial void OnC_RatingTypeChanging(int value);
    partial void OnC_RatingTypeChanged();
    partial void OnC_ProrateOnUnsubscriptionChanging(string value);
    partial void OnC_ProrateOnUnsubscriptionChanged();
    partial void OnC_ProrationCycleLengthChanging(int value);
    partial void OnC_ProrationCycleLengthChanged();
    partial void OnC_BilledRateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BilledRateDateChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    partial void OnC_ProratedIntervalStartChanging(System.DateTime value);
    partial void OnC_ProratedIntervalStartChanged();
    partial void OnC_ProratedIntervalEndChanging(System.DateTime value);
    partial void OnC_ProratedIntervalEndChanged();
    partial void OnC_ProratedDaysChanging(System.Nullable<int> value);
    partial void OnC_ProratedDaysChanged();
    partial void OnC_ProratedDailyRateChanging(System.Nullable<decimal> value);
    partial void OnC_ProratedDailyRateChanged();
    partial void OnC_RCAmountChanging(System.Nullable<decimal> value);
    partial void OnC_RCAmountChanged();
    partial void OnC_ProratedOnSubscriptionChanging(string value);
    partial void OnC_ProratedOnSubscriptionChanged();
    partial void OnC_ProratedOnUnsubscriptionChanging(string value);
    partial void OnC_ProratedOnUnsubscriptionChanged();
    partial void OnC_ProratedOnUnitValueChangeChanging(string value);
    partial void OnC_ProratedOnUnitValueChangeChanged();
    partial void OnC_FinalizeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_FinalizeDateChanged();
    #endregion
		
		public T_pv_UDRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_RCActionType", Storage="_C_RCActionType", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string C_RCActionType
		{
			get
			{
				return this._C_RCActionType;
			}
			set
			{
				if ((this._C_RCActionType != value))
				{
					this.OnC_RCActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_RCActionType = value;
					this.SendPropertyChanged("C_RCActionType");
					this.OnC_RCActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalStart", Storage="_C_RCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalStart
		{
			get
			{
				return this._C_RCIntervalStart;
			}
			set
			{
				if ((this._C_RCIntervalStart != value))
				{
					this.OnC_RCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalStart = value;
					this.SendPropertyChanged("C_RCIntervalStart");
					this.OnC_RCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalEnd", Storage="_C_RCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalEnd
		{
			get
			{
				return this._C_RCIntervalEnd;
			}
			set
			{
				if ((this._C_RCIntervalEnd != value))
				{
					this.OnC_RCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalEnd = value;
					this.SendPropertyChanged("C_RCIntervalEnd");
					this.OnC_RCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionStart", Storage="_C_RCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionStart
		{
			get
			{
				return this._C_RCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionStart != value))
				{
					this.OnC_RCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionStart");
					this.OnC_RCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionEnd", Storage="_C_RCIntervalSubscriptionEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_RCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionEnd != value))
				{
					this.OnC_RCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionEnd");
					this.OnC_RCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_Advance", Storage="_C_Advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_Advance
		{
			get
			{
				return this._C_Advance;
			}
			set
			{
				if ((this._C_Advance != value))
				{
					this.OnC_AdvanceChanging(value);
					this.SendPropertyChanging();
					this._C_Advance = value;
					this.SendPropertyChanged("C_Advance");
					this.OnC_AdvanceChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnSubscription", Storage="_C_ProrateOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnSubscription
		{
			get
			{
				return this._C_ProrateOnSubscription;
			}
			set
			{
				if ((this._C_ProrateOnSubscription != value))
				{
					this.OnC_ProrateOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnSubscription = value;
					this.SendPropertyChanged("C_ProrateOnSubscription");
					this.OnC_ProrateOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValueStart", Storage="_C_UnitValueStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_UnitValueStart
		{
			get
			{
				return this._C_UnitValueStart;
			}
			set
			{
				if ((this._C_UnitValueStart != value))
				{
					this.OnC_UnitValueStartChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValueStart = value;
					this.SendPropertyChanged("C_UnitValueStart");
					this.OnC_UnitValueStartChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValueEnd", Storage="_C_UnitValueEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_UnitValueEnd
		{
			get
			{
				return this._C_UnitValueEnd;
			}
			set
			{
				if ((this._C_UnitValueEnd != value))
				{
					this.OnC_UnitValueEndChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValueEnd = value;
					this.SendPropertyChanged("C_UnitValueEnd");
					this.OnC_UnitValueEndChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValue", Storage="_C_UnitValue", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnitValue
		{
			get
			{
				return this._C_UnitValue;
			}
			set
			{
				if ((this._C_UnitValue != value))
				{
					this.OnC_UnitValueChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValue = value;
					this.SendPropertyChanged("C_UnitValue");
					this.OnC_UnitValueChanged();
				}
			}
		}
		
		[Column(Name="c_RatingType", Storage="_C_RatingType", DbType="Int NOT NULL")]
		public int C_RatingType
		{
			get
			{
				return this._C_RatingType;
			}
			set
			{
				if ((this._C_RatingType != value))
				{
					this.OnC_RatingTypeChanging(value);
					this.SendPropertyChanging();
					this._C_RatingType = value;
					this.SendPropertyChanged("C_RatingType");
					this.OnC_RatingTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnUnsubscription", Storage="_C_ProrateOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnUnsubscription
		{
			get
			{
				return this._C_ProrateOnUnsubscription;
			}
			set
			{
				if ((this._C_ProrateOnUnsubscription != value))
				{
					this.OnC_ProrateOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnUnsubscription = value;
					this.SendPropertyChanged("C_ProrateOnUnsubscription");
					this.OnC_ProrateOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProrationCycleLength", Storage="_C_ProrationCycleLength", DbType="Int NOT NULL")]
		public int C_ProrationCycleLength
		{
			get
			{
				return this._C_ProrationCycleLength;
			}
			set
			{
				if ((this._C_ProrationCycleLength != value))
				{
					this.OnC_ProrationCycleLengthChanging(value);
					this.SendPropertyChanging();
					this._C_ProrationCycleLength = value;
					this.SendPropertyChanged("C_ProrationCycleLength");
					this.OnC_ProrationCycleLengthChanged();
				}
			}
		}
		
		[Column(Name="c_BilledRateDate", Storage="_C_BilledRateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BilledRateDate
		{
			get
			{
				return this._C_BilledRateDate;
			}
			set
			{
				if ((this._C_BilledRateDate != value))
				{
					this.OnC_BilledRateDateChanging(value);
					this.SendPropertyChanging();
					this._C_BilledRateDate = value;
					this.SendPropertyChanged("C_BilledRateDate");
					this.OnC_BilledRateDateChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedIntervalStart", Storage="_C_ProratedIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_ProratedIntervalStart
		{
			get
			{
				return this._C_ProratedIntervalStart;
			}
			set
			{
				if ((this._C_ProratedIntervalStart != value))
				{
					this.OnC_ProratedIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedIntervalStart = value;
					this.SendPropertyChanged("C_ProratedIntervalStart");
					this.OnC_ProratedIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedIntervalEnd", Storage="_C_ProratedIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_ProratedIntervalEnd
		{
			get
			{
				return this._C_ProratedIntervalEnd;
			}
			set
			{
				if ((this._C_ProratedIntervalEnd != value))
				{
					this.OnC_ProratedIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedIntervalEnd = value;
					this.SendPropertyChanged("C_ProratedIntervalEnd");
					this.OnC_ProratedIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedDays", Storage="_C_ProratedDays", DbType="Int")]
		public System.Nullable<int> C_ProratedDays
		{
			get
			{
				return this._C_ProratedDays;
			}
			set
			{
				if ((this._C_ProratedDays != value))
				{
					this.OnC_ProratedDaysChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedDays = value;
					this.SendPropertyChanged("C_ProratedDays");
					this.OnC_ProratedDaysChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedDailyRate", Storage="_C_ProratedDailyRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_ProratedDailyRate
		{
			get
			{
				return this._C_ProratedDailyRate;
			}
			set
			{
				if ((this._C_ProratedDailyRate != value))
				{
					this.OnC_ProratedDailyRateChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedDailyRate = value;
					this.SendPropertyChanged("C_ProratedDailyRate");
					this.OnC_ProratedDailyRateChanged();
				}
			}
		}
		
		[Column(Name="c_RCAmount", Storage="_C_RCAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_RCAmount
		{
			get
			{
				return this._C_RCAmount;
			}
			set
			{
				if ((this._C_RCAmount != value))
				{
					this.OnC_RCAmountChanging(value);
					this.SendPropertyChanging();
					this._C_RCAmount = value;
					this.SendPropertyChanged("C_RCAmount");
					this.OnC_RCAmountChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedOnSubscription", Storage="_C_ProratedOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedOnSubscription
		{
			get
			{
				return this._C_ProratedOnSubscription;
			}
			set
			{
				if ((this._C_ProratedOnSubscription != value))
				{
					this.OnC_ProratedOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedOnSubscription = value;
					this.SendPropertyChanged("C_ProratedOnSubscription");
					this.OnC_ProratedOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedOnUnsubscription", Storage="_C_ProratedOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedOnUnsubscription
		{
			get
			{
				return this._C_ProratedOnUnsubscription;
			}
			set
			{
				if ((this._C_ProratedOnUnsubscription != value))
				{
					this.OnC_ProratedOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedOnUnsubscription = value;
					this.SendPropertyChanged("C_ProratedOnUnsubscription");
					this.OnC_ProratedOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProratedOnUnitValueChange", Storage="_C_ProratedOnUnitValueChange", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProratedOnUnitValueChange
		{
			get
			{
				return this._C_ProratedOnUnitValueChange;
			}
			set
			{
				if ((this._C_ProratedOnUnitValueChange != value))
				{
					this.OnC_ProratedOnUnitValueChangeChanging(value);
					this.SendPropertyChanging();
					this._C_ProratedOnUnitValueChange = value;
					this.SendPropertyChanged("C_ProratedOnUnitValueChange");
					this.OnC_ProratedOnUnitValueChangeChanged();
				}
			}
		}
		
		[Column(Name="c_FinalizeDate", Storage="_C_FinalizeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_FinalizeDate
		{
			get
			{
				return this._C_FinalizeDate;
			}
			set
			{
				if ((this._C_FinalizeDate != value))
				{
					this.OnC_FinalizeDateChanging(value);
					this.SendPropertyChanging();
					this._C_FinalizeDate = value;
					this.SendPropertyChanged("C_FinalizeDate");
					this.OnC_FinalizeDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_query_log")]
	public partial class T_query_log
	{
		
		private int _C_id;
		
		private string _C_groupid;
		
		private System.Nullable<int> _C_id_view;
		
		private string _C_old_schema;
		
		private string _C_query;
		
		private System.DateTime _C_timestamp;
		
		public T_query_log()
		{
		}
		
		[Column(Name="c_id", Storage="_C_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int C_id
		{
			get
			{
				return this._C_id;
			}
			set
			{
				if ((this._C_id != value))
				{
					this._C_id = value;
				}
			}
		}
		
		[Column(Name="c_groupid", Storage="_C_groupid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string C_groupid
		{
			get
			{
				return this._C_groupid;
			}
			set
			{
				if ((this._C_groupid != value))
				{
					this._C_groupid = value;
				}
			}
		}
		
		[Column(Name="c_id_view", Storage="_C_id_view", DbType="Int")]
		public System.Nullable<int> C_id_view
		{
			get
			{
				return this._C_id_view;
			}
			set
			{
				if ((this._C_id_view != value))
				{
					this._C_id_view = value;
				}
			}
		}
		
		[Column(Name="c_old_schema", Storage="_C_old_schema", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string C_old_schema
		{
			get
			{
				return this._C_old_schema;
			}
			set
			{
				if ((this._C_old_schema != value))
				{
					this._C_old_schema = value;
				}
			}
		}
		
		[Column(Name="c_query", Storage="_C_query", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string C_query
		{
			get
			{
				return this._C_query;
			}
			set
			{
				if ((this._C_query != value))
				{
					this._C_query = value;
				}
			}
		}
		
		[Column(Name="c_timestamp", Storage="_C_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_timestamp
		{
			get
			{
				return this._C_timestamp;
			}
			set
			{
				if ((this._C_timestamp != value))
				{
					this._C_timestamp = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_rabbitmq_nodes")]
	public partial class T_rabbitmq_nodes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Rabbitmq_nodename;
		
		private string _Server;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _Port;
		
		private string _Vhost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRabbitmq_nodenameChanging(string value);
    partial void OnRabbitmq_nodenameChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnVhostChanging(string value);
    partial void OnVhostChanged();
    #endregion
		
		public T_rabbitmq_nodes()
		{
			OnCreated();
		}
		
		[Column(Name="rabbitmq_nodename", Storage="_Rabbitmq_nodename", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Rabbitmq_nodename
		{
			get
			{
				return this._Rabbitmq_nodename;
			}
			set
			{
				if ((this._Rabbitmq_nodename != value))
				{
					this.OnRabbitmq_nodenameChanging(value);
					this.SendPropertyChanging();
					this._Rabbitmq_nodename = value;
					this.SendPropertyChanged("Rabbitmq_nodename");
					this.OnRabbitmq_nodenameChanged();
				}
			}
		}
		
		[Column(Name="server", Storage="_Server", DbType="VarChar(100)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[Column(Name="username", Storage="_Username", DbType="VarChar(100)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Name="password", Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Name="port", Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[Column(Name="vhost", Storage="_Vhost", DbType="VarChar(100)")]
		public string Vhost
		{
			get
			{
				return this._Vhost;
			}
			set
			{
				if ((this._Vhost != value))
				{
					this.OnVhostChanging(value);
					this.SendPropertyChanging();
					this._Vhost = value;
					this.SendPropertyChanged("Vhost");
					this.OnVhostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_rabbitmq_queues")]
	public partial class T_rabbitmq_queues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Queue;
		
		private string _Rabbitmq_nodename;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueueChanging(string value);
    partial void OnQueueChanged();
    partial void OnRabbitmq_nodenameChanging(string value);
    partial void OnRabbitmq_nodenameChanged();
    #endregion
		
		public T_rabbitmq_queues()
		{
			OnCreated();
		}
		
		[Column(Name="queue", Storage="_Queue", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Queue
		{
			get
			{
				return this._Queue;
			}
			set
			{
				if ((this._Queue != value))
				{
					this.OnQueueChanging(value);
					this.SendPropertyChanging();
					this._Queue = value;
					this.SendPropertyChanged("Queue");
					this.OnQueueChanged();
				}
			}
		}
		
		[Column(Name="rabbitmq_nodename", Storage="_Rabbitmq_nodename", DbType="VarChar(100)")]
		public string Rabbitmq_nodename
		{
			get
			{
				return this._Rabbitmq_nodename;
			}
			set
			{
				if ((this._Rabbitmq_nodename != value))
				{
					this.OnRabbitmq_nodenameChanging(value);
					this.SendPropertyChanging();
					this._Rabbitmq_nodename = value;
					this.SendPropertyChanged("Rabbitmq_nodename");
					this.OnRabbitmq_nodenameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_reason_code")]
	public partial class T_reason_code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private System.Data.Linq.Binary _Tx_GUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnTx_GUIDChanging(System.Data.Linq.Binary value);
    partial void OnTx_GUIDChanged();
    #endregion
		
		public T_reason_code()
		{
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="tx_GUID", Storage="_Tx_GUID", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_GUID
		{
			get
			{
				return this._Tx_GUID;
			}
			set
			{
				if ((this._Tx_GUID != value))
				{
					this.OnTx_GUIDChanging(value);
					this.SendPropertyChanging();
					this._Tx_GUID = value;
					this.SendPropertyChanged("Tx_GUID");
					this.OnTx_GUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recevent")]
	public partial class T_recevent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_event;
		
		private string _Tx_name;
		
		private string _Tx_type;
		
		private string _Tx_reverse_mode;
		
		private string _B_multiinstance;
		
		private string _Tx_billgroup_support;
		
		private string _B_has_billgroup_constraints;
		
		private string _Tx_class_name;
		
		private string _Tx_extension_name;
		
		private string _Tx_config_file;
		
		private System.DateTime _Dt_activated;
		
		private System.Nullable<System.DateTime> _Dt_deactivated;
		
		private string _Tx_display_name;
		
		private string _Tx_desc;
		
		private EntityRef<T_recevent_eop> _T_recevent_eop;
		
		private EntitySet<T_recevent_inst> _T_recevent_inst;
		
		private EntityRef<T_recevent_scheduled> _T_recevent_scheduled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_eventChanging(int value);
    partial void OnId_eventChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    partial void OnTx_reverse_modeChanging(string value);
    partial void OnTx_reverse_modeChanged();
    partial void OnB_multiinstanceChanging(string value);
    partial void OnB_multiinstanceChanged();
    partial void OnTx_billgroup_supportChanging(string value);
    partial void OnTx_billgroup_supportChanged();
    partial void OnB_has_billgroup_constraintsChanging(string value);
    partial void OnB_has_billgroup_constraintsChanged();
    partial void OnTx_class_nameChanging(string value);
    partial void OnTx_class_nameChanged();
    partial void OnTx_extension_nameChanging(string value);
    partial void OnTx_extension_nameChanged();
    partial void OnTx_config_fileChanging(string value);
    partial void OnTx_config_fileChanged();
    partial void OnDt_activatedChanging(System.DateTime value);
    partial void OnDt_activatedChanged();
    partial void OnDt_deactivatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_deactivatedChanged();
    partial void OnTx_display_nameChanging(string value);
    partial void OnTx_display_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    #endregion
		
		public T_recevent()
		{
			this._T_recevent_eop = default(EntityRef<T_recevent_eop>);
			this._T_recevent_inst = new EntitySet<T_recevent_inst>(new Action<T_recevent_inst>(this.attach_T_recevent_inst), new Action<T_recevent_inst>(this.detach_T_recevent_inst));
			this._T_recevent_scheduled = default(EntityRef<T_recevent_scheduled>);
			OnCreated();
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this.OnId_eventChanging(value);
					this.SendPropertyChanging();
					this._Id_event = value;
					this.SendPropertyChanged("Id_event");
					this.OnId_eventChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_reverse_mode", Storage="_Tx_reverse_mode", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Tx_reverse_mode
		{
			get
			{
				return this._Tx_reverse_mode;
			}
			set
			{
				if ((this._Tx_reverse_mode != value))
				{
					this.OnTx_reverse_modeChanging(value);
					this.SendPropertyChanging();
					this._Tx_reverse_mode = value;
					this.SendPropertyChanged("Tx_reverse_mode");
					this.OnTx_reverse_modeChanged();
				}
			}
		}
		
		[Column(Name="b_multiinstance", Storage="_B_multiinstance", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string B_multiinstance
		{
			get
			{
				return this._B_multiinstance;
			}
			set
			{
				if ((this._B_multiinstance != value))
				{
					this.OnB_multiinstanceChanging(value);
					this.SendPropertyChanging();
					this._B_multiinstance = value;
					this.SendPropertyChanged("B_multiinstance");
					this.OnB_multiinstanceChanged();
				}
			}
		}
		
		[Column(Name="tx_billgroup_support", Storage="_Tx_billgroup_support", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tx_billgroup_support
		{
			get
			{
				return this._Tx_billgroup_support;
			}
			set
			{
				if ((this._Tx_billgroup_support != value))
				{
					this.OnTx_billgroup_supportChanging(value);
					this.SendPropertyChanging();
					this._Tx_billgroup_support = value;
					this.SendPropertyChanged("Tx_billgroup_support");
					this.OnTx_billgroup_supportChanged();
				}
			}
		}
		
		[Column(Name="b_has_billgroup_constraints", Storage="_B_has_billgroup_constraints", DbType="VarChar(1)")]
		public string B_has_billgroup_constraints
		{
			get
			{
				return this._B_has_billgroup_constraints;
			}
			set
			{
				if ((this._B_has_billgroup_constraints != value))
				{
					this.OnB_has_billgroup_constraintsChanging(value);
					this.SendPropertyChanging();
					this._B_has_billgroup_constraints = value;
					this.SendPropertyChanged("B_has_billgroup_constraints");
					this.OnB_has_billgroup_constraintsChanged();
				}
			}
		}
		
		[Column(Name="tx_class_name", Storage="_Tx_class_name", DbType="VarChar(255)")]
		public string Tx_class_name
		{
			get
			{
				return this._Tx_class_name;
			}
			set
			{
				if ((this._Tx_class_name != value))
				{
					this.OnTx_class_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_class_name = value;
					this.SendPropertyChanged("Tx_class_name");
					this.OnTx_class_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_extension_name", Storage="_Tx_extension_name", DbType="VarChar(255)")]
		public string Tx_extension_name
		{
			get
			{
				return this._Tx_extension_name;
			}
			set
			{
				if ((this._Tx_extension_name != value))
				{
					this.OnTx_extension_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_extension_name = value;
					this.SendPropertyChanged("Tx_extension_name");
					this.OnTx_extension_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_config_file", Storage="_Tx_config_file", DbType="VarChar(255)")]
		public string Tx_config_file
		{
			get
			{
				return this._Tx_config_file;
			}
			set
			{
				if ((this._Tx_config_file != value))
				{
					this.OnTx_config_fileChanging(value);
					this.SendPropertyChanging();
					this._Tx_config_file = value;
					this.SendPropertyChanged("Tx_config_file");
					this.OnTx_config_fileChanged();
				}
			}
		}
		
		[Column(Name="dt_activated", Storage="_Dt_activated", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_activated
		{
			get
			{
				return this._Dt_activated;
			}
			set
			{
				if ((this._Dt_activated != value))
				{
					this.OnDt_activatedChanging(value);
					this.SendPropertyChanging();
					this._Dt_activated = value;
					this.SendPropertyChanged("Dt_activated");
					this.OnDt_activatedChanged();
				}
			}
		}
		
		[Column(Name="dt_deactivated", Storage="_Dt_deactivated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_deactivated
		{
			get
			{
				return this._Dt_deactivated;
			}
			set
			{
				if ((this._Dt_deactivated != value))
				{
					this.OnDt_deactivatedChanging(value);
					this.SendPropertyChanging();
					this._Dt_deactivated = value;
					this.SendPropertyChanged("Dt_deactivated");
					this.OnDt_deactivatedChanged();
				}
			}
		}
		
		[Column(Name="tx_display_name", Storage="_Tx_display_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_display_name
		{
			get
			{
				return this._Tx_display_name;
			}
			set
			{
				if ((this._Tx_display_name != value))
				{
					this.OnTx_display_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_display_name = value;
					this.SendPropertyChanged("Tx_display_name");
					this.OnTx_display_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(2048)")]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_eop", Storage="_T_recevent_eop", ThisKey="Id_event", OtherKey="Id_event", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_recevent_eop T_recevent_eop
		{
			get
			{
				return this._T_recevent_eop.Entity;
			}
			set
			{
				T_recevent_eop previousValue = this._T_recevent_eop.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_eop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_eop.Entity = null;
						previousValue.T_recevent = null;
					}
					this._T_recevent_eop.Entity = value;
					if ((value != null))
					{
						value.T_recevent = this;
					}
					this.SendPropertyChanged("T_recevent_eop");
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_inst", Storage="_T_recevent_inst", ThisKey="Id_event", OtherKey="Id_event", DeleteRule="NO ACTION")]
		public EntitySet<T_recevent_inst> T_recevent_inst
		{
			get
			{
				return this._T_recevent_inst;
			}
			set
			{
				this._T_recevent_inst.Assign(value);
			}
		}
		
		[Association(Name="FK1_t_recevent_scheduled", Storage="_T_recevent_scheduled", ThisKey="Id_event", OtherKey="Id_event", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public T_recevent_scheduled T_recevent_scheduled
		{
			get
			{
				return this._T_recevent_scheduled.Entity;
			}
			set
			{
				T_recevent_scheduled previousValue = this._T_recevent_scheduled.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_scheduled.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_scheduled.Entity = null;
						previousValue.T_recevent = null;
					}
					this._T_recevent_scheduled.Entity = value;
					if ((value != null))
					{
						value.T_recevent = this;
					}
					this.SendPropertyChanged("T_recevent_scheduled");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_recevent_inst(T_recevent_inst entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent = this;
		}
		
		private void detach_T_recevent_inst(T_recevent_inst entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent = null;
		}
	}
	
	[Table(Name="dbo.t_recevent_concurrent")]
	public partial class T_recevent_concurrent
	{
		
		private string _Tx_eventname;
		
		private string _Tx_compatible_eventname;
		
		public T_recevent_concurrent()
		{
		}
		
		[Column(Name="tx_eventname", Storage="_Tx_eventname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_eventname
		{
			get
			{
				return this._Tx_eventname;
			}
			set
			{
				if ((this._Tx_eventname != value))
				{
					this._Tx_eventname = value;
				}
			}
		}
		
		[Column(Name="tx_compatible_eventname", Storage="_Tx_compatible_eventname", DbType="NVarChar(255)")]
		public string Tx_compatible_eventname
		{
			get
			{
				return this._Tx_compatible_eventname;
			}
			set
			{
				if ((this._Tx_compatible_eventname != value))
				{
					this._Tx_compatible_eventname = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_dep")]
	public partial class T_recevent_dep
	{
		
		private int _Id_event;
		
		private System.Nullable<int> _Id_dependent_on_event;
		
		private int _N_distance;
		
		public T_recevent_dep()
		{
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL")]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this._Id_event = value;
				}
			}
		}
		
		[Column(Name="id_dependent_on_event", Storage="_Id_dependent_on_event", DbType="Int")]
		public System.Nullable<int> Id_dependent_on_event
		{
			get
			{
				return this._Id_dependent_on_event;
			}
			set
			{
				if ((this._Id_dependent_on_event != value))
				{
					this._Id_dependent_on_event = value;
				}
			}
		}
		
		[Column(Name="n_distance", Storage="_N_distance", DbType="Int NOT NULL")]
		public int N_distance
		{
			get
			{
				return this._N_distance;
			}
			set
			{
				if ((this._N_distance != value))
				{
					this._N_distance = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_eop")]
	public partial class T_recevent_eop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_event;
		
		private System.Nullable<int> _Id_cycle_type;
		
		private System.Nullable<int> _Id_cycle;
		
		private EntityRef<T_recevent> _T_recevent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_eventChanging(int value);
    partial void OnId_eventChanged();
    partial void OnId_cycle_typeChanging(System.Nullable<int> value);
    partial void OnId_cycle_typeChanged();
    partial void OnId_cycleChanging(System.Nullable<int> value);
    partial void OnId_cycleChanged();
    #endregion
		
		public T_recevent_eop()
		{
			this._T_recevent = default(EntityRef<T_recevent>);
			OnCreated();
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this.OnId_eventChanging(value);
					this.SendPropertyChanging();
					this._Id_event = value;
					this.SendPropertyChanged("Id_event");
					this.OnId_eventChanged();
				}
			}
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int")]
		public System.Nullable<int> Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Column(Name="id_cycle", Storage="_Id_cycle", DbType="Int")]
		public System.Nullable<int> Id_cycle
		{
			get
			{
				return this._Id_cycle;
			}
			set
			{
				if ((this._Id_cycle != value))
				{
					this.OnId_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle = value;
					this.SendPropertyChanged("Id_cycle");
					this.OnId_cycleChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_eop", Storage="_T_recevent", ThisKey="Id_event", OtherKey="Id_event", IsForeignKey=true)]
		public T_recevent T_recevent
		{
			get
			{
				return this._T_recevent.Entity;
			}
			set
			{
				T_recevent previousValue = this._T_recevent.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent.Entity = null;
						previousValue.T_recevent_eop = null;
					}
					this._T_recevent.Entity = value;
					if ((value != null))
					{
						value.T_recevent_eop = this;
						this._Id_event = value.Id_event;
					}
					else
					{
						this._Id_event = default(int);
					}
					this.SendPropertyChanged("T_recevent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_inst")]
	public partial class T_recevent_inst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_instance;
		
		private int _Id_event;
		
		private System.Nullable<int> _Id_arg_interval;
		
		private System.Nullable<int> _Id_arg_billgroup;
		
		private System.Nullable<int> _Id_arg_root_billgroup;
		
		private System.Nullable<System.DateTime> _Dt_arg_start;
		
		private System.Nullable<System.DateTime> _Dt_arg_end;
		
		private string _B_ignore_deps;
		
		private System.Nullable<System.DateTime> _Dt_effective;
		
		private string _Tx_status;
		
		private EntitySet<T_email_adapter_tracking> _T_email_adapter_tracking;
		
		private EntityRef<T_recevent> _T_recevent;
		
		private EntitySet<T_recevent_inst_audit> _T_recevent_inst_audit;
		
		private EntitySet<T_recevent_run> _T_recevent_run;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_instanceChanging(int value);
    partial void OnId_instanceChanged();
    partial void OnId_eventChanging(int value);
    partial void OnId_eventChanged();
    partial void OnId_arg_intervalChanging(System.Nullable<int> value);
    partial void OnId_arg_intervalChanged();
    partial void OnId_arg_billgroupChanging(System.Nullable<int> value);
    partial void OnId_arg_billgroupChanged();
    partial void OnId_arg_root_billgroupChanging(System.Nullable<int> value);
    partial void OnId_arg_root_billgroupChanged();
    partial void OnDt_arg_startChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_arg_startChanged();
    partial void OnDt_arg_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_arg_endChanged();
    partial void OnB_ignore_depsChanging(string value);
    partial void OnB_ignore_depsChanged();
    partial void OnDt_effectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_effectiveChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    #endregion
		
		public T_recevent_inst()
		{
			this._T_email_adapter_tracking = new EntitySet<T_email_adapter_tracking>(new Action<T_email_adapter_tracking>(this.attach_T_email_adapter_tracking), new Action<T_email_adapter_tracking>(this.detach_T_email_adapter_tracking));
			this._T_recevent = default(EntityRef<T_recevent>);
			this._T_recevent_inst_audit = new EntitySet<T_recevent_inst_audit>(new Action<T_recevent_inst_audit>(this.attach_T_recevent_inst_audit), new Action<T_recevent_inst_audit>(this.detach_T_recevent_inst_audit));
			this._T_recevent_run = new EntitySet<T_recevent_run>(new Action<T_recevent_run>(this.attach_T_recevent_run), new Action<T_recevent_run>(this.detach_T_recevent_run));
			OnCreated();
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this.OnId_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_instance = value;
					this.SendPropertyChanged("Id_instance");
					this.OnId_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL")]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this.OnId_eventChanging(value);
					this.SendPropertyChanging();
					this._Id_event = value;
					this.SendPropertyChanged("Id_event");
					this.OnId_eventChanged();
				}
			}
		}
		
		[Column(Name="id_arg_interval", Storage="_Id_arg_interval", DbType="Int")]
		public System.Nullable<int> Id_arg_interval
		{
			get
			{
				return this._Id_arg_interval;
			}
			set
			{
				if ((this._Id_arg_interval != value))
				{
					this.OnId_arg_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_arg_interval = value;
					this.SendPropertyChanged("Id_arg_interval");
					this.OnId_arg_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_arg_billgroup", Storage="_Id_arg_billgroup", DbType="Int")]
		public System.Nullable<int> Id_arg_billgroup
		{
			get
			{
				return this._Id_arg_billgroup;
			}
			set
			{
				if ((this._Id_arg_billgroup != value))
				{
					this.OnId_arg_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_arg_billgroup = value;
					this.SendPropertyChanged("Id_arg_billgroup");
					this.OnId_arg_billgroupChanged();
				}
			}
		}
		
		[Column(Name="id_arg_root_billgroup", Storage="_Id_arg_root_billgroup", DbType="Int")]
		public System.Nullable<int> Id_arg_root_billgroup
		{
			get
			{
				return this._Id_arg_root_billgroup;
			}
			set
			{
				if ((this._Id_arg_root_billgroup != value))
				{
					this.OnId_arg_root_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_arg_root_billgroup = value;
					this.SendPropertyChanged("Id_arg_root_billgroup");
					this.OnId_arg_root_billgroupChanged();
				}
			}
		}
		
		[Column(Name="dt_arg_start", Storage="_Dt_arg_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_arg_start
		{
			get
			{
				return this._Dt_arg_start;
			}
			set
			{
				if ((this._Dt_arg_start != value))
				{
					this.OnDt_arg_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_arg_start = value;
					this.SendPropertyChanged("Dt_arg_start");
					this.OnDt_arg_startChanged();
				}
			}
		}
		
		[Column(Name="dt_arg_end", Storage="_Dt_arg_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_arg_end
		{
			get
			{
				return this._Dt_arg_end;
			}
			set
			{
				if ((this._Dt_arg_end != value))
				{
					this.OnDt_arg_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_arg_end = value;
					this.SendPropertyChanged("Dt_arg_end");
					this.OnDt_arg_endChanged();
				}
			}
		}
		
		[Column(Name="b_ignore_deps", Storage="_B_ignore_deps", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string B_ignore_deps
		{
			get
			{
				return this._B_ignore_deps;
			}
			set
			{
				if ((this._B_ignore_deps != value))
				{
					this.OnB_ignore_depsChanging(value);
					this.SendPropertyChanging();
					this._B_ignore_deps = value;
					this.SendPropertyChanged("B_ignore_deps");
					this.OnB_ignore_depsChanged();
				}
			}
		}
		
		[Column(Name="dt_effective", Storage="_Dt_effective", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_effective
		{
			get
			{
				return this._Dt_effective;
			}
			set
			{
				if ((this._Dt_effective != value))
				{
					this.OnDt_effectiveChanging(value);
					this.SendPropertyChanging();
					this._Dt_effective = value;
					this.SendPropertyChanged("Dt_effective");
					this.OnDt_effectiveChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_email_adapter_tracking", Storage="_T_email_adapter_tracking", ThisKey="Id_instance", OtherKey="Id_instance", DeleteRule="NO ACTION")]
		public EntitySet<T_email_adapter_tracking> T_email_adapter_tracking
		{
			get
			{
				return this._T_email_adapter_tracking;
			}
			set
			{
				this._T_email_adapter_tracking.Assign(value);
			}
		}
		
		[Association(Name="FK1_t_recevent_inst", Storage="_T_recevent", ThisKey="Id_event", OtherKey="Id_event", IsForeignKey=true)]
		public T_recevent T_recevent
		{
			get
			{
				return this._T_recevent.Entity;
			}
			set
			{
				T_recevent previousValue = this._T_recevent.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent.Entity = null;
						previousValue.T_recevent_inst.Remove(this);
					}
					this._T_recevent.Entity = value;
					if ((value != null))
					{
						value.T_recevent_inst.Add(this);
						this._Id_event = value.Id_event;
					}
					else
					{
						this._Id_event = default(int);
					}
					this.SendPropertyChanged("T_recevent");
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_inst_audit", Storage="_T_recevent_inst_audit", ThisKey="Id_instance", OtherKey="Id_instance", DeleteRule="NO ACTION")]
		public EntitySet<T_recevent_inst_audit> T_recevent_inst_audit
		{
			get
			{
				return this._T_recevent_inst_audit;
			}
			set
			{
				this._T_recevent_inst_audit.Assign(value);
			}
		}
		
		[Association(Name="FK1_t_recevent_run", Storage="_T_recevent_run", ThisKey="Id_instance", OtherKey="Id_instance", DeleteRule="NO ACTION")]
		public EntitySet<T_recevent_run> T_recevent_run
		{
			get
			{
				return this._T_recevent_run;
			}
			set
			{
				this._T_recevent_run.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_email_adapter_tracking(T_email_adapter_tracking entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = this;
		}
		
		private void detach_T_email_adapter_tracking(T_email_adapter_tracking entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = null;
		}
		
		private void attach_T_recevent_inst_audit(T_recevent_inst_audit entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = this;
		}
		
		private void detach_T_recevent_inst_audit(T_recevent_inst_audit entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = null;
		}
		
		private void attach_T_recevent_run(T_recevent_run entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = this;
		}
		
		private void detach_T_recevent_run(T_recevent_run entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_inst = null;
		}
	}
	
	[Table(Name="dbo.t_recevent_inst_audit")]
	public partial class T_recevent_inst_audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_audit;
		
		private int _Id_instance;
		
		private int _Id_acc;
		
		private string _Tx_action;
		
		private string _B_ignore_deps;
		
		private System.Nullable<System.DateTime> _Dt_effective;
		
		private string _Tx_detail;
		
		private System.DateTime _Dt_crt;
		
		private EntityRef<T_recevent_inst> _T_recevent_inst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_auditChanging(int value);
    partial void OnId_auditChanged();
    partial void OnId_instanceChanging(int value);
    partial void OnId_instanceChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnTx_actionChanging(string value);
    partial void OnTx_actionChanged();
    partial void OnB_ignore_depsChanging(string value);
    partial void OnB_ignore_depsChanged();
    partial void OnDt_effectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_effectiveChanged();
    partial void OnTx_detailChanging(string value);
    partial void OnTx_detailChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    #endregion
		
		public T_recevent_inst_audit()
		{
			this._T_recevent_inst = default(EntityRef<T_recevent_inst>);
			OnCreated();
		}
		
		[Column(Name="id_audit", Storage="_Id_audit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_audit
		{
			get
			{
				return this._Id_audit;
			}
			set
			{
				if ((this._Id_audit != value))
				{
					this.OnId_auditChanging(value);
					this.SendPropertyChanging();
					this._Id_audit = value;
					this.SendPropertyChanged("Id_audit");
					this.OnId_auditChanged();
				}
			}
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="Int NOT NULL")]
		public int Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this.OnId_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_instance = value;
					this.SendPropertyChanged("Id_instance");
					this.OnId_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="tx_action", Storage="_Tx_action", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string Tx_action
		{
			get
			{
				return this._Tx_action;
			}
			set
			{
				if ((this._Tx_action != value))
				{
					this.OnTx_actionChanging(value);
					this.SendPropertyChanging();
					this._Tx_action = value;
					this.SendPropertyChanged("Tx_action");
					this.OnTx_actionChanged();
				}
			}
		}
		
		[Column(Name="b_ignore_deps", Storage="_B_ignore_deps", DbType="VarChar(1)")]
		public string B_ignore_deps
		{
			get
			{
				return this._B_ignore_deps;
			}
			set
			{
				if ((this._B_ignore_deps != value))
				{
					this.OnB_ignore_depsChanging(value);
					this.SendPropertyChanging();
					this._B_ignore_deps = value;
					this.SendPropertyChanged("B_ignore_deps");
					this.OnB_ignore_depsChanged();
				}
			}
		}
		
		[Column(Name="dt_effective", Storage="_Dt_effective", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_effective
		{
			get
			{
				return this._Dt_effective;
			}
			set
			{
				if ((this._Dt_effective != value))
				{
					this.OnDt_effectiveChanging(value);
					this.SendPropertyChanging();
					this._Dt_effective = value;
					this.SendPropertyChanged("Dt_effective");
					this.OnDt_effectiveChanged();
				}
			}
		}
		
		[Column(Name="tx_detail", Storage="_Tx_detail", DbType="NVarChar(2048)")]
		public string Tx_detail
		{
			get
			{
				return this._Tx_detail;
			}
			set
			{
				if ((this._Tx_detail != value))
				{
					this.OnTx_detailChanging(value);
					this.SendPropertyChanging();
					this._Tx_detail = value;
					this.SendPropertyChanged("Tx_detail");
					this.OnTx_detailChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_inst_audit", Storage="_T_recevent_inst", ThisKey="Id_instance", OtherKey="Id_instance", IsForeignKey=true)]
		public T_recevent_inst T_recevent_inst
		{
			get
			{
				return this._T_recevent_inst.Entity;
			}
			set
			{
				T_recevent_inst previousValue = this._T_recevent_inst.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_inst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_inst.Entity = null;
						previousValue.T_recevent_inst_audit.Remove(this);
					}
					this._T_recevent_inst.Entity = value;
					if ((value != null))
					{
						value.T_recevent_inst_audit.Add(this);
						this._Id_instance = value.Id_instance;
					}
					else
					{
						this._Id_instance = default(int);
					}
					this.SendPropertyChanged("T_recevent_inst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_machine")]
	public partial class T_recevent_machine
	{
		
		private int _Id_event;
		
		private string _Tx_canrunonmachine;
		
		public T_recevent_machine()
		{
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL")]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this._Id_event = value;
				}
			}
		}
		
		[Column(Name="tx_canrunonmachine", Storage="_Tx_canrunonmachine", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_canrunonmachine
		{
			get
			{
				return this._Tx_canrunonmachine;
			}
			set
			{
				if ((this._Tx_canrunonmachine != value))
				{
					this._Tx_canrunonmachine = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_run")]
	public partial class T_recevent_run : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_run;
		
		private int _Id_instance;
		
		private string _Tx_type;
		
		private System.Nullable<int> _Id_reversed_run;
		
		private string _Tx_machine;
		
		private System.DateTime _Dt_start;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
		private string _Tx_status;
		
		private string _Tx_detail;
		
		private EntityRef<T_recevent_inst> _T_recevent_inst;
		
		private EntitySet<T_recevent_run_details> _T_recevent_run_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_runChanging(int value);
    partial void OnId_runChanged();
    partial void OnId_instanceChanging(int value);
    partial void OnId_instanceChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    partial void OnId_reversed_runChanging(System.Nullable<int> value);
    partial void OnId_reversed_runChanged();
    partial void OnTx_machineChanging(string value);
    partial void OnTx_machineChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    partial void OnTx_statusChanging(string value);
    partial void OnTx_statusChanged();
    partial void OnTx_detailChanging(string value);
    partial void OnTx_detailChanged();
    #endregion
		
		public T_recevent_run()
		{
			this._T_recevent_inst = default(EntityRef<T_recevent_inst>);
			this._T_recevent_run_details = new EntitySet<T_recevent_run_details>(new Action<T_recevent_run_details>(this.attach_T_recevent_run_details), new Action<T_recevent_run_details>(this.detach_T_recevent_run_details));
			OnCreated();
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="Int NOT NULL")]
		public int Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this.OnId_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_instance = value;
					this.SendPropertyChanged("Id_instance");
					this.OnId_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Column(Name="id_reversed_run", Storage="_Id_reversed_run", DbType="Int")]
		public System.Nullable<int> Id_reversed_run
		{
			get
			{
				return this._Id_reversed_run;
			}
			set
			{
				if ((this._Id_reversed_run != value))
				{
					this.OnId_reversed_runChanging(value);
					this.SendPropertyChanging();
					this._Id_reversed_run = value;
					this.SendPropertyChanged("Id_reversed_run");
					this.OnId_reversed_runChanged();
				}
			}
		}
		
		[Column(Name="tx_machine", Storage="_Tx_machine", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Tx_machine
		{
			get
			{
				return this._Tx_machine;
			}
			set
			{
				if ((this._Tx_machine != value))
				{
					this.OnTx_machineChanging(value);
					this.SendPropertyChanging();
					this._Tx_machine = value;
					this.SendPropertyChanged("Tx_machine");
					this.OnTx_machineChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="tx_status", Storage="_Tx_status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Tx_status
		{
			get
			{
				return this._Tx_status;
			}
			set
			{
				if ((this._Tx_status != value))
				{
					this.OnTx_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_status = value;
					this.SendPropertyChanged("Tx_status");
					this.OnTx_statusChanged();
				}
			}
		}
		
		[Column(Name="tx_detail", Storage="_Tx_detail", DbType="NVarChar(2048)")]
		public string Tx_detail
		{
			get
			{
				return this._Tx_detail;
			}
			set
			{
				if ((this._Tx_detail != value))
				{
					this.OnTx_detailChanging(value);
					this.SendPropertyChanging();
					this._Tx_detail = value;
					this.SendPropertyChanged("Tx_detail");
					this.OnTx_detailChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_run", Storage="_T_recevent_inst", ThisKey="Id_instance", OtherKey="Id_instance", IsForeignKey=true)]
		public T_recevent_inst T_recevent_inst
		{
			get
			{
				return this._T_recevent_inst.Entity;
			}
			set
			{
				T_recevent_inst previousValue = this._T_recevent_inst.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_inst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_inst.Entity = null;
						previousValue.T_recevent_run.Remove(this);
					}
					this._T_recevent_inst.Entity = value;
					if ((value != null))
					{
						value.T_recevent_run.Add(this);
						this._Id_instance = value.Id_instance;
					}
					else
					{
						this._Id_instance = default(int);
					}
					this.SendPropertyChanged("T_recevent_inst");
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_run_details", Storage="_T_recevent_run_details", ThisKey="Id_run", OtherKey="Id_run", DeleteRule="NO ACTION")]
		public EntitySet<T_recevent_run_details> T_recevent_run_details
		{
			get
			{
				return this._T_recevent_run_details;
			}
			set
			{
				this._T_recevent_run_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_recevent_run_details(T_recevent_run_details entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_run = this;
		}
		
		private void detach_T_recevent_run_details(T_recevent_run_details entity)
		{
			this.SendPropertyChanging();
			entity.T_recevent_run = null;
		}
	}
	
	[Table(Name="dbo.t_recevent_run_batch")]
	public partial class T_recevent_run_batch
	{
		
		private int _Id_run;
		
		private string _Tx_batch_encoded;
		
		public T_recevent_run_batch()
		{
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int NOT NULL")]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this._Id_run = value;
				}
			}
		}
		
		[Column(Name="tx_batch_encoded", Storage="_Tx_batch_encoded", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_batch_encoded
		{
			get
			{
				return this._Tx_batch_encoded;
			}
			set
			{
				if ((this._Tx_batch_encoded != value))
				{
					this._Tx_batch_encoded = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_run_details")]
	public partial class T_recevent_run_details : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_detail;
		
		private int _Id_run;
		
		private string _Tx_type;
		
		private string _Tx_detail;
		
		private System.DateTime _Dt_crt;
		
		private EntityRef<T_recevent_run> _T_recevent_run;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_detailChanging(int value);
    partial void OnId_detailChanged();
    partial void OnId_runChanging(int value);
    partial void OnId_runChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    partial void OnTx_detailChanging(string value);
    partial void OnTx_detailChanged();
    partial void OnDt_crtChanging(System.DateTime value);
    partial void OnDt_crtChanged();
    #endregion
		
		public T_recevent_run_details()
		{
			this._T_recevent_run = default(EntityRef<T_recevent_run>);
			OnCreated();
		}
		
		[Column(Name="id_detail", Storage="_Id_detail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_detail
		{
			get
			{
				return this._Id_detail;
			}
			set
			{
				if ((this._Id_detail != value))
				{
					this.OnId_detailChanging(value);
					this.SendPropertyChanging();
					this._Id_detail = value;
					this.SendPropertyChanged("Id_detail");
					this.OnId_detailChanged();
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int NOT NULL")]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_detail", Storage="_Tx_detail", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Tx_detail
		{
			get
			{
				return this._Tx_detail;
			}
			set
			{
				if ((this._Tx_detail != value))
				{
					this.OnTx_detailChanging(value);
					this.SendPropertyChanging();
					this._Tx_detail = value;
					this.SendPropertyChanged("Tx_detail");
					this.OnTx_detailChanged();
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this.OnDt_crtChanging(value);
					this.SendPropertyChanging();
					this._Dt_crt = value;
					this.SendPropertyChanged("Dt_crt");
					this.OnDt_crtChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_run_details", Storage="_T_recevent_run", ThisKey="Id_run", OtherKey="Id_run", IsForeignKey=true)]
		public T_recevent_run T_recevent_run
		{
			get
			{
				return this._T_recevent_run.Entity;
			}
			set
			{
				T_recevent_run previousValue = this._T_recevent_run.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent_run.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent_run.Entity = null;
						previousValue.T_recevent_run_details.Remove(this);
					}
					this._T_recevent_run.Entity = value;
					if ((value != null))
					{
						value.T_recevent_run_details.Add(this);
						this._Id_run = value.Id_run;
					}
					else
					{
						this._Id_run = default(int);
					}
					this.SendPropertyChanged("T_recevent_run");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_run_failure_acc")]
	public partial class T_recevent_run_failure_acc
	{
		
		private int _Id_run;
		
		private int _Id_acc;
		
		public T_recevent_run_failure_acc()
		{
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int NOT NULL")]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this._Id_run = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recevent_scheduled")]
	public partial class T_recevent_scheduled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_event;
		
		private string _Interval_type;
		
		private System.Nullable<System.DateTime> _Start_date;
		
		private System.Nullable<int> _Interval;
		
		private string _Execution_times;
		
		private string _Days_of_week;
		
		private string _Days_of_month;
		
		private string _Is_paused;
		
		private System.Nullable<System.DateTime> _Override_date;
		
		private System.DateTime _Update_date;
		
		private EntityRef<T_recevent> _T_recevent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_eventChanging(int value);
    partial void OnId_eventChanged();
    partial void OnInterval_typeChanging(string value);
    partial void OnInterval_typeChanged();
    partial void OnStart_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_dateChanged();
    partial void OnIntervalChanging(System.Nullable<int> value);
    partial void OnIntervalChanged();
    partial void OnExecution_timesChanging(string value);
    partial void OnExecution_timesChanged();
    partial void OnDays_of_weekChanging(string value);
    partial void OnDays_of_weekChanged();
    partial void OnDays_of_monthChanging(string value);
    partial void OnDays_of_monthChanged();
    partial void OnIs_pausedChanging(string value);
    partial void OnIs_pausedChanged();
    partial void OnOverride_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnOverride_dateChanged();
    partial void OnUpdate_dateChanging(System.DateTime value);
    partial void OnUpdate_dateChanged();
    #endregion
		
		public T_recevent_scheduled()
		{
			this._T_recevent = default(EntityRef<T_recevent>);
			OnCreated();
		}
		
		[Column(Name="id_event", Storage="_Id_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_event
		{
			get
			{
				return this._Id_event;
			}
			set
			{
				if ((this._Id_event != value))
				{
					this.OnId_eventChanging(value);
					this.SendPropertyChanging();
					this._Id_event = value;
					this.SendPropertyChanged("Id_event");
					this.OnId_eventChanged();
				}
			}
		}
		
		[Column(Name="interval_type", Storage="_Interval_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Interval_type
		{
			get
			{
				return this._Interval_type;
			}
			set
			{
				if ((this._Interval_type != value))
				{
					this.OnInterval_typeChanging(value);
					this.SendPropertyChanging();
					this._Interval_type = value;
					this.SendPropertyChanged("Interval_type");
					this.OnInterval_typeChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="interval", Storage="_Interval", DbType="Int")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._Interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[Column(Name="execution_times", Storage="_Execution_times", DbType="VarChar(2000)")]
		public string Execution_times
		{
			get
			{
				return this._Execution_times;
			}
			set
			{
				if ((this._Execution_times != value))
				{
					this.OnExecution_timesChanging(value);
					this.SendPropertyChanging();
					this._Execution_times = value;
					this.SendPropertyChanged("Execution_times");
					this.OnExecution_timesChanged();
				}
			}
		}
		
		[Column(Name="days_of_week", Storage="_Days_of_week", DbType="VarChar(2000)")]
		public string Days_of_week
		{
			get
			{
				return this._Days_of_week;
			}
			set
			{
				if ((this._Days_of_week != value))
				{
					this.OnDays_of_weekChanging(value);
					this.SendPropertyChanging();
					this._Days_of_week = value;
					this.SendPropertyChanged("Days_of_week");
					this.OnDays_of_weekChanged();
				}
			}
		}
		
		[Column(Name="days_of_month", Storage="_Days_of_month", DbType="VarChar(2000)")]
		public string Days_of_month
		{
			get
			{
				return this._Days_of_month;
			}
			set
			{
				if ((this._Days_of_month != value))
				{
					this.OnDays_of_monthChanging(value);
					this.SendPropertyChanging();
					this._Days_of_month = value;
					this.SendPropertyChanged("Days_of_month");
					this.OnDays_of_monthChanged();
				}
			}
		}
		
		[Column(Name="is_paused", Storage="_Is_paused", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Is_paused
		{
			get
			{
				return this._Is_paused;
			}
			set
			{
				if ((this._Is_paused != value))
				{
					this.OnIs_pausedChanging(value);
					this.SendPropertyChanging();
					this._Is_paused = value;
					this.SendPropertyChanged("Is_paused");
					this.OnIs_pausedChanged();
				}
			}
		}
		
		[Column(Name="override_date", Storage="_Override_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Override_date
		{
			get
			{
				return this._Override_date;
			}
			set
			{
				if ((this._Override_date != value))
				{
					this.OnOverride_dateChanging(value);
					this.SendPropertyChanging();
					this._Override_date = value;
					this.SendPropertyChanged("Override_date");
					this.OnOverride_dateChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_Update_date", DbType="DateTime NOT NULL")]
		public System.DateTime Update_date
		{
			get
			{
				return this._Update_date;
			}
			set
			{
				if ((this._Update_date != value))
				{
					this.OnUpdate_dateChanging(value);
					this.SendPropertyChanging();
					this._Update_date = value;
					this.SendPropertyChanged("Update_date");
					this.OnUpdate_dateChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_recevent_scheduled", Storage="_T_recevent", ThisKey="Id_event", OtherKey="Id_event", IsForeignKey=true)]
		public T_recevent T_recevent
		{
			get
			{
				return this._T_recevent.Entity;
			}
			set
			{
				T_recevent previousValue = this._T_recevent.Entity;
				if (((previousValue != value) 
							|| (this._T_recevent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recevent.Entity = null;
						previousValue.T_recevent_scheduled = null;
					}
					this._T_recevent.Entity = value;
					if ((value != null))
					{
						value.T_recevent_scheduled = this;
						this._Id_event = value.Id_event;
					}
					else
					{
						this._Id_event = default(int);
					}
					this.SendPropertyChanged("T_recevent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recur")]
	public partial class T_recur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private string _B_advance;
		
		private string _B_prorate_on_deactivate;
		
		private string _B_prorate_instantly;
		
		private string _B_prorate_on_activate;
		
		private string _B_prorate_on_rate_change;
		
		private string _B_fixed_proration_length;
		
		private System.Nullable<int> _Id_usage_cycle;
		
		private System.Nullable<int> _Id_cycle_type;
		
		private string _Tx_cycle_mode;
		
		private string _B_charge_per_participant;
		
		private System.Nullable<int> _N_unit_name;
		
		private string _Nm_unit_name;
		
		private System.Nullable<int> _N_unit_display_name;
		
		private string _Nm_unit_display_name;
		
		private int _N_rating_type;
		
		private string _B_integral;
		
		private decimal _Max_unit_value;
		
		private decimal _Min_unit_value;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_recur_enum> _T_recur_enum;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
		private EntityRef<T_usage_cycle_type> _T_usage_cycle_type;
		
		private EntitySet<T_gsub_recur_map> _T_gsub_recur_map;
		
		private EntitySet<T_recur_value> _T_recur_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnB_advanceChanging(string value);
    partial void OnB_advanceChanged();
    partial void OnB_prorate_on_deactivateChanging(string value);
    partial void OnB_prorate_on_deactivateChanged();
    partial void OnB_prorate_instantlyChanging(string value);
    partial void OnB_prorate_instantlyChanged();
    partial void OnB_prorate_on_activateChanging(string value);
    partial void OnB_prorate_on_activateChanged();
    partial void OnB_prorate_on_rate_changeChanging(string value);
    partial void OnB_prorate_on_rate_changeChanged();
    partial void OnB_fixed_proration_lengthChanging(string value);
    partial void OnB_fixed_proration_lengthChanged();
    partial void OnId_usage_cycleChanging(System.Nullable<int> value);
    partial void OnId_usage_cycleChanged();
    partial void OnId_cycle_typeChanging(System.Nullable<int> value);
    partial void OnId_cycle_typeChanged();
    partial void OnTx_cycle_modeChanging(string value);
    partial void OnTx_cycle_modeChanged();
    partial void OnB_charge_per_participantChanging(string value);
    partial void OnB_charge_per_participantChanged();
    partial void OnN_unit_nameChanging(System.Nullable<int> value);
    partial void OnN_unit_nameChanged();
    partial void OnNm_unit_nameChanging(string value);
    partial void OnNm_unit_nameChanged();
    partial void OnN_unit_display_nameChanging(System.Nullable<int> value);
    partial void OnN_unit_display_nameChanged();
    partial void OnNm_unit_display_nameChanging(string value);
    partial void OnNm_unit_display_nameChanged();
    partial void OnN_rating_typeChanging(int value);
    partial void OnN_rating_typeChanged();
    partial void OnB_integralChanging(string value);
    partial void OnB_integralChanged();
    partial void OnMax_unit_valueChanging(decimal value);
    partial void OnMax_unit_valueChanged();
    partial void OnMin_unit_valueChanging(decimal value);
    partial void OnMin_unit_valueChanged();
    #endregion
		
		public T_recur()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_recur_enum = new EntitySet<T_recur_enum>(new Action<T_recur_enum>(this.attach_T_recur_enum), new Action<T_recur_enum>(this.detach_T_recur_enum));
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			this._T_usage_cycle_type = default(EntityRef<T_usage_cycle_type>);
			this._T_gsub_recur_map = new EntitySet<T_gsub_recur_map>(new Action<T_gsub_recur_map>(this.attach_T_gsub_recur_map), new Action<T_gsub_recur_map>(this.detach_T_gsub_recur_map));
			this._T_recur_value = new EntitySet<T_recur_value>(new Action<T_recur_value>(this.attach_T_recur_value), new Action<T_recur_value>(this.detach_T_recur_value));
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="b_advance", Storage="_B_advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_advance
		{
			get
			{
				return this._B_advance;
			}
			set
			{
				if ((this._B_advance != value))
				{
					this.OnB_advanceChanging(value);
					this.SendPropertyChanging();
					this._B_advance = value;
					this.SendPropertyChanged("B_advance");
					this.OnB_advanceChanged();
				}
			}
		}
		
		[Column(Name="b_prorate_on_deactivate", Storage="_B_prorate_on_deactivate", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_prorate_on_deactivate
		{
			get
			{
				return this._B_prorate_on_deactivate;
			}
			set
			{
				if ((this._B_prorate_on_deactivate != value))
				{
					this.OnB_prorate_on_deactivateChanging(value);
					this.SendPropertyChanging();
					this._B_prorate_on_deactivate = value;
					this.SendPropertyChanged("B_prorate_on_deactivate");
					this.OnB_prorate_on_deactivateChanged();
				}
			}
		}
		
		[Column(Name="b_prorate_instantly", Storage="_B_prorate_instantly", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_prorate_instantly
		{
			get
			{
				return this._B_prorate_instantly;
			}
			set
			{
				if ((this._B_prorate_instantly != value))
				{
					this.OnB_prorate_instantlyChanging(value);
					this.SendPropertyChanging();
					this._B_prorate_instantly = value;
					this.SendPropertyChanged("B_prorate_instantly");
					this.OnB_prorate_instantlyChanged();
				}
			}
		}
		
		[Column(Name="b_prorate_on_activate", Storage="_B_prorate_on_activate", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_prorate_on_activate
		{
			get
			{
				return this._B_prorate_on_activate;
			}
			set
			{
				if ((this._B_prorate_on_activate != value))
				{
					this.OnB_prorate_on_activateChanging(value);
					this.SendPropertyChanging();
					this._B_prorate_on_activate = value;
					this.SendPropertyChanged("B_prorate_on_activate");
					this.OnB_prorate_on_activateChanged();
				}
			}
		}
		
		[Column(Name="b_prorate_on_rate_change", Storage="_B_prorate_on_rate_change", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_prorate_on_rate_change
		{
			get
			{
				return this._B_prorate_on_rate_change;
			}
			set
			{
				if ((this._B_prorate_on_rate_change != value))
				{
					this.OnB_prorate_on_rate_changeChanging(value);
					this.SendPropertyChanging();
					this._B_prorate_on_rate_change = value;
					this.SendPropertyChanged("B_prorate_on_rate_change");
					this.OnB_prorate_on_rate_changeChanged();
				}
			}
		}
		
		[Column(Name="b_fixed_proration_length", Storage="_B_fixed_proration_length", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_fixed_proration_length
		{
			get
			{
				return this._B_fixed_proration_length;
			}
			set
			{
				if ((this._B_fixed_proration_length != value))
				{
					this.OnB_fixed_proration_lengthChanging(value);
					this.SendPropertyChanging();
					this._B_fixed_proration_length = value;
					this.SendPropertyChanged("B_fixed_proration_length");
					this.OnB_fixed_proration_lengthChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int")]
		public System.Nullable<int> Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int")]
		public System.Nullable<int> Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_cycle_mode", Storage="_Tx_cycle_mode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Tx_cycle_mode
		{
			get
			{
				return this._Tx_cycle_mode;
			}
			set
			{
				if ((this._Tx_cycle_mode != value))
				{
					this.OnTx_cycle_modeChanging(value);
					this.SendPropertyChanging();
					this._Tx_cycle_mode = value;
					this.SendPropertyChanged("Tx_cycle_mode");
					this.OnTx_cycle_modeChanged();
				}
			}
		}
		
		[Column(Name="b_charge_per_participant", Storage="_B_charge_per_participant", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_charge_per_participant
		{
			get
			{
				return this._B_charge_per_participant;
			}
			set
			{
				if ((this._B_charge_per_participant != value))
				{
					this.OnB_charge_per_participantChanging(value);
					this.SendPropertyChanging();
					this._B_charge_per_participant = value;
					this.SendPropertyChanged("B_charge_per_participant");
					this.OnB_charge_per_participantChanged();
				}
			}
		}
		
		[Column(Name="n_unit_name", Storage="_N_unit_name", DbType="Int")]
		public System.Nullable<int> N_unit_name
		{
			get
			{
				return this._N_unit_name;
			}
			set
			{
				if ((this._N_unit_name != value))
				{
					this.OnN_unit_nameChanging(value);
					this.SendPropertyChanging();
					this._N_unit_name = value;
					this.SendPropertyChanged("N_unit_name");
					this.OnN_unit_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_unit_name", Storage="_Nm_unit_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_unit_name
		{
			get
			{
				return this._Nm_unit_name;
			}
			set
			{
				if ((this._Nm_unit_name != value))
				{
					this.OnNm_unit_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_unit_name = value;
					this.SendPropertyChanged("Nm_unit_name");
					this.OnNm_unit_nameChanged();
				}
			}
		}
		
		[Column(Name="n_unit_display_name", Storage="_N_unit_display_name", DbType="Int")]
		public System.Nullable<int> N_unit_display_name
		{
			get
			{
				return this._N_unit_display_name;
			}
			set
			{
				if ((this._N_unit_display_name != value))
				{
					this.OnN_unit_display_nameChanging(value);
					this.SendPropertyChanging();
					this._N_unit_display_name = value;
					this.SendPropertyChanged("N_unit_display_name");
					this.OnN_unit_display_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_unit_display_name", Storage="_Nm_unit_display_name", DbType="NVarChar(255)")]
		public string Nm_unit_display_name
		{
			get
			{
				return this._Nm_unit_display_name;
			}
			set
			{
				if ((this._Nm_unit_display_name != value))
				{
					this.OnNm_unit_display_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_unit_display_name = value;
					this.SendPropertyChanged("Nm_unit_display_name");
					this.OnNm_unit_display_nameChanged();
				}
			}
		}
		
		[Column(Name="n_rating_type", Storage="_N_rating_type", DbType="Int NOT NULL")]
		public int N_rating_type
		{
			get
			{
				return this._N_rating_type;
			}
			set
			{
				if ((this._N_rating_type != value))
				{
					this.OnN_rating_typeChanging(value);
					this.SendPropertyChanging();
					this._N_rating_type = value;
					this.SendPropertyChanged("N_rating_type");
					this.OnN_rating_typeChanged();
				}
			}
		}
		
		[Column(Name="b_integral", Storage="_B_integral", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_integral
		{
			get
			{
				return this._B_integral;
			}
			set
			{
				if ((this._B_integral != value))
				{
					this.OnB_integralChanging(value);
					this.SendPropertyChanging();
					this._B_integral = value;
					this.SendPropertyChanged("B_integral");
					this.OnB_integralChanged();
				}
			}
		}
		
		[Column(Name="max_unit_value", Storage="_Max_unit_value", DbType="Decimal(22,10) NOT NULL")]
		public decimal Max_unit_value
		{
			get
			{
				return this._Max_unit_value;
			}
			set
			{
				if ((this._Max_unit_value != value))
				{
					this.OnMax_unit_valueChanging(value);
					this.SendPropertyChanging();
					this._Max_unit_value = value;
					this.SendPropertyChanged("Max_unit_value");
					this.OnMax_unit_valueChanged();
				}
			}
		}
		
		[Column(Name="min_unit_value", Storage="_Min_unit_value", DbType="Decimal(22,10) NOT NULL")]
		public decimal Min_unit_value
		{
			get
			{
				return this._Min_unit_value;
			}
			set
			{
				if ((this._Min_unit_value != value))
				{
					this.OnMin_unit_valueChanging(value);
					this.SendPropertyChanging();
					this._Min_unit_value = value;
					this.SendPropertyChanged("Min_unit_value");
					this.OnMin_unit_valueChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_RECUR", Storage="_T_base_props", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_recur = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_recur = this;
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="fk1_t_recur_enum", Storage="_T_recur_enum", ThisKey="Id_prop", OtherKey="Id_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_recur_enum> T_recur_enum
		{
			get
			{
				return this._T_recur_enum;
			}
			set
			{
				this._T_recur_enum.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_RECUR", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_recur.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_recur.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		[Association(Name="fk3_t_recur", Storage="_T_usage_cycle_type", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", IsForeignKey=true)]
		public T_usage_cycle_type T_usage_cycle_type
		{
			get
			{
				return this._T_usage_cycle_type.Entity;
			}
			set
			{
				T_usage_cycle_type previousValue = this._T_usage_cycle_type.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle_type.Entity = null;
						previousValue.T_recur.Remove(this);
					}
					this._T_usage_cycle_type.Entity = value;
					if ((value != null))
					{
						value.T_recur.Add(this);
						this._Id_cycle_type = value.Id_cycle_type;
					}
					else
					{
						this._Id_cycle_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_usage_cycle_type");
				}
			}
		}
		
		[Association(Name="t_gsub_recur_map_fk2", Storage="_T_gsub_recur_map", ThisKey="Id_prop", OtherKey="Id_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_gsub_recur_map> T_gsub_recur_map
		{
			get
			{
				return this._T_gsub_recur_map;
			}
			set
			{
				this._T_gsub_recur_map.Assign(value);
			}
		}
		
		[Association(Name="t_recur_value_fk1", Storage="_T_recur_value", ThisKey="Id_prop", OtherKey="Id_prop", DeleteRule="NO ACTION")]
		public EntitySet<T_recur_value> T_recur_value
		{
			get
			{
				return this._T_recur_value;
			}
			set
			{
				this._T_recur_value.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_recur_enum(T_recur_enum entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = this;
		}
		
		private void detach_T_recur_enum(T_recur_enum entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = null;
		}
		
		private void attach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = this;
		}
		
		private void detach_T_gsub_recur_map(T_gsub_recur_map entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = null;
		}
		
		private void attach_T_recur_value(T_recur_value entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = this;
		}
		
		private void detach_T_recur_value(T_recur_value entity)
		{
			this.SendPropertyChanging();
			entity.T_recur = null;
		}
	}
	
	[Table(Name="dbo.t_recur_enum")]
	public partial class T_recur_enum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private decimal _Enum_value;
		
		private EntityRef<T_recur> _T_recur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnEnum_valueChanging(decimal value);
    partial void OnEnum_valueChanged();
    #endregion
		
		public T_recur_enum()
		{
			this._T_recur = default(EntityRef<T_recur>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="enum_value", Storage="_Enum_value", DbType="Decimal(22,10) NOT NULL", IsPrimaryKey=true)]
		public decimal Enum_value
		{
			get
			{
				return this._Enum_value;
			}
			set
			{
				if ((this._Enum_value != value))
				{
					this.OnEnum_valueChanging(value);
					this.SendPropertyChanging();
					this._Enum_value = value;
					this.SendPropertyChanged("Enum_value");
					this.OnEnum_valueChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_recur_enum", Storage="_T_recur", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_recur T_recur
		{
			get
			{
				return this._T_recur.Entity;
			}
			set
			{
				T_recur previousValue = this._T_recur.Entity;
				if (((previousValue != value) 
							|| (this._T_recur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recur.Entity = null;
						previousValue.T_recur_enum.Remove(this);
					}
					this._T_recur.Entity = value;
					if ((value != null))
					{
						value.T_recur_enum.Add(this);
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_recur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recur_value")]
	public partial class T_recur_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_prop;
		
		private int _Id_sub;
		
		private decimal _N_value;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		private EntityRef<T_recur> _T_recur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_propChanging(int value);
    partial void OnId_propChanged();
    partial void OnId_subChanging(int value);
    partial void OnId_subChanged();
    partial void OnN_valueChanging(decimal value);
    partial void OnN_valueChanged();
    partial void OnVt_startChanging(System.DateTime value);
    partial void OnVt_startChanged();
    partial void OnVt_endChanging(System.DateTime value);
    partial void OnVt_endChanged();
    partial void OnTt_startChanging(System.DateTime value);
    partial void OnTt_startChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    #endregion
		
		public T_recur_value()
		{
			this._T_recur = default(EntityRef<T_recur>);
			OnCreated();
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this.OnId_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prop = value;
					this.SendPropertyChanged("Id_prop");
					this.OnId_propChanged();
				}
			}
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this.OnId_subChanging(value);
					this.SendPropertyChanging();
					this._Id_sub = value;
					this.SendPropertyChanged("Id_sub");
					this.OnId_subChanged();
				}
			}
		}
		
		[Column(Name="n_value", Storage="_N_value", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_value
		{
			get
			{
				return this._N_value;
			}
			set
			{
				if ((this._N_value != value))
				{
					this.OnN_valueChanging(value);
					this.SendPropertyChanging();
					this._N_value = value;
					this.SendPropertyChanged("N_value");
					this.OnN_valueChanged();
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this.OnVt_startChanging(value);
					this.SendPropertyChanging();
					this._Vt_start = value;
					this.SendPropertyChanged("Vt_start");
					this.OnVt_startChanged();
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this.OnVt_endChanging(value);
					this.SendPropertyChanging();
					this._Vt_end = value;
					this.SendPropertyChanged("Vt_end");
					this.OnVt_endChanged();
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this.OnTt_startChanging(value);
					this.SendPropertyChanging();
					this._Tt_start = value;
					this.SendPropertyChanged("Tt_start");
					this.OnTt_startChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		[Association(Name="t_recur_value_fk1", Storage="_T_recur", ThisKey="Id_prop", OtherKey="Id_prop", IsForeignKey=true)]
		public T_recur T_recur
		{
			get
			{
				return this._T_recur.Entity;
			}
			set
			{
				T_recur previousValue = this._T_recur.Entity;
				if (((previousValue != value) 
							|| (this._T_recur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_recur.Entity = null;
						previousValue.T_recur_value.Remove(this);
					}
					this._T_recur.Entity = value;
					if ((value != null))
					{
						value.T_recur_value.Add(this);
						this._Id_prop = value.Id_prop;
					}
					else
					{
						this._Id_prop = default(int);
					}
					this.SendPropertyChanged("T_recur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_recur_value_temp")]
	public partial class T_recur_value_temp
	{
		
		private int _Id_prop;
		
		private int _Id_sub;
		
		private decimal _N_value;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_recur_value_temp()
		{
		}
		
		[Column(Name="id_prop", Storage="_Id_prop", DbType="Int NOT NULL")]
		public int Id_prop
		{
			get
			{
				return this._Id_prop;
			}
			set
			{
				if ((this._Id_prop != value))
				{
					this._Id_prop = value;
				}
			}
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int NOT NULL")]
		public int Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this._Id_sub = value;
				}
			}
		}
		
		[Column(Name="n_value", Storage="_N_value", DbType="Decimal(22,10) NOT NULL")]
		public decimal N_value
		{
			get
			{
				return this._N_value;
			}
			set
			{
				if ((this._N_value != value))
				{
					this._N_value = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recur_window")]
	public partial class T_recur_window
	{
		
		private System.DateTime _C_CycleEffectiveDate;
		
		private System.DateTime _C_CycleEffectiveStart;
		
		private System.DateTime _C_CycleEffectiveEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.DateTime _C_SubscriptionEnd;
		
		private string _C_Advance;
		
		private int _C__AccountID;
		
		private int _C__PayingAccount;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private System.Nullable<int> _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private System.DateTime _C_PayerStart;
		
		private System.DateTime _C_PayerEnd;
		
		private int _C__SubscriptionID;
		
		private System.Nullable<System.DateTime> _C_UnitValueStart;
		
		private System.Nullable<System.DateTime> _C_UnitValueEnd;
		
		private System.Nullable<decimal> _C_UnitValue;
		
		private System.Nullable<System.DateTime> _C_BilledThroughDate;
		
		private int _C_LastIdRun;
		
		private System.Nullable<System.DateTime> _C_MembershipStart;
		
		private System.Nullable<System.DateTime> _C_MembershipEnd;
		
		public T_recur_window()
		{
		}
		
		[Column(Name="c_CycleEffectiveDate", Storage="_C_CycleEffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_CycleEffectiveDate
		{
			get
			{
				return this._C_CycleEffectiveDate;
			}
			set
			{
				if ((this._C_CycleEffectiveDate != value))
				{
					this._C_CycleEffectiveDate = value;
				}
			}
		}
		
		[Column(Name="c_CycleEffectiveStart", Storage="_C_CycleEffectiveStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_CycleEffectiveStart
		{
			get
			{
				return this._C_CycleEffectiveStart;
			}
			set
			{
				if ((this._C_CycleEffectiveStart != value))
				{
					this._C_CycleEffectiveStart = value;
				}
			}
		}
		
		[Column(Name="c_CycleEffectiveEnd", Storage="_C_CycleEffectiveEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_CycleEffectiveEnd
		{
			get
			{
				return this._C_CycleEffectiveEnd;
			}
			set
			{
				if ((this._C_CycleEffectiveEnd != value))
				{
					this._C_CycleEffectiveEnd = value;
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this._C_SubscriptionStart = value;
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this._C_SubscriptionEnd = value;
				}
			}
		}
		
		[Column(Name="c_Advance", Storage="_C_Advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_Advance
		{
			get
			{
				return this._C_Advance;
			}
			set
			{
				if ((this._C_Advance != value))
				{
					this._C_Advance = value;
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this._C__AccountID = value;
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int NOT NULL")]
		public int C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this._C__PayingAccount = value;
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this._C__PriceableItemInstanceID = value;
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this._C__PriceableItemTemplateID = value;
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this._C__ProductOfferingID = value;
				}
			}
		}
		
		[Column(Name="c_PayerStart", Storage="_C_PayerStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_PayerStart
		{
			get
			{
				return this._C_PayerStart;
			}
			set
			{
				if ((this._C_PayerStart != value))
				{
					this._C_PayerStart = value;
				}
			}
		}
		
		[Column(Name="c_PayerEnd", Storage="_C_PayerEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_PayerEnd
		{
			get
			{
				return this._C_PayerEnd;
			}
			set
			{
				if ((this._C_PayerEnd != value))
				{
					this._C_PayerEnd = value;
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this._C__SubscriptionID = value;
				}
			}
		}
		
		[Column(Name="c_UnitValueStart", Storage="_C_UnitValueStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UnitValueStart
		{
			get
			{
				return this._C_UnitValueStart;
			}
			set
			{
				if ((this._C_UnitValueStart != value))
				{
					this._C_UnitValueStart = value;
				}
			}
		}
		
		[Column(Name="c_UnitValueEnd", Storage="_C_UnitValueEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_UnitValueEnd
		{
			get
			{
				return this._C_UnitValueEnd;
			}
			set
			{
				if ((this._C_UnitValueEnd != value))
				{
					this._C_UnitValueEnd = value;
				}
			}
		}
		
		[Column(Name="c_UnitValue", Storage="_C_UnitValue", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_UnitValue
		{
			get
			{
				return this._C_UnitValue;
			}
			set
			{
				if ((this._C_UnitValue != value))
				{
					this._C_UnitValue = value;
				}
			}
		}
		
		[Column(Name="c_BilledThroughDate", Storage="_C_BilledThroughDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BilledThroughDate
		{
			get
			{
				return this._C_BilledThroughDate;
			}
			set
			{
				if ((this._C_BilledThroughDate != value))
				{
					this._C_BilledThroughDate = value;
				}
			}
		}
		
		[Column(Name="c_LastIdRun", Storage="_C_LastIdRun", DbType="Int NOT NULL")]
		public int C_LastIdRun
		{
			get
			{
				return this._C_LastIdRun;
			}
			set
			{
				if ((this._C_LastIdRun != value))
				{
					this._C_LastIdRun = value;
				}
			}
		}
		
		[Column(Name="c_MembershipStart", Storage="_C_MembershipStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_MembershipStart
		{
			get
			{
				return this._C_MembershipStart;
			}
			set
			{
				if ((this._C_MembershipStart != value))
				{
					this._C_MembershipStart = value;
				}
			}
		}
		
		[Column(Name="c_MembershipEnd", Storage="_C_MembershipEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_MembershipEnd
		{
			get
			{
				return this._C_MembershipEnd;
			}
			set
			{
				if ((this._C_MembershipEnd != value))
				{
					this._C_MembershipEnd = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_recurring_event_acct_log")]
	public partial class T_recurring_event_acct_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private int _Id_run;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnId_runChanging(int value);
    partial void OnId_runChanged();
    #endregion
		
		public T_recurring_event_acct_log()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="id_run", Storage="_Id_run", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_run
		{
			get
			{
				return this._Id_run;
			}
			set
			{
				if ((this._Id_run != value))
				{
					this.OnId_runChanging(value);
					this.SendPropertyChanging();
					this._Id_run = value;
					this.SendPropertyChanged("Id_run");
					this.OnId_runChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_ReportingDBLog")]
	public partial class T_ReportingDBLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NameOfReportingDB;
		
		private string _DoBackup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameOfReportingDBChanging(string value);
    partial void OnNameOfReportingDBChanged();
    partial void OnDoBackupChanging(string value);
    partial void OnDoBackupChanged();
    #endregion
		
		public T_ReportingDBLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_NameOfReportingDB", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NameOfReportingDB
		{
			get
			{
				return this._NameOfReportingDB;
			}
			set
			{
				if ((this._NameOfReportingDB != value))
				{
					this.OnNameOfReportingDBChanging(value);
					this.SendPropertyChanging();
					this._NameOfReportingDB = value;
					this.SendPropertyChanged("NameOfReportingDB");
					this.OnNameOfReportingDBChanged();
				}
			}
		}
		
		[Column(Name="doBackup", Storage="_DoBackup", DbType="VarChar(1)")]
		public string DoBackup
		{
			get
			{
				return this._DoBackup;
			}
			set
			{
				if ((this._DoBackup != value))
				{
					this.OnDoBackupChanging(value);
					this.SendPropertyChanging();
					this._DoBackup = value;
					this.SendPropertyChanged("DoBackup");
					this.OnDoBackupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_rerun")]
	public partial class T_rerun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_rerun;
		
		private string _Tx_filter;
		
		private string _Tx_tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rerunChanging(int value);
    partial void OnId_rerunChanged();
    partial void OnTx_filterChanging(string value);
    partial void OnTx_filterChanged();
    partial void OnTx_tagChanging(string value);
    partial void OnTx_tagChanged();
    #endregion
		
		public T_rerun()
		{
			OnCreated();
		}
		
		[Column(Name="id_rerun", Storage="_Id_rerun", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_rerun
		{
			get
			{
				return this._Id_rerun;
			}
			set
			{
				if ((this._Id_rerun != value))
				{
					this.OnId_rerunChanging(value);
					this.SendPropertyChanging();
					this._Id_rerun = value;
					this.SendPropertyChanged("Id_rerun");
					this.OnId_rerunChanged();
				}
			}
		}
		
		[Column(Name="tx_filter", Storage="_Tx_filter", DbType="NVarChar(255)")]
		public string Tx_filter
		{
			get
			{
				return this._Tx_filter;
			}
			set
			{
				if ((this._Tx_filter != value))
				{
					this.OnTx_filterChanging(value);
					this.SendPropertyChanging();
					this._Tx_filter = value;
					this.SendPropertyChanged("Tx_filter");
					this.OnTx_filterChanged();
				}
			}
		}
		
		[Column(Name="tx_tag", Storage="_Tx_tag", DbType="NVarChar(255)")]
		public string Tx_tag
		{
			get
			{
				return this._Tx_tag;
			}
			set
			{
				if ((this._Tx_tag != value))
				{
					this.OnTx_tagChanging(value);
					this.SendPropertyChanging();
					this._Tx_tag = value;
					this.SendPropertyChanged("Tx_tag");
					this.OnTx_tagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_rerun_history")]
	public partial class T_rerun_history
	{
		
		private System.Nullable<int> _Id_rerun;
		
		private System.DateTime _Dt_action;
		
		private string _Tx_action;
		
		private System.Nullable<int> _Id_acc;
		
		private string _Tx_comment;
		
		public T_rerun_history()
		{
		}
		
		[Column(Name="id_rerun", Storage="_Id_rerun", DbType="Int")]
		public System.Nullable<int> Id_rerun
		{
			get
			{
				return this._Id_rerun;
			}
			set
			{
				if ((this._Id_rerun != value))
				{
					this._Id_rerun = value;
				}
			}
		}
		
		[Column(Name="dt_action", Storage="_Dt_action", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_action
		{
			get
			{
				return this._Dt_action;
			}
			set
			{
				if ((this._Dt_action != value))
				{
					this._Dt_action = value;
				}
			}
		}
		
		[Column(Name="tx_action", Storage="_Tx_action", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tx_action
		{
			get
			{
				return this._Tx_action;
			}
			set
			{
				if ((this._Tx_action != value))
				{
					this._Tx_action = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="tx_comment", Storage="_Tx_comment", DbType="NVarChar(255)")]
		public string Tx_comment
		{
			get
			{
				return this._Tx_comment;
			}
			set
			{
				if ((this._Tx_comment != value))
				{
					this._Tx_comment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_role")]
	public partial class T_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_role;
		
		private System.Data.Linq.Binary _Tx_guid;
		
		private string _Tx_name;
		
		private string _Tx_desc;
		
		private string _Csr_assignable;
		
		private string _Subscriber_assignable;
		
		private EntitySet<T_policy_role> _T_policy_role;
		
		private EntitySet<T_principal_policy> _T_principal_policy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_roleChanging(int value);
    partial void OnId_roleChanged();
    partial void OnTx_guidChanging(System.Data.Linq.Binary value);
    partial void OnTx_guidChanged();
    partial void OnTx_nameChanging(string value);
    partial void OnTx_nameChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnCsr_assignableChanging(string value);
    partial void OnCsr_assignableChanged();
    partial void OnSubscriber_assignableChanging(string value);
    partial void OnSubscriber_assignableChanged();
    #endregion
		
		public T_role()
		{
			this._T_policy_role = new EntitySet<T_policy_role>(new Action<T_policy_role>(this.attach_T_policy_role), new Action<T_policy_role>(this.detach_T_policy_role));
			this._T_principal_policy = new EntitySet<T_principal_policy>(new Action<T_principal_policy>(this.attach_T_principal_policy), new Action<T_principal_policy>(this.detach_T_principal_policy));
			OnCreated();
		}
		
		[Column(Name="id_role", Storage="_Id_role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_role
		{
			get
			{
				return this._Id_role;
			}
			set
			{
				if ((this._Id_role != value))
				{
					this.OnId_roleChanging(value);
					this.SendPropertyChanging();
					this._Id_role = value;
					this.SendPropertyChanged("Id_role");
					this.OnId_roleChanged();
				}
			}
		}
		
		[Column(Name="tx_guid", Storage="_Tx_guid", DbType="VarBinary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Tx_guid
		{
			get
			{
				return this._Tx_guid;
			}
			set
			{
				if ((this._Tx_guid != value))
				{
					this.OnTx_guidChanging(value);
					this.SendPropertyChanging();
					this._Tx_guid = value;
					this.SendPropertyChanged("Tx_guid");
					this.OnTx_guidChanged();
				}
			}
		}
		
		[Column(Name="tx_name", Storage="_Tx_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_name
		{
			get
			{
				return this._Tx_name;
			}
			set
			{
				if ((this._Tx_name != value))
				{
					this.OnTx_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_name = value;
					this.SendPropertyChanged("Tx_name");
					this.OnTx_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="csr_assignable", Storage="_Csr_assignable", DbType="VarChar(1)")]
		public string Csr_assignable
		{
			get
			{
				return this._Csr_assignable;
			}
			set
			{
				if ((this._Csr_assignable != value))
				{
					this.OnCsr_assignableChanging(value);
					this.SendPropertyChanging();
					this._Csr_assignable = value;
					this.SendPropertyChanged("Csr_assignable");
					this.OnCsr_assignableChanged();
				}
			}
		}
		
		[Column(Name="subscriber_assignable", Storage="_Subscriber_assignable", DbType="VarChar(1)")]
		public string Subscriber_assignable
		{
			get
			{
				return this._Subscriber_assignable;
			}
			set
			{
				if ((this._Subscriber_assignable != value))
				{
					this.OnSubscriber_assignableChanging(value);
					this.SendPropertyChanging();
					this._Subscriber_assignable = value;
					this.SendPropertyChanged("Subscriber_assignable");
					this.OnSubscriber_assignableChanged();
				}
			}
		}
		
		[Association(Name="FK2_T_POLICY_ROLE", Storage="_T_policy_role", ThisKey="Id_role", OtherKey="Id_role", DeleteRule="NO ACTION")]
		public EntitySet<T_policy_role> T_policy_role
		{
			get
			{
				return this._T_policy_role;
			}
			set
			{
				this._T_policy_role.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_PRINCIPAL_POLICY", Storage="_T_principal_policy", ThisKey="Id_role", OtherKey="Id_role", DeleteRule="NO ACTION")]
		public EntitySet<T_principal_policy> T_principal_policy
		{
			get
			{
				return this._T_principal_policy;
			}
			set
			{
				this._T_principal_policy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_policy_role(T_policy_role entity)
		{
			this.SendPropertyChanging();
			entity.T_role = this;
		}
		
		private void detach_T_policy_role(T_policy_role entity)
		{
			this.SendPropertyChanging();
			entity.T_role = null;
		}
		
		private void attach_T_principal_policy(T_principal_policy entity)
		{
			this.SendPropertyChanging();
			entity.T_role = this;
		}
		
		private void detach_T_principal_policy(T_principal_policy entity)
		{
			this.SendPropertyChanging();
			entity.T_role = null;
		}
	}
	
	[Table(Name="dbo.t_rsched")]
	public partial class T_rsched : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _Id_pt;
		
		private int _Id_eff_date;
		
		private int _Id_pricelist;
		
		private System.Nullable<System.DateTime> _Dt_mod;
		
		private int _Id_pi_template;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_effectivedate> _T_effectivedate;
		
		private EntityRef<T_pricelist> _T_pricelist;
		
		private EntityRef<T_rulesetdefinition> _T_rulesetdefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnId_ptChanging(int value);
    partial void OnId_ptChanged();
    partial void OnId_eff_dateChanging(int value);
    partial void OnId_eff_dateChanged();
    partial void OnId_pricelistChanging(int value);
    partial void OnId_pricelistChanged();
    partial void OnDt_modChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_modChanged();
    partial void OnId_pi_templateChanging(int value);
    partial void OnId_pi_templateChanged();
    #endregion
		
		public T_rsched()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_effectivedate = default(EntityRef<T_effectivedate>);
			this._T_pricelist = default(EntityRef<T_pricelist>);
			this._T_rulesetdefinition = default(EntityRef<T_rulesetdefinition>);
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="id_pt", Storage="_Id_pt", DbType="Int NOT NULL")]
		public int Id_pt
		{
			get
			{
				return this._Id_pt;
			}
			set
			{
				if ((this._Id_pt != value))
				{
					this.OnId_ptChanging(value);
					this.SendPropertyChanging();
					this._Id_pt = value;
					this.SendPropertyChanged("Id_pt");
					this.OnId_ptChanged();
				}
			}
		}
		
		[Column(Name="id_eff_date", Storage="_Id_eff_date", DbType="Int NOT NULL")]
		public int Id_eff_date
		{
			get
			{
				return this._Id_eff_date;
			}
			set
			{
				if ((this._Id_eff_date != value))
				{
					this.OnId_eff_dateChanging(value);
					this.SendPropertyChanging();
					this._Id_eff_date = value;
					this.SendPropertyChanged("Id_eff_date");
					this.OnId_eff_dateChanged();
				}
			}
		}
		
		[Column(Name="id_pricelist", Storage="_Id_pricelist", DbType="Int NOT NULL")]
		public int Id_pricelist
		{
			get
			{
				return this._Id_pricelist;
			}
			set
			{
				if ((this._Id_pricelist != value))
				{
					this.OnId_pricelistChanging(value);
					this.SendPropertyChanging();
					this._Id_pricelist = value;
					this.SendPropertyChanged("Id_pricelist");
					this.OnId_pricelistChanged();
				}
			}
		}
		
		[Column(Name="dt_mod", Storage="_Dt_mod", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_mod
		{
			get
			{
				return this._Dt_mod;
			}
			set
			{
				if ((this._Dt_mod != value))
				{
					this.OnDt_modChanging(value);
					this.SendPropertyChanging();
					this._Dt_mod = value;
					this.SendPropertyChanged("Dt_mod");
					this.OnDt_modChanged();
				}
			}
		}
		
		[Column(Name="id_pi_template", Storage="_Id_pi_template", DbType="Int NOT NULL")]
		public int Id_pi_template
		{
			get
			{
				return this._Id_pi_template;
			}
			set
			{
				if ((this._Id_pi_template != value))
				{
					this.OnId_pi_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_template = value;
					this.SendPropertyChanged("Id_pi_template");
					this.OnId_pi_templateChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_RSCHED", Storage="_T_base_props", ThisKey="Id_sched", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_rsched = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_rsched = this;
						this._Id_sched = value.Id_prop;
					}
					else
					{
						this._Id_sched = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK2_T_RSCHED", Storage="_T_effectivedate", ThisKey="Id_eff_date", OtherKey="Id_eff_date", IsForeignKey=true)]
		public T_effectivedate T_effectivedate
		{
			get
			{
				return this._T_effectivedate.Entity;
			}
			set
			{
				T_effectivedate previousValue = this._T_effectivedate.Entity;
				if (((previousValue != value) 
							|| (this._T_effectivedate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_effectivedate.Entity = null;
						previousValue.T_rsched.Remove(this);
					}
					this._T_effectivedate.Entity = value;
					if ((value != null))
					{
						value.T_rsched.Add(this);
						this._Id_eff_date = value.Id_eff_date;
					}
					else
					{
						this._Id_eff_date = default(int);
					}
					this.SendPropertyChanged("T_effectivedate");
				}
			}
		}
		
		[Association(Name="FK4_T_RSCHED", Storage="_T_pricelist", ThisKey="Id_pricelist", OtherKey="Id_pricelist", IsForeignKey=true)]
		public T_pricelist T_pricelist
		{
			get
			{
				return this._T_pricelist.Entity;
			}
			set
			{
				T_pricelist previousValue = this._T_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pricelist.Entity = null;
						previousValue.T_rsched.Remove(this);
					}
					this._T_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_rsched.Add(this);
						this._Id_pricelist = value.Id_pricelist;
					}
					else
					{
						this._Id_pricelist = default(int);
					}
					this.SendPropertyChanged("T_pricelist");
				}
			}
		}
		
		[Association(Name="FK5_T_RSCHED", Storage="_T_rulesetdefinition", ThisKey="Id_pt", OtherKey="Id_paramtable", IsForeignKey=true)]
		public T_rulesetdefinition T_rulesetdefinition
		{
			get
			{
				return this._T_rulesetdefinition.Entity;
			}
			set
			{
				T_rulesetdefinition previousValue = this._T_rulesetdefinition.Entity;
				if (((previousValue != value) 
							|| (this._T_rulesetdefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rulesetdefinition.Entity = null;
						previousValue.T_rsched.Remove(this);
					}
					this._T_rulesetdefinition.Entity = value;
					if ((value != null))
					{
						value.T_rsched.Add(this);
						this._Id_pt = value.Id_paramtable;
					}
					else
					{
						this._Id_pt = default(int);
					}
					this.SendPropertyChanged("T_rulesetdefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_rsched_pub")]
	public partial class T_rsched_pub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_sched;
		
		private int _Id_pt;
		
		private int _Id_eff_date;
		
		private int _Id_pricelist;
		
		private System.Nullable<System.DateTime> _Dt_mod;
		
		private int _Id_pi_template;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntityRef<T_effectivedate> _T_effectivedate;
		
		private EntityRef<T_pricelist> _T_pricelist;
		
		private EntityRef<T_rulesetdefinition> _T_rulesetdefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedChanging(int value);
    partial void OnId_schedChanged();
    partial void OnId_ptChanging(int value);
    partial void OnId_ptChanged();
    partial void OnId_eff_dateChanging(int value);
    partial void OnId_eff_dateChanged();
    partial void OnId_pricelistChanging(int value);
    partial void OnId_pricelistChanged();
    partial void OnDt_modChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_modChanged();
    partial void OnId_pi_templateChanging(int value);
    partial void OnId_pi_templateChanged();
    #endregion
		
		public T_rsched_pub()
		{
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_effectivedate = default(EntityRef<T_effectivedate>);
			this._T_pricelist = default(EntityRef<T_pricelist>);
			this._T_rulesetdefinition = default(EntityRef<T_rulesetdefinition>);
			OnCreated();
		}
		
		[Column(Name="id_sched", Storage="_Id_sched", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_sched
		{
			get
			{
				return this._Id_sched;
			}
			set
			{
				if ((this._Id_sched != value))
				{
					this.OnId_schedChanging(value);
					this.SendPropertyChanging();
					this._Id_sched = value;
					this.SendPropertyChanged("Id_sched");
					this.OnId_schedChanged();
				}
			}
		}
		
		[Column(Name="id_pt", Storage="_Id_pt", DbType="Int NOT NULL")]
		public int Id_pt
		{
			get
			{
				return this._Id_pt;
			}
			set
			{
				if ((this._Id_pt != value))
				{
					this.OnId_ptChanging(value);
					this.SendPropertyChanging();
					this._Id_pt = value;
					this.SendPropertyChanged("Id_pt");
					this.OnId_ptChanged();
				}
			}
		}
		
		[Column(Name="id_eff_date", Storage="_Id_eff_date", DbType="Int NOT NULL")]
		public int Id_eff_date
		{
			get
			{
				return this._Id_eff_date;
			}
			set
			{
				if ((this._Id_eff_date != value))
				{
					this.OnId_eff_dateChanging(value);
					this.SendPropertyChanging();
					this._Id_eff_date = value;
					this.SendPropertyChanged("Id_eff_date");
					this.OnId_eff_dateChanged();
				}
			}
		}
		
		[Column(Name="id_pricelist", Storage="_Id_pricelist", DbType="Int NOT NULL")]
		public int Id_pricelist
		{
			get
			{
				return this._Id_pricelist;
			}
			set
			{
				if ((this._Id_pricelist != value))
				{
					this.OnId_pricelistChanging(value);
					this.SendPropertyChanging();
					this._Id_pricelist = value;
					this.SendPropertyChanged("Id_pricelist");
					this.OnId_pricelistChanged();
				}
			}
		}
		
		[Column(Name="dt_mod", Storage="_Dt_mod", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_mod
		{
			get
			{
				return this._Dt_mod;
			}
			set
			{
				if ((this._Dt_mod != value))
				{
					this.OnDt_modChanging(value);
					this.SendPropertyChanging();
					this._Dt_mod = value;
					this.SendPropertyChanged("Dt_mod");
					this.OnDt_modChanged();
				}
			}
		}
		
		[Column(Name="id_pi_template", Storage="_Id_pi_template", DbType="Int NOT NULL")]
		public int Id_pi_template
		{
			get
			{
				return this._Id_pi_template;
			}
			set
			{
				if ((this._Id_pi_template != value))
				{
					this.OnId_pi_templateChanging(value);
					this.SendPropertyChanging();
					this._Id_pi_template = value;
					this.SendPropertyChanged("Id_pi_template");
					this.OnId_pi_templateChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_rsched_pub", Storage="_T_base_props", ThisKey="Id_sched", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_rsched_pub = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_rsched_pub = this;
						this._Id_sched = value.Id_prop;
					}
					else
					{
						this._Id_sched = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="fk2_t_rsched_pub", Storage="_T_effectivedate", ThisKey="Id_eff_date", OtherKey="Id_eff_date", IsForeignKey=true)]
		public T_effectivedate T_effectivedate
		{
			get
			{
				return this._T_effectivedate.Entity;
			}
			set
			{
				T_effectivedate previousValue = this._T_effectivedate.Entity;
				if (((previousValue != value) 
							|| (this._T_effectivedate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_effectivedate.Entity = null;
						previousValue.T_rsched_pub.Remove(this);
					}
					this._T_effectivedate.Entity = value;
					if ((value != null))
					{
						value.T_rsched_pub.Add(this);
						this._Id_eff_date = value.Id_eff_date;
					}
					else
					{
						this._Id_eff_date = default(int);
					}
					this.SendPropertyChanged("T_effectivedate");
				}
			}
		}
		
		[Association(Name="fk4_t_rsched_pub", Storage="_T_pricelist", ThisKey="Id_pricelist", OtherKey="Id_pricelist", IsForeignKey=true)]
		public T_pricelist T_pricelist
		{
			get
			{
				return this._T_pricelist.Entity;
			}
			set
			{
				T_pricelist previousValue = this._T_pricelist.Entity;
				if (((previousValue != value) 
							|| (this._T_pricelist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_pricelist.Entity = null;
						previousValue.T_rsched_pub.Remove(this);
					}
					this._T_pricelist.Entity = value;
					if ((value != null))
					{
						value.T_rsched_pub.Add(this);
						this._Id_pricelist = value.Id_pricelist;
					}
					else
					{
						this._Id_pricelist = default(int);
					}
					this.SendPropertyChanged("T_pricelist");
				}
			}
		}
		
		[Association(Name="fk5_t_rsched_pub", Storage="_T_rulesetdefinition", ThisKey="Id_pt", OtherKey="Id_paramtable", IsForeignKey=true)]
		public T_rulesetdefinition T_rulesetdefinition
		{
			get
			{
				return this._T_rulesetdefinition.Entity;
			}
			set
			{
				T_rulesetdefinition previousValue = this._T_rulesetdefinition.Entity;
				if (((previousValue != value) 
							|| (this._T_rulesetdefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_rulesetdefinition.Entity = null;
						previousValue.T_rsched_pub.Remove(this);
					}
					this._T_rulesetdefinition.Entity = value;
					if ((value != null))
					{
						value.T_rsched_pub.Add(this);
						this._Id_pt = value.Id_paramtable;
					}
					else
					{
						this._Id_pt = default(int);
					}
					this.SendPropertyChanged("T_rulesetdefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_rulesetdefinition")]
	public partial class T_rulesetdefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_paramtable;
		
		private string _Nm_instance_tablename;
		
		private EntitySet<T_pi_rulesetdef_map> _T_pi_rulesetdef_map;
		
		private EntityRef<T_base_props> _T_base_props;
		
		private EntitySet<T_rsched> _T_rsched;
		
		private EntitySet<T_rsched_pub> _T_rsched_pub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_paramtableChanging(int value);
    partial void OnId_paramtableChanged();
    partial void OnNm_instance_tablenameChanging(string value);
    partial void OnNm_instance_tablenameChanged();
    #endregion
		
		public T_rulesetdefinition()
		{
			this._T_pi_rulesetdef_map = new EntitySet<T_pi_rulesetdef_map>(new Action<T_pi_rulesetdef_map>(this.attach_T_pi_rulesetdef_map), new Action<T_pi_rulesetdef_map>(this.detach_T_pi_rulesetdef_map));
			this._T_base_props = default(EntityRef<T_base_props>);
			this._T_rsched = new EntitySet<T_rsched>(new Action<T_rsched>(this.attach_T_rsched), new Action<T_rsched>(this.detach_T_rsched));
			this._T_rsched_pub = new EntitySet<T_rsched_pub>(new Action<T_rsched_pub>(this.attach_T_rsched_pub), new Action<T_rsched_pub>(this.detach_T_rsched_pub));
			OnCreated();
		}
		
		[Column(Name="id_paramtable", Storage="_Id_paramtable", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_paramtable
		{
			get
			{
				return this._Id_paramtable;
			}
			set
			{
				if ((this._Id_paramtable != value))
				{
					this.OnId_paramtableChanging(value);
					this.SendPropertyChanging();
					this._Id_paramtable = value;
					this.SendPropertyChanged("Id_paramtable");
					this.OnId_paramtableChanged();
				}
			}
		}
		
		[Column(Name="nm_instance_tablename", Storage="_Nm_instance_tablename", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_instance_tablename
		{
			get
			{
				return this._Nm_instance_tablename;
			}
			set
			{
				if ((this._Nm_instance_tablename != value))
				{
					this.OnNm_instance_tablenameChanging(value);
					this.SendPropertyChanging();
					this._Nm_instance_tablename = value;
					this.SendPropertyChanged("Nm_instance_tablename");
					this.OnNm_instance_tablenameChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_RULESETDEF_MAP", Storage="_T_pi_rulesetdef_map", ThisKey="Id_paramtable", OtherKey="Id_pt", DeleteRule="NO ACTION")]
		public EntitySet<T_pi_rulesetdef_map> T_pi_rulesetdef_map
		{
			get
			{
				return this._T_pi_rulesetdef_map;
			}
			set
			{
				this._T_pi_rulesetdef_map.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_RULESETDEFINITION", Storage="_T_base_props", ThisKey="Id_paramtable", OtherKey="Id_prop", IsForeignKey=true)]
		public T_base_props T_base_props
		{
			get
			{
				return this._T_base_props.Entity;
			}
			set
			{
				T_base_props previousValue = this._T_base_props.Entity;
				if (((previousValue != value) 
							|| (this._T_base_props.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_base_props.Entity = null;
						previousValue.T_rulesetdefinition = null;
					}
					this._T_base_props.Entity = value;
					if ((value != null))
					{
						value.T_rulesetdefinition = this;
						this._Id_paramtable = value.Id_prop;
					}
					else
					{
						this._Id_paramtable = default(int);
					}
					this.SendPropertyChanged("T_base_props");
				}
			}
		}
		
		[Association(Name="FK5_T_RSCHED", Storage="_T_rsched", ThisKey="Id_paramtable", OtherKey="Id_pt", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched> T_rsched
		{
			get
			{
				return this._T_rsched;
			}
			set
			{
				this._T_rsched.Assign(value);
			}
		}
		
		[Association(Name="fk5_t_rsched_pub", Storage="_T_rsched_pub", ThisKey="Id_paramtable", OtherKey="Id_pt", DeleteRule="NO ACTION")]
		public EntitySet<T_rsched_pub> T_rsched_pub
		{
			get
			{
				return this._T_rsched_pub;
			}
			set
			{
				this._T_rsched_pub.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_pi_rulesetdef_map(T_pi_rulesetdef_map entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = this;
		}
		
		private void detach_T_pi_rulesetdef_map(T_pi_rulesetdef_map entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = null;
		}
		
		private void attach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = this;
		}
		
		private void detach_T_rsched(T_rsched entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = null;
		}
		
		private void attach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = this;
		}
		
		private void detach_T_rsched_pub(T_rsched_pub entity)
		{
			this.SendPropertyChanging();
			entity.T_rulesetdefinition = null;
		}
	}
	
	[Table(Name="dbo.t_sch_daily")]
	public partial class T_sch_daily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_schedule_daily;
		
		private string _C_exec_time;
		
		private System.Nullable<int> _C_repeat_hour;
		
		private string _C_exec_start_time;
		
		private string _C_exec_end_time;
		
		private bool _C_skip_last_day_month;
		
		private bool _C_skip_first_day_month;
		
		private int _C_days_interval;
		
		private bool _C_month_to_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedule_dailyChanging(int value);
    partial void OnId_schedule_dailyChanged();
    partial void OnC_exec_timeChanging(string value);
    partial void OnC_exec_timeChanged();
    partial void OnC_repeat_hourChanging(System.Nullable<int> value);
    partial void OnC_repeat_hourChanged();
    partial void OnC_exec_start_timeChanging(string value);
    partial void OnC_exec_start_timeChanged();
    partial void OnC_exec_end_timeChanging(string value);
    partial void OnC_exec_end_timeChanged();
    partial void OnC_skip_last_day_monthChanging(bool value);
    partial void OnC_skip_last_day_monthChanged();
    partial void OnC_skip_first_day_monthChanging(bool value);
    partial void OnC_skip_first_day_monthChanged();
    partial void OnC_days_intervalChanging(int value);
    partial void OnC_days_intervalChanged();
    partial void OnC_month_to_dateChanging(bool value);
    partial void OnC_month_to_dateChanged();
    #endregion
		
		public T_sch_daily()
		{
			OnCreated();
		}
		
		[Column(Name="id_schedule_daily", Storage="_Id_schedule_daily", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_schedule_daily
		{
			get
			{
				return this._Id_schedule_daily;
			}
			set
			{
				if ((this._Id_schedule_daily != value))
				{
					this.OnId_schedule_dailyChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule_daily = value;
					this.SendPropertyChanged("Id_schedule_daily");
					this.OnId_schedule_dailyChanged();
				}
			}
		}
		
		[Column(Name="c_exec_time", Storage="_C_exec_time", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string C_exec_time
		{
			get
			{
				return this._C_exec_time;
			}
			set
			{
				if ((this._C_exec_time != value))
				{
					this.OnC_exec_timeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_time = value;
					this.SendPropertyChanged("C_exec_time");
					this.OnC_exec_timeChanged();
				}
			}
		}
		
		[Column(Name="c_repeat_hour", Storage="_C_repeat_hour", DbType="Int")]
		public System.Nullable<int> C_repeat_hour
		{
			get
			{
				return this._C_repeat_hour;
			}
			set
			{
				if ((this._C_repeat_hour != value))
				{
					this.OnC_repeat_hourChanging(value);
					this.SendPropertyChanging();
					this._C_repeat_hour = value;
					this.SendPropertyChanged("C_repeat_hour");
					this.OnC_repeat_hourChanged();
				}
			}
		}
		
		[Column(Name="c_exec_start_time", Storage="_C_exec_start_time", DbType="Char(5)")]
		public string C_exec_start_time
		{
			get
			{
				return this._C_exec_start_time;
			}
			set
			{
				if ((this._C_exec_start_time != value))
				{
					this.OnC_exec_start_timeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_start_time = value;
					this.SendPropertyChanged("C_exec_start_time");
					this.OnC_exec_start_timeChanged();
				}
			}
		}
		
		[Column(Name="c_exec_end_time", Storage="_C_exec_end_time", DbType="Char(5)")]
		public string C_exec_end_time
		{
			get
			{
				return this._C_exec_end_time;
			}
			set
			{
				if ((this._C_exec_end_time != value))
				{
					this.OnC_exec_end_timeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_end_time = value;
					this.SendPropertyChanged("C_exec_end_time");
					this.OnC_exec_end_timeChanged();
				}
			}
		}
		
		[Column(Name="c_skip_last_day_month", Storage="_C_skip_last_day_month", DbType="Bit NOT NULL")]
		public bool C_skip_last_day_month
		{
			get
			{
				return this._C_skip_last_day_month;
			}
			set
			{
				if ((this._C_skip_last_day_month != value))
				{
					this.OnC_skip_last_day_monthChanging(value);
					this.SendPropertyChanging();
					this._C_skip_last_day_month = value;
					this.SendPropertyChanged("C_skip_last_day_month");
					this.OnC_skip_last_day_monthChanged();
				}
			}
		}
		
		[Column(Name="c_skip_first_day_month", Storage="_C_skip_first_day_month", DbType="Bit NOT NULL")]
		public bool C_skip_first_day_month
		{
			get
			{
				return this._C_skip_first_day_month;
			}
			set
			{
				if ((this._C_skip_first_day_month != value))
				{
					this.OnC_skip_first_day_monthChanging(value);
					this.SendPropertyChanging();
					this._C_skip_first_day_month = value;
					this.SendPropertyChanged("C_skip_first_day_month");
					this.OnC_skip_first_day_monthChanged();
				}
			}
		}
		
		[Column(Name="c_days_interval", Storage="_C_days_interval", DbType="Int NOT NULL")]
		public int C_days_interval
		{
			get
			{
				return this._C_days_interval;
			}
			set
			{
				if ((this._C_days_interval != value))
				{
					this.OnC_days_intervalChanging(value);
					this.SendPropertyChanging();
					this._C_days_interval = value;
					this.SendPropertyChanged("C_days_interval");
					this.OnC_days_intervalChanged();
				}
			}
		}
		
		[Column(Name="c_month_to_date", Storage="_C_month_to_date", DbType="Bit NOT NULL")]
		public bool C_month_to_date
		{
			get
			{
				return this._C_month_to_date;
			}
			set
			{
				if ((this._C_month_to_date != value))
				{
					this.OnC_month_to_dateChanging(value);
					this.SendPropertyChanging();
					this._C_month_to_date = value;
					this.SendPropertyChanged("C_month_to_date");
					this.OnC_month_to_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_sch_monthly")]
	public partial class T_sch_monthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_schedule_monthly;
		
		private System.Nullable<int> _C_exec_day;
		
		private string _C_exec_time;
		
		private bool _C_exec_first_month_day;
		
		private bool _C_exec_last_month_day;
		
		private string _C_skip_months;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedule_monthlyChanging(int value);
    partial void OnId_schedule_monthlyChanged();
    partial void OnC_exec_dayChanging(System.Nullable<int> value);
    partial void OnC_exec_dayChanged();
    partial void OnC_exec_timeChanging(string value);
    partial void OnC_exec_timeChanged();
    partial void OnC_exec_first_month_dayChanging(bool value);
    partial void OnC_exec_first_month_dayChanged();
    partial void OnC_exec_last_month_dayChanging(bool value);
    partial void OnC_exec_last_month_dayChanged();
    partial void OnC_skip_monthsChanging(string value);
    partial void OnC_skip_monthsChanged();
    #endregion
		
		public T_sch_monthly()
		{
			OnCreated();
		}
		
		[Column(Name="id_schedule_monthly", Storage="_Id_schedule_monthly", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_schedule_monthly
		{
			get
			{
				return this._Id_schedule_monthly;
			}
			set
			{
				if ((this._Id_schedule_monthly != value))
				{
					this.OnId_schedule_monthlyChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule_monthly = value;
					this.SendPropertyChanged("Id_schedule_monthly");
					this.OnId_schedule_monthlyChanged();
				}
			}
		}
		
		[Column(Name="c_exec_day", Storage="_C_exec_day", DbType="Int")]
		public System.Nullable<int> C_exec_day
		{
			get
			{
				return this._C_exec_day;
			}
			set
			{
				if ((this._C_exec_day != value))
				{
					this.OnC_exec_dayChanging(value);
					this.SendPropertyChanging();
					this._C_exec_day = value;
					this.SendPropertyChanged("C_exec_day");
					this.OnC_exec_dayChanged();
				}
			}
		}
		
		[Column(Name="c_exec_time", Storage="_C_exec_time", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string C_exec_time
		{
			get
			{
				return this._C_exec_time;
			}
			set
			{
				if ((this._C_exec_time != value))
				{
					this.OnC_exec_timeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_time = value;
					this.SendPropertyChanged("C_exec_time");
					this.OnC_exec_timeChanged();
				}
			}
		}
		
		[Column(Name="c_exec_first_month_day", Storage="_C_exec_first_month_day", DbType="Bit NOT NULL")]
		public bool C_exec_first_month_day
		{
			get
			{
				return this._C_exec_first_month_day;
			}
			set
			{
				if ((this._C_exec_first_month_day != value))
				{
					this.OnC_exec_first_month_dayChanging(value);
					this.SendPropertyChanging();
					this._C_exec_first_month_day = value;
					this.SendPropertyChanged("C_exec_first_month_day");
					this.OnC_exec_first_month_dayChanged();
				}
			}
		}
		
		[Column(Name="c_exec_last_month_day", Storage="_C_exec_last_month_day", DbType="Bit NOT NULL")]
		public bool C_exec_last_month_day
		{
			get
			{
				return this._C_exec_last_month_day;
			}
			set
			{
				if ((this._C_exec_last_month_day != value))
				{
					this.OnC_exec_last_month_dayChanging(value);
					this.SendPropertyChanging();
					this._C_exec_last_month_day = value;
					this.SendPropertyChanged("C_exec_last_month_day");
					this.OnC_exec_last_month_dayChanged();
				}
			}
		}
		
		[Column(Name="c_skip_months", Storage="_C_skip_months", DbType="VarChar(35)")]
		public string C_skip_months
		{
			get
			{
				return this._C_skip_months;
			}
			set
			{
				if ((this._C_skip_months != value))
				{
					this.OnC_skip_monthsChanging(value);
					this.SendPropertyChanging();
					this._C_skip_months = value;
					this.SendPropertyChanged("C_skip_months");
					this.OnC_skip_monthsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_sch_weekly")]
	public partial class T_sch_weekly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_schedule_weekly;
		
		private string _C_exec_time;
		
		private string _C_exec_week_days;
		
		private string _C_skip_week_days;
		
		private bool _C_month_to_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_schedule_weeklyChanging(int value);
    partial void OnId_schedule_weeklyChanged();
    partial void OnC_exec_timeChanging(string value);
    partial void OnC_exec_timeChanged();
    partial void OnC_exec_week_daysChanging(string value);
    partial void OnC_exec_week_daysChanged();
    partial void OnC_skip_week_daysChanging(string value);
    partial void OnC_skip_week_daysChanged();
    partial void OnC_month_to_dateChanging(bool value);
    partial void OnC_month_to_dateChanged();
    #endregion
		
		public T_sch_weekly()
		{
			OnCreated();
		}
		
		[Column(Name="id_schedule_weekly", Storage="_Id_schedule_weekly", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_schedule_weekly
		{
			get
			{
				return this._Id_schedule_weekly;
			}
			set
			{
				if ((this._Id_schedule_weekly != value))
				{
					this.OnId_schedule_weeklyChanging(value);
					this.SendPropertyChanging();
					this._Id_schedule_weekly = value;
					this.SendPropertyChanged("Id_schedule_weekly");
					this.OnId_schedule_weeklyChanged();
				}
			}
		}
		
		[Column(Name="c_exec_time", Storage="_C_exec_time", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string C_exec_time
		{
			get
			{
				return this._C_exec_time;
			}
			set
			{
				if ((this._C_exec_time != value))
				{
					this.OnC_exec_timeChanging(value);
					this.SendPropertyChanging();
					this._C_exec_time = value;
					this.SendPropertyChanged("C_exec_time");
					this.OnC_exec_timeChanged();
				}
			}
		}
		
		[Column(Name="c_exec_week_days", Storage="_C_exec_week_days", DbType="VarChar(27)")]
		public string C_exec_week_days
		{
			get
			{
				return this._C_exec_week_days;
			}
			set
			{
				if ((this._C_exec_week_days != value))
				{
					this.OnC_exec_week_daysChanging(value);
					this.SendPropertyChanging();
					this._C_exec_week_days = value;
					this.SendPropertyChanged("C_exec_week_days");
					this.OnC_exec_week_daysChanged();
				}
			}
		}
		
		[Column(Name="c_skip_week_days", Storage="_C_skip_week_days", DbType="VarChar(27)")]
		public string C_skip_week_days
		{
			get
			{
				return this._C_skip_week_days;
			}
			set
			{
				if ((this._C_skip_week_days != value))
				{
					this.OnC_skip_week_daysChanging(value);
					this.SendPropertyChanging();
					this._C_skip_week_days = value;
					this.SendPropertyChanged("C_skip_week_days");
					this.OnC_skip_week_daysChanged();
				}
			}
		}
		
		[Column(Name="c_month_to_date", Storage="_C_month_to_date", DbType="Bit NOT NULL")]
		public bool C_month_to_date
		{
			get
			{
				return this._C_month_to_date;
			}
			set
			{
				if ((this._C_month_to_date != value))
				{
					this.OnC_month_to_dateChanging(value);
					this.SendPropertyChanging();
					this._C_month_to_date = value;
					this.SendPropertyChanged("C_month_to_date");
					this.OnC_month_to_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_securitem")]
	public partial class T_securitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_secitem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_secitemChanging(int value);
    partial void OnId_secitemChanged();
    #endregion
		
		public T_securitem()
		{
			OnCreated();
		}
		
		[Column(Name="id_secitem", Storage="_Id_secitem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_secitem
		{
			get
			{
				return this._Id_secitem;
			}
			set
			{
				if ((this._Id_secitem != value))
				{
					this.OnId_secitemChanging(value);
					this.SendPropertyChanging();
					this._Id_secitem = value;
					this.SendPropertyChanged("Id_secitem");
					this.OnId_secitemChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_service_def_log")]
	public partial class T_service_def_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_service_def;
		
		private string _Nm_service_def;
		
		private int _Id_revision;
		
		private string _Tx_checksum;
		
		private string _Nm_table_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_service_defChanging(int value);
    partial void OnId_service_defChanged();
    partial void OnNm_service_defChanging(string value);
    partial void OnNm_service_defChanged();
    partial void OnId_revisionChanging(int value);
    partial void OnId_revisionChanged();
    partial void OnTx_checksumChanging(string value);
    partial void OnTx_checksumChanged();
    partial void OnNm_table_nameChanging(string value);
    partial void OnNm_table_nameChanged();
    #endregion
		
		public T_service_def_log()
		{
			OnCreated();
		}
		
		[Column(Name="id_service_def", Storage="_Id_service_def", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_service_def
		{
			get
			{
				return this._Id_service_def;
			}
			set
			{
				if ((this._Id_service_def != value))
				{
					this.OnId_service_defChanging(value);
					this.SendPropertyChanging();
					this._Id_service_def = value;
					this.SendPropertyChanged("Id_service_def");
					this.OnId_service_defChanged();
				}
			}
		}
		
		[Column(Name="nm_service_def", Storage="_Nm_service_def", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nm_service_def
		{
			get
			{
				return this._Nm_service_def;
			}
			set
			{
				if ((this._Nm_service_def != value))
				{
					this.OnNm_service_defChanging(value);
					this.SendPropertyChanging();
					this._Nm_service_def = value;
					this.SendPropertyChanged("Nm_service_def");
					this.OnNm_service_defChanged();
				}
			}
		}
		
		[Column(Name="id_revision", Storage="_Id_revision", DbType="Int NOT NULL")]
		public int Id_revision
		{
			get
			{
				return this._Id_revision;
			}
			set
			{
				if ((this._Id_revision != value))
				{
					this.OnId_revisionChanging(value);
					this.SendPropertyChanging();
					this._Id_revision = value;
					this.SendPropertyChanged("Id_revision");
					this.OnId_revisionChanged();
				}
			}
		}
		
		[Column(Name="tx_checksum", Storage="_Tx_checksum", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tx_checksum
		{
			get
			{
				return this._Tx_checksum;
			}
			set
			{
				if ((this._Tx_checksum != value))
				{
					this.OnTx_checksumChanging(value);
					this.SendPropertyChanging();
					this._Tx_checksum = value;
					this.SendPropertyChanged("Tx_checksum");
					this.OnTx_checksumChanged();
				}
			}
		}
		
		[Column(Name="nm_table_name", Storage="_Nm_table_name", DbType="VarChar(255)")]
		public string Nm_table_name
		{
			get
			{
				return this._Nm_table_name;
			}
			set
			{
				if ((this._Nm_table_name != value))
				{
					this.OnNm_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_table_name = value;
					this.SendPropertyChanged("Nm_table_name");
					this.OnNm_table_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_service_def_prop")]
	public partial class T_service_def_prop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_service_def_prop;
		
		private int _Id_service_def;
		
		private string _Nm_name;
		
		private string _Nm_data_type;
		
		private string _Nm_column_name;
		
		private string _B_required;
		
		private string _B_composite_idx;
		
		private string _B_single_idx;
		
		private string _B_part_of_key;
		
		private string _B_exportable;
		
		private string _B_filterable;
		
		private string _B_user_visible;
		
		private string _Nm_default_value;
		
		private int _N_prop_type;
		
		private string _Nm_space;
		
		private string _Nm_enum;
		
		private string _B_core;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_service_def_propChanging(int value);
    partial void OnId_service_def_propChanged();
    partial void OnId_service_defChanging(int value);
    partial void OnId_service_defChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnNm_data_typeChanging(string value);
    partial void OnNm_data_typeChanged();
    partial void OnNm_column_nameChanging(string value);
    partial void OnNm_column_nameChanged();
    partial void OnB_requiredChanging(string value);
    partial void OnB_requiredChanged();
    partial void OnB_composite_idxChanging(string value);
    partial void OnB_composite_idxChanged();
    partial void OnB_single_idxChanging(string value);
    partial void OnB_single_idxChanged();
    partial void OnB_part_of_keyChanging(string value);
    partial void OnB_part_of_keyChanged();
    partial void OnB_exportableChanging(string value);
    partial void OnB_exportableChanged();
    partial void OnB_filterableChanging(string value);
    partial void OnB_filterableChanged();
    partial void OnB_user_visibleChanging(string value);
    partial void OnB_user_visibleChanged();
    partial void OnNm_default_valueChanging(string value);
    partial void OnNm_default_valueChanged();
    partial void OnN_prop_typeChanging(int value);
    partial void OnN_prop_typeChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnNm_enumChanging(string value);
    partial void OnNm_enumChanged();
    partial void OnB_coreChanging(string value);
    partial void OnB_coreChanged();
    #endregion
		
		public T_service_def_prop()
		{
			OnCreated();
		}
		
		[Column(Name="id_service_def_prop", Storage="_Id_service_def_prop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_service_def_prop
		{
			get
			{
				return this._Id_service_def_prop;
			}
			set
			{
				if ((this._Id_service_def_prop != value))
				{
					this.OnId_service_def_propChanging(value);
					this.SendPropertyChanging();
					this._Id_service_def_prop = value;
					this.SendPropertyChanged("Id_service_def_prop");
					this.OnId_service_def_propChanged();
				}
			}
		}
		
		[Column(Name="id_service_def", Storage="_Id_service_def", DbType="Int NOT NULL")]
		public int Id_service_def
		{
			get
			{
				return this._Id_service_def;
			}
			set
			{
				if ((this._Id_service_def != value))
				{
					this.OnId_service_defChanging(value);
					this.SendPropertyChanging();
					this._Id_service_def = value;
					this.SendPropertyChanged("Id_service_def");
					this.OnId_service_defChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_data_type", Storage="_Nm_data_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_data_type
		{
			get
			{
				return this._Nm_data_type;
			}
			set
			{
				if ((this._Nm_data_type != value))
				{
					this.OnNm_data_typeChanging(value);
					this.SendPropertyChanging();
					this._Nm_data_type = value;
					this.SendPropertyChanged("Nm_data_type");
					this.OnNm_data_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_column_name", Storage="_Nm_column_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nm_column_name
		{
			get
			{
				return this._Nm_column_name;
			}
			set
			{
				if ((this._Nm_column_name != value))
				{
					this.OnNm_column_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_column_name = value;
					this.SendPropertyChanged("Nm_column_name");
					this.OnNm_column_nameChanged();
				}
			}
		}
		
		[Column(Name="b_required", Storage="_B_required", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_required
		{
			get
			{
				return this._B_required;
			}
			set
			{
				if ((this._B_required != value))
				{
					this.OnB_requiredChanging(value);
					this.SendPropertyChanging();
					this._B_required = value;
					this.SendPropertyChanged("B_required");
					this.OnB_requiredChanged();
				}
			}
		}
		
		[Column(Name="b_composite_idx", Storage="_B_composite_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_composite_idx
		{
			get
			{
				return this._B_composite_idx;
			}
			set
			{
				if ((this._B_composite_idx != value))
				{
					this.OnB_composite_idxChanging(value);
					this.SendPropertyChanging();
					this._B_composite_idx = value;
					this.SendPropertyChanged("B_composite_idx");
					this.OnB_composite_idxChanged();
				}
			}
		}
		
		[Column(Name="b_single_idx", Storage="_B_single_idx", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_single_idx
		{
			get
			{
				return this._B_single_idx;
			}
			set
			{
				if ((this._B_single_idx != value))
				{
					this.OnB_single_idxChanging(value);
					this.SendPropertyChanging();
					this._B_single_idx = value;
					this.SendPropertyChanged("B_single_idx");
					this.OnB_single_idxChanged();
				}
			}
		}
		
		[Column(Name="b_part_of_key", Storage="_B_part_of_key", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_part_of_key
		{
			get
			{
				return this._B_part_of_key;
			}
			set
			{
				if ((this._B_part_of_key != value))
				{
					this.OnB_part_of_keyChanging(value);
					this.SendPropertyChanging();
					this._B_part_of_key = value;
					this.SendPropertyChanged("B_part_of_key");
					this.OnB_part_of_keyChanged();
				}
			}
		}
		
		[Column(Name="b_exportable", Storage="_B_exportable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_exportable
		{
			get
			{
				return this._B_exportable;
			}
			set
			{
				if ((this._B_exportable != value))
				{
					this.OnB_exportableChanging(value);
					this.SendPropertyChanging();
					this._B_exportable = value;
					this.SendPropertyChanged("B_exportable");
					this.OnB_exportableChanged();
				}
			}
		}
		
		[Column(Name="b_filterable", Storage="_B_filterable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_filterable
		{
			get
			{
				return this._B_filterable;
			}
			set
			{
				if ((this._B_filterable != value))
				{
					this.OnB_filterableChanging(value);
					this.SendPropertyChanging();
					this._B_filterable = value;
					this.SendPropertyChanged("B_filterable");
					this.OnB_filterableChanged();
				}
			}
		}
		
		[Column(Name="b_user_visible", Storage="_B_user_visible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_user_visible
		{
			get
			{
				return this._B_user_visible;
			}
			set
			{
				if ((this._B_user_visible != value))
				{
					this.OnB_user_visibleChanging(value);
					this.SendPropertyChanging();
					this._B_user_visible = value;
					this.SendPropertyChanged("B_user_visible");
					this.OnB_user_visibleChanged();
				}
			}
		}
		
		[Column(Name="nm_default_value", Storage="_Nm_default_value", DbType="NVarChar(255)")]
		public string Nm_default_value
		{
			get
			{
				return this._Nm_default_value;
			}
			set
			{
				if ((this._Nm_default_value != value))
				{
					this.OnNm_default_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_default_value = value;
					this.SendPropertyChanged("Nm_default_value");
					this.OnNm_default_valueChanged();
				}
			}
		}
		
		[Column(Name="n_prop_type", Storage="_N_prop_type", DbType="Int NOT NULL")]
		public int N_prop_type
		{
			get
			{
				return this._N_prop_type;
			}
			set
			{
				if ((this._N_prop_type != value))
				{
					this.OnN_prop_typeChanging(value);
					this.SendPropertyChanging();
					this._N_prop_type = value;
					this.SendPropertyChanged("N_prop_type");
					this.OnN_prop_typeChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(255)")]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="nm_enum", Storage="_Nm_enum", DbType="NVarChar(255)")]
		public string Nm_enum
		{
			get
			{
				return this._Nm_enum;
			}
			set
			{
				if ((this._Nm_enum != value))
				{
					this.OnNm_enumChanging(value);
					this.SendPropertyChanging();
					this._Nm_enum = value;
					this.SendPropertyChanged("Nm_enum");
					this.OnNm_enumChanged();
				}
			}
		}
		
		[Column(Name="b_core", Storage="_B_core", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_core
		{
			get
			{
				return this._B_core;
			}
			set
			{
				if ((this._B_core != value))
				{
					this.OnB_coreChanging(value);
					this.SendPropertyChanging();
					this._B_core = value;
					this.SendPropertyChanged("B_core");
					this.OnB_coreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_session")]
	public partial class T_session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ss;
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private int _Id_partition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ssChanging(int value);
    partial void OnId_ssChanged();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    #endregion
		
		public T_session()
		{
			OnCreated();
		}
		
		[Column(Name="id_ss", Storage="_Id_ss", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ss
		{
			get
			{
				return this._Id_ss;
			}
			set
			{
				if ((this._Id_ss != value))
				{
					this.OnId_ssChanging(value);
					this.SendPropertyChanging();
					this._Id_ss = value;
					this.SendPropertyChanged("Id_ss");
					this.OnId_ssChanged();
				}
			}
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_session_set")]
	public partial class T_session_set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_message;
		
		private int _Id_ss;
		
		private int _Id_svc;
		
		private string _B_root;
		
		private int _Session_count;
		
		private int _Id_partition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_messageChanging(int value);
    partial void OnId_messageChanged();
    partial void OnId_ssChanging(int value);
    partial void OnId_ssChanged();
    partial void OnId_svcChanging(int value);
    partial void OnId_svcChanged();
    partial void OnB_rootChanging(string value);
    partial void OnB_rootChanged();
    partial void OnSession_countChanging(int value);
    partial void OnSession_countChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    #endregion
		
		public T_session_set()
		{
			OnCreated();
		}
		
		[Column(Name="id_message", Storage="_Id_message", DbType="Int NOT NULL")]
		public int Id_message
		{
			get
			{
				return this._Id_message;
			}
			set
			{
				if ((this._Id_message != value))
				{
					this.OnId_messageChanging(value);
					this.SendPropertyChanging();
					this._Id_message = value;
					this.SendPropertyChanged("Id_message");
					this.OnId_messageChanged();
				}
			}
		}
		
		[Column(Name="id_ss", Storage="_Id_ss", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_ss
		{
			get
			{
				return this._Id_ss;
			}
			set
			{
				if ((this._Id_ss != value))
				{
					this.OnId_ssChanging(value);
					this.SendPropertyChanging();
					this._Id_ss = value;
					this.SendPropertyChanged("Id_ss");
					this.OnId_ssChanged();
				}
			}
		}
		
		[Column(Name="id_svc", Storage="_Id_svc", DbType="Int NOT NULL")]
		public int Id_svc
		{
			get
			{
				return this._Id_svc;
			}
			set
			{
				if ((this._Id_svc != value))
				{
					this.OnId_svcChanging(value);
					this.SendPropertyChanging();
					this._Id_svc = value;
					this.SendPropertyChanged("Id_svc");
					this.OnId_svcChanged();
				}
			}
		}
		
		[Column(Name="b_root", Storage="_B_root", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string B_root
		{
			get
			{
				return this._B_root;
			}
			set
			{
				if ((this._B_root != value))
				{
					this.OnB_rootChanging(value);
					this.SendPropertyChanging();
					this._B_root = value;
					this.SendPropertyChanged("B_root");
					this.OnB_rootChanged();
				}
			}
		}
		
		[Column(Name="session_count", Storage="_Session_count", DbType="Int NOT NULL")]
		public int Session_count
		{
			get
			{
				return this._Session_count;
			}
			set
			{
				if ((this._Session_count != value))
				{
					this.OnSession_countChanging(value);
					this.SendPropertyChanging();
					this._Session_count = value;
					this.SendPropertyChanged("Session_count");
					this.OnSession_countChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_session_state")]
	public partial class T_session_state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_sess;
		
		private System.DateTime _Dt_start;
		
		private System.DateTime _Dt_end;
		
		private string _Tx_state;
		
		private int _Id_partition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_sessChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.DateTime value);
    partial void OnDt_endChanged();
    partial void OnTx_stateChanging(string value);
    partial void OnTx_stateChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    #endregion
		
		public T_session_state()
		{
			OnCreated();
		}
		
		[Column(Name="id_sess", Storage="_Id_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_sess
		{
			get
			{
				return this._Id_sess;
			}
			set
			{
				if ((this._Id_sess != value))
				{
					this.OnId_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_sess = value;
					this.SendPropertyChanged("Id_sess");
					this.OnId_sessChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="tx_state", Storage="_Tx_state", DbType="Char(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tx_state
		{
			get
			{
				return this._Tx_state;
			}
			set
			{
				if ((this._Tx_state != value))
				{
					this.OnTx_stateChanging(value);
					this.SendPropertyChanging();
					this._Tx_state = value;
					this.SendPropertyChanged("Tx_state");
					this.OnTx_stateChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_site_user")]
	public partial class T_site_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_login;
		
		private int _Id_site;
		
		private System.Nullable<int> _Id_profile;
		
		private EntityRef<T_localized_site> _T_localized_site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnId_siteChanging(int value);
    partial void OnId_siteChanged();
    partial void OnId_profileChanging(System.Nullable<int> value);
    partial void OnId_profileChanged();
    #endregion
		
		public T_site_user()
		{
			this._T_localized_site = default(EntityRef<T_localized_site>);
			OnCreated();
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="id_site", Storage="_Id_site", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_site
		{
			get
			{
				return this._Id_site;
			}
			set
			{
				if ((this._Id_site != value))
				{
					this.OnId_siteChanging(value);
					this.SendPropertyChanging();
					this._Id_site = value;
					this.SendPropertyChanged("Id_site");
					this.OnId_siteChanged();
				}
			}
		}
		
		[Column(Name="id_profile", Storage="_Id_profile", DbType="Int")]
		public System.Nullable<int> Id_profile
		{
			get
			{
				return this._Id_profile;
			}
			set
			{
				if ((this._Id_profile != value))
				{
					this.OnId_profileChanging(value);
					this.SendPropertyChanging();
					this._Id_profile = value;
					this.SendPropertyChanged("Id_profile");
					this.OnId_profileChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_SITE_USER", Storage="_T_localized_site", ThisKey="Id_site", OtherKey="Id_site", IsForeignKey=true)]
		public T_localized_site T_localized_site
		{
			get
			{
				return this._T_localized_site.Entity;
			}
			set
			{
				T_localized_site previousValue = this._T_localized_site.Entity;
				if (((previousValue != value) 
							|| (this._T_localized_site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_localized_site.Entity = null;
						previousValue.T_site_user.Remove(this);
					}
					this._T_localized_site.Entity = value;
					if ((value != null))
					{
						value.T_site_user.Add(this);
						this._Id_site = value.Id_site;
					}
					else
					{
						this._Id_site = default(int);
					}
					this.SendPropertyChanged("T_localized_site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_spec_char_values")]
	public partial class T_spec_char_values : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_scv;
		
		private string _C_is_default;
		
		private int _N_value;
		
		private string _Nm_value;
		
		private EntitySet<T_char_values> _T_char_values;
		
		private EntitySet<T_spec_val_map> _T_spec_val_map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_scvChanging(int value);
    partial void OnId_scvChanged();
    partial void OnC_is_defaultChanging(string value);
    partial void OnC_is_defaultChanged();
    partial void OnN_valueChanging(int value);
    partial void OnN_valueChanged();
    partial void OnNm_valueChanging(string value);
    partial void OnNm_valueChanged();
    #endregion
		
		public T_spec_char_values()
		{
			this._T_char_values = new EntitySet<T_char_values>(new Action<T_char_values>(this.attach_T_char_values), new Action<T_char_values>(this.detach_T_char_values));
			this._T_spec_val_map = new EntitySet<T_spec_val_map>(new Action<T_spec_val_map>(this.attach_T_spec_val_map), new Action<T_spec_val_map>(this.detach_T_spec_val_map));
			OnCreated();
		}
		
		[Column(Name="id_scv", Storage="_Id_scv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_scv
		{
			get
			{
				return this._Id_scv;
			}
			set
			{
				if ((this._Id_scv != value))
				{
					this.OnId_scvChanging(value);
					this.SendPropertyChanging();
					this._Id_scv = value;
					this.SendPropertyChanged("Id_scv");
					this.OnId_scvChanged();
				}
			}
		}
		
		[Column(Name="c_is_default", Storage="_C_is_default", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_is_default
		{
			get
			{
				return this._C_is_default;
			}
			set
			{
				if ((this._C_is_default != value))
				{
					this.OnC_is_defaultChanging(value);
					this.SendPropertyChanging();
					this._C_is_default = value;
					this.SendPropertyChanged("C_is_default");
					this.OnC_is_defaultChanged();
				}
			}
		}
		
		[Column(Name="n_value", Storage="_N_value", DbType="Int NOT NULL")]
		public int N_value
		{
			get
			{
				return this._N_value;
			}
			set
			{
				if ((this._N_value != value))
				{
					this.OnN_valueChanging(value);
					this.SendPropertyChanging();
					this._N_value = value;
					this.SendPropertyChanged("N_value");
					this.OnN_valueChanged();
				}
			}
		}
		
		[Column(Name="nm_value", Storage="_Nm_value", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Nm_value
		{
			get
			{
				return this._Nm_value;
			}
			set
			{
				if ((this._Nm_value != value))
				{
					this.OnNm_valueChanging(value);
					this.SendPropertyChanging();
					this._Nm_value = value;
					this.SendPropertyChanged("Nm_value");
					this.OnNm_valueChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_char_values", Storage="_T_char_values", ThisKey="Id_scv", OtherKey="Id_scv", DeleteRule="NO ACTION")]
		public EntitySet<T_char_values> T_char_values
		{
			get
			{
				return this._T_char_values;
			}
			set
			{
				this._T_char_values.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_spec_val_map", Storage="_T_spec_val_map", ThisKey="Id_scv", OtherKey="Id_scv", DeleteRule="NO ACTION")]
		public EntitySet<T_spec_val_map> T_spec_val_map
		{
			get
			{
				return this._T_spec_val_map;
			}
			set
			{
				this._T_spec_val_map.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_char_values(T_char_values entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_char_values = this;
		}
		
		private void detach_T_char_values(T_char_values entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_char_values = null;
		}
		
		private void attach_T_spec_val_map(T_spec_val_map entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_char_values = this;
		}
		
		private void detach_T_spec_val_map(T_spec_val_map entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_char_values = null;
		}
	}
	
	[Table(Name="dbo.t_spec_characteristics")]
	public partial class T_spec_characteristics : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_spec;
		
		private int _C_spec_type;
		
		private int _Id_category;
		
		private string _C_category;
		
		private string _C_is_required;
		
		private int _N_description;
		
		private string _Nm_description;
		
		private int _N_name;
		
		private string _Nm_name;
		
		private string _C_user_visible;
		
		private string _C_user_editable;
		
		private string _C_min_value;
		
		private string _C_max_value;
		
		private EntitySet<T_spec_val_map> _T_spec_val_map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_specChanging(int value);
    partial void OnId_specChanged();
    partial void OnC_spec_typeChanging(int value);
    partial void OnC_spec_typeChanged();
    partial void OnId_categoryChanging(int value);
    partial void OnId_categoryChanged();
    partial void OnC_categoryChanging(string value);
    partial void OnC_categoryChanged();
    partial void OnC_is_requiredChanging(string value);
    partial void OnC_is_requiredChanged();
    partial void OnN_descriptionChanging(int value);
    partial void OnN_descriptionChanged();
    partial void OnNm_descriptionChanging(string value);
    partial void OnNm_descriptionChanged();
    partial void OnN_nameChanging(int value);
    partial void OnN_nameChanged();
    partial void OnNm_nameChanging(string value);
    partial void OnNm_nameChanged();
    partial void OnC_user_visibleChanging(string value);
    partial void OnC_user_visibleChanged();
    partial void OnC_user_editableChanging(string value);
    partial void OnC_user_editableChanged();
    partial void OnC_min_valueChanging(string value);
    partial void OnC_min_valueChanged();
    partial void OnC_max_valueChanging(string value);
    partial void OnC_max_valueChanged();
    #endregion
		
		public T_spec_characteristics()
		{
			this._T_spec_val_map = new EntitySet<T_spec_val_map>(new Action<T_spec_val_map>(this.attach_T_spec_val_map), new Action<T_spec_val_map>(this.detach_T_spec_val_map));
			OnCreated();
		}
		
		[Column(Name="id_spec", Storage="_Id_spec", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_spec
		{
			get
			{
				return this._Id_spec;
			}
			set
			{
				if ((this._Id_spec != value))
				{
					this.OnId_specChanging(value);
					this.SendPropertyChanging();
					this._Id_spec = value;
					this.SendPropertyChanged("Id_spec");
					this.OnId_specChanged();
				}
			}
		}
		
		[Column(Name="c_spec_type", Storage="_C_spec_type", DbType="Int NOT NULL")]
		public int C_spec_type
		{
			get
			{
				return this._C_spec_type;
			}
			set
			{
				if ((this._C_spec_type != value))
				{
					this.OnC_spec_typeChanging(value);
					this.SendPropertyChanging();
					this._C_spec_type = value;
					this.SendPropertyChanged("C_spec_type");
					this.OnC_spec_typeChanged();
				}
			}
		}
		
		[Column(Name="id_category", Storage="_Id_category", DbType="Int NOT NULL")]
		public int Id_category
		{
			get
			{
				return this._Id_category;
			}
			set
			{
				if ((this._Id_category != value))
				{
					this.OnId_categoryChanging(value);
					this.SendPropertyChanging();
					this._Id_category = value;
					this.SendPropertyChanged("Id_category");
					this.OnId_categoryChanged();
				}
			}
		}
		
		[Column(Name="c_category", Storage="_C_category", DbType="NVarChar(20)")]
		public string C_category
		{
			get
			{
				return this._C_category;
			}
			set
			{
				if ((this._C_category != value))
				{
					this.OnC_categoryChanging(value);
					this.SendPropertyChanging();
					this._C_category = value;
					this.SendPropertyChanged("C_category");
					this.OnC_categoryChanged();
				}
			}
		}
		
		[Column(Name="c_is_required", Storage="_C_is_required", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_is_required
		{
			get
			{
				return this._C_is_required;
			}
			set
			{
				if ((this._C_is_required != value))
				{
					this.OnC_is_requiredChanging(value);
					this.SendPropertyChanging();
					this._C_is_required = value;
					this.SendPropertyChanged("C_is_required");
					this.OnC_is_requiredChanged();
				}
			}
		}
		
		[Column(Name="n_description", Storage="_N_description", DbType="Int NOT NULL")]
		public int N_description
		{
			get
			{
				return this._N_description;
			}
			set
			{
				if ((this._N_description != value))
				{
					this.OnN_descriptionChanging(value);
					this.SendPropertyChanging();
					this._N_description = value;
					this.SendPropertyChanged("N_description");
					this.OnN_descriptionChanged();
				}
			}
		}
		
		[Column(Name="nm_description", Storage="_Nm_description", DbType="NVarChar(255)")]
		public string Nm_description
		{
			get
			{
				return this._Nm_description;
			}
			set
			{
				if ((this._Nm_description != value))
				{
					this.OnNm_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Nm_description = value;
					this.SendPropertyChanged("Nm_description");
					this.OnNm_descriptionChanged();
				}
			}
		}
		
		[Column(Name="n_name", Storage="_N_name", DbType="Int NOT NULL")]
		public int N_name
		{
			get
			{
				return this._N_name;
			}
			set
			{
				if ((this._N_name != value))
				{
					this.OnN_nameChanging(value);
					this.SendPropertyChanging();
					this._N_name = value;
					this.SendPropertyChanged("N_name");
					this.OnN_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_name", Storage="_Nm_name", DbType="NVarChar(20)")]
		public string Nm_name
		{
			get
			{
				return this._Nm_name;
			}
			set
			{
				if ((this._Nm_name != value))
				{
					this.OnNm_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_name = value;
					this.SendPropertyChanged("Nm_name");
					this.OnNm_nameChanged();
				}
			}
		}
		
		[Column(Name="c_user_visible", Storage="_C_user_visible", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_user_visible
		{
			get
			{
				return this._C_user_visible;
			}
			set
			{
				if ((this._C_user_visible != value))
				{
					this.OnC_user_visibleChanging(value);
					this.SendPropertyChanging();
					this._C_user_visible = value;
					this.SendPropertyChanged("C_user_visible");
					this.OnC_user_visibleChanged();
				}
			}
		}
		
		[Column(Name="c_user_editable", Storage="_C_user_editable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_user_editable
		{
			get
			{
				return this._C_user_editable;
			}
			set
			{
				if ((this._C_user_editable != value))
				{
					this.OnC_user_editableChanging(value);
					this.SendPropertyChanging();
					this._C_user_editable = value;
					this.SendPropertyChanged("C_user_editable");
					this.OnC_user_editableChanged();
				}
			}
		}
		
		[Column(Name="c_min_value", Storage="_C_min_value", DbType="NVarChar(30)")]
		public string C_min_value
		{
			get
			{
				return this._C_min_value;
			}
			set
			{
				if ((this._C_min_value != value))
				{
					this.OnC_min_valueChanging(value);
					this.SendPropertyChanging();
					this._C_min_value = value;
					this.SendPropertyChanged("C_min_value");
					this.OnC_min_valueChanged();
				}
			}
		}
		
		[Column(Name="c_max_value", Storage="_C_max_value", DbType="NVarChar(30)")]
		public string C_max_value
		{
			get
			{
				return this._C_max_value;
			}
			set
			{
				if ((this._C_max_value != value))
				{
					this.OnC_max_valueChanging(value);
					this.SendPropertyChanging();
					this._C_max_value = value;
					this.SendPropertyChanged("C_max_value");
					this.OnC_max_valueChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_spec_val_map", Storage="_T_spec_val_map", ThisKey="Id_spec", OtherKey="Id_spec", DeleteRule="NO ACTION")]
		public EntitySet<T_spec_val_map> T_spec_val_map
		{
			get
			{
				return this._T_spec_val_map;
			}
			set
			{
				this._T_spec_val_map.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_spec_val_map(T_spec_val_map entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_characteristics = this;
		}
		
		private void detach_T_spec_val_map(T_spec_val_map entity)
		{
			this.SendPropertyChanging();
			entity.T_spec_characteristics = null;
		}
	}
	
	[Table(Name="dbo.t_spec_val_map")]
	public partial class T_spec_val_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_spec;
		
		private int _Id_scv;
		
		private EntityRef<T_spec_characteristics> _T_spec_characteristics;
		
		private EntityRef<T_spec_char_values> _T_spec_char_values;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_specChanging(int value);
    partial void OnId_specChanged();
    partial void OnId_scvChanging(int value);
    partial void OnId_scvChanged();
    #endregion
		
		public T_spec_val_map()
		{
			this._T_spec_characteristics = default(EntityRef<T_spec_characteristics>);
			this._T_spec_char_values = default(EntityRef<T_spec_char_values>);
			OnCreated();
		}
		
		[Column(Name="id_spec", Storage="_Id_spec", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_spec
		{
			get
			{
				return this._Id_spec;
			}
			set
			{
				if ((this._Id_spec != value))
				{
					this.OnId_specChanging(value);
					this.SendPropertyChanging();
					this._Id_spec = value;
					this.SendPropertyChanged("Id_spec");
					this.OnId_specChanged();
				}
			}
		}
		
		[Column(Name="id_scv", Storage="_Id_scv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_scv
		{
			get
			{
				return this._Id_scv;
			}
			set
			{
				if ((this._Id_scv != value))
				{
					this.OnId_scvChanging(value);
					this.SendPropertyChanging();
					this._Id_scv = value;
					this.SendPropertyChanged("Id_scv");
					this.OnId_scvChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_spec_val_map", Storage="_T_spec_characteristics", ThisKey="Id_spec", OtherKey="Id_spec", IsForeignKey=true)]
		public T_spec_characteristics T_spec_characteristics
		{
			get
			{
				return this._T_spec_characteristics.Entity;
			}
			set
			{
				T_spec_characteristics previousValue = this._T_spec_characteristics.Entity;
				if (((previousValue != value) 
							|| (this._T_spec_characteristics.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_spec_characteristics.Entity = null;
						previousValue.T_spec_val_map.Remove(this);
					}
					this._T_spec_characteristics.Entity = value;
					if ((value != null))
					{
						value.T_spec_val_map.Add(this);
						this._Id_spec = value.Id_spec;
					}
					else
					{
						this._Id_spec = default(int);
					}
					this.SendPropertyChanged("T_spec_characteristics");
				}
			}
		}
		
		[Association(Name="fk2_t_spec_val_map", Storage="_T_spec_char_values", ThisKey="Id_scv", OtherKey="Id_scv", IsForeignKey=true)]
		public T_spec_char_values T_spec_char_values
		{
			get
			{
				return this._T_spec_char_values.Entity;
			}
			set
			{
				T_spec_char_values previousValue = this._T_spec_char_values.Entity;
				if (((previousValue != value) 
							|| (this._T_spec_char_values.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_spec_char_values.Entity = null;
						previousValue.T_spec_val_map.Remove(this);
					}
					this._T_spec_char_values.Entity = value;
					if ((value != null))
					{
						value.T_spec_val_map.Add(this);
						this._Id_scv = value.Id_scv;
					}
					else
					{
						this._Id_scv = default(int);
					}
					this.SendPropertyChanged("T_spec_char_values");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_stored_procedure_table_lock")]
	public partial class T_stored_procedure_table_lock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C_row_id;
		
		private string _C_stored_procedure_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_row_idChanging(int value);
    partial void OnC_row_idChanged();
    partial void OnC_stored_procedure_nameChanging(string value);
    partial void OnC_stored_procedure_nameChanged();
    #endregion
		
		public T_stored_procedure_table_lock()
		{
			OnCreated();
		}
		
		[Column(Name="c_row_id", Storage="_C_row_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int C_row_id
		{
			get
			{
				return this._C_row_id;
			}
			set
			{
				if ((this._C_row_id != value))
				{
					this.OnC_row_idChanging(value);
					this.SendPropertyChanging();
					this._C_row_id = value;
					this.SendPropertyChanged("C_row_id");
					this.OnC_row_idChanged();
				}
			}
		}
		
		[Column(Name="c_stored_procedure_name", Storage="_C_stored_procedure_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string C_stored_procedure_name
		{
			get
			{
				return this._C_stored_procedure_name;
			}
			set
			{
				if ((this._C_stored_procedure_name != value))
				{
					this.OnC_stored_procedure_nameChanging(value);
					this.SendPropertyChanging();
					this._C_stored_procedure_name = value;
					this.SendPropertyChanged("C_stored_procedure_name");
					this.OnC_stored_procedure_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_str_col_capability")]
	public partial class T_str_col_capability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Str_col_key;
		
		private int _Id_cap_instance;
		
		private string _Tx_param_name;
		
		private string _Tx_op;
		
		private string _Param_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStr_col_keyChanging(int value);
    partial void OnStr_col_keyChanged();
    partial void OnId_cap_instanceChanging(int value);
    partial void OnId_cap_instanceChanged();
    partial void OnTx_param_nameChanging(string value);
    partial void OnTx_param_nameChanged();
    partial void OnTx_opChanging(string value);
    partial void OnTx_opChanged();
    partial void OnParam_valueChanging(string value);
    partial void OnParam_valueChanged();
    #endregion
		
		public T_str_col_capability()
		{
			OnCreated();
		}
		
		[Column(Name="str_col_key", Storage="_Str_col_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Str_col_key
		{
			get
			{
				return this._Str_col_key;
			}
			set
			{
				if ((this._Str_col_key != value))
				{
					this.OnStr_col_keyChanging(value);
					this.SendPropertyChanging();
					this._Str_col_key = value;
					this.SendPropertyChanged("Str_col_key");
					this.OnStr_col_keyChanged();
				}
			}
		}
		
		[Column(Name="id_cap_instance", Storage="_Id_cap_instance", DbType="Int NOT NULL")]
		public int Id_cap_instance
		{
			get
			{
				return this._Id_cap_instance;
			}
			set
			{
				if ((this._Id_cap_instance != value))
				{
					this.OnId_cap_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_cap_instance = value;
					this.SendPropertyChanged("Id_cap_instance");
					this.OnId_cap_instanceChanged();
				}
			}
		}
		
		[Column(Name="tx_param_name", Storage="_Tx_param_name", DbType="NVarChar(2000)")]
		public string Tx_param_name
		{
			get
			{
				return this._Tx_param_name;
			}
			set
			{
				if ((this._Tx_param_name != value))
				{
					this.OnTx_param_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_param_name = value;
					this.SendPropertyChanged("Tx_param_name");
					this.OnTx_param_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_op", Storage="_Tx_op", DbType="VarChar(1)")]
		public string Tx_op
		{
			get
			{
				return this._Tx_op;
			}
			set
			{
				if ((this._Tx_op != value))
				{
					this.OnTx_opChanging(value);
					this.SendPropertyChanging();
					this._Tx_op = value;
					this.SendPropertyChanged("Tx_op");
					this.OnTx_opChanged();
				}
			}
		}
		
		[Column(Name="param_value", Storage="_Param_value", DbType="NVarChar(255)")]
		public string Param_value
		{
			get
			{
				return this._Param_value;
			}
			set
			{
				if ((this._Param_value != value))
				{
					this.OnParam_valueChanging(value);
					this.SendPropertyChanging();
					this._Param_value = value;
					this.SendPropertyChanged("Param_value");
					this.OnParam_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_sub")]
	public partial class T_sub
	{
		
		private int _Id_sub;
		
		private System.Data.Linq.Binary _Id_sub_ext;
		
		private System.Nullable<int> _Id_acc;
		
		private int _Id_po;
		
		private System.Nullable<System.DateTime> _Dt_crt;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.Nullable<int> _Id_group;
		
		public T_sub()
		{
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int NOT NULL")]
		public int Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this._Id_sub = value;
				}
			}
		}
		
		[Column(Name="id_sub_ext", Storage="_Id_sub_ext", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Id_sub_ext
		{
			get
			{
				return this._Id_sub_ext;
			}
			set
			{
				if ((this._Id_sub_ext != value))
				{
					this._Id_sub_ext = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int NOT NULL")]
		public int Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this._Dt_crt = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int")]
		public System.Nullable<int> Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_sub_history")]
	public partial class T_sub_history
	{
		
		private System.Nullable<int> _Id_sub;
		
		private System.Data.Linq.Binary _Id_sub_ext;
		
		private System.Nullable<int> _Id_acc;
		
		private int _Id_po;
		
		private System.DateTime _Dt_crt;
		
		private System.Nullable<int> _Id_group;
		
		private System.DateTime _Vt_start;
		
		private System.DateTime _Vt_end;
		
		private System.DateTime _Tt_start;
		
		private System.DateTime _Tt_end;
		
		public T_sub_history()
		{
		}
		
		[Column(Name="id_sub", Storage="_Id_sub", DbType="Int")]
		public System.Nullable<int> Id_sub
		{
			get
			{
				return this._Id_sub;
			}
			set
			{
				if ((this._Id_sub != value))
				{
					this._Id_sub = value;
				}
			}
		}
		
		[Column(Name="id_sub_ext", Storage="_Id_sub_ext", DbType="VarBinary(16) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Id_sub_ext
		{
			get
			{
				return this._Id_sub_ext;
			}
			set
			{
				if ((this._Id_sub_ext != value))
				{
					this._Id_sub_ext = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int")]
		public System.Nullable<int> Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_po", Storage="_Id_po", DbType="Int NOT NULL")]
		public int Id_po
		{
			get
			{
				return this._Id_po;
			}
			set
			{
				if ((this._Id_po != value))
				{
					this._Id_po = value;
				}
			}
		}
		
		[Column(Name="dt_crt", Storage="_Dt_crt", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_crt
		{
			get
			{
				return this._Dt_crt;
			}
			set
			{
				if ((this._Dt_crt != value))
				{
					this._Dt_crt = value;
				}
			}
		}
		
		[Column(Name="id_group", Storage="_Id_group", DbType="Int")]
		public System.Nullable<int> Id_group
		{
			get
			{
				return this._Id_group;
			}
			set
			{
				if ((this._Id_group != value))
				{
					this._Id_group = value;
				}
			}
		}
		
		[Column(Name="vt_start", Storage="_Vt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_start
		{
			get
			{
				return this._Vt_start;
			}
			set
			{
				if ((this._Vt_start != value))
				{
					this._Vt_start = value;
				}
			}
		}
		
		[Column(Name="vt_end", Storage="_Vt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Vt_end
		{
			get
			{
				return this._Vt_end;
			}
			set
			{
				if ((this._Vt_end != value))
				{
					this._Vt_end = value;
				}
			}
		}
		
		[Column(Name="tt_start", Storage="_Tt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_start
		{
			get
			{
				return this._Tt_start;
			}
			set
			{
				if ((this._Tt_start != value))
				{
					this._Tt_start = value;
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this._Tt_end = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AccountCreateAndSubscribe")]
	public partial class T_svc_AccountCreateAndSubscribe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_city;
		
		private string _C_state;
		
		private string _C_zip;
		
		private string _C_username;
		
		private string _C_password_;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C_Language;
		
		private System.Nullable<int> _C_dayofmonth;
		
		private string _C_AccountType;
		
		private System.Nullable<int> _C_ContactType;
		
		private string _C_taxexempt;
		
		private string _C_TaxExemptID;
		
		private System.Nullable<int> _C_tariffID;
		
		private string _C_firstname;
		
		private string _C_lastname;
		
		private string _C_email;
		
		private string _C_phonenumber;
		
		private int _C__Accountid;
		
		private System.Nullable<int> _C_timezoneID;
		
		private System.Nullable<decimal> _C_timezoneoffset;
		
		private string _C_company;
		
		private string _C_address1;
		
		private string _C_address2;
		
		private string _C_address3;
		
		private System.Nullable<int> _C_country;
		
		private string _C_facsimiletelephonenumber;
		
		private string _C_middleinitial;
		
		private System.Nullable<int> _C_usagecycletype;
		
		private System.Nullable<int> _C_PaymentMethod;
		
		private int _C_operation;
		
		private string _C_transactioncookie;
		
		private System.Nullable<System.DateTime> _C_accountstartdate;
		
		private System.Nullable<System.DateTime> _C_accountenddate;
		
		private System.Nullable<int> _C_AccountStatus;
		
		private System.Nullable<int> _C_StatusReason;
		
		private string _C_StatusReasonOther;
		
		private System.Nullable<int> _C_SecurityQuestion;
		
		private string _C_SecurityAnswer;
		
		private System.Nullable<int> _C_InvoiceMethod;
		
		private System.Nullable<int> _C_dayofweek;
		
		private System.Nullable<int> _C_firstdayofmonth;
		
		private System.Nullable<int> _C_seconddayofmonth;
		
		private System.Nullable<int> _C_startmonth;
		
		private System.Nullable<int> _C_startday;
		
		private System.Nullable<int> _C_startyear;
		
		private string _C_pricelist;
		
		private System.Nullable<int> _C_currency;
		
		private string _C_PayerAccount;
		
		private string _C_PayerAccountNS;
		
		private System.Nullable<int> _C_payerID;
		
		private System.Nullable<System.DateTime> _C_payment_startdate;
		
		private System.Nullable<System.DateTime> _C_payment_enddate;
		
		private string _C_billable;
		
		private string _C_ancestorAccount;
		
		private string _C_ancestorAccountNS;
		
		private System.Nullable<int> _C_ancestorAccountID;
		
		private System.Nullable<System.DateTime> _C_hierarchy_startdate;
		
		private System.Nullable<System.DateTime> _C_hierarchy_enddate;
		
		private System.Nullable<System.DateTime> _C_accountstatus_startdate;
		
		private System.Nullable<System.DateTime> _C_accountstatus_enddate;
		
		private string _C_folder;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ProductOfferingName;
		
		private System.Nullable<int> _C_SubscriptionStartDateType;
		
		private System.DateTime _C_SubscriptionStartDate;
		
		private string _C_RemeterProcessSession;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_cityChanging(string value);
    partial void OnC_cityChanged();
    partial void OnC_stateChanging(string value);
    partial void OnC_stateChanged();
    partial void OnC_zipChanging(string value);
    partial void OnC_zipChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_password_Changing(string value);
    partial void OnC_password_Changed();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_dayofmonthChanging(System.Nullable<int> value);
    partial void OnC_dayofmonthChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_ContactTypeChanging(System.Nullable<int> value);
    partial void OnC_ContactTypeChanged();
    partial void OnC_taxexemptChanging(string value);
    partial void OnC_taxexemptChanged();
    partial void OnC_TaxExemptIDChanging(string value);
    partial void OnC_TaxExemptIDChanged();
    partial void OnC_tariffIDChanging(System.Nullable<int> value);
    partial void OnC_tariffIDChanged();
    partial void OnC_firstnameChanging(string value);
    partial void OnC_firstnameChanged();
    partial void OnC_lastnameChanging(string value);
    partial void OnC_lastnameChanged();
    partial void OnC_emailChanging(string value);
    partial void OnC_emailChanged();
    partial void OnC_phonenumberChanging(string value);
    partial void OnC_phonenumberChanged();
    partial void OnC__AccountidChanging(int value);
    partial void OnC__AccountidChanged();
    partial void OnC_timezoneIDChanging(System.Nullable<int> value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_timezoneoffsetChanging(System.Nullable<decimal> value);
    partial void OnC_timezoneoffsetChanged();
    partial void OnC_companyChanging(string value);
    partial void OnC_companyChanged();
    partial void OnC_address1Changing(string value);
    partial void OnC_address1Changed();
    partial void OnC_address2Changing(string value);
    partial void OnC_address2Changed();
    partial void OnC_address3Changing(string value);
    partial void OnC_address3Changed();
    partial void OnC_countryChanging(System.Nullable<int> value);
    partial void OnC_countryChanged();
    partial void OnC_facsimiletelephonenumberChanging(string value);
    partial void OnC_facsimiletelephonenumberChanged();
    partial void OnC_middleinitialChanging(string value);
    partial void OnC_middleinitialChanged();
    partial void OnC_usagecycletypeChanging(System.Nullable<int> value);
    partial void OnC_usagecycletypeChanged();
    partial void OnC_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_accountstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstartdateChanged();
    partial void OnC_accountenddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountenddateChanged();
    partial void OnC_AccountStatusChanging(System.Nullable<int> value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_StatusReasonChanging(System.Nullable<int> value);
    partial void OnC_StatusReasonChanged();
    partial void OnC_StatusReasonOtherChanging(string value);
    partial void OnC_StatusReasonOtherChanged();
    partial void OnC_SecurityQuestionChanging(System.Nullable<int> value);
    partial void OnC_SecurityQuestionChanged();
    partial void OnC_SecurityAnswerChanging(string value);
    partial void OnC_SecurityAnswerChanged();
    partial void OnC_InvoiceMethodChanging(System.Nullable<int> value);
    partial void OnC_InvoiceMethodChanged();
    partial void OnC_dayofweekChanging(System.Nullable<int> value);
    partial void OnC_dayofweekChanged();
    partial void OnC_firstdayofmonthChanging(System.Nullable<int> value);
    partial void OnC_firstdayofmonthChanged();
    partial void OnC_seconddayofmonthChanging(System.Nullable<int> value);
    partial void OnC_seconddayofmonthChanged();
    partial void OnC_startmonthChanging(System.Nullable<int> value);
    partial void OnC_startmonthChanged();
    partial void OnC_startdayChanging(System.Nullable<int> value);
    partial void OnC_startdayChanged();
    partial void OnC_startyearChanging(System.Nullable<int> value);
    partial void OnC_startyearChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(System.Nullable<int> value);
    partial void OnC_currencyChanged();
    partial void OnC_PayerAccountChanging(string value);
    partial void OnC_PayerAccountChanged();
    partial void OnC_PayerAccountNSChanging(string value);
    partial void OnC_PayerAccountNSChanged();
    partial void OnC_payerIDChanging(System.Nullable<int> value);
    partial void OnC_payerIDChanged();
    partial void OnC_payment_startdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_payment_startdateChanged();
    partial void OnC_payment_enddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_payment_enddateChanged();
    partial void OnC_billableChanging(string value);
    partial void OnC_billableChanged();
    partial void OnC_ancestorAccountChanging(string value);
    partial void OnC_ancestorAccountChanged();
    partial void OnC_ancestorAccountNSChanging(string value);
    partial void OnC_ancestorAccountNSChanged();
    partial void OnC_ancestorAccountIDChanging(System.Nullable<int> value);
    partial void OnC_ancestorAccountIDChanged();
    partial void OnC_hierarchy_startdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_hierarchy_startdateChanged();
    partial void OnC_hierarchy_enddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_hierarchy_enddateChanged();
    partial void OnC_accountstatus_startdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstatus_startdateChanged();
    partial void OnC_accountstatus_enddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstatus_enddateChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ProductOfferingNameChanging(string value);
    partial void OnC_ProductOfferingNameChanged();
    partial void OnC_SubscriptionStartDateTypeChanging(System.Nullable<int> value);
    partial void OnC_SubscriptionStartDateTypeChanged();
    partial void OnC_SubscriptionStartDateChanging(System.DateTime value);
    partial void OnC_SubscriptionStartDateChanged();
    partial void OnC_RemeterProcessSessionChanging(string value);
    partial void OnC_RemeterProcessSessionChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AccountCreateAndSubscribe()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_city", Storage="_C_city", DbType="NVarChar(255)")]
		public string C_city
		{
			get
			{
				return this._C_city;
			}
			set
			{
				if ((this._C_city != value))
				{
					this.OnC_cityChanging(value);
					this.SendPropertyChanging();
					this._C_city = value;
					this.SendPropertyChanged("C_city");
					this.OnC_cityChanged();
				}
			}
		}
		
		[Column(Name="c_state", Storage="_C_state", DbType="NVarChar(255)")]
		public string C_state
		{
			get
			{
				return this._C_state;
			}
			set
			{
				if ((this._C_state != value))
				{
					this.OnC_stateChanging(value);
					this.SendPropertyChanging();
					this._C_state = value;
					this.SendPropertyChanged("C_state");
					this.OnC_stateChanged();
				}
			}
		}
		
		[Column(Name="c_zip", Storage="_C_zip", DbType="NVarChar(255)")]
		public string C_zip
		{
			get
			{
				return this._C_zip;
			}
			set
			{
				if ((this._C_zip != value))
				{
					this.OnC_zipChanging(value);
					this.SendPropertyChanging();
					this._C_zip = value;
					this.SendPropertyChanged("C_zip");
					this.OnC_zipChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_password_", Storage="_C_password_", DbType="NVarChar(510)")]
		public string C_password_
		{
			get
			{
				return this._C_password_;
			}
			set
			{
				if ((this._C_password_ != value))
				{
					this.OnC_password_Changing(value);
					this.SendPropertyChanging();
					this._C_password_ = value;
					this.SendPropertyChanged("C_password_");
					this.OnC_password_Changed();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255)")]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_dayofmonth", Storage="_C_dayofmonth", DbType="Int")]
		public System.Nullable<int> C_dayofmonth
		{
			get
			{
				return this._C_dayofmonth;
			}
			set
			{
				if ((this._C_dayofmonth != value))
				{
					this.OnC_dayofmonthChanging(value);
					this.SendPropertyChanging();
					this._C_dayofmonth = value;
					this.SendPropertyChanged("C_dayofmonth");
					this.OnC_dayofmonthChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ContactType", Storage="_C_ContactType", DbType="Int")]
		public System.Nullable<int> C_ContactType
		{
			get
			{
				return this._C_ContactType;
			}
			set
			{
				if ((this._C_ContactType != value))
				{
					this.OnC_ContactTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ContactType = value;
					this.SendPropertyChanged("C_ContactType");
					this.OnC_ContactTypeChanged();
				}
			}
		}
		
		[Column(Name="c_taxexempt", Storage="_C_taxexempt", DbType="Char(1)")]
		public string C_taxexempt
		{
			get
			{
				return this._C_taxexempt;
			}
			set
			{
				if ((this._C_taxexempt != value))
				{
					this.OnC_taxexemptChanging(value);
					this.SendPropertyChanging();
					this._C_taxexempt = value;
					this.SendPropertyChanged("C_taxexempt");
					this.OnC_taxexemptChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptID", Storage="_C_TaxExemptID", DbType="NVarChar(255)")]
		public string C_TaxExemptID
		{
			get
			{
				return this._C_TaxExemptID;
			}
			set
			{
				if ((this._C_TaxExemptID != value))
				{
					this.OnC_TaxExemptIDChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptID = value;
					this.SendPropertyChanged("C_TaxExemptID");
					this.OnC_TaxExemptIDChanged();
				}
			}
		}
		
		[Column(Name="c_tariffID", Storage="_C_tariffID", DbType="Int")]
		public System.Nullable<int> C_tariffID
		{
			get
			{
				return this._C_tariffID;
			}
			set
			{
				if ((this._C_tariffID != value))
				{
					this.OnC_tariffIDChanging(value);
					this.SendPropertyChanging();
					this._C_tariffID = value;
					this.SendPropertyChanged("C_tariffID");
					this.OnC_tariffIDChanged();
				}
			}
		}
		
		[Column(Name="c_firstname", Storage="_C_firstname", DbType="NVarChar(255)")]
		public string C_firstname
		{
			get
			{
				return this._C_firstname;
			}
			set
			{
				if ((this._C_firstname != value))
				{
					this.OnC_firstnameChanging(value);
					this.SendPropertyChanging();
					this._C_firstname = value;
					this.SendPropertyChanged("C_firstname");
					this.OnC_firstnameChanged();
				}
			}
		}
		
		[Column(Name="c_lastname", Storage="_C_lastname", DbType="NVarChar(255)")]
		public string C_lastname
		{
			get
			{
				return this._C_lastname;
			}
			set
			{
				if ((this._C_lastname != value))
				{
					this.OnC_lastnameChanging(value);
					this.SendPropertyChanging();
					this._C_lastname = value;
					this.SendPropertyChanged("C_lastname");
					this.OnC_lastnameChanged();
				}
			}
		}
		
		[Column(Name="c_email", Storage="_C_email", DbType="NVarChar(255)")]
		public string C_email
		{
			get
			{
				return this._C_email;
			}
			set
			{
				if ((this._C_email != value))
				{
					this.OnC_emailChanging(value);
					this.SendPropertyChanging();
					this._C_email = value;
					this.SendPropertyChanged("C_email");
					this.OnC_emailChanged();
				}
			}
		}
		
		[Column(Name="c_phonenumber", Storage="_C_phonenumber", DbType="NVarChar(255)")]
		public string C_phonenumber
		{
			get
			{
				return this._C_phonenumber;
			}
			set
			{
				if ((this._C_phonenumber != value))
				{
					this.OnC_phonenumberChanging(value);
					this.SendPropertyChanging();
					this._C_phonenumber = value;
					this.SendPropertyChanged("C_phonenumber");
					this.OnC_phonenumberChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int NOT NULL")]
		public int C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int")]
		public System.Nullable<int> C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneoffset", Storage="_C_timezoneoffset", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_timezoneoffset
		{
			get
			{
				return this._C_timezoneoffset;
			}
			set
			{
				if ((this._C_timezoneoffset != value))
				{
					this.OnC_timezoneoffsetChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneoffset = value;
					this.SendPropertyChanged("C_timezoneoffset");
					this.OnC_timezoneoffsetChanged();
				}
			}
		}
		
		[Column(Name="c_company", Storage="_C_company", DbType="NVarChar(255)")]
		public string C_company
		{
			get
			{
				return this._C_company;
			}
			set
			{
				if ((this._C_company != value))
				{
					this.OnC_companyChanging(value);
					this.SendPropertyChanging();
					this._C_company = value;
					this.SendPropertyChanged("C_company");
					this.OnC_companyChanged();
				}
			}
		}
		
		[Column(Name="c_address1", Storage="_C_address1", DbType="NVarChar(255)")]
		public string C_address1
		{
			get
			{
				return this._C_address1;
			}
			set
			{
				if ((this._C_address1 != value))
				{
					this.OnC_address1Changing(value);
					this.SendPropertyChanging();
					this._C_address1 = value;
					this.SendPropertyChanged("C_address1");
					this.OnC_address1Changed();
				}
			}
		}
		
		[Column(Name="c_address2", Storage="_C_address2", DbType="NVarChar(255)")]
		public string C_address2
		{
			get
			{
				return this._C_address2;
			}
			set
			{
				if ((this._C_address2 != value))
				{
					this.OnC_address2Changing(value);
					this.SendPropertyChanging();
					this._C_address2 = value;
					this.SendPropertyChanged("C_address2");
					this.OnC_address2Changed();
				}
			}
		}
		
		[Column(Name="c_address3", Storage="_C_address3", DbType="NVarChar(255)")]
		public string C_address3
		{
			get
			{
				return this._C_address3;
			}
			set
			{
				if ((this._C_address3 != value))
				{
					this.OnC_address3Changing(value);
					this.SendPropertyChanging();
					this._C_address3 = value;
					this.SendPropertyChanged("C_address3");
					this.OnC_address3Changed();
				}
			}
		}
		
		[Column(Name="c_country", Storage="_C_country", DbType="Int")]
		public System.Nullable<int> C_country
		{
			get
			{
				return this._C_country;
			}
			set
			{
				if ((this._C_country != value))
				{
					this.OnC_countryChanging(value);
					this.SendPropertyChanging();
					this._C_country = value;
					this.SendPropertyChanged("C_country");
					this.OnC_countryChanged();
				}
			}
		}
		
		[Column(Name="c_facsimiletelephonenumber", Storage="_C_facsimiletelephonenumber", DbType="NVarChar(255)")]
		public string C_facsimiletelephonenumber
		{
			get
			{
				return this._C_facsimiletelephonenumber;
			}
			set
			{
				if ((this._C_facsimiletelephonenumber != value))
				{
					this.OnC_facsimiletelephonenumberChanging(value);
					this.SendPropertyChanging();
					this._C_facsimiletelephonenumber = value;
					this.SendPropertyChanged("C_facsimiletelephonenumber");
					this.OnC_facsimiletelephonenumberChanged();
				}
			}
		}
		
		[Column(Name="c_middleinitial", Storage="_C_middleinitial", DbType="NVarChar(255)")]
		public string C_middleinitial
		{
			get
			{
				return this._C_middleinitial;
			}
			set
			{
				if ((this._C_middleinitial != value))
				{
					this.OnC_middleinitialChanging(value);
					this.SendPropertyChanging();
					this._C_middleinitial = value;
					this.SendPropertyChanged("C_middleinitial");
					this.OnC_middleinitialChanged();
				}
			}
		}
		
		[Column(Name="c_usagecycletype", Storage="_C_usagecycletype", DbType="Int")]
		public System.Nullable<int> C_usagecycletype
		{
			get
			{
				return this._C_usagecycletype;
			}
			set
			{
				if ((this._C_usagecycletype != value))
				{
					this.OnC_usagecycletypeChanging(value);
					this.SendPropertyChanging();
					this._C_usagecycletype = value;
					this.SendPropertyChanged("C_usagecycletype");
					this.OnC_usagecycletypeChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int")]
		public System.Nullable<int> C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_accountstartdate", Storage="_C_accountstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstartdate
		{
			get
			{
				return this._C_accountstartdate;
			}
			set
			{
				if ((this._C_accountstartdate != value))
				{
					this.OnC_accountstartdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstartdate = value;
					this.SendPropertyChanged("C_accountstartdate");
					this.OnC_accountstartdateChanged();
				}
			}
		}
		
		[Column(Name="c_accountenddate", Storage="_C_accountenddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountenddate
		{
			get
			{
				return this._C_accountenddate;
			}
			set
			{
				if ((this._C_accountenddate != value))
				{
					this.OnC_accountenddateChanging(value);
					this.SendPropertyChanging();
					this._C_accountenddate = value;
					this.SendPropertyChanged("C_accountenddate");
					this.OnC_accountenddateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int")]
		public System.Nullable<int> C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReason", Storage="_C_StatusReason", DbType="Int")]
		public System.Nullable<int> C_StatusReason
		{
			get
			{
				return this._C_StatusReason;
			}
			set
			{
				if ((this._C_StatusReason != value))
				{
					this.OnC_StatusReasonChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReason = value;
					this.SendPropertyChanged("C_StatusReason");
					this.OnC_StatusReasonChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReasonOther", Storage="_C_StatusReasonOther", DbType="NVarChar(255)")]
		public string C_StatusReasonOther
		{
			get
			{
				return this._C_StatusReasonOther;
			}
			set
			{
				if ((this._C_StatusReasonOther != value))
				{
					this.OnC_StatusReasonOtherChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReasonOther = value;
					this.SendPropertyChanged("C_StatusReasonOther");
					this.OnC_StatusReasonOtherChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityQuestion", Storage="_C_SecurityQuestion", DbType="Int")]
		public System.Nullable<int> C_SecurityQuestion
		{
			get
			{
				return this._C_SecurityQuestion;
			}
			set
			{
				if ((this._C_SecurityQuestion != value))
				{
					this.OnC_SecurityQuestionChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityQuestion = value;
					this.SendPropertyChanged("C_SecurityQuestion");
					this.OnC_SecurityQuestionChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityAnswer", Storage="_C_SecurityAnswer", DbType="NVarChar(255)")]
		public string C_SecurityAnswer
		{
			get
			{
				return this._C_SecurityAnswer;
			}
			set
			{
				if ((this._C_SecurityAnswer != value))
				{
					this.OnC_SecurityAnswerChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityAnswer = value;
					this.SendPropertyChanged("C_SecurityAnswer");
					this.OnC_SecurityAnswerChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceMethod", Storage="_C_InvoiceMethod", DbType="Int")]
		public System.Nullable<int> C_InvoiceMethod
		{
			get
			{
				return this._C_InvoiceMethod;
			}
			set
			{
				if ((this._C_InvoiceMethod != value))
				{
					this.OnC_InvoiceMethodChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceMethod = value;
					this.SendPropertyChanged("C_InvoiceMethod");
					this.OnC_InvoiceMethodChanged();
				}
			}
		}
		
		[Column(Name="c_dayofweek", Storage="_C_dayofweek", DbType="Int")]
		public System.Nullable<int> C_dayofweek
		{
			get
			{
				return this._C_dayofweek;
			}
			set
			{
				if ((this._C_dayofweek != value))
				{
					this.OnC_dayofweekChanging(value);
					this.SendPropertyChanging();
					this._C_dayofweek = value;
					this.SendPropertyChanged("C_dayofweek");
					this.OnC_dayofweekChanged();
				}
			}
		}
		
		[Column(Name="c_firstdayofmonth", Storage="_C_firstdayofmonth", DbType="Int")]
		public System.Nullable<int> C_firstdayofmonth
		{
			get
			{
				return this._C_firstdayofmonth;
			}
			set
			{
				if ((this._C_firstdayofmonth != value))
				{
					this.OnC_firstdayofmonthChanging(value);
					this.SendPropertyChanging();
					this._C_firstdayofmonth = value;
					this.SendPropertyChanged("C_firstdayofmonth");
					this.OnC_firstdayofmonthChanged();
				}
			}
		}
		
		[Column(Name="c_seconddayofmonth", Storage="_C_seconddayofmonth", DbType="Int")]
		public System.Nullable<int> C_seconddayofmonth
		{
			get
			{
				return this._C_seconddayofmonth;
			}
			set
			{
				if ((this._C_seconddayofmonth != value))
				{
					this.OnC_seconddayofmonthChanging(value);
					this.SendPropertyChanging();
					this._C_seconddayofmonth = value;
					this.SendPropertyChanged("C_seconddayofmonth");
					this.OnC_seconddayofmonthChanged();
				}
			}
		}
		
		[Column(Name="c_startmonth", Storage="_C_startmonth", DbType="Int")]
		public System.Nullable<int> C_startmonth
		{
			get
			{
				return this._C_startmonth;
			}
			set
			{
				if ((this._C_startmonth != value))
				{
					this.OnC_startmonthChanging(value);
					this.SendPropertyChanging();
					this._C_startmonth = value;
					this.SendPropertyChanged("C_startmonth");
					this.OnC_startmonthChanged();
				}
			}
		}
		
		[Column(Name="c_startday", Storage="_C_startday", DbType="Int")]
		public System.Nullable<int> C_startday
		{
			get
			{
				return this._C_startday;
			}
			set
			{
				if ((this._C_startday != value))
				{
					this.OnC_startdayChanging(value);
					this.SendPropertyChanging();
					this._C_startday = value;
					this.SendPropertyChanged("C_startday");
					this.OnC_startdayChanged();
				}
			}
		}
		
		[Column(Name="c_startyear", Storage="_C_startyear", DbType="Int")]
		public System.Nullable<int> C_startyear
		{
			get
			{
				return this._C_startyear;
			}
			set
			{
				if ((this._C_startyear != value))
				{
					this.OnC_startyearChanging(value);
					this.SendPropertyChanging();
					this._C_startyear = value;
					this.SendPropertyChanged("C_startyear");
					this.OnC_startyearChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="Int")]
		public System.Nullable<int> C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_PayerAccount", Storage="_C_PayerAccount", DbType="NVarChar(255)")]
		public string C_PayerAccount
		{
			get
			{
				return this._C_PayerAccount;
			}
			set
			{
				if ((this._C_PayerAccount != value))
				{
					this.OnC_PayerAccountChanging(value);
					this.SendPropertyChanging();
					this._C_PayerAccount = value;
					this.SendPropertyChanged("C_PayerAccount");
					this.OnC_PayerAccountChanged();
				}
			}
		}
		
		[Column(Name="c_PayerAccountNS", Storage="_C_PayerAccountNS", DbType="NVarChar(255)")]
		public string C_PayerAccountNS
		{
			get
			{
				return this._C_PayerAccountNS;
			}
			set
			{
				if ((this._C_PayerAccountNS != value))
				{
					this.OnC_PayerAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_PayerAccountNS = value;
					this.SendPropertyChanged("C_PayerAccountNS");
					this.OnC_PayerAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_payerID", Storage="_C_payerID", DbType="Int")]
		public System.Nullable<int> C_payerID
		{
			get
			{
				return this._C_payerID;
			}
			set
			{
				if ((this._C_payerID != value))
				{
					this.OnC_payerIDChanging(value);
					this.SendPropertyChanging();
					this._C_payerID = value;
					this.SendPropertyChanged("C_payerID");
					this.OnC_payerIDChanged();
				}
			}
		}
		
		[Column(Name="c_payment_startdate", Storage="_C_payment_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_payment_startdate
		{
			get
			{
				return this._C_payment_startdate;
			}
			set
			{
				if ((this._C_payment_startdate != value))
				{
					this.OnC_payment_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_payment_startdate = value;
					this.SendPropertyChanged("C_payment_startdate");
					this.OnC_payment_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_payment_enddate", Storage="_C_payment_enddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_payment_enddate
		{
			get
			{
				return this._C_payment_enddate;
			}
			set
			{
				if ((this._C_payment_enddate != value))
				{
					this.OnC_payment_enddateChanging(value);
					this.SendPropertyChanging();
					this._C_payment_enddate = value;
					this.SendPropertyChanged("C_payment_enddate");
					this.OnC_payment_enddateChanged();
				}
			}
		}
		
		[Column(Name="c_billable", Storage="_C_billable", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_billable
		{
			get
			{
				return this._C_billable;
			}
			set
			{
				if ((this._C_billable != value))
				{
					this.OnC_billableChanging(value);
					this.SendPropertyChanging();
					this._C_billable = value;
					this.SendPropertyChanged("C_billable");
					this.OnC_billableChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccount", Storage="_C_ancestorAccount", DbType="NVarChar(255)")]
		public string C_ancestorAccount
		{
			get
			{
				return this._C_ancestorAccount;
			}
			set
			{
				if ((this._C_ancestorAccount != value))
				{
					this.OnC_ancestorAccountChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccount = value;
					this.SendPropertyChanged("C_ancestorAccount");
					this.OnC_ancestorAccountChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountNS", Storage="_C_ancestorAccountNS", DbType="NVarChar(255)")]
		public string C_ancestorAccountNS
		{
			get
			{
				return this._C_ancestorAccountNS;
			}
			set
			{
				if ((this._C_ancestorAccountNS != value))
				{
					this.OnC_ancestorAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountNS = value;
					this.SendPropertyChanged("C_ancestorAccountNS");
					this.OnC_ancestorAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountID", Storage="_C_ancestorAccountID", DbType="Int")]
		public System.Nullable<int> C_ancestorAccountID
		{
			get
			{
				return this._C_ancestorAccountID;
			}
			set
			{
				if ((this._C_ancestorAccountID != value))
				{
					this.OnC_ancestorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountID = value;
					this.SendPropertyChanged("C_ancestorAccountID");
					this.OnC_ancestorAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_startdate", Storage="_C_hierarchy_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_hierarchy_startdate
		{
			get
			{
				return this._C_hierarchy_startdate;
			}
			set
			{
				if ((this._C_hierarchy_startdate != value))
				{
					this.OnC_hierarchy_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_startdate = value;
					this.SendPropertyChanged("C_hierarchy_startdate");
					this.OnC_hierarchy_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_enddate", Storage="_C_hierarchy_enddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_hierarchy_enddate
		{
			get
			{
				return this._C_hierarchy_enddate;
			}
			set
			{
				if ((this._C_hierarchy_enddate != value))
				{
					this.OnC_hierarchy_enddateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_enddate = value;
					this.SendPropertyChanged("C_hierarchy_enddate");
					this.OnC_hierarchy_enddateChanged();
				}
			}
		}
		
		[Column(Name="c_accountstatus_startdate", Storage="_C_accountstatus_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstatus_startdate
		{
			get
			{
				return this._C_accountstatus_startdate;
			}
			set
			{
				if ((this._C_accountstatus_startdate != value))
				{
					this.OnC_accountstatus_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstatus_startdate = value;
					this.SendPropertyChanged("C_accountstatus_startdate");
					this.OnC_accountstatus_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_accountstatus_enddate", Storage="_C_accountstatus_enddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstatus_enddate
		{
			get
			{
				return this._C_accountstatus_enddate;
			}
			set
			{
				if ((this._C_accountstatus_enddate != value))
				{
					this.OnC_accountstatus_enddateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstatus_enddate = value;
					this.SendPropertyChanged("C_accountstatus_enddate");
					this.OnC_accountstatus_enddateChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ProductOfferingName", Storage="_C_ProductOfferingName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ProductOfferingName
		{
			get
			{
				return this._C_ProductOfferingName;
			}
			set
			{
				if ((this._C_ProductOfferingName != value))
				{
					this.OnC_ProductOfferingNameChanging(value);
					this.SendPropertyChanging();
					this._C_ProductOfferingName = value;
					this.SendPropertyChanged("C_ProductOfferingName");
					this.OnC_ProductOfferingNameChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStartDateType", Storage="_C_SubscriptionStartDateType", DbType="Int")]
		public System.Nullable<int> C_SubscriptionStartDateType
		{
			get
			{
				return this._C_SubscriptionStartDateType;
			}
			set
			{
				if ((this._C_SubscriptionStartDateType != value))
				{
					this.OnC_SubscriptionStartDateTypeChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStartDateType = value;
					this.SendPropertyChanged("C_SubscriptionStartDateType");
					this.OnC_SubscriptionStartDateTypeChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStartDate", Storage="_C_SubscriptionStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStartDate
		{
			get
			{
				return this._C_SubscriptionStartDate;
			}
			set
			{
				if ((this._C_SubscriptionStartDate != value))
				{
					this.OnC_SubscriptionStartDateChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStartDate = value;
					this.SendPropertyChanged("C_SubscriptionStartDate");
					this.OnC_SubscriptionStartDateChanged();
				}
			}
		}
		
		[Column(Name="c_RemeterProcessSession", Storage="_C_RemeterProcessSession", DbType="Char(1)")]
		public string C_RemeterProcessSession
		{
			get
			{
				return this._C_RemeterProcessSession;
			}
			set
			{
				if ((this._C_RemeterProcessSession != value))
				{
					this.OnC_RemeterProcessSessionChanging(value);
					this.SendPropertyChanging();
					this._C_RemeterProcessSession = value;
					this.SendPropertyChanged("C_RemeterProcessSession");
					this.OnC_RemeterProcessSessionChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AccountCreation")]
	public partial class T_svc_AccountCreation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_Operation;
		
		private string _C_UserName;
		
		private string _C_Password_;
		
		private string _C_Name_Space;
		
		private System.Nullable<int> _C__AccountID;
		
		private System.Nullable<System.DateTime> _C_AccountStartDate;
		
		private System.Nullable<System.DateTime> _C_AccountEndDate;
		
		private System.Nullable<int> _C_AccountStatus;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ApplyAccountTemplate;
		
		private string _C_TruncateOldSubscriptions;
		
		private string _C_TransactionCookie;
		
		private string _C_PayerAccount;
		
		private string _C_PayerAccountNS;
		
		private System.Nullable<int> _C_PayerID;
		
		private System.Nullable<System.DateTime> _C_Payment_StartDate;
		
		private System.Nullable<System.DateTime> _C_Payment_EndDate;
		
		private string _C_AncestorAccount;
		
		private string _C_AncestorAccountNS;
		
		private System.Nullable<int> _C_AncestorAccountID;
		
		private System.Nullable<System.DateTime> _C_Hierarchy_StartDate;
		
		private System.Nullable<System.DateTime> _C_Hierarchy_EndDate;
		
		private string _C_Billable;
		
		private string _C_Folder;
		
		private string _C_Pricelist;
		
		private string _C_Currency;
		
		private System.Nullable<int> _C_Language;
		
		private string _C_TaxExempt;
		
		private string _C_TaxExemptID;
		
		private System.Nullable<int> _C_TimeZoneID;
		
		private System.Nullable<decimal> _C_TimeZoneOffset;
		
		private System.Nullable<int> _C_PaymentMethod;
		
		private System.Nullable<int> _C_StatusReason;
		
		private string _C_StatusReasonOther;
		
		private System.Nullable<int> _C_SecurityQuestion;
		
		private string _C_SecurityAnswer;
		
		private System.Nullable<int> _C_InvoiceMethod;
		
		private System.Nullable<int> _C_UsageCycleType;
		
		private System.Nullable<int> _C_DayOfMonth;
		
		private System.Nullable<int> _C_DayOfWeek;
		
		private System.Nullable<int> _C_FirstDayOfMonth;
		
		private System.Nullable<int> _C_SecondDayOfMonth;
		
		private System.Nullable<int> _C_StartMonth;
		
		private System.Nullable<int> _C_StartDay;
		
		private System.Nullable<int> _C_StartYear;
		
		private System.Nullable<int> _C_ContactType;
		
		private string _C_FirstName;
		
		private string _C_MiddleInitial;
		
		private string _C_LastName;
		
		private string _C_Company;
		
		private string _C_FacsimileTelephoneNumber;
		
		private string _C_Email;
		
		private string _C_PhoneNumber;
		
		private string _C_Address1;
		
		private string _C_Address2;
		
		private string _C_Address3;
		
		private string _C_City;
		
		private string _C_State;
		
		private string _C_Zip;
		
		private System.Nullable<int> _C_Country;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_OperationChanging(int value);
    partial void OnC_OperationChanged();
    partial void OnC_UserNameChanging(string value);
    partial void OnC_UserNameChanged();
    partial void OnC_Password_Changing(string value);
    partial void OnC_Password_Changed();
    partial void OnC_Name_SpaceChanging(string value);
    partial void OnC_Name_SpaceChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC_AccountStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_AccountStartDateChanged();
    partial void OnC_AccountEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_AccountEndDateChanged();
    partial void OnC_AccountStatusChanging(System.Nullable<int> value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ApplyAccountTemplateChanging(string value);
    partial void OnC_ApplyAccountTemplateChanged();
    partial void OnC_TruncateOldSubscriptionsChanging(string value);
    partial void OnC_TruncateOldSubscriptionsChanged();
    partial void OnC_TransactionCookieChanging(string value);
    partial void OnC_TransactionCookieChanged();
    partial void OnC_PayerAccountChanging(string value);
    partial void OnC_PayerAccountChanged();
    partial void OnC_PayerAccountNSChanging(string value);
    partial void OnC_PayerAccountNSChanged();
    partial void OnC_PayerIDChanging(System.Nullable<int> value);
    partial void OnC_PayerIDChanged();
    partial void OnC_Payment_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_Payment_StartDateChanged();
    partial void OnC_Payment_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_Payment_EndDateChanged();
    partial void OnC_AncestorAccountChanging(string value);
    partial void OnC_AncestorAccountChanged();
    partial void OnC_AncestorAccountNSChanging(string value);
    partial void OnC_AncestorAccountNSChanged();
    partial void OnC_AncestorAccountIDChanging(System.Nullable<int> value);
    partial void OnC_AncestorAccountIDChanged();
    partial void OnC_Hierarchy_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_Hierarchy_StartDateChanged();
    partial void OnC_Hierarchy_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_Hierarchy_EndDateChanged();
    partial void OnC_BillableChanging(string value);
    partial void OnC_BillableChanged();
    partial void OnC_FolderChanging(string value);
    partial void OnC_FolderChanged();
    partial void OnC_PricelistChanging(string value);
    partial void OnC_PricelistChanged();
    partial void OnC_CurrencyChanging(string value);
    partial void OnC_CurrencyChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_TaxExemptChanging(string value);
    partial void OnC_TaxExemptChanged();
    partial void OnC_TaxExemptIDChanging(string value);
    partial void OnC_TaxExemptIDChanged();
    partial void OnC_TimeZoneIDChanging(System.Nullable<int> value);
    partial void OnC_TimeZoneIDChanged();
    partial void OnC_TimeZoneOffsetChanging(System.Nullable<decimal> value);
    partial void OnC_TimeZoneOffsetChanged();
    partial void OnC_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_StatusReasonChanging(System.Nullable<int> value);
    partial void OnC_StatusReasonChanged();
    partial void OnC_StatusReasonOtherChanging(string value);
    partial void OnC_StatusReasonOtherChanged();
    partial void OnC_SecurityQuestionChanging(System.Nullable<int> value);
    partial void OnC_SecurityQuestionChanged();
    partial void OnC_SecurityAnswerChanging(string value);
    partial void OnC_SecurityAnswerChanged();
    partial void OnC_InvoiceMethodChanging(System.Nullable<int> value);
    partial void OnC_InvoiceMethodChanged();
    partial void OnC_UsageCycleTypeChanging(System.Nullable<int> value);
    partial void OnC_UsageCycleTypeChanged();
    partial void OnC_DayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_DayOfMonthChanged();
    partial void OnC_DayOfWeekChanging(System.Nullable<int> value);
    partial void OnC_DayOfWeekChanged();
    partial void OnC_FirstDayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_FirstDayOfMonthChanged();
    partial void OnC_SecondDayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_SecondDayOfMonthChanged();
    partial void OnC_StartMonthChanging(System.Nullable<int> value);
    partial void OnC_StartMonthChanged();
    partial void OnC_StartDayChanging(System.Nullable<int> value);
    partial void OnC_StartDayChanged();
    partial void OnC_StartYearChanging(System.Nullable<int> value);
    partial void OnC_StartYearChanged();
    partial void OnC_ContactTypeChanging(System.Nullable<int> value);
    partial void OnC_ContactTypeChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_MiddleInitialChanging(string value);
    partial void OnC_MiddleInitialChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_CompanyChanging(string value);
    partial void OnC_CompanyChanged();
    partial void OnC_FacsimileTelephoneNumberChanging(string value);
    partial void OnC_FacsimileTelephoneNumberChanged();
    partial void OnC_EmailChanging(string value);
    partial void OnC_EmailChanged();
    partial void OnC_PhoneNumberChanging(string value);
    partial void OnC_PhoneNumberChanged();
    partial void OnC_Address1Changing(string value);
    partial void OnC_Address1Changed();
    partial void OnC_Address2Changing(string value);
    partial void OnC_Address2Changed();
    partial void OnC_Address3Changing(string value);
    partial void OnC_Address3Changed();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_StateChanging(string value);
    partial void OnC_StateChanged();
    partial void OnC_ZipChanging(string value);
    partial void OnC_ZipChanged();
    partial void OnC_CountryChanging(System.Nullable<int> value);
    partial void OnC_CountryChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AccountCreation()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Operation", Storage="_C_Operation", DbType="Int NOT NULL")]
		public int C_Operation
		{
			get
			{
				return this._C_Operation;
			}
			set
			{
				if ((this._C_Operation != value))
				{
					this.OnC_OperationChanging(value);
					this.SendPropertyChanging();
					this._C_Operation = value;
					this.SendPropertyChanged("C_Operation");
					this.OnC_OperationChanged();
				}
			}
		}
		
		[Column(Name="c_UserName", Storage="_C_UserName", DbType="NVarChar(255)")]
		public string C_UserName
		{
			get
			{
				return this._C_UserName;
			}
			set
			{
				if ((this._C_UserName != value))
				{
					this.OnC_UserNameChanging(value);
					this.SendPropertyChanging();
					this._C_UserName = value;
					this.SendPropertyChanged("C_UserName");
					this.OnC_UserNameChanged();
				}
			}
		}
		
		[Column(Name="c_Password_", Storage="_C_Password_", DbType="NVarChar(510)")]
		public string C_Password_
		{
			get
			{
				return this._C_Password_;
			}
			set
			{
				if ((this._C_Password_ != value))
				{
					this.OnC_Password_Changing(value);
					this.SendPropertyChanging();
					this._C_Password_ = value;
					this.SendPropertyChanged("C_Password_");
					this.OnC_Password_Changed();
				}
			}
		}
		
		[Column(Name="c_Name_Space", Storage="_C_Name_Space", DbType="NVarChar(255)")]
		public string C_Name_Space
		{
			get
			{
				return this._C_Name_Space;
			}
			set
			{
				if ((this._C_Name_Space != value))
				{
					this.OnC_Name_SpaceChanging(value);
					this.SendPropertyChanging();
					this._C_Name_Space = value;
					this.SendPropertyChanged("C_Name_Space");
					this.OnC_Name_SpaceChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStartDate", Storage="_C_AccountStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_AccountStartDate
		{
			get
			{
				return this._C_AccountStartDate;
			}
			set
			{
				if ((this._C_AccountStartDate != value))
				{
					this.OnC_AccountStartDateChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStartDate = value;
					this.SendPropertyChanged("C_AccountStartDate");
					this.OnC_AccountStartDateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountEndDate", Storage="_C_AccountEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_AccountEndDate
		{
			get
			{
				return this._C_AccountEndDate;
			}
			set
			{
				if ((this._C_AccountEndDate != value))
				{
					this.OnC_AccountEndDateChanging(value);
					this.SendPropertyChanging();
					this._C_AccountEndDate = value;
					this.SendPropertyChanged("C_AccountEndDate");
					this.OnC_AccountEndDateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int")]
		public System.Nullable<int> C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyAccountTemplate", Storage="_C_ApplyAccountTemplate", DbType="Char(1)")]
		public string C_ApplyAccountTemplate
		{
			get
			{
				return this._C_ApplyAccountTemplate;
			}
			set
			{
				if ((this._C_ApplyAccountTemplate != value))
				{
					this.OnC_ApplyAccountTemplateChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyAccountTemplate = value;
					this.SendPropertyChanged("C_ApplyAccountTemplate");
					this.OnC_ApplyAccountTemplateChanged();
				}
			}
		}
		
		[Column(Name="c_TruncateOldSubscriptions", Storage="_C_TruncateOldSubscriptions", DbType="Char(1)")]
		public string C_TruncateOldSubscriptions
		{
			get
			{
				return this._C_TruncateOldSubscriptions;
			}
			set
			{
				if ((this._C_TruncateOldSubscriptions != value))
				{
					this.OnC_TruncateOldSubscriptionsChanging(value);
					this.SendPropertyChanging();
					this._C_TruncateOldSubscriptions = value;
					this.SendPropertyChanged("C_TruncateOldSubscriptions");
					this.OnC_TruncateOldSubscriptionsChanged();
				}
			}
		}
		
		[Column(Name="c_TransactionCookie", Storage="_C_TransactionCookie", DbType="NVarChar(255)")]
		public string C_TransactionCookie
		{
			get
			{
				return this._C_TransactionCookie;
			}
			set
			{
				if ((this._C_TransactionCookie != value))
				{
					this.OnC_TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C_TransactionCookie = value;
					this.SendPropertyChanged("C_TransactionCookie");
					this.OnC_TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c_PayerAccount", Storage="_C_PayerAccount", DbType="NVarChar(255)")]
		public string C_PayerAccount
		{
			get
			{
				return this._C_PayerAccount;
			}
			set
			{
				if ((this._C_PayerAccount != value))
				{
					this.OnC_PayerAccountChanging(value);
					this.SendPropertyChanging();
					this._C_PayerAccount = value;
					this.SendPropertyChanged("C_PayerAccount");
					this.OnC_PayerAccountChanged();
				}
			}
		}
		
		[Column(Name="c_PayerAccountNS", Storage="_C_PayerAccountNS", DbType="NVarChar(255)")]
		public string C_PayerAccountNS
		{
			get
			{
				return this._C_PayerAccountNS;
			}
			set
			{
				if ((this._C_PayerAccountNS != value))
				{
					this.OnC_PayerAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_PayerAccountNS = value;
					this.SendPropertyChanged("C_PayerAccountNS");
					this.OnC_PayerAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_PayerID", Storage="_C_PayerID", DbType="Int")]
		public System.Nullable<int> C_PayerID
		{
			get
			{
				return this._C_PayerID;
			}
			set
			{
				if ((this._C_PayerID != value))
				{
					this.OnC_PayerIDChanging(value);
					this.SendPropertyChanging();
					this._C_PayerID = value;
					this.SendPropertyChanged("C_PayerID");
					this.OnC_PayerIDChanged();
				}
			}
		}
		
		[Column(Name="c_Payment_StartDate", Storage="_C_Payment_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_Payment_StartDate
		{
			get
			{
				return this._C_Payment_StartDate;
			}
			set
			{
				if ((this._C_Payment_StartDate != value))
				{
					this.OnC_Payment_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_Payment_StartDate = value;
					this.SendPropertyChanged("C_Payment_StartDate");
					this.OnC_Payment_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_Payment_EndDate", Storage="_C_Payment_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_Payment_EndDate
		{
			get
			{
				return this._C_Payment_EndDate;
			}
			set
			{
				if ((this._C_Payment_EndDate != value))
				{
					this.OnC_Payment_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_Payment_EndDate = value;
					this.SendPropertyChanged("C_Payment_EndDate");
					this.OnC_Payment_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_AncestorAccount", Storage="_C_AncestorAccount", DbType="NVarChar(255)")]
		public string C_AncestorAccount
		{
			get
			{
				return this._C_AncestorAccount;
			}
			set
			{
				if ((this._C_AncestorAccount != value))
				{
					this.OnC_AncestorAccountChanging(value);
					this.SendPropertyChanging();
					this._C_AncestorAccount = value;
					this.SendPropertyChanged("C_AncestorAccount");
					this.OnC_AncestorAccountChanged();
				}
			}
		}
		
		[Column(Name="c_AncestorAccountNS", Storage="_C_AncestorAccountNS", DbType="NVarChar(255)")]
		public string C_AncestorAccountNS
		{
			get
			{
				return this._C_AncestorAccountNS;
			}
			set
			{
				if ((this._C_AncestorAccountNS != value))
				{
					this.OnC_AncestorAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_AncestorAccountNS = value;
					this.SendPropertyChanged("C_AncestorAccountNS");
					this.OnC_AncestorAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_AncestorAccountID", Storage="_C_AncestorAccountID", DbType="Int")]
		public System.Nullable<int> C_AncestorAccountID
		{
			get
			{
				return this._C_AncestorAccountID;
			}
			set
			{
				if ((this._C_AncestorAccountID != value))
				{
					this.OnC_AncestorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_AncestorAccountID = value;
					this.SendPropertyChanged("C_AncestorAccountID");
					this.OnC_AncestorAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_Hierarchy_StartDate", Storage="_C_Hierarchy_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_Hierarchy_StartDate
		{
			get
			{
				return this._C_Hierarchy_StartDate;
			}
			set
			{
				if ((this._C_Hierarchy_StartDate != value))
				{
					this.OnC_Hierarchy_StartDateChanging(value);
					this.SendPropertyChanging();
					this._C_Hierarchy_StartDate = value;
					this.SendPropertyChanged("C_Hierarchy_StartDate");
					this.OnC_Hierarchy_StartDateChanged();
				}
			}
		}
		
		[Column(Name="c_Hierarchy_EndDate", Storage="_C_Hierarchy_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_Hierarchy_EndDate
		{
			get
			{
				return this._C_Hierarchy_EndDate;
			}
			set
			{
				if ((this._C_Hierarchy_EndDate != value))
				{
					this.OnC_Hierarchy_EndDateChanging(value);
					this.SendPropertyChanging();
					this._C_Hierarchy_EndDate = value;
					this.SendPropertyChanged("C_Hierarchy_EndDate");
					this.OnC_Hierarchy_EndDateChanged();
				}
			}
		}
		
		[Column(Name="c_Billable", Storage="_C_Billable", DbType="Char(1)")]
		public string C_Billable
		{
			get
			{
				return this._C_Billable;
			}
			set
			{
				if ((this._C_Billable != value))
				{
					this.OnC_BillableChanging(value);
					this.SendPropertyChanging();
					this._C_Billable = value;
					this.SendPropertyChanged("C_Billable");
					this.OnC_BillableChanged();
				}
			}
		}
		
		[Column(Name="c_Folder", Storage="_C_Folder", DbType="Char(1)")]
		public string C_Folder
		{
			get
			{
				return this._C_Folder;
			}
			set
			{
				if ((this._C_Folder != value))
				{
					this.OnC_FolderChanging(value);
					this.SendPropertyChanging();
					this._C_Folder = value;
					this.SendPropertyChanged("C_Folder");
					this.OnC_FolderChanged();
				}
			}
		}
		
		[Column(Name="c_Pricelist", Storage="_C_Pricelist", DbType="NVarChar(255)")]
		public string C_Pricelist
		{
			get
			{
				return this._C_Pricelist;
			}
			set
			{
				if ((this._C_Pricelist != value))
				{
					this.OnC_PricelistChanging(value);
					this.SendPropertyChanging();
					this._C_Pricelist = value;
					this.SendPropertyChanged("C_Pricelist");
					this.OnC_PricelistChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="NVarChar(255)")]
		public string C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExempt", Storage="_C_TaxExempt", DbType="Char(1)")]
		public string C_TaxExempt
		{
			get
			{
				return this._C_TaxExempt;
			}
			set
			{
				if ((this._C_TaxExempt != value))
				{
					this.OnC_TaxExemptChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExempt = value;
					this.SendPropertyChanged("C_TaxExempt");
					this.OnC_TaxExemptChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptID", Storage="_C_TaxExemptID", DbType="NVarChar(255)")]
		public string C_TaxExemptID
		{
			get
			{
				return this._C_TaxExemptID;
			}
			set
			{
				if ((this._C_TaxExemptID != value))
				{
					this.OnC_TaxExemptIDChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptID = value;
					this.SendPropertyChanged("C_TaxExemptID");
					this.OnC_TaxExemptIDChanged();
				}
			}
		}
		
		[Column(Name="c_TimeZoneID", Storage="_C_TimeZoneID", DbType="Int")]
		public System.Nullable<int> C_TimeZoneID
		{
			get
			{
				return this._C_TimeZoneID;
			}
			set
			{
				if ((this._C_TimeZoneID != value))
				{
					this.OnC_TimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_TimeZoneID = value;
					this.SendPropertyChanged("C_TimeZoneID");
					this.OnC_TimeZoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_TimeZoneOffset", Storage="_C_TimeZoneOffset", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TimeZoneOffset
		{
			get
			{
				return this._C_TimeZoneOffset;
			}
			set
			{
				if ((this._C_TimeZoneOffset != value))
				{
					this.OnC_TimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._C_TimeZoneOffset = value;
					this.SendPropertyChanged("C_TimeZoneOffset");
					this.OnC_TimeZoneOffsetChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int")]
		public System.Nullable<int> C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReason", Storage="_C_StatusReason", DbType="Int")]
		public System.Nullable<int> C_StatusReason
		{
			get
			{
				return this._C_StatusReason;
			}
			set
			{
				if ((this._C_StatusReason != value))
				{
					this.OnC_StatusReasonChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReason = value;
					this.SendPropertyChanged("C_StatusReason");
					this.OnC_StatusReasonChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReasonOther", Storage="_C_StatusReasonOther", DbType="NVarChar(255)")]
		public string C_StatusReasonOther
		{
			get
			{
				return this._C_StatusReasonOther;
			}
			set
			{
				if ((this._C_StatusReasonOther != value))
				{
					this.OnC_StatusReasonOtherChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReasonOther = value;
					this.SendPropertyChanged("C_StatusReasonOther");
					this.OnC_StatusReasonOtherChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityQuestion", Storage="_C_SecurityQuestion", DbType="Int")]
		public System.Nullable<int> C_SecurityQuestion
		{
			get
			{
				return this._C_SecurityQuestion;
			}
			set
			{
				if ((this._C_SecurityQuestion != value))
				{
					this.OnC_SecurityQuestionChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityQuestion = value;
					this.SendPropertyChanged("C_SecurityQuestion");
					this.OnC_SecurityQuestionChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityAnswer", Storage="_C_SecurityAnswer", DbType="NVarChar(255)")]
		public string C_SecurityAnswer
		{
			get
			{
				return this._C_SecurityAnswer;
			}
			set
			{
				if ((this._C_SecurityAnswer != value))
				{
					this.OnC_SecurityAnswerChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityAnswer = value;
					this.SendPropertyChanged("C_SecurityAnswer");
					this.OnC_SecurityAnswerChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceMethod", Storage="_C_InvoiceMethod", DbType="Int")]
		public System.Nullable<int> C_InvoiceMethod
		{
			get
			{
				return this._C_InvoiceMethod;
			}
			set
			{
				if ((this._C_InvoiceMethod != value))
				{
					this.OnC_InvoiceMethodChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceMethod = value;
					this.SendPropertyChanged("C_InvoiceMethod");
					this.OnC_InvoiceMethodChanged();
				}
			}
		}
		
		[Column(Name="c_UsageCycleType", Storage="_C_UsageCycleType", DbType="Int")]
		public System.Nullable<int> C_UsageCycleType
		{
			get
			{
				return this._C_UsageCycleType;
			}
			set
			{
				if ((this._C_UsageCycleType != value))
				{
					this.OnC_UsageCycleTypeChanging(value);
					this.SendPropertyChanging();
					this._C_UsageCycleType = value;
					this.SendPropertyChanged("C_UsageCycleType");
					this.OnC_UsageCycleTypeChanged();
				}
			}
		}
		
		[Column(Name="c_DayOfMonth", Storage="_C_DayOfMonth", DbType="Int")]
		public System.Nullable<int> C_DayOfMonth
		{
			get
			{
				return this._C_DayOfMonth;
			}
			set
			{
				if ((this._C_DayOfMonth != value))
				{
					this.OnC_DayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_DayOfMonth = value;
					this.SendPropertyChanged("C_DayOfMonth");
					this.OnC_DayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_DayOfWeek", Storage="_C_DayOfWeek", DbType="Int")]
		public System.Nullable<int> C_DayOfWeek
		{
			get
			{
				return this._C_DayOfWeek;
			}
			set
			{
				if ((this._C_DayOfWeek != value))
				{
					this.OnC_DayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._C_DayOfWeek = value;
					this.SendPropertyChanged("C_DayOfWeek");
					this.OnC_DayOfWeekChanged();
				}
			}
		}
		
		[Column(Name="c_FirstDayOfMonth", Storage="_C_FirstDayOfMonth", DbType="Int")]
		public System.Nullable<int> C_FirstDayOfMonth
		{
			get
			{
				return this._C_FirstDayOfMonth;
			}
			set
			{
				if ((this._C_FirstDayOfMonth != value))
				{
					this.OnC_FirstDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_FirstDayOfMonth = value;
					this.SendPropertyChanged("C_FirstDayOfMonth");
					this.OnC_FirstDayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_SecondDayOfMonth", Storage="_C_SecondDayOfMonth", DbType="Int")]
		public System.Nullable<int> C_SecondDayOfMonth
		{
			get
			{
				return this._C_SecondDayOfMonth;
			}
			set
			{
				if ((this._C_SecondDayOfMonth != value))
				{
					this.OnC_SecondDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_SecondDayOfMonth = value;
					this.SendPropertyChanged("C_SecondDayOfMonth");
					this.OnC_SecondDayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_StartMonth", Storage="_C_StartMonth", DbType="Int")]
		public System.Nullable<int> C_StartMonth
		{
			get
			{
				return this._C_StartMonth;
			}
			set
			{
				if ((this._C_StartMonth != value))
				{
					this.OnC_StartMonthChanging(value);
					this.SendPropertyChanging();
					this._C_StartMonth = value;
					this.SendPropertyChanged("C_StartMonth");
					this.OnC_StartMonthChanged();
				}
			}
		}
		
		[Column(Name="c_StartDay", Storage="_C_StartDay", DbType="Int")]
		public System.Nullable<int> C_StartDay
		{
			get
			{
				return this._C_StartDay;
			}
			set
			{
				if ((this._C_StartDay != value))
				{
					this.OnC_StartDayChanging(value);
					this.SendPropertyChanging();
					this._C_StartDay = value;
					this.SendPropertyChanged("C_StartDay");
					this.OnC_StartDayChanged();
				}
			}
		}
		
		[Column(Name="c_StartYear", Storage="_C_StartYear", DbType="Int")]
		public System.Nullable<int> C_StartYear
		{
			get
			{
				return this._C_StartYear;
			}
			set
			{
				if ((this._C_StartYear != value))
				{
					this.OnC_StartYearChanging(value);
					this.SendPropertyChanging();
					this._C_StartYear = value;
					this.SendPropertyChanged("C_StartYear");
					this.OnC_StartYearChanged();
				}
			}
		}
		
		[Column(Name="c_ContactType", Storage="_C_ContactType", DbType="Int")]
		public System.Nullable<int> C_ContactType
		{
			get
			{
				return this._C_ContactType;
			}
			set
			{
				if ((this._C_ContactType != value))
				{
					this.OnC_ContactTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ContactType = value;
					this.SendPropertyChanged("C_ContactType");
					this.OnC_ContactTypeChanged();
				}
			}
		}
		
		[Column(Name="c_FirstName", Storage="_C_FirstName", DbType="NVarChar(255)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[Column(Name="c_MiddleInitial", Storage="_C_MiddleInitial", DbType="NVarChar(255)")]
		public string C_MiddleInitial
		{
			get
			{
				return this._C_MiddleInitial;
			}
			set
			{
				if ((this._C_MiddleInitial != value))
				{
					this.OnC_MiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._C_MiddleInitial = value;
					this.SendPropertyChanged("C_MiddleInitial");
					this.OnC_MiddleInitialChanged();
				}
			}
		}
		
		[Column(Name="c_LastName", Storage="_C_LastName", DbType="NVarChar(255)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[Column(Name="c_Company", Storage="_C_Company", DbType="NVarChar(255)")]
		public string C_Company
		{
			get
			{
				return this._C_Company;
			}
			set
			{
				if ((this._C_Company != value))
				{
					this.OnC_CompanyChanging(value);
					this.SendPropertyChanging();
					this._C_Company = value;
					this.SendPropertyChanged("C_Company");
					this.OnC_CompanyChanged();
				}
			}
		}
		
		[Column(Name="c_FacsimileTelephoneNumber", Storage="_C_FacsimileTelephoneNumber", DbType="NVarChar(255)")]
		public string C_FacsimileTelephoneNumber
		{
			get
			{
				return this._C_FacsimileTelephoneNumber;
			}
			set
			{
				if ((this._C_FacsimileTelephoneNumber != value))
				{
					this.OnC_FacsimileTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_FacsimileTelephoneNumber = value;
					this.SendPropertyChanged("C_FacsimileTelephoneNumber");
					this.OnC_FacsimileTelephoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_Email", Storage="_C_Email", DbType="NVarChar(255)")]
		public string C_Email
		{
			get
			{
				return this._C_Email;
			}
			set
			{
				if ((this._C_Email != value))
				{
					this.OnC_EmailChanging(value);
					this.SendPropertyChanging();
					this._C_Email = value;
					this.SendPropertyChanged("C_Email");
					this.OnC_EmailChanged();
				}
			}
		}
		
		[Column(Name="c_PhoneNumber", Storage="_C_PhoneNumber", DbType="NVarChar(255)")]
		public string C_PhoneNumber
		{
			get
			{
				return this._C_PhoneNumber;
			}
			set
			{
				if ((this._C_PhoneNumber != value))
				{
					this.OnC_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_PhoneNumber = value;
					this.SendPropertyChanged("C_PhoneNumber");
					this.OnC_PhoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_Address1", Storage="_C_Address1", DbType="NVarChar(255)")]
		public string C_Address1
		{
			get
			{
				return this._C_Address1;
			}
			set
			{
				if ((this._C_Address1 != value))
				{
					this.OnC_Address1Changing(value);
					this.SendPropertyChanging();
					this._C_Address1 = value;
					this.SendPropertyChanged("C_Address1");
					this.OnC_Address1Changed();
				}
			}
		}
		
		[Column(Name="c_Address2", Storage="_C_Address2", DbType="NVarChar(255)")]
		public string C_Address2
		{
			get
			{
				return this._C_Address2;
			}
			set
			{
				if ((this._C_Address2 != value))
				{
					this.OnC_Address2Changing(value);
					this.SendPropertyChanging();
					this._C_Address2 = value;
					this.SendPropertyChanged("C_Address2");
					this.OnC_Address2Changed();
				}
			}
		}
		
		[Column(Name="c_Address3", Storage="_C_Address3", DbType="NVarChar(255)")]
		public string C_Address3
		{
			get
			{
				return this._C_Address3;
			}
			set
			{
				if ((this._C_Address3 != value))
				{
					this.OnC_Address3Changing(value);
					this.SendPropertyChanging();
					this._C_Address3 = value;
					this.SendPropertyChanged("C_Address3");
					this.OnC_Address3Changed();
				}
			}
		}
		
		[Column(Name="c_City", Storage="_C_City", DbType="NVarChar(255)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[Column(Name="c_State", Storage="_C_State", DbType="NVarChar(255)")]
		public string C_State
		{
			get
			{
				return this._C_State;
			}
			set
			{
				if ((this._C_State != value))
				{
					this.OnC_StateChanging(value);
					this.SendPropertyChanging();
					this._C_State = value;
					this.SendPropertyChanged("C_State");
					this.OnC_StateChanged();
				}
			}
		}
		
		[Column(Name="c_Zip", Storage="_C_Zip", DbType="NVarChar(255)")]
		public string C_Zip
		{
			get
			{
				return this._C_Zip;
			}
			set
			{
				if ((this._C_Zip != value))
				{
					this.OnC_ZipChanging(value);
					this.SendPropertyChanging();
					this._C_Zip = value;
					this.SendPropertyChanged("C_Zip");
					this.OnC_ZipChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int")]
		public System.Nullable<int> C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AccountCredit")]
	public partial class T_svc_AccountCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_CreditTime;
		
		private string _C_Status;
		
		private long _C_RequestID;
		
		private string _C_ContentionSessionID;
		
		private System.Nullable<int> _C__AccountID;
		
		private decimal _C__Amount;
		
		private string _C__Currency;
		
		private string _C_EmailNotification;
		
		private string _C_EmailAddress;
		
		private string _C_EmailText;
		
		private string _C_Issuer;
		
		private int _C_Reason;
		
		private string _C_Other;
		
		private string _C_InvoiceComment;
		
		private string _C_InternalComment;
		
		private string _C_AccountingCode;
		
		private int _C_ReturnCode;
		
		private decimal _C_RequestAmount;
		
		private decimal _C_CreditAmount;
		
		private string _C_Payer;
		
		private string _C_Namespace;
		
		private string _C_ResolveWithAccountIDFlag;
		
		private string _C_IgnorePaymentRedirection;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_CreditTimeChanging(System.DateTime value);
    partial void OnC_CreditTimeChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_RequestIDChanging(long value);
    partial void OnC_RequestIDChanged();
    partial void OnC_ContentionSessionIDChanging(string value);
    partial void OnC_ContentionSessionIDChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC__AmountChanging(decimal value);
    partial void OnC__AmountChanged();
    partial void OnC__CurrencyChanging(string value);
    partial void OnC__CurrencyChanged();
    partial void OnC_EmailNotificationChanging(string value);
    partial void OnC_EmailNotificationChanged();
    partial void OnC_EmailAddressChanging(string value);
    partial void OnC_EmailAddressChanged();
    partial void OnC_EmailTextChanging(string value);
    partial void OnC_EmailTextChanged();
    partial void OnC_IssuerChanging(string value);
    partial void OnC_IssuerChanged();
    partial void OnC_ReasonChanging(int value);
    partial void OnC_ReasonChanged();
    partial void OnC_OtherChanging(string value);
    partial void OnC_OtherChanged();
    partial void OnC_InvoiceCommentChanging(string value);
    partial void OnC_InvoiceCommentChanged();
    partial void OnC_InternalCommentChanging(string value);
    partial void OnC_InternalCommentChanged();
    partial void OnC_AccountingCodeChanging(string value);
    partial void OnC_AccountingCodeChanged();
    partial void OnC_ReturnCodeChanging(int value);
    partial void OnC_ReturnCodeChanged();
    partial void OnC_RequestAmountChanging(decimal value);
    partial void OnC_RequestAmountChanged();
    partial void OnC_CreditAmountChanging(decimal value);
    partial void OnC_CreditAmountChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC_ResolveWithAccountIDFlagChanging(string value);
    partial void OnC_ResolveWithAccountIDFlagChanged();
    partial void OnC_IgnorePaymentRedirectionChanging(string value);
    partial void OnC_IgnorePaymentRedirectionChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AccountCredit()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_CreditTime", Storage="_C_CreditTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_CreditTime
		{
			get
			{
				return this._C_CreditTime;
			}
			set
			{
				if ((this._C_CreditTime != value))
				{
					this.OnC_CreditTimeChanging(value);
					this.SendPropertyChanging();
					this._C_CreditTime = value;
					this.SendPropertyChanged("C_CreditTime");
					this.OnC_CreditTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_RequestID", Storage="_C_RequestID", DbType="BigInt NOT NULL")]
		public long C_RequestID
		{
			get
			{
				return this._C_RequestID;
			}
			set
			{
				if ((this._C_RequestID != value))
				{
					this.OnC_RequestIDChanging(value);
					this.SendPropertyChanging();
					this._C_RequestID = value;
					this.SendPropertyChanged("C_RequestID");
					this.OnC_RequestIDChanged();
				}
			}
		}
		
		[Column(Name="c_ContentionSessionID", Storage="_C_ContentionSessionID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ContentionSessionID
		{
			get
			{
				return this._C_ContentionSessionID;
			}
			set
			{
				if ((this._C_ContentionSessionID != value))
				{
					this.OnC_ContentionSessionIDChanging(value);
					this.SendPropertyChanging();
					this._C_ContentionSessionID = value;
					this.SendPropertyChanged("C_ContentionSessionID");
					this.OnC_ContentionSessionIDChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c__Currency", Storage="_C__Currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Currency
		{
			get
			{
				return this._C__Currency;
			}
			set
			{
				if ((this._C__Currency != value))
				{
					this.OnC__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C__Currency = value;
					this.SendPropertyChanged("C__Currency");
					this.OnC__CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_EmailNotification", Storage="_C_EmailNotification", DbType="NVarChar(255)")]
		public string C_EmailNotification
		{
			get
			{
				return this._C_EmailNotification;
			}
			set
			{
				if ((this._C_EmailNotification != value))
				{
					this.OnC_EmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._C_EmailNotification = value;
					this.SendPropertyChanged("C_EmailNotification");
					this.OnC_EmailNotificationChanged();
				}
			}
		}
		
		[Column(Name="c_EmailAddress", Storage="_C_EmailAddress", DbType="NVarChar(255)")]
		public string C_EmailAddress
		{
			get
			{
				return this._C_EmailAddress;
			}
			set
			{
				if ((this._C_EmailAddress != value))
				{
					this.OnC_EmailAddressChanging(value);
					this.SendPropertyChanging();
					this._C_EmailAddress = value;
					this.SendPropertyChanged("C_EmailAddress");
					this.OnC_EmailAddressChanged();
				}
			}
		}
		
		[Column(Name="c_EmailText", Storage="_C_EmailText", DbType="NVarChar(255)")]
		public string C_EmailText
		{
			get
			{
				return this._C_EmailText;
			}
			set
			{
				if ((this._C_EmailText != value))
				{
					this.OnC_EmailTextChanging(value);
					this.SendPropertyChanging();
					this._C_EmailText = value;
					this.SendPropertyChanged("C_EmailText");
					this.OnC_EmailTextChanged();
				}
			}
		}
		
		[Column(Name="c_Issuer", Storage="_C_Issuer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Issuer
		{
			get
			{
				return this._C_Issuer;
			}
			set
			{
				if ((this._C_Issuer != value))
				{
					this.OnC_IssuerChanging(value);
					this.SendPropertyChanging();
					this._C_Issuer = value;
					this.SendPropertyChanged("C_Issuer");
					this.OnC_IssuerChanged();
				}
			}
		}
		
		[Column(Name="c_Reason", Storage="_C_Reason", DbType="Int NOT NULL")]
		public int C_Reason
		{
			get
			{
				return this._C_Reason;
			}
			set
			{
				if ((this._C_Reason != value))
				{
					this.OnC_ReasonChanging(value);
					this.SendPropertyChanging();
					this._C_Reason = value;
					this.SendPropertyChanged("C_Reason");
					this.OnC_ReasonChanged();
				}
			}
		}
		
		[Column(Name="c_Other", Storage="_C_Other", DbType="NVarChar(255)")]
		public string C_Other
		{
			get
			{
				return this._C_Other;
			}
			set
			{
				if ((this._C_Other != value))
				{
					this.OnC_OtherChanging(value);
					this.SendPropertyChanging();
					this._C_Other = value;
					this.SendPropertyChanged("C_Other");
					this.OnC_OtherChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceComment", Storage="_C_InvoiceComment", DbType="NVarChar(255)")]
		public string C_InvoiceComment
		{
			get
			{
				return this._C_InvoiceComment;
			}
			set
			{
				if ((this._C_InvoiceComment != value))
				{
					this.OnC_InvoiceCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceComment = value;
					this.SendPropertyChanged("C_InvoiceComment");
					this.OnC_InvoiceCommentChanged();
				}
			}
		}
		
		[Column(Name="c_InternalComment", Storage="_C_InternalComment", DbType="NVarChar(255)")]
		public string C_InternalComment
		{
			get
			{
				return this._C_InternalComment;
			}
			set
			{
				if ((this._C_InternalComment != value))
				{
					this.OnC_InternalCommentChanging(value);
					this.SendPropertyChanging();
					this._C_InternalComment = value;
					this.SendPropertyChanged("C_InternalComment");
					this.OnC_InternalCommentChanged();
				}
			}
		}
		
		[Column(Name="c_AccountingCode", Storage="_C_AccountingCode", DbType="NVarChar(255)")]
		public string C_AccountingCode
		{
			get
			{
				return this._C_AccountingCode;
			}
			set
			{
				if ((this._C_AccountingCode != value))
				{
					this.OnC_AccountingCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountingCode = value;
					this.SendPropertyChanged("C_AccountingCode");
					this.OnC_AccountingCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ReturnCode", Storage="_C_ReturnCode", DbType="Int NOT NULL")]
		public int C_ReturnCode
		{
			get
			{
				return this._C_ReturnCode;
			}
			set
			{
				if ((this._C_ReturnCode != value))
				{
					this.OnC_ReturnCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReturnCode = value;
					this.SendPropertyChanged("C_ReturnCode");
					this.OnC_ReturnCodeChanged();
				}
			}
		}
		
		[Column(Name="c_RequestAmount", Storage="_C_RequestAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_RequestAmount
		{
			get
			{
				return this._C_RequestAmount;
			}
			set
			{
				if ((this._C_RequestAmount != value))
				{
					this.OnC_RequestAmountChanging(value);
					this.SendPropertyChanging();
					this._C_RequestAmount = value;
					this.SendPropertyChanged("C_RequestAmount");
					this.OnC_RequestAmountChanged();
				}
			}
		}
		
		[Column(Name="c_CreditAmount", Storage="_C_CreditAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_CreditAmount
		{
			get
			{
				return this._C_CreditAmount;
			}
			set
			{
				if ((this._C_CreditAmount != value))
				{
					this.OnC_CreditAmountChanging(value);
					this.SendPropertyChanging();
					this._C_CreditAmount = value;
					this.SendPropertyChanged("C_CreditAmount");
					this.OnC_CreditAmountChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255)")]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c_ResolveWithAccountIDFlag", Storage="_C_ResolveWithAccountIDFlag", DbType="Char(1)")]
		public string C_ResolveWithAccountIDFlag
		{
			get
			{
				return this._C_ResolveWithAccountIDFlag;
			}
			set
			{
				if ((this._C_ResolveWithAccountIDFlag != value))
				{
					this.OnC_ResolveWithAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._C_ResolveWithAccountIDFlag = value;
					this.SendPropertyChanged("C_ResolveWithAccountIDFlag");
					this.OnC_ResolveWithAccountIDFlagChanged();
				}
			}
		}
		
		[Column(Name="c_IgnorePaymentRedirection", Storage="_C_IgnorePaymentRedirection", DbType="Char(1)")]
		public string C_IgnorePaymentRedirection
		{
			get
			{
				return this._C_IgnorePaymentRedirection;
			}
			set
			{
				if ((this._C_IgnorePaymentRedirection != value))
				{
					this.OnC_IgnorePaymentRedirectionChanging(value);
					this.SendPropertyChanging();
					this._C_IgnorePaymentRedirection = value;
					this.SendPropertyChanged("C_IgnorePaymentRedirection");
					this.OnC_IgnorePaymentRedirectionChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AccountCreditRequest")]
	public partial class T_svc_AccountCreditRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C__AccountID;
		
		private decimal _C__Amount;
		
		private string _C__Currency;
		
		private int _C_Reason;
		
		private string _C_Other;
		
		private string _C_Status;
		
		private string _C_EmailNotification;
		
		private string _C_EmailAddress;
		
		private string _C_ContentionSessionID;
		
		private string _C_Description;
		
		private decimal _C_CreditAmount;
		
		private int _C_SubscriberAccountID;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__AmountChanging(decimal value);
    partial void OnC__AmountChanged();
    partial void OnC__CurrencyChanging(string value);
    partial void OnC__CurrencyChanged();
    partial void OnC_ReasonChanging(int value);
    partial void OnC_ReasonChanged();
    partial void OnC_OtherChanging(string value);
    partial void OnC_OtherChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_EmailNotificationChanging(string value);
    partial void OnC_EmailNotificationChanged();
    partial void OnC_EmailAddressChanging(string value);
    partial void OnC_EmailAddressChanged();
    partial void OnC_ContentionSessionIDChanging(string value);
    partial void OnC_ContentionSessionIDChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_CreditAmountChanging(decimal value);
    partial void OnC_CreditAmountChanged();
    partial void OnC_SubscriberAccountIDChanging(int value);
    partial void OnC_SubscriberAccountIDChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AccountCreditRequest()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c__Currency", Storage="_C__Currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Currency
		{
			get
			{
				return this._C__Currency;
			}
			set
			{
				if ((this._C__Currency != value))
				{
					this.OnC__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C__Currency = value;
					this.SendPropertyChanged("C__Currency");
					this.OnC__CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_Reason", Storage="_C_Reason", DbType="Int NOT NULL")]
		public int C_Reason
		{
			get
			{
				return this._C_Reason;
			}
			set
			{
				if ((this._C_Reason != value))
				{
					this.OnC_ReasonChanging(value);
					this.SendPropertyChanging();
					this._C_Reason = value;
					this.SendPropertyChanged("C_Reason");
					this.OnC_ReasonChanged();
				}
			}
		}
		
		[Column(Name="c_Other", Storage="_C_Other", DbType="NVarChar(255)")]
		public string C_Other
		{
			get
			{
				return this._C_Other;
			}
			set
			{
				if ((this._C_Other != value))
				{
					this.OnC_OtherChanging(value);
					this.SendPropertyChanging();
					this._C_Other = value;
					this.SendPropertyChanged("C_Other");
					this.OnC_OtherChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_EmailNotification", Storage="_C_EmailNotification", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_EmailNotification
		{
			get
			{
				return this._C_EmailNotification;
			}
			set
			{
				if ((this._C_EmailNotification != value))
				{
					this.OnC_EmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._C_EmailNotification = value;
					this.SendPropertyChanged("C_EmailNotification");
					this.OnC_EmailNotificationChanged();
				}
			}
		}
		
		[Column(Name="c_EmailAddress", Storage="_C_EmailAddress", DbType="NVarChar(255)")]
		public string C_EmailAddress
		{
			get
			{
				return this._C_EmailAddress;
			}
			set
			{
				if ((this._C_EmailAddress != value))
				{
					this.OnC_EmailAddressChanging(value);
					this.SendPropertyChanging();
					this._C_EmailAddress = value;
					this.SendPropertyChanged("C_EmailAddress");
					this.OnC_EmailAddressChanged();
				}
			}
		}
		
		[Column(Name="c_ContentionSessionID", Storage="_C_ContentionSessionID", DbType="NVarChar(255)")]
		public string C_ContentionSessionID
		{
			get
			{
				return this._C_ContentionSessionID;
			}
			set
			{
				if ((this._C_ContentionSessionID != value))
				{
					this.OnC_ContentionSessionIDChanging(value);
					this.SendPropertyChanging();
					this._C_ContentionSessionID = value;
					this.SendPropertyChanged("C_ContentionSessionID");
					this.OnC_ContentionSessionIDChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_CreditAmount", Storage="_C_CreditAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_CreditAmount
		{
			get
			{
				return this._C_CreditAmount;
			}
			set
			{
				if ((this._C_CreditAmount != value))
				{
					this.OnC_CreditAmountChanging(value);
					this.SendPropertyChanging();
					this._C_CreditAmount = value;
					this.SendPropertyChanged("C_CreditAmount");
					this.OnC_CreditAmountChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriberAccountID", Storage="_C_SubscriberAccountID", DbType="Int NOT NULL")]
		public int C_SubscriberAccountID
		{
			get
			{
				return this._C_SubscriberAccountID;
			}
			set
			{
				if ((this._C_SubscriberAccountID != value))
				{
					this.OnC_SubscriberAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriberAccountID = value;
					this.SendPropertyChanged("C_SubscriberAccountID");
					this.OnC_SubscriberAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AccountMapping")]
	public partial class T_svc_AccountMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_Operation;
		
		private string _C_LoginName;
		
		private string _C_NameSpace;
		
		private string _C_NewLoginName;
		
		private string _C_NewNameSpace;
		
		private System.Nullable<System.DateTime> _C__Timestamp;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_OperationChanging(int value);
    partial void OnC_OperationChanged();
    partial void OnC_LoginNameChanging(string value);
    partial void OnC_LoginNameChanged();
    partial void OnC_NameSpaceChanging(string value);
    partial void OnC_NameSpaceChanged();
    partial void OnC_NewLoginNameChanging(string value);
    partial void OnC_NewLoginNameChanged();
    partial void OnC_NewNameSpaceChanging(string value);
    partial void OnC_NewNameSpaceChanged();
    partial void OnC__TimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnC__TimestampChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AccountMapping()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Operation", Storage="_C_Operation", DbType="Int NOT NULL")]
		public int C_Operation
		{
			get
			{
				return this._C_Operation;
			}
			set
			{
				if ((this._C_Operation != value))
				{
					this.OnC_OperationChanging(value);
					this.SendPropertyChanging();
					this._C_Operation = value;
					this.SendPropertyChanged("C_Operation");
					this.OnC_OperationChanged();
				}
			}
		}
		
		[Column(Name="c_LoginName", Storage="_C_LoginName", DbType="NVarChar(255)")]
		public string C_LoginName
		{
			get
			{
				return this._C_LoginName;
			}
			set
			{
				if ((this._C_LoginName != value))
				{
					this.OnC_LoginNameChanging(value);
					this.SendPropertyChanging();
					this._C_LoginName = value;
					this.SendPropertyChanged("C_LoginName");
					this.OnC_LoginNameChanged();
				}
			}
		}
		
		[Column(Name="c_NameSpace", Storage="_C_NameSpace", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_NameSpace
		{
			get
			{
				return this._C_NameSpace;
			}
			set
			{
				if ((this._C_NameSpace != value))
				{
					this.OnC_NameSpaceChanging(value);
					this.SendPropertyChanging();
					this._C_NameSpace = value;
					this.SendPropertyChanged("C_NameSpace");
					this.OnC_NameSpaceChanged();
				}
			}
		}
		
		[Column(Name="c_NewLoginName", Storage="_C_NewLoginName", DbType="NVarChar(255)")]
		public string C_NewLoginName
		{
			get
			{
				return this._C_NewLoginName;
			}
			set
			{
				if ((this._C_NewLoginName != value))
				{
					this.OnC_NewLoginNameChanging(value);
					this.SendPropertyChanging();
					this._C_NewLoginName = value;
					this.SendPropertyChanged("C_NewLoginName");
					this.OnC_NewLoginNameChanged();
				}
			}
		}
		
		[Column(Name="c_NewNameSpace", Storage="_C_NewNameSpace", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_NewNameSpace
		{
			get
			{
				return this._C_NewNameSpace;
			}
			set
			{
				if ((this._C_NewNameSpace != value))
				{
					this.OnC_NewNameSpaceChanging(value);
					this.SendPropertyChanging();
					this._C_NewNameSpace = value;
					this.SendPropertyChanged("C_NewNameSpace");
					this.OnC_NewNameSpaceChanged();
				}
			}
		}
		
		[Column(Name="c__Timestamp", Storage="_C__Timestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> C__Timestamp
		{
			get
			{
				return this._C__Timestamp;
			}
			set
			{
				if ((this._C__Timestamp != value))
				{
					this.OnC__TimestampChanging(value);
					this.SendPropertyChanging();
					this._C__Timestamp = value;
					this.SendPropertyChanged("C__Timestamp");
					this.OnC__TimestampChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_AddCharge")]
	public partial class T_svc_AddCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C__AccountID;
		
		private System.DateTime _C_ChargeDate;
		
		private int _C_ChargeType;
		
		private string _C_OtherChargeTypeComment;
		
		private decimal _C__Amount;
		
		private string _C__Currency;
		
		private System.Nullable<int> _C_Taxtype;
		
		private string _C_Issuer;
		
		private string _C_RelateToPreviousCharge;
		
		private string _C_Invoicecomment;
		
		private string _C_Internalcomment;
		
		private string _C_Payer;
		
		private string _C_Namespace;
		
		private string _C_ResolveWithAccountIDFlag;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC_ChargeDateChanging(System.DateTime value);
    partial void OnC_ChargeDateChanged();
    partial void OnC_ChargeTypeChanging(int value);
    partial void OnC_ChargeTypeChanged();
    partial void OnC_OtherChargeTypeCommentChanging(string value);
    partial void OnC_OtherChargeTypeCommentChanged();
    partial void OnC__AmountChanging(decimal value);
    partial void OnC__AmountChanged();
    partial void OnC__CurrencyChanging(string value);
    partial void OnC__CurrencyChanged();
    partial void OnC_TaxtypeChanging(System.Nullable<int> value);
    partial void OnC_TaxtypeChanged();
    partial void OnC_IssuerChanging(string value);
    partial void OnC_IssuerChanged();
    partial void OnC_RelateToPreviousChargeChanging(string value);
    partial void OnC_RelateToPreviousChargeChanged();
    partial void OnC_InvoicecommentChanging(string value);
    partial void OnC_InvoicecommentChanged();
    partial void OnC_InternalcommentChanging(string value);
    partial void OnC_InternalcommentChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC_ResolveWithAccountIDFlagChanging(string value);
    partial void OnC_ResolveWithAccountIDFlagChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_AddCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeDate", Storage="_C_ChargeDate", DbType="DateTime NOT NULL")]
		public System.DateTime C_ChargeDate
		{
			get
			{
				return this._C_ChargeDate;
			}
			set
			{
				if ((this._C_ChargeDate != value))
				{
					this.OnC_ChargeDateChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeDate = value;
					this.SendPropertyChanged("C_ChargeDate");
					this.OnC_ChargeDateChanged();
				}
			}
		}
		
		[Column(Name="c_ChargeType", Storage="_C_ChargeType", DbType="Int NOT NULL")]
		public int C_ChargeType
		{
			get
			{
				return this._C_ChargeType;
			}
			set
			{
				if ((this._C_ChargeType != value))
				{
					this.OnC_ChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ChargeType = value;
					this.SendPropertyChanged("C_ChargeType");
					this.OnC_ChargeTypeChanged();
				}
			}
		}
		
		[Column(Name="c_OtherChargeTypeComment", Storage="_C_OtherChargeTypeComment", DbType="NVarChar(255)")]
		public string C_OtherChargeTypeComment
		{
			get
			{
				return this._C_OtherChargeTypeComment;
			}
			set
			{
				if ((this._C_OtherChargeTypeComment != value))
				{
					this.OnC_OtherChargeTypeCommentChanging(value);
					this.SendPropertyChanging();
					this._C_OtherChargeTypeComment = value;
					this.SendPropertyChanged("C_OtherChargeTypeComment");
					this.OnC_OtherChargeTypeCommentChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c__Currency", Storage="_C__Currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Currency
		{
			get
			{
				return this._C__Currency;
			}
			set
			{
				if ((this._C__Currency != value))
				{
					this.OnC__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C__Currency = value;
					this.SendPropertyChanged("C__Currency");
					this.OnC__CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_Taxtype", Storage="_C_Taxtype", DbType="Int")]
		public System.Nullable<int> C_Taxtype
		{
			get
			{
				return this._C_Taxtype;
			}
			set
			{
				if ((this._C_Taxtype != value))
				{
					this.OnC_TaxtypeChanging(value);
					this.SendPropertyChanging();
					this._C_Taxtype = value;
					this.SendPropertyChanged("C_Taxtype");
					this.OnC_TaxtypeChanged();
				}
			}
		}
		
		[Column(Name="c_Issuer", Storage="_C_Issuer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Issuer
		{
			get
			{
				return this._C_Issuer;
			}
			set
			{
				if ((this._C_Issuer != value))
				{
					this.OnC_IssuerChanging(value);
					this.SendPropertyChanging();
					this._C_Issuer = value;
					this.SendPropertyChanged("C_Issuer");
					this.OnC_IssuerChanged();
				}
			}
		}
		
		[Column(Name="c_RelateToPreviousCharge", Storage="_C_RelateToPreviousCharge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_RelateToPreviousCharge
		{
			get
			{
				return this._C_RelateToPreviousCharge;
			}
			set
			{
				if ((this._C_RelateToPreviousCharge != value))
				{
					this.OnC_RelateToPreviousChargeChanging(value);
					this.SendPropertyChanging();
					this._C_RelateToPreviousCharge = value;
					this.SendPropertyChanged("C_RelateToPreviousCharge");
					this.OnC_RelateToPreviousChargeChanged();
				}
			}
		}
		
		[Column(Name="c_Invoicecomment", Storage="_C_Invoicecomment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Invoicecomment
		{
			get
			{
				return this._C_Invoicecomment;
			}
			set
			{
				if ((this._C_Invoicecomment != value))
				{
					this.OnC_InvoicecommentChanging(value);
					this.SendPropertyChanging();
					this._C_Invoicecomment = value;
					this.SendPropertyChanged("C_Invoicecomment");
					this.OnC_InvoicecommentChanged();
				}
			}
		}
		
		[Column(Name="c_Internalcomment", Storage="_C_Internalcomment", DbType="NVarChar(255)")]
		public string C_Internalcomment
		{
			get
			{
				return this._C_Internalcomment;
			}
			set
			{
				if ((this._C_Internalcomment != value))
				{
					this.OnC_InternalcommentChanging(value);
					this.SendPropertyChanging();
					this._C_Internalcomment = value;
					this.SendPropertyChanged("C_Internalcomment");
					this.OnC_InternalcommentChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255)")]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c_ResolveWithAccountIDFlag", Storage="_C_ResolveWithAccountIDFlag", DbType="Char(1)")]
		public string C_ResolveWithAccountIDFlag
		{
			get
			{
				return this._C_ResolveWithAccountIDFlag;
			}
			set
			{
				if ((this._C_ResolveWithAccountIDFlag != value))
				{
					this.OnC_ResolveWithAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._C_ResolveWithAccountIDFlag = value;
					this.SendPropertyChanged("C_ResolveWithAccountIDFlag");
					this.OnC_ResolveWithAccountIDFlagChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_ARAccountCreation")]
	public partial class T_svc_ARAccountCreation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_ExtAccountID;
		
		private string _C_AccountName;
		
		private string _C_ContactName;
		
		private string _C_Address1;
		
		private string _C_Address2;
		
		private string _C_Address3;
		
		private string _C_City;
		
		private string _C_State;
		
		private string _C_Zip;
		
		private System.Nullable<int> _C_Country;
		
		private string _C_PhoneNumber;
		
		private string _C_FaxNumber;
		
		private System.Nullable<int> _C_Currency;
		
		private string _C_TerritoryID;
		
		private string _C_SalesPersonID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ExtAccountIDChanging(string value);
    partial void OnC_ExtAccountIDChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_ContactNameChanging(string value);
    partial void OnC_ContactNameChanged();
    partial void OnC_Address1Changing(string value);
    partial void OnC_Address1Changed();
    partial void OnC_Address2Changing(string value);
    partial void OnC_Address2Changed();
    partial void OnC_Address3Changing(string value);
    partial void OnC_Address3Changed();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_StateChanging(string value);
    partial void OnC_StateChanged();
    partial void OnC_ZipChanging(string value);
    partial void OnC_ZipChanged();
    partial void OnC_CountryChanging(System.Nullable<int> value);
    partial void OnC_CountryChanged();
    partial void OnC_PhoneNumberChanging(string value);
    partial void OnC_PhoneNumberChanged();
    partial void OnC_FaxNumberChanging(string value);
    partial void OnC_FaxNumberChanged();
    partial void OnC_CurrencyChanging(System.Nullable<int> value);
    partial void OnC_CurrencyChanged();
    partial void OnC_TerritoryIDChanging(string value);
    partial void OnC_TerritoryIDChanged();
    partial void OnC_SalesPersonIDChanging(string value);
    partial void OnC_SalesPersonIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_ARAccountCreation()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ExtAccountID", Storage="_C_ExtAccountID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ExtAccountID
		{
			get
			{
				return this._C_ExtAccountID;
			}
			set
			{
				if ((this._C_ExtAccountID != value))
				{
					this.OnC_ExtAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_ExtAccountID = value;
					this.SendPropertyChanged("C_ExtAccountID");
					this.OnC_ExtAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255)")]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_ContactName", Storage="_C_ContactName", DbType="NVarChar(255)")]
		public string C_ContactName
		{
			get
			{
				return this._C_ContactName;
			}
			set
			{
				if ((this._C_ContactName != value))
				{
					this.OnC_ContactNameChanging(value);
					this.SendPropertyChanging();
					this._C_ContactName = value;
					this.SendPropertyChanged("C_ContactName");
					this.OnC_ContactNameChanged();
				}
			}
		}
		
		[Column(Name="c_Address1", Storage="_C_Address1", DbType="NVarChar(255)")]
		public string C_Address1
		{
			get
			{
				return this._C_Address1;
			}
			set
			{
				if ((this._C_Address1 != value))
				{
					this.OnC_Address1Changing(value);
					this.SendPropertyChanging();
					this._C_Address1 = value;
					this.SendPropertyChanged("C_Address1");
					this.OnC_Address1Changed();
				}
			}
		}
		
		[Column(Name="c_Address2", Storage="_C_Address2", DbType="NVarChar(255)")]
		public string C_Address2
		{
			get
			{
				return this._C_Address2;
			}
			set
			{
				if ((this._C_Address2 != value))
				{
					this.OnC_Address2Changing(value);
					this.SendPropertyChanging();
					this._C_Address2 = value;
					this.SendPropertyChanged("C_Address2");
					this.OnC_Address2Changed();
				}
			}
		}
		
		[Column(Name="c_Address3", Storage="_C_Address3", DbType="NVarChar(255)")]
		public string C_Address3
		{
			get
			{
				return this._C_Address3;
			}
			set
			{
				if ((this._C_Address3 != value))
				{
					this.OnC_Address3Changing(value);
					this.SendPropertyChanging();
					this._C_Address3 = value;
					this.SendPropertyChanged("C_Address3");
					this.OnC_Address3Changed();
				}
			}
		}
		
		[Column(Name="c_City", Storage="_C_City", DbType="NVarChar(255)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[Column(Name="c_State", Storage="_C_State", DbType="NVarChar(255)")]
		public string C_State
		{
			get
			{
				return this._C_State;
			}
			set
			{
				if ((this._C_State != value))
				{
					this.OnC_StateChanging(value);
					this.SendPropertyChanging();
					this._C_State = value;
					this.SendPropertyChanged("C_State");
					this.OnC_StateChanged();
				}
			}
		}
		
		[Column(Name="c_Zip", Storage="_C_Zip", DbType="NVarChar(255)")]
		public string C_Zip
		{
			get
			{
				return this._C_Zip;
			}
			set
			{
				if ((this._C_Zip != value))
				{
					this.OnC_ZipChanging(value);
					this.SendPropertyChanging();
					this._C_Zip = value;
					this.SendPropertyChanged("C_Zip");
					this.OnC_ZipChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int")]
		public System.Nullable<int> C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c_PhoneNumber", Storage="_C_PhoneNumber", DbType="NVarChar(255)")]
		public string C_PhoneNumber
		{
			get
			{
				return this._C_PhoneNumber;
			}
			set
			{
				if ((this._C_PhoneNumber != value))
				{
					this.OnC_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_PhoneNumber = value;
					this.SendPropertyChanged("C_PhoneNumber");
					this.OnC_PhoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_FaxNumber", Storage="_C_FaxNumber", DbType="NVarChar(255)")]
		public string C_FaxNumber
		{
			get
			{
				return this._C_FaxNumber;
			}
			set
			{
				if ((this._C_FaxNumber != value))
				{
					this.OnC_FaxNumberChanging(value);
					this.SendPropertyChanging();
					this._C_FaxNumber = value;
					this.SendPropertyChanged("C_FaxNumber");
					this.OnC_FaxNumberChanged();
				}
			}
		}
		
		[Column(Name="c_Currency", Storage="_C_Currency", DbType="Int")]
		public System.Nullable<int> C_Currency
		{
			get
			{
				return this._C_Currency;
			}
			set
			{
				if ((this._C_Currency != value))
				{
					this.OnC_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C_Currency = value;
					this.SendPropertyChanged("C_Currency");
					this.OnC_CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_TerritoryID", Storage="_C_TerritoryID", DbType="NVarChar(255)")]
		public string C_TerritoryID
		{
			get
			{
				return this._C_TerritoryID;
			}
			set
			{
				if ((this._C_TerritoryID != value))
				{
					this.OnC_TerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._C_TerritoryID = value;
					this.SendPropertyChanged("C_TerritoryID");
					this.OnC_TerritoryIDChanged();
				}
			}
		}
		
		[Column(Name="c_SalesPersonID", Storage="_C_SalesPersonID", DbType="NVarChar(255)")]
		public string C_SalesPersonID
		{
			get
			{
				return this._C_SalesPersonID;
			}
			set
			{
				if ((this._C_SalesPersonID != value))
				{
					this.OnC_SalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._C_SalesPersonID = value;
					this.SendPropertyChanged("C_SalesPersonID");
					this.OnC_SalesPersonIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_ARAdjustment")]
	public partial class T_svc_ARAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Payer;
		
		private string _C_Namespace;
		
		private System.Nullable<int> _C__AccountID;
		
		private System.Nullable<decimal> _C__Amount;
		
		private string _C_Description;
		
		private System.Nullable<System.DateTime> _C_EventDate;
		
		private string _C_Source;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private string _C_ReferenceID;
		
		private System.Nullable<int> _C_TargetInterval;
		
		private System.Nullable<System.DateTime> _C_SessionTime;
		
		private string _C_IgnorePaymentRedirection;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC__AmountChanging(System.Nullable<decimal> value);
    partial void OnC__AmountChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_EventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EventDateChanged();
    partial void OnC_SourceChanging(string value);
    partial void OnC_SourceChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_ReferenceIDChanging(string value);
    partial void OnC_ReferenceIDChanged();
    partial void OnC_TargetIntervalChanging(System.Nullable<int> value);
    partial void OnC_TargetIntervalChanged();
    partial void OnC_SessionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SessionTimeChanged();
    partial void OnC_IgnorePaymentRedirectionChanging(string value);
    partial void OnC_IgnorePaymentRedirectionChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_ARAdjustment()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255)")]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_EventDate", Storage="_C_EventDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EventDate
		{
			get
			{
				return this._C_EventDate;
			}
			set
			{
				if ((this._C_EventDate != value))
				{
					this.OnC_EventDateChanging(value);
					this.SendPropertyChanging();
					this._C_EventDate = value;
					this.SendPropertyChanged("C_EventDate");
					this.OnC_EventDateChanged();
				}
			}
		}
		
		[Column(Name="c_Source", Storage="_C_Source", DbType="NVarChar(255)")]
		public string C_Source
		{
			get
			{
				return this._C_Source;
			}
			set
			{
				if ((this._C_Source != value))
				{
					this.OnC_SourceChanging(value);
					this.SendPropertyChanging();
					this._C_Source = value;
					this.SendPropertyChanged("C_Source");
					this.OnC_SourceChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ReferenceID", Storage="_C_ReferenceID", DbType="NVarChar(255)")]
		public string C_ReferenceID
		{
			get
			{
				return this._C_ReferenceID;
			}
			set
			{
				if ((this._C_ReferenceID != value))
				{
					this.OnC_ReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ReferenceID = value;
					this.SendPropertyChanged("C_ReferenceID");
					this.OnC_ReferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetInterval", Storage="_C_TargetInterval", DbType="Int")]
		public System.Nullable<int> C_TargetInterval
		{
			get
			{
				return this._C_TargetInterval;
			}
			set
			{
				if ((this._C_TargetInterval != value))
				{
					this.OnC_TargetIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_TargetInterval = value;
					this.SendPropertyChanged("C_TargetInterval");
					this.OnC_TargetIntervalChanged();
				}
			}
		}
		
		[Column(Name="c_SessionTime", Storage="_C_SessionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SessionTime
		{
			get
			{
				return this._C_SessionTime;
			}
			set
			{
				if ((this._C_SessionTime != value))
				{
					this.OnC_SessionTimeChanging(value);
					this.SendPropertyChanging();
					this._C_SessionTime = value;
					this.SendPropertyChanged("C_SessionTime");
					this.OnC_SessionTimeChanged();
				}
			}
		}
		
		[Column(Name="c_IgnorePaymentRedirection", Storage="_C_IgnorePaymentRedirection", DbType="Char(1)")]
		public string C_IgnorePaymentRedirection
		{
			get
			{
				return this._C_IgnorePaymentRedirection;
			}
			set
			{
				if ((this._C_IgnorePaymentRedirection != value))
				{
					this.OnC_IgnorePaymentRedirectionChanging(value);
					this.SendPropertyChanging();
					this._C_IgnorePaymentRedirection = value;
					this.SendPropertyChanged("C_IgnorePaymentRedirection");
					this.OnC_IgnorePaymentRedirectionChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_ARSalesPersonCreation")]
	public partial class T_svc_ARSalesPersonCreation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_SalesPersonID;
		
		private string _C_FirstName;
		
		private string _C_MiddleName;
		
		private string _C_LastName;
		
		private string _C_Address1;
		
		private string _C_Address2;
		
		private string _C_City;
		
		private string _C_State;
		
		private System.Nullable<int> _C_Country;
		
		private string _C_ZipCode;
		
		private string _C_PhoneNumber;
		
		private string _C_FaxNumber;
		
		private string _C_TerritoryID;
		
		private System.Nullable<int> _C_CommissionType;
		
		private System.Nullable<decimal> _C_CommissionPercent;
		
		private string _C_Active;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_SalesPersonIDChanging(string value);
    partial void OnC_SalesPersonIDChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_MiddleNameChanging(string value);
    partial void OnC_MiddleNameChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_Address1Changing(string value);
    partial void OnC_Address1Changed();
    partial void OnC_Address2Changing(string value);
    partial void OnC_Address2Changed();
    partial void OnC_CityChanging(string value);
    partial void OnC_CityChanged();
    partial void OnC_StateChanging(string value);
    partial void OnC_StateChanged();
    partial void OnC_CountryChanging(System.Nullable<int> value);
    partial void OnC_CountryChanged();
    partial void OnC_ZipCodeChanging(string value);
    partial void OnC_ZipCodeChanged();
    partial void OnC_PhoneNumberChanging(string value);
    partial void OnC_PhoneNumberChanged();
    partial void OnC_FaxNumberChanging(string value);
    partial void OnC_FaxNumberChanged();
    partial void OnC_TerritoryIDChanging(string value);
    partial void OnC_TerritoryIDChanged();
    partial void OnC_CommissionTypeChanging(System.Nullable<int> value);
    partial void OnC_CommissionTypeChanged();
    partial void OnC_CommissionPercentChanging(System.Nullable<decimal> value);
    partial void OnC_CommissionPercentChanged();
    partial void OnC_ActiveChanging(string value);
    partial void OnC_ActiveChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_ARSalesPersonCreation()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_SalesPersonID", Storage="_C_SalesPersonID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_SalesPersonID
		{
			get
			{
				return this._C_SalesPersonID;
			}
			set
			{
				if ((this._C_SalesPersonID != value))
				{
					this.OnC_SalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._C_SalesPersonID = value;
					this.SendPropertyChanged("C_SalesPersonID");
					this.OnC_SalesPersonIDChanged();
				}
			}
		}
		
		[Column(Name="c_FirstName", Storage="_C_FirstName", DbType="NVarChar(255)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[Column(Name="c_MiddleName", Storage="_C_MiddleName", DbType="NVarChar(255)")]
		public string C_MiddleName
		{
			get
			{
				return this._C_MiddleName;
			}
			set
			{
				if ((this._C_MiddleName != value))
				{
					this.OnC_MiddleNameChanging(value);
					this.SendPropertyChanging();
					this._C_MiddleName = value;
					this.SendPropertyChanged("C_MiddleName");
					this.OnC_MiddleNameChanged();
				}
			}
		}
		
		[Column(Name="c_LastName", Storage="_C_LastName", DbType="NVarChar(255)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[Column(Name="c_Address1", Storage="_C_Address1", DbType="NVarChar(255)")]
		public string C_Address1
		{
			get
			{
				return this._C_Address1;
			}
			set
			{
				if ((this._C_Address1 != value))
				{
					this.OnC_Address1Changing(value);
					this.SendPropertyChanging();
					this._C_Address1 = value;
					this.SendPropertyChanged("C_Address1");
					this.OnC_Address1Changed();
				}
			}
		}
		
		[Column(Name="c_Address2", Storage="_C_Address2", DbType="NVarChar(255)")]
		public string C_Address2
		{
			get
			{
				return this._C_Address2;
			}
			set
			{
				if ((this._C_Address2 != value))
				{
					this.OnC_Address2Changing(value);
					this.SendPropertyChanging();
					this._C_Address2 = value;
					this.SendPropertyChanged("C_Address2");
					this.OnC_Address2Changed();
				}
			}
		}
		
		[Column(Name="c_City", Storage="_C_City", DbType="NVarChar(255)")]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this.OnC_CityChanging(value);
					this.SendPropertyChanging();
					this._C_City = value;
					this.SendPropertyChanged("C_City");
					this.OnC_CityChanged();
				}
			}
		}
		
		[Column(Name="c_State", Storage="_C_State", DbType="NVarChar(255)")]
		public string C_State
		{
			get
			{
				return this._C_State;
			}
			set
			{
				if ((this._C_State != value))
				{
					this.OnC_StateChanging(value);
					this.SendPropertyChanging();
					this._C_State = value;
					this.SendPropertyChanged("C_State");
					this.OnC_StateChanged();
				}
			}
		}
		
		[Column(Name="c_Country", Storage="_C_Country", DbType="Int")]
		public System.Nullable<int> C_Country
		{
			get
			{
				return this._C_Country;
			}
			set
			{
				if ((this._C_Country != value))
				{
					this.OnC_CountryChanging(value);
					this.SendPropertyChanging();
					this._C_Country = value;
					this.SendPropertyChanged("C_Country");
					this.OnC_CountryChanged();
				}
			}
		}
		
		[Column(Name="c_ZipCode", Storage="_C_ZipCode", DbType="NVarChar(255)")]
		public string C_ZipCode
		{
			get
			{
				return this._C_ZipCode;
			}
			set
			{
				if ((this._C_ZipCode != value))
				{
					this.OnC_ZipCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ZipCode = value;
					this.SendPropertyChanged("C_ZipCode");
					this.OnC_ZipCodeChanged();
				}
			}
		}
		
		[Column(Name="c_PhoneNumber", Storage="_C_PhoneNumber", DbType="NVarChar(255)")]
		public string C_PhoneNumber
		{
			get
			{
				return this._C_PhoneNumber;
			}
			set
			{
				if ((this._C_PhoneNumber != value))
				{
					this.OnC_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_PhoneNumber = value;
					this.SendPropertyChanged("C_PhoneNumber");
					this.OnC_PhoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_FaxNumber", Storage="_C_FaxNumber", DbType="NVarChar(255)")]
		public string C_FaxNumber
		{
			get
			{
				return this._C_FaxNumber;
			}
			set
			{
				if ((this._C_FaxNumber != value))
				{
					this.OnC_FaxNumberChanging(value);
					this.SendPropertyChanging();
					this._C_FaxNumber = value;
					this.SendPropertyChanged("C_FaxNumber");
					this.OnC_FaxNumberChanged();
				}
			}
		}
		
		[Column(Name="c_TerritoryID", Storage="_C_TerritoryID", DbType="NVarChar(255)")]
		public string C_TerritoryID
		{
			get
			{
				return this._C_TerritoryID;
			}
			set
			{
				if ((this._C_TerritoryID != value))
				{
					this.OnC_TerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._C_TerritoryID = value;
					this.SendPropertyChanged("C_TerritoryID");
					this.OnC_TerritoryIDChanged();
				}
			}
		}
		
		[Column(Name="c_CommissionType", Storage="_C_CommissionType", DbType="Int")]
		public System.Nullable<int> C_CommissionType
		{
			get
			{
				return this._C_CommissionType;
			}
			set
			{
				if ((this._C_CommissionType != value))
				{
					this.OnC_CommissionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CommissionType = value;
					this.SendPropertyChanged("C_CommissionType");
					this.OnC_CommissionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_CommissionPercent", Storage="_C_CommissionPercent", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_CommissionPercent
		{
			get
			{
				return this._C_CommissionPercent;
			}
			set
			{
				if ((this._C_CommissionPercent != value))
				{
					this.OnC_CommissionPercentChanging(value);
					this.SendPropertyChanging();
					this._C_CommissionPercent = value;
					this.SendPropertyChanged("C_CommissionPercent");
					this.OnC_CommissionPercentChanged();
				}
			}
		}
		
		[Column(Name="c_Active", Storage="_C_Active", DbType="Char(1)")]
		public string C_Active
		{
			get
			{
				return this._C_Active;
			}
			set
			{
				if ((this._C_Active != value))
				{
					this.OnC_ActiveChanging(value);
					this.SendPropertyChanging();
					this._C_Active = value;
					this.SendPropertyChanged("C_Active");
					this.OnC_ActiveChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_ARTerritoryUpdate")]
	public partial class T_svc_ARTerritoryUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_TerritoryID;
		
		private string _C_ManagerID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_TerritoryIDChanging(string value);
    partial void OnC_TerritoryIDChanged();
    partial void OnC_ManagerIDChanging(string value);
    partial void OnC_ManagerIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_ARTerritoryUpdate()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_TerritoryID", Storage="_C_TerritoryID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_TerritoryID
		{
			get
			{
				return this._C_TerritoryID;
			}
			set
			{
				if ((this._C_TerritoryID != value))
				{
					this.OnC_TerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._C_TerritoryID = value;
					this.SendPropertyChanged("C_TerritoryID");
					this.OnC_TerritoryIDChanged();
				}
			}
		}
		
		[Column(Name="c_ManagerID", Storage="_C_ManagerID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ManagerID
		{
			get
			{
				return this._C_ManagerID;
			}
			set
			{
				if ((this._C_ManagerID != value))
				{
					this.OnC_ManagerIDChanging(value);
					this.SendPropertyChanging();
					this._C_ManagerID = value;
					this.SendPropertyChanged("C_ManagerID");
					this.OnC_ManagerIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_audioconfcall")]
	public partial class T_svc_audioconfcall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_ConferenceID;
		
		private string _C_Payer;
		
		private string _C_AccountingCode;
		
		private string _C_ConferenceName;
		
		private string _C_ConferenceSubject;
		
		private string _C_OrganizationName;
		
		private string _C_SpecialInfo;
		
		private string _C_SchedulerComments;
		
		private int _C_ScheduledConnections;
		
		private System.DateTime _C_ScheduledStartTime;
		
		private decimal _C_ScheduledTimeGMTOffset;
		
		private int _C_ScheduledDuration;
		
		private string _C_CancelledFlag;
		
		private System.DateTime _C_CancellationTime;
		
		private int _C_ServiceLevel;
		
		private string _C_TerminationReason;
		
		private string _C_SystemName;
		
		private string _C_SalesPersonID;
		
		private string _C_OperatorID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ConferenceIDChanging(string value);
    partial void OnC_ConferenceIDChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_AccountingCodeChanging(string value);
    partial void OnC_AccountingCodeChanged();
    partial void OnC_ConferenceNameChanging(string value);
    partial void OnC_ConferenceNameChanged();
    partial void OnC_ConferenceSubjectChanging(string value);
    partial void OnC_ConferenceSubjectChanged();
    partial void OnC_OrganizationNameChanging(string value);
    partial void OnC_OrganizationNameChanged();
    partial void OnC_SpecialInfoChanging(string value);
    partial void OnC_SpecialInfoChanged();
    partial void OnC_SchedulerCommentsChanging(string value);
    partial void OnC_SchedulerCommentsChanged();
    partial void OnC_ScheduledConnectionsChanging(int value);
    partial void OnC_ScheduledConnectionsChanged();
    partial void OnC_ScheduledStartTimeChanging(System.DateTime value);
    partial void OnC_ScheduledStartTimeChanged();
    partial void OnC_ScheduledTimeGMTOffsetChanging(decimal value);
    partial void OnC_ScheduledTimeGMTOffsetChanged();
    partial void OnC_ScheduledDurationChanging(int value);
    partial void OnC_ScheduledDurationChanged();
    partial void OnC_CancelledFlagChanging(string value);
    partial void OnC_CancelledFlagChanged();
    partial void OnC_CancellationTimeChanging(System.DateTime value);
    partial void OnC_CancellationTimeChanged();
    partial void OnC_ServiceLevelChanging(int value);
    partial void OnC_ServiceLevelChanged();
    partial void OnC_TerminationReasonChanging(string value);
    partial void OnC_TerminationReasonChanged();
    partial void OnC_SystemNameChanging(string value);
    partial void OnC_SystemNameChanged();
    partial void OnC_SalesPersonIDChanging(string value);
    partial void OnC_SalesPersonIDChanged();
    partial void OnC_OperatorIDChanging(string value);
    partial void OnC_OperatorIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_audioconfcall()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceID", Storage="_C_ConferenceID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ConferenceID
		{
			get
			{
				return this._C_ConferenceID;
			}
			set
			{
				if ((this._C_ConferenceID != value))
				{
					this.OnC_ConferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceID = value;
					this.SendPropertyChanged("C_ConferenceID");
					this.OnC_ConferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_AccountingCode", Storage="_C_AccountingCode", DbType="NVarChar(255)")]
		public string C_AccountingCode
		{
			get
			{
				return this._C_AccountingCode;
			}
			set
			{
				if ((this._C_AccountingCode != value))
				{
					this.OnC_AccountingCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountingCode = value;
					this.SendPropertyChanged("C_AccountingCode");
					this.OnC_AccountingCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceName", Storage="_C_ConferenceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ConferenceName
		{
			get
			{
				return this._C_ConferenceName;
			}
			set
			{
				if ((this._C_ConferenceName != value))
				{
					this.OnC_ConferenceNameChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceName = value;
					this.SendPropertyChanged("C_ConferenceName");
					this.OnC_ConferenceNameChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceSubject", Storage="_C_ConferenceSubject", DbType="NVarChar(255)")]
		public string C_ConferenceSubject
		{
			get
			{
				return this._C_ConferenceSubject;
			}
			set
			{
				if ((this._C_ConferenceSubject != value))
				{
					this.OnC_ConferenceSubjectChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceSubject = value;
					this.SendPropertyChanged("C_ConferenceSubject");
					this.OnC_ConferenceSubjectChanged();
				}
			}
		}
		
		[Column(Name="c_OrganizationName", Storage="_C_OrganizationName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_OrganizationName
		{
			get
			{
				return this._C_OrganizationName;
			}
			set
			{
				if ((this._C_OrganizationName != value))
				{
					this.OnC_OrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._C_OrganizationName = value;
					this.SendPropertyChanged("C_OrganizationName");
					this.OnC_OrganizationNameChanged();
				}
			}
		}
		
		[Column(Name="c_SpecialInfo", Storage="_C_SpecialInfo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_SpecialInfo
		{
			get
			{
				return this._C_SpecialInfo;
			}
			set
			{
				if ((this._C_SpecialInfo != value))
				{
					this.OnC_SpecialInfoChanging(value);
					this.SendPropertyChanging();
					this._C_SpecialInfo = value;
					this.SendPropertyChanged("C_SpecialInfo");
					this.OnC_SpecialInfoChanged();
				}
			}
		}
		
		[Column(Name="c_SchedulerComments", Storage="_C_SchedulerComments", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_SchedulerComments
		{
			get
			{
				return this._C_SchedulerComments;
			}
			set
			{
				if ((this._C_SchedulerComments != value))
				{
					this.OnC_SchedulerCommentsChanging(value);
					this.SendPropertyChanging();
					this._C_SchedulerComments = value;
					this.SendPropertyChanged("C_SchedulerComments");
					this.OnC_SchedulerCommentsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledConnections", Storage="_C_ScheduledConnections", DbType="Int NOT NULL")]
		public int C_ScheduledConnections
		{
			get
			{
				return this._C_ScheduledConnections;
			}
			set
			{
				if ((this._C_ScheduledConnections != value))
				{
					this.OnC_ScheduledConnectionsChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledConnections = value;
					this.SendPropertyChanged("C_ScheduledConnections");
					this.OnC_ScheduledConnectionsChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledStartTime", Storage="_C_ScheduledStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ScheduledStartTime
		{
			get
			{
				return this._C_ScheduledStartTime;
			}
			set
			{
				if ((this._C_ScheduledStartTime != value))
				{
					this.OnC_ScheduledStartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledStartTime = value;
					this.SendPropertyChanged("C_ScheduledStartTime");
					this.OnC_ScheduledStartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledTimeGMTOffset", Storage="_C_ScheduledTimeGMTOffset", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ScheduledTimeGMTOffset
		{
			get
			{
				return this._C_ScheduledTimeGMTOffset;
			}
			set
			{
				if ((this._C_ScheduledTimeGMTOffset != value))
				{
					this.OnC_ScheduledTimeGMTOffsetChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledTimeGMTOffset = value;
					this.SendPropertyChanged("C_ScheduledTimeGMTOffset");
					this.OnC_ScheduledTimeGMTOffsetChanged();
				}
			}
		}
		
		[Column(Name="c_ScheduledDuration", Storage="_C_ScheduledDuration", DbType="Int NOT NULL")]
		public int C_ScheduledDuration
		{
			get
			{
				return this._C_ScheduledDuration;
			}
			set
			{
				if ((this._C_ScheduledDuration != value))
				{
					this.OnC_ScheduledDurationChanging(value);
					this.SendPropertyChanging();
					this._C_ScheduledDuration = value;
					this.SendPropertyChanged("C_ScheduledDuration");
					this.OnC_ScheduledDurationChanged();
				}
			}
		}
		
		[Column(Name="c_CancelledFlag", Storage="_C_CancelledFlag", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_CancelledFlag
		{
			get
			{
				return this._C_CancelledFlag;
			}
			set
			{
				if ((this._C_CancelledFlag != value))
				{
					this.OnC_CancelledFlagChanging(value);
					this.SendPropertyChanging();
					this._C_CancelledFlag = value;
					this.SendPropertyChanged("C_CancelledFlag");
					this.OnC_CancelledFlagChanged();
				}
			}
		}
		
		[Column(Name="c_CancellationTime", Storage="_C_CancellationTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_CancellationTime
		{
			get
			{
				return this._C_CancellationTime;
			}
			set
			{
				if ((this._C_CancellationTime != value))
				{
					this.OnC_CancellationTimeChanging(value);
					this.SendPropertyChanging();
					this._C_CancellationTime = value;
					this.SendPropertyChanged("C_CancellationTime");
					this.OnC_CancellationTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ServiceLevel", Storage="_C_ServiceLevel", DbType="Int NOT NULL")]
		public int C_ServiceLevel
		{
			get
			{
				return this._C_ServiceLevel;
			}
			set
			{
				if ((this._C_ServiceLevel != value))
				{
					this.OnC_ServiceLevelChanging(value);
					this.SendPropertyChanging();
					this._C_ServiceLevel = value;
					this.SendPropertyChanged("C_ServiceLevel");
					this.OnC_ServiceLevelChanged();
				}
			}
		}
		
		[Column(Name="c_TerminationReason", Storage="_C_TerminationReason", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_TerminationReason
		{
			get
			{
				return this._C_TerminationReason;
			}
			set
			{
				if ((this._C_TerminationReason != value))
				{
					this.OnC_TerminationReasonChanging(value);
					this.SendPropertyChanging();
					this._C_TerminationReason = value;
					this.SendPropertyChanged("C_TerminationReason");
					this.OnC_TerminationReasonChanged();
				}
			}
		}
		
		[Column(Name="c_SystemName", Storage="_C_SystemName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_SystemName
		{
			get
			{
				return this._C_SystemName;
			}
			set
			{
				if ((this._C_SystemName != value))
				{
					this.OnC_SystemNameChanging(value);
					this.SendPropertyChanging();
					this._C_SystemName = value;
					this.SendPropertyChanged("C_SystemName");
					this.OnC_SystemNameChanged();
				}
			}
		}
		
		[Column(Name="c_SalesPersonID", Storage="_C_SalesPersonID", DbType="NVarChar(255)")]
		public string C_SalesPersonID
		{
			get
			{
				return this._C_SalesPersonID;
			}
			set
			{
				if ((this._C_SalesPersonID != value))
				{
					this.OnC_SalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._C_SalesPersonID = value;
					this.SendPropertyChanged("C_SalesPersonID");
					this.OnC_SalesPersonIDChanged();
				}
			}
		}
		
		[Column(Name="c_OperatorID", Storage="_C_OperatorID", DbType="NVarChar(255)")]
		public string C_OperatorID
		{
			get
			{
				return this._C_OperatorID;
			}
			set
			{
				if ((this._C_OperatorID != value))
				{
					this.OnC_OperatorIDChanging(value);
					this.SendPropertyChanging();
					this._C_OperatorID = value;
					this.SendPropertyChanged("C_OperatorID");
					this.OnC_OperatorIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_audioconfconnection")]
	public partial class T_svc_audioconfconnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_ConferenceID;
		
		private string _C_Payer;
		
		private string _C_UserBilled;
		
		private string _C_UserName;
		
		private int _C_UserRole;
		
		private string _C_OrganizationName;
		
		private string _C_userphonenumber;
		
		private string _C_specialinfo;
		
		private int _C_CallType;
		
		private System.Nullable<int> _C_transport;
		
		private int _C_Mode;
		
		private System.DateTime _C_ConnectTime;
		
		private System.DateTime _C_EnteredConferenceTime;
		
		private System.Nullable<System.DateTime> _C_ExitedConferenceTime;
		
		private System.DateTime _C_DisconnectTime;
		
		private string _C_Transferred;
		
		private string _C_TerminationReason;
		
		private int _C_ISDNDisconnectCause;
		
		private int _C_TrunkNumber;
		
		private int _C_LineNumber;
		
		private string _C_DNISDigits;
		
		private string _C_ANIDigits;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ConferenceIDChanging(string value);
    partial void OnC_ConferenceIDChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_UserBilledChanging(string value);
    partial void OnC_UserBilledChanged();
    partial void OnC_UserNameChanging(string value);
    partial void OnC_UserNameChanged();
    partial void OnC_UserRoleChanging(int value);
    partial void OnC_UserRoleChanged();
    partial void OnC_OrganizationNameChanging(string value);
    partial void OnC_OrganizationNameChanged();
    partial void OnC_userphonenumberChanging(string value);
    partial void OnC_userphonenumberChanged();
    partial void OnC_specialinfoChanging(string value);
    partial void OnC_specialinfoChanged();
    partial void OnC_CallTypeChanging(int value);
    partial void OnC_CallTypeChanged();
    partial void OnC_transportChanging(System.Nullable<int> value);
    partial void OnC_transportChanged();
    partial void OnC_ModeChanging(int value);
    partial void OnC_ModeChanged();
    partial void OnC_ConnectTimeChanging(System.DateTime value);
    partial void OnC_ConnectTimeChanged();
    partial void OnC_EnteredConferenceTimeChanging(System.DateTime value);
    partial void OnC_EnteredConferenceTimeChanged();
    partial void OnC_ExitedConferenceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_ExitedConferenceTimeChanged();
    partial void OnC_DisconnectTimeChanging(System.DateTime value);
    partial void OnC_DisconnectTimeChanged();
    partial void OnC_TransferredChanging(string value);
    partial void OnC_TransferredChanged();
    partial void OnC_TerminationReasonChanging(string value);
    partial void OnC_TerminationReasonChanged();
    partial void OnC_ISDNDisconnectCauseChanging(int value);
    partial void OnC_ISDNDisconnectCauseChanged();
    partial void OnC_TrunkNumberChanging(int value);
    partial void OnC_TrunkNumberChanged();
    partial void OnC_LineNumberChanging(int value);
    partial void OnC_LineNumberChanged();
    partial void OnC_DNISDigitsChanging(string value);
    partial void OnC_DNISDigitsChanged();
    partial void OnC_ANIDigitsChanging(string value);
    partial void OnC_ANIDigitsChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_audioconfconnection()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ConferenceID", Storage="_C_ConferenceID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ConferenceID
		{
			get
			{
				return this._C_ConferenceID;
			}
			set
			{
				if ((this._C_ConferenceID != value))
				{
					this.OnC_ConferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ConferenceID = value;
					this.SendPropertyChanged("C_ConferenceID");
					this.OnC_ConferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_UserBilled", Storage="_C_UserBilled", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_UserBilled
		{
			get
			{
				return this._C_UserBilled;
			}
			set
			{
				if ((this._C_UserBilled != value))
				{
					this.OnC_UserBilledChanging(value);
					this.SendPropertyChanging();
					this._C_UserBilled = value;
					this.SendPropertyChanged("C_UserBilled");
					this.OnC_UserBilledChanged();
				}
			}
		}
		
		[Column(Name="c_UserName", Storage="_C_UserName", DbType="NVarChar(255)")]
		public string C_UserName
		{
			get
			{
				return this._C_UserName;
			}
			set
			{
				if ((this._C_UserName != value))
				{
					this.OnC_UserNameChanging(value);
					this.SendPropertyChanging();
					this._C_UserName = value;
					this.SendPropertyChanged("C_UserName");
					this.OnC_UserNameChanged();
				}
			}
		}
		
		[Column(Name="c_UserRole", Storage="_C_UserRole", DbType="Int NOT NULL")]
		public int C_UserRole
		{
			get
			{
				return this._C_UserRole;
			}
			set
			{
				if ((this._C_UserRole != value))
				{
					this.OnC_UserRoleChanging(value);
					this.SendPropertyChanging();
					this._C_UserRole = value;
					this.SendPropertyChanged("C_UserRole");
					this.OnC_UserRoleChanged();
				}
			}
		}
		
		[Column(Name="c_OrganizationName", Storage="_C_OrganizationName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_OrganizationName
		{
			get
			{
				return this._C_OrganizationName;
			}
			set
			{
				if ((this._C_OrganizationName != value))
				{
					this.OnC_OrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._C_OrganizationName = value;
					this.SendPropertyChanged("C_OrganizationName");
					this.OnC_OrganizationNameChanged();
				}
			}
		}
		
		[Column(Name="c_userphonenumber", Storage="_C_userphonenumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_userphonenumber
		{
			get
			{
				return this._C_userphonenumber;
			}
			set
			{
				if ((this._C_userphonenumber != value))
				{
					this.OnC_userphonenumberChanging(value);
					this.SendPropertyChanging();
					this._C_userphonenumber = value;
					this.SendPropertyChanged("C_userphonenumber");
					this.OnC_userphonenumberChanged();
				}
			}
		}
		
		[Column(Name="c_specialinfo", Storage="_C_specialinfo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_specialinfo
		{
			get
			{
				return this._C_specialinfo;
			}
			set
			{
				if ((this._C_specialinfo != value))
				{
					this.OnC_specialinfoChanging(value);
					this.SendPropertyChanging();
					this._C_specialinfo = value;
					this.SendPropertyChanged("C_specialinfo");
					this.OnC_specialinfoChanged();
				}
			}
		}
		
		[Column(Name="c_CallType", Storage="_C_CallType", DbType="Int NOT NULL")]
		public int C_CallType
		{
			get
			{
				return this._C_CallType;
			}
			set
			{
				if ((this._C_CallType != value))
				{
					this.OnC_CallTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CallType = value;
					this.SendPropertyChanged("C_CallType");
					this.OnC_CallTypeChanged();
				}
			}
		}
		
		[Column(Name="c_transport", Storage="_C_transport", DbType="Int")]
		public System.Nullable<int> C_transport
		{
			get
			{
				return this._C_transport;
			}
			set
			{
				if ((this._C_transport != value))
				{
					this.OnC_transportChanging(value);
					this.SendPropertyChanging();
					this._C_transport = value;
					this.SendPropertyChanged("C_transport");
					this.OnC_transportChanged();
				}
			}
		}
		
		[Column(Name="c_Mode", Storage="_C_Mode", DbType="Int NOT NULL")]
		public int C_Mode
		{
			get
			{
				return this._C_Mode;
			}
			set
			{
				if ((this._C_Mode != value))
				{
					this.OnC_ModeChanging(value);
					this.SendPropertyChanging();
					this._C_Mode = value;
					this.SendPropertyChanged("C_Mode");
					this.OnC_ModeChanged();
				}
			}
		}
		
		[Column(Name="c_ConnectTime", Storage="_C_ConnectTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ConnectTime
		{
			get
			{
				return this._C_ConnectTime;
			}
			set
			{
				if ((this._C_ConnectTime != value))
				{
					this.OnC_ConnectTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ConnectTime = value;
					this.SendPropertyChanged("C_ConnectTime");
					this.OnC_ConnectTimeChanged();
				}
			}
		}
		
		[Column(Name="c_EnteredConferenceTime", Storage="_C_EnteredConferenceTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_EnteredConferenceTime
		{
			get
			{
				return this._C_EnteredConferenceTime;
			}
			set
			{
				if ((this._C_EnteredConferenceTime != value))
				{
					this.OnC_EnteredConferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._C_EnteredConferenceTime = value;
					this.SendPropertyChanged("C_EnteredConferenceTime");
					this.OnC_EnteredConferenceTimeChanged();
				}
			}
		}
		
		[Column(Name="c_ExitedConferenceTime", Storage="_C_ExitedConferenceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_ExitedConferenceTime
		{
			get
			{
				return this._C_ExitedConferenceTime;
			}
			set
			{
				if ((this._C_ExitedConferenceTime != value))
				{
					this.OnC_ExitedConferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._C_ExitedConferenceTime = value;
					this.SendPropertyChanged("C_ExitedConferenceTime");
					this.OnC_ExitedConferenceTimeChanged();
				}
			}
		}
		
		[Column(Name="c_DisconnectTime", Storage="_C_DisconnectTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_DisconnectTime
		{
			get
			{
				return this._C_DisconnectTime;
			}
			set
			{
				if ((this._C_DisconnectTime != value))
				{
					this.OnC_DisconnectTimeChanging(value);
					this.SendPropertyChanging();
					this._C_DisconnectTime = value;
					this.SendPropertyChanged("C_DisconnectTime");
					this.OnC_DisconnectTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Transferred", Storage="_C_Transferred", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Transferred
		{
			get
			{
				return this._C_Transferred;
			}
			set
			{
				if ((this._C_Transferred != value))
				{
					this.OnC_TransferredChanging(value);
					this.SendPropertyChanging();
					this._C_Transferred = value;
					this.SendPropertyChanged("C_Transferred");
					this.OnC_TransferredChanged();
				}
			}
		}
		
		[Column(Name="c_TerminationReason", Storage="_C_TerminationReason", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_TerminationReason
		{
			get
			{
				return this._C_TerminationReason;
			}
			set
			{
				if ((this._C_TerminationReason != value))
				{
					this.OnC_TerminationReasonChanging(value);
					this.SendPropertyChanging();
					this._C_TerminationReason = value;
					this.SendPropertyChanged("C_TerminationReason");
					this.OnC_TerminationReasonChanged();
				}
			}
		}
		
		[Column(Name="c_ISDNDisconnectCause", Storage="_C_ISDNDisconnectCause", DbType="Int NOT NULL")]
		public int C_ISDNDisconnectCause
		{
			get
			{
				return this._C_ISDNDisconnectCause;
			}
			set
			{
				if ((this._C_ISDNDisconnectCause != value))
				{
					this.OnC_ISDNDisconnectCauseChanging(value);
					this.SendPropertyChanging();
					this._C_ISDNDisconnectCause = value;
					this.SendPropertyChanged("C_ISDNDisconnectCause");
					this.OnC_ISDNDisconnectCauseChanged();
				}
			}
		}
		
		[Column(Name="c_TrunkNumber", Storage="_C_TrunkNumber", DbType="Int NOT NULL")]
		public int C_TrunkNumber
		{
			get
			{
				return this._C_TrunkNumber;
			}
			set
			{
				if ((this._C_TrunkNumber != value))
				{
					this.OnC_TrunkNumberChanging(value);
					this.SendPropertyChanging();
					this._C_TrunkNumber = value;
					this.SendPropertyChanged("C_TrunkNumber");
					this.OnC_TrunkNumberChanged();
				}
			}
		}
		
		[Column(Name="c_LineNumber", Storage="_C_LineNumber", DbType="Int NOT NULL")]
		public int C_LineNumber
		{
			get
			{
				return this._C_LineNumber;
			}
			set
			{
				if ((this._C_LineNumber != value))
				{
					this.OnC_LineNumberChanging(value);
					this.SendPropertyChanging();
					this._C_LineNumber = value;
					this.SendPropertyChanged("C_LineNumber");
					this.OnC_LineNumberChanged();
				}
			}
		}
		
		[Column(Name="c_DNISDigits", Storage="_C_DNISDigits", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_DNISDigits
		{
			get
			{
				return this._C_DNISDigits;
			}
			set
			{
				if ((this._C_DNISDigits != value))
				{
					this.OnC_DNISDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_DNISDigits = value;
					this.SendPropertyChanged("C_DNISDigits");
					this.OnC_DNISDigitsChanged();
				}
			}
		}
		
		[Column(Name="c_ANIDigits", Storage="_C_ANIDigits", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_ANIDigits
		{
			get
			{
				return this._C_ANIDigits;
			}
			set
			{
				if ((this._C_ANIDigits != value))
				{
					this.OnC_ANIDigitsChanging(value);
					this.SendPropertyChanging();
					this._C_ANIDigits = value;
					this.SendPropertyChanged("C_ANIDigits");
					this.OnC_ANIDigitsChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_audioconffeature")]
	public partial class T_svc_audioconffeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Payer;
		
		private int _C_FeatureType;
		
		private System.Nullable<decimal> _C_Metric;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
		private System.Nullable<System.DateTime> _C_EndTime;
		
		private string _C_TransactionID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_FeatureTypeChanging(int value);
    partial void OnC_FeatureTypeChanged();
    partial void OnC_MetricChanging(System.Nullable<decimal> value);
    partial void OnC_MetricChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    partial void OnC_EndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EndTimeChanged();
    partial void OnC_TransactionIDChanging(string value);
    partial void OnC_TransactionIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_audioconffeature()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_FeatureType", Storage="_C_FeatureType", DbType="Int NOT NULL")]
		public int C_FeatureType
		{
			get
			{
				return this._C_FeatureType;
			}
			set
			{
				if ((this._C_FeatureType != value))
				{
					this.OnC_FeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._C_FeatureType = value;
					this.SendPropertyChanged("C_FeatureType");
					this.OnC_FeatureTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Metric", Storage="_C_Metric", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Metric
		{
			get
			{
				return this._C_Metric;
			}
			set
			{
				if ((this._C_Metric != value))
				{
					this.OnC_MetricChanging(value);
					this.SendPropertyChanging();
					this._C_Metric = value;
					this.SendPropertyChanged("C_Metric");
					this.OnC_MetricChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		[Column(Name="c_EndTime", Storage="_C_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EndTime
		{
			get
			{
				return this._C_EndTime;
			}
			set
			{
				if ((this._C_EndTime != value))
				{
					this.OnC_EndTimeChanging(value);
					this.SendPropertyChanging();
					this._C_EndTime = value;
					this.SendPropertyChanged("C_EndTime");
					this.OnC_EndTimeChanged();
				}
			}
		}
		
		[Column(Name="c_TransactionID", Storage="_C_TransactionID", DbType="NVarChar(255)")]
		public string C_TransactionID
		{
			get
			{
				return this._C_TransactionID;
			}
			set
			{
				if ((this._C_TransactionID != value))
				{
					this.OnC_TransactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_TransactionID = value;
					this.SendPropertyChanged("C_TransactionID");
					this.OnC_TransactionIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_BillSoftPCode")]
	public partial class T_svc_BillSoftPCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_CountryCode;
		
		private string _C_StateAbbr;
		
		private string _C_Locality;
		
		private string _C_ZipCode;
		
		private string _C_NPANXXNumber;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_CountryCodeChanging(string value);
    partial void OnC_CountryCodeChanged();
    partial void OnC_StateAbbrChanging(string value);
    partial void OnC_StateAbbrChanged();
    partial void OnC_LocalityChanging(string value);
    partial void OnC_LocalityChanged();
    partial void OnC_ZipCodeChanging(string value);
    partial void OnC_ZipCodeChanged();
    partial void OnC_NPANXXNumberChanging(string value);
    partial void OnC_NPANXXNumberChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_BillSoftPCode()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_CountryCode", Storage="_C_CountryCode", DbType="NVarChar(255)")]
		public string C_CountryCode
		{
			get
			{
				return this._C_CountryCode;
			}
			set
			{
				if ((this._C_CountryCode != value))
				{
					this.OnC_CountryCodeChanging(value);
					this.SendPropertyChanging();
					this._C_CountryCode = value;
					this.SendPropertyChanged("C_CountryCode");
					this.OnC_CountryCodeChanged();
				}
			}
		}
		
		[Column(Name="c_StateAbbr", Storage="_C_StateAbbr", DbType="NVarChar(255)")]
		public string C_StateAbbr
		{
			get
			{
				return this._C_StateAbbr;
			}
			set
			{
				if ((this._C_StateAbbr != value))
				{
					this.OnC_StateAbbrChanging(value);
					this.SendPropertyChanging();
					this._C_StateAbbr = value;
					this.SendPropertyChanged("C_StateAbbr");
					this.OnC_StateAbbrChanged();
				}
			}
		}
		
		[Column(Name="c_Locality", Storage="_C_Locality", DbType="NVarChar(255)")]
		public string C_Locality
		{
			get
			{
				return this._C_Locality;
			}
			set
			{
				if ((this._C_Locality != value))
				{
					this.OnC_LocalityChanging(value);
					this.SendPropertyChanging();
					this._C_Locality = value;
					this.SendPropertyChanged("C_Locality");
					this.OnC_LocalityChanged();
				}
			}
		}
		
		[Column(Name="c_ZipCode", Storage="_C_ZipCode", DbType="NVarChar(255)")]
		public string C_ZipCode
		{
			get
			{
				return this._C_ZipCode;
			}
			set
			{
				if ((this._C_ZipCode != value))
				{
					this.OnC_ZipCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ZipCode = value;
					this.SendPropertyChanged("C_ZipCode");
					this.OnC_ZipCodeChanged();
				}
			}
		}
		
		[Column(Name="c_NPANXXNumber", Storage="_C_NPANXXNumber", DbType="NVarChar(255)")]
		public string C_NPANXXNumber
		{
			get
			{
				return this._C_NPANXXNumber;
			}
			set
			{
				if ((this._C_NPANXXNumber != value))
				{
					this.OnC_NPANXXNumberChanging(value);
					this.SendPropertyChanging();
					this._C_NPANXXNumber = value;
					this.SendPropertyChanged("C_NPANXXNumber");
					this.OnC_NPANXXNumberChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_Commitment")]
	public partial class T_svc_Commitment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private decimal _C_TrueUpAmount;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_TrueUpAmountChanging(decimal value);
    partial void OnC_TrueUpAmountChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_Commitment()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_TrueUpAmount", Storage="_C_TrueUpAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TrueUpAmount
		{
			get
			{
				return this._C_TrueUpAmount;
			}
			set
			{
				if ((this._C_TrueUpAmount != value))
				{
					this.OnC_TrueUpAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TrueUpAmount = value;
					this.SendPropertyChanged("C_TrueUpAmount");
					this.OnC_TrueUpAmountChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_DTCGetWhereAbouts")]
	public partial class T_svc_DTCGetWhereAbouts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_WhereAboutsCookie;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_WhereAboutsCookieChanging(string value);
    partial void OnC_WhereAboutsCookieChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_DTCGetWhereAbouts()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_WhereAboutsCookie", Storage="_C_WhereAboutsCookie", DbType="NVarChar(255)")]
		public string C_WhereAboutsCookie
		{
			get
			{
				return this._C_WhereAboutsCookie;
			}
			set
			{
				if ((this._C_WhereAboutsCookie != value))
				{
					this.OnC_WhereAboutsCookieChanging(value);
					this.SendPropertyChanging();
					this._C_WhereAboutsCookie = value;
					this.SendPropertyChanged("C_WhereAboutsCookie");
					this.OnC_WhereAboutsCookieChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_FlatDiscount")]
	public partial class T_svc_FlatDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PayingAccount;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalStart;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalEnd;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_FlatRateQualifier;
		
		private System.Nullable<int> _C_GroupDiscountPass;
		
		private System.Nullable<int> _C_GroupSubscriptionID;
		
		private string _C_GroupSubscriptionName;
		
		private System.Nullable<decimal> _C_GroupDiscountAmount;
		
		private System.Nullable<decimal> _C_DistributionCounter;
		
		private System.Nullable<int> _C_GroupDiscountIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(System.Nullable<int> value);
    partial void OnC__PayingAccountChanged();
    partial void OnC_BillingIntervalStartChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_FlatRateQualifierChanging(System.Nullable<decimal> value);
    partial void OnC_FlatRateQualifierChanged();
    partial void OnC_GroupDiscountPassChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountPassChanged();
    partial void OnC_GroupSubscriptionIDChanging(System.Nullable<int> value);
    partial void OnC_GroupSubscriptionIDChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    partial void OnC_GroupDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountAmountChanged();
    partial void OnC_DistributionCounterChanging(System.Nullable<decimal> value);
    partial void OnC_DistributionCounterChanged();
    partial void OnC_GroupDiscountIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_FlatDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int")]
		public System.Nullable<int> C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_FlatRateQualifier", Storage="_C_FlatRateQualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_FlatRateQualifier
		{
			get
			{
				return this._C_FlatRateQualifier;
			}
			set
			{
				if ((this._C_FlatRateQualifier != value))
				{
					this.OnC_FlatRateQualifierChanging(value);
					this.SendPropertyChanging();
					this._C_FlatRateQualifier = value;
					this.SendPropertyChanged("C_FlatRateQualifier");
					this.OnC_FlatRateQualifierChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPass", Storage="_C_GroupDiscountPass", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountPass
		{
			get
			{
				return this._C_GroupDiscountPass;
			}
			set
			{
				if ((this._C_GroupDiscountPass != value))
				{
					this.OnC_GroupDiscountPassChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPass = value;
					this.SendPropertyChanged("C_GroupDiscountPass");
					this.OnC_GroupDiscountPassChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionID", Storage="_C_GroupSubscriptionID", DbType="Int")]
		public System.Nullable<int> C_GroupSubscriptionID
		{
			get
			{
				return this._C_GroupSubscriptionID;
			}
			set
			{
				if ((this._C_GroupSubscriptionID != value))
				{
					this.OnC_GroupSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionID = value;
					this.SendPropertyChanged("C_GroupSubscriptionID");
					this.OnC_GroupSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(255)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountAmount", Storage="_C_GroupDiscountAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountAmount
		{
			get
			{
				return this._C_GroupDiscountAmount;
			}
			set
			{
				if ((this._C_GroupDiscountAmount != value))
				{
					this.OnC_GroupDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountAmount = value;
					this.SendPropertyChanged("C_GroupDiscountAmount");
					this.OnC_GroupDiscountAmountChanged();
				}
			}
		}
		
		[Column(Name="c_DistributionCounter", Storage="_C_DistributionCounter", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DistributionCounter
		{
			get
			{
				return this._C_DistributionCounter;
			}
			set
			{
				if ((this._C_DistributionCounter != value))
				{
					this.OnC_DistributionCounterChanging(value);
					this.SendPropertyChanging();
					this._C_DistributionCounter = value;
					this.SendPropertyChanged("C_DistributionCounter");
					this.OnC_DistributionCounterChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountIntervalID", Storage="_C_GroupDiscountIntervalID", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountIntervalID
		{
			get
			{
				return this._C_GroupDiscountIntervalID;
			}
			set
			{
				if ((this._C_GroupDiscountIntervalID != value))
				{
					this.OnC_GroupDiscountIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountIntervalID = value;
					this.SendPropertyChanged("C_GroupDiscountIntervalID");
					this.OnC_GroupDiscountIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_FlatDiscount_NoCond")]
	public partial class T_svc_FlatDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PayingAccount;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalStart;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalEnd;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<int> _C_GroupDiscountPass;
		
		private System.Nullable<int> _C_GroupSubscriptionID;
		
		private string _C_GroupSubscriptionName;
		
		private System.Nullable<decimal> _C_GroupDiscountAmount;
		
		private System.Nullable<decimal> _C_DistributionCounter;
		
		private System.Nullable<int> _C_GroupDiscountIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(System.Nullable<int> value);
    partial void OnC__PayingAccountChanged();
    partial void OnC_BillingIntervalStartChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_GroupDiscountPassChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountPassChanged();
    partial void OnC_GroupSubscriptionIDChanging(System.Nullable<int> value);
    partial void OnC_GroupSubscriptionIDChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    partial void OnC_GroupDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountAmountChanged();
    partial void OnC_DistributionCounterChanging(System.Nullable<decimal> value);
    partial void OnC_DistributionCounterChanged();
    partial void OnC_GroupDiscountIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_FlatDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int")]
		public System.Nullable<int> C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPass", Storage="_C_GroupDiscountPass", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountPass
		{
			get
			{
				return this._C_GroupDiscountPass;
			}
			set
			{
				if ((this._C_GroupDiscountPass != value))
				{
					this.OnC_GroupDiscountPassChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPass = value;
					this.SendPropertyChanged("C_GroupDiscountPass");
					this.OnC_GroupDiscountPassChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionID", Storage="_C_GroupSubscriptionID", DbType="Int")]
		public System.Nullable<int> C_GroupSubscriptionID
		{
			get
			{
				return this._C_GroupSubscriptionID;
			}
			set
			{
				if ((this._C_GroupSubscriptionID != value))
				{
					this.OnC_GroupSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionID = value;
					this.SendPropertyChanged("C_GroupSubscriptionID");
					this.OnC_GroupSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(255)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountAmount", Storage="_C_GroupDiscountAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountAmount
		{
			get
			{
				return this._C_GroupDiscountAmount;
			}
			set
			{
				if ((this._C_GroupDiscountAmount != value))
				{
					this.OnC_GroupDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountAmount = value;
					this.SendPropertyChanged("C_GroupDiscountAmount");
					this.OnC_GroupDiscountAmountChanged();
				}
			}
		}
		
		[Column(Name="c_DistributionCounter", Storage="_C_DistributionCounter", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DistributionCounter
		{
			get
			{
				return this._C_DistributionCounter;
			}
			set
			{
				if ((this._C_DistributionCounter != value))
				{
					this.OnC_DistributionCounterChanging(value);
					this.SendPropertyChanging();
					this._C_DistributionCounter = value;
					this.SendPropertyChanged("C_DistributionCounter");
					this.OnC_DistributionCounterChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountIntervalID", Storage="_C_GroupDiscountIntervalID", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountIntervalID
		{
			get
			{
				return this._C_GroupDiscountIntervalID;
			}
			set
			{
				if ((this._C_GroupDiscountIntervalID != value))
				{
					this.OnC_GroupDiscountIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountIntervalID = value;
					this.SendPropertyChanged("C_GroupDiscountIntervalID");
					this.OnC_GroupDiscountIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_FlatRecurringCharge")]
	public partial class T_svc_FlatRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_RCActionType;
		
		private System.DateTime _C_RCIntervalStart;
		
		private System.DateTime _C_RCIntervalEnd;
		
		private System.DateTime _C_BillingIntervalStart;
		
		private System.DateTime _C_BillingIntervalEnd;
		
		private System.DateTime _C_RCIntervalSubscriptionStart;
		
		private System.DateTime _C_RCIntervalSubscriptionEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private string _C_Advance;
		
		private string _C_ProrateOnSubscription;
		
		private string _C_ProrateInstantly;
		
		private string _C_ProrateOnUnsubscription;
		
		private int _C_ProrationCycleLength;
		
		private int _C__AccountID;
		
		private int _C__PayingAccount;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.Nullable<System.DateTime> _C_BilledRateDate;
		
		private int _C__SubscriptionID;
		
		private System.Nullable<System.DateTime> _C_FinalizeDate;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_RCActionTypeChanging(string value);
    partial void OnC_RCActionTypeChanged();
    partial void OnC_RCIntervalStartChanging(System.DateTime value);
    partial void OnC_RCIntervalStartChanged();
    partial void OnC_RCIntervalEndChanging(System.DateTime value);
    partial void OnC_RCIntervalEndChanged();
    partial void OnC_BillingIntervalStartChanging(System.DateTime value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.DateTime value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC_RCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionStartChanged();
    partial void OnC_RCIntervalSubscriptionEndChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_AdvanceChanging(string value);
    partial void OnC_AdvanceChanged();
    partial void OnC_ProrateOnSubscriptionChanging(string value);
    partial void OnC_ProrateOnSubscriptionChanged();
    partial void OnC_ProrateInstantlyChanging(string value);
    partial void OnC_ProrateInstantlyChanged();
    partial void OnC_ProrateOnUnsubscriptionChanging(string value);
    partial void OnC_ProrateOnUnsubscriptionChanged();
    partial void OnC_ProrationCycleLengthChanging(int value);
    partial void OnC_ProrationCycleLengthChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(int value);
    partial void OnC__PayingAccountChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_BilledRateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BilledRateDateChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    partial void OnC_FinalizeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_FinalizeDateChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_FlatRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_RCActionType", Storage="_C_RCActionType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_RCActionType
		{
			get
			{
				return this._C_RCActionType;
			}
			set
			{
				if ((this._C_RCActionType != value))
				{
					this.OnC_RCActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_RCActionType = value;
					this.SendPropertyChanged("C_RCActionType");
					this.OnC_RCActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalStart", Storage="_C_RCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalStart
		{
			get
			{
				return this._C_RCIntervalStart;
			}
			set
			{
				if ((this._C_RCIntervalStart != value))
				{
					this.OnC_RCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalStart = value;
					this.SendPropertyChanged("C_RCIntervalStart");
					this.OnC_RCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalEnd", Storage="_C_RCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalEnd
		{
			get
			{
				return this._C_RCIntervalEnd;
			}
			set
			{
				if ((this._C_RCIntervalEnd != value))
				{
					this.OnC_RCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalEnd = value;
					this.SendPropertyChanged("C_RCIntervalEnd");
					this.OnC_RCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionStart", Storage="_C_RCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionStart
		{
			get
			{
				return this._C_RCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionStart != value))
				{
					this.OnC_RCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionStart");
					this.OnC_RCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionEnd", Storage="_C_RCIntervalSubscriptionEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_RCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionEnd != value))
				{
					this.OnC_RCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionEnd");
					this.OnC_RCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_Advance", Storage="_C_Advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_Advance
		{
			get
			{
				return this._C_Advance;
			}
			set
			{
				if ((this._C_Advance != value))
				{
					this.OnC_AdvanceChanging(value);
					this.SendPropertyChanging();
					this._C_Advance = value;
					this.SendPropertyChanged("C_Advance");
					this.OnC_AdvanceChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnSubscription", Storage="_C_ProrateOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnSubscription
		{
			get
			{
				return this._C_ProrateOnSubscription;
			}
			set
			{
				if ((this._C_ProrateOnSubscription != value))
				{
					this.OnC_ProrateOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnSubscription = value;
					this.SendPropertyChanged("C_ProrateOnSubscription");
					this.OnC_ProrateOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateInstantly", Storage="_C_ProrateInstantly", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateInstantly
		{
			get
			{
				return this._C_ProrateInstantly;
			}
			set
			{
				if ((this._C_ProrateInstantly != value))
				{
					this.OnC_ProrateInstantlyChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateInstantly = value;
					this.SendPropertyChanged("C_ProrateInstantly");
					this.OnC_ProrateInstantlyChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnUnsubscription", Storage="_C_ProrateOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnUnsubscription
		{
			get
			{
				return this._C_ProrateOnUnsubscription;
			}
			set
			{
				if ((this._C_ProrateOnUnsubscription != value))
				{
					this.OnC_ProrateOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnUnsubscription = value;
					this.SendPropertyChanged("C_ProrateOnUnsubscription");
					this.OnC_ProrateOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProrationCycleLength", Storage="_C_ProrationCycleLength", DbType="Int NOT NULL")]
		public int C_ProrationCycleLength
		{
			get
			{
				return this._C_ProrationCycleLength;
			}
			set
			{
				if ((this._C_ProrationCycleLength != value))
				{
					this.OnC_ProrationCycleLengthChanging(value);
					this.SendPropertyChanging();
					this._C_ProrationCycleLength = value;
					this.SendPropertyChanged("C_ProrationCycleLength");
					this.OnC_ProrationCycleLengthChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int NOT NULL")]
		public int C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_BilledRateDate", Storage="_C_BilledRateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BilledRateDate
		{
			get
			{
				return this._C_BilledRateDate;
			}
			set
			{
				if ((this._C_BilledRateDate != value))
				{
					this.OnC_BilledRateDateChanging(value);
					this.SendPropertyChanging();
					this._C_BilledRateDate = value;
					this.SendPropertyChanged("C_BilledRateDate");
					this.OnC_BilledRateDateChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_FinalizeDate", Storage="_C_FinalizeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_FinalizeDate
		{
			get
			{
				return this._C_FinalizeDate;
			}
			set
			{
				if ((this._C_FinalizeDate != value))
				{
					this.OnC_FinalizeDateChanging(value);
					this.SendPropertyChanging();
					this._C_FinalizeDate = value;
					this.SendPropertyChanged("C_FinalizeDate");
					this.OnC_FinalizeDateChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_FreeUsage")]
	public partial class T_svc_FreeUsage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C_dummyProperty;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_FreeUsage()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_GSMConnect")]
	public partial class T_svc_GSMConnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_operation;
		
		private string _C_username;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C__Accountid;
		
		private string _C_ancestorAccount;
		
		private string _C_ancestorAccountNS;
		
		private System.Nullable<int> _C_ancestorAccountID;
		
		private System.DateTime _C_hierarchy_startdate;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ApplyAccountTemplate;
		
		private string _C_TruncateOldSubscriptions;
		
		private string _C_transactioncookie;
		
		private string _C_folder;
		
		private string _C_pricelist;
		
		private string _C_currency;
		
		private System.Nullable<int> _C_Language;
		
		private System.Nullable<int> _C_timezoneID;
		
		private string _C_IMSI;
		
		private string _C_MSISDN;
		
		private string _C_MIN;
		
		private string _C_MDN;
		
		private System.Nullable<int> _C_CellIdentity;
		
		private System.Nullable<int> _C_HomeBID;
		
		private string _C_HomeLocationDesc;
		
		private string _C_IMEI;
		
		private string _C_ESN;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_ancestorAccountChanging(string value);
    partial void OnC_ancestorAccountChanged();
    partial void OnC_ancestorAccountNSChanging(string value);
    partial void OnC_ancestorAccountNSChanged();
    partial void OnC_ancestorAccountIDChanging(System.Nullable<int> value);
    partial void OnC_ancestorAccountIDChanged();
    partial void OnC_hierarchy_startdateChanging(System.DateTime value);
    partial void OnC_hierarchy_startdateChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ApplyAccountTemplateChanging(string value);
    partial void OnC_ApplyAccountTemplateChanged();
    partial void OnC_TruncateOldSubscriptionsChanging(string value);
    partial void OnC_TruncateOldSubscriptionsChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(string value);
    partial void OnC_currencyChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_timezoneIDChanging(System.Nullable<int> value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_IMSIChanging(string value);
    partial void OnC_IMSIChanged();
    partial void OnC_MSISDNChanging(string value);
    partial void OnC_MSISDNChanged();
    partial void OnC_MINChanging(string value);
    partial void OnC_MINChanged();
    partial void OnC_MDNChanging(string value);
    partial void OnC_MDNChanged();
    partial void OnC_CellIdentityChanging(System.Nullable<int> value);
    partial void OnC_CellIdentityChanged();
    partial void OnC_HomeBIDChanging(System.Nullable<int> value);
    partial void OnC_HomeBIDChanged();
    partial void OnC_HomeLocationDescChanging(string value);
    partial void OnC_HomeLocationDescChanged();
    partial void OnC_IMEIChanging(string value);
    partial void OnC_IMEIChanged();
    partial void OnC_ESNChanging(string value);
    partial void OnC_ESNChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_GSMConnect()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255)")]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255)")]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccount", Storage="_C_ancestorAccount", DbType="NVarChar(255)")]
		public string C_ancestorAccount
		{
			get
			{
				return this._C_ancestorAccount;
			}
			set
			{
				if ((this._C_ancestorAccount != value))
				{
					this.OnC_ancestorAccountChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccount = value;
					this.SendPropertyChanged("C_ancestorAccount");
					this.OnC_ancestorAccountChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountNS", Storage="_C_ancestorAccountNS", DbType="NVarChar(255)")]
		public string C_ancestorAccountNS
		{
			get
			{
				return this._C_ancestorAccountNS;
			}
			set
			{
				if ((this._C_ancestorAccountNS != value))
				{
					this.OnC_ancestorAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountNS = value;
					this.SendPropertyChanged("C_ancestorAccountNS");
					this.OnC_ancestorAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountID", Storage="_C_ancestorAccountID", DbType="Int")]
		public System.Nullable<int> C_ancestorAccountID
		{
			get
			{
				return this._C_ancestorAccountID;
			}
			set
			{
				if ((this._C_ancestorAccountID != value))
				{
					this.OnC_ancestorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountID = value;
					this.SendPropertyChanged("C_ancestorAccountID");
					this.OnC_ancestorAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_startdate", Storage="_C_hierarchy_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime C_hierarchy_startdate
		{
			get
			{
				return this._C_hierarchy_startdate;
			}
			set
			{
				if ((this._C_hierarchy_startdate != value))
				{
					this.OnC_hierarchy_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_startdate = value;
					this.SendPropertyChanged("C_hierarchy_startdate");
					this.OnC_hierarchy_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyAccountTemplate", Storage="_C_ApplyAccountTemplate", DbType="Char(1)")]
		public string C_ApplyAccountTemplate
		{
			get
			{
				return this._C_ApplyAccountTemplate;
			}
			set
			{
				if ((this._C_ApplyAccountTemplate != value))
				{
					this.OnC_ApplyAccountTemplateChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyAccountTemplate = value;
					this.SendPropertyChanged("C_ApplyAccountTemplate");
					this.OnC_ApplyAccountTemplateChanged();
				}
			}
		}
		
		[Column(Name="c_TruncateOldSubscriptions", Storage="_C_TruncateOldSubscriptions", DbType="Char(1)")]
		public string C_TruncateOldSubscriptions
		{
			get
			{
				return this._C_TruncateOldSubscriptions;
			}
			set
			{
				if ((this._C_TruncateOldSubscriptions != value))
				{
					this.OnC_TruncateOldSubscriptionsChanging(value);
					this.SendPropertyChanging();
					this._C_TruncateOldSubscriptions = value;
					this.SendPropertyChanged("C_TruncateOldSubscriptions");
					this.OnC_TruncateOldSubscriptionsChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="NVarChar(255)")]
		public string C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int")]
		public System.Nullable<int> C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_IMSI", Storage="_C_IMSI", DbType="NVarChar(255)")]
		public string C_IMSI
		{
			get
			{
				return this._C_IMSI;
			}
			set
			{
				if ((this._C_IMSI != value))
				{
					this.OnC_IMSIChanging(value);
					this.SendPropertyChanging();
					this._C_IMSI = value;
					this.SendPropertyChanged("C_IMSI");
					this.OnC_IMSIChanged();
				}
			}
		}
		
		[Column(Name="c_MSISDN", Storage="_C_MSISDN", DbType="NVarChar(255)")]
		public string C_MSISDN
		{
			get
			{
				return this._C_MSISDN;
			}
			set
			{
				if ((this._C_MSISDN != value))
				{
					this.OnC_MSISDNChanging(value);
					this.SendPropertyChanging();
					this._C_MSISDN = value;
					this.SendPropertyChanged("C_MSISDN");
					this.OnC_MSISDNChanged();
				}
			}
		}
		
		[Column(Name="c_MIN", Storage="_C_MIN", DbType="NVarChar(255)")]
		public string C_MIN
		{
			get
			{
				return this._C_MIN;
			}
			set
			{
				if ((this._C_MIN != value))
				{
					this.OnC_MINChanging(value);
					this.SendPropertyChanging();
					this._C_MIN = value;
					this.SendPropertyChanged("C_MIN");
					this.OnC_MINChanged();
				}
			}
		}
		
		[Column(Name="c_MDN", Storage="_C_MDN", DbType="NVarChar(255)")]
		public string C_MDN
		{
			get
			{
				return this._C_MDN;
			}
			set
			{
				if ((this._C_MDN != value))
				{
					this.OnC_MDNChanging(value);
					this.SendPropertyChanging();
					this._C_MDN = value;
					this.SendPropertyChanged("C_MDN");
					this.OnC_MDNChanged();
				}
			}
		}
		
		[Column(Name="c_CellIdentity", Storage="_C_CellIdentity", DbType="Int")]
		public System.Nullable<int> C_CellIdentity
		{
			get
			{
				return this._C_CellIdentity;
			}
			set
			{
				if ((this._C_CellIdentity != value))
				{
					this.OnC_CellIdentityChanging(value);
					this.SendPropertyChanging();
					this._C_CellIdentity = value;
					this.SendPropertyChanged("C_CellIdentity");
					this.OnC_CellIdentityChanged();
				}
			}
		}
		
		[Column(Name="c_HomeBID", Storage="_C_HomeBID", DbType="Int")]
		public System.Nullable<int> C_HomeBID
		{
			get
			{
				return this._C_HomeBID;
			}
			set
			{
				if ((this._C_HomeBID != value))
				{
					this.OnC_HomeBIDChanging(value);
					this.SendPropertyChanging();
					this._C_HomeBID = value;
					this.SendPropertyChanged("C_HomeBID");
					this.OnC_HomeBIDChanged();
				}
			}
		}
		
		[Column(Name="c_HomeLocationDesc", Storage="_C_HomeLocationDesc", DbType="NVarChar(255)")]
		public string C_HomeLocationDesc
		{
			get
			{
				return this._C_HomeLocationDesc;
			}
			set
			{
				if ((this._C_HomeLocationDesc != value))
				{
					this.OnC_HomeLocationDescChanging(value);
					this.SendPropertyChanging();
					this._C_HomeLocationDesc = value;
					this.SendPropertyChanged("C_HomeLocationDesc");
					this.OnC_HomeLocationDescChanged();
				}
			}
		}
		
		[Column(Name="c_IMEI", Storage="_C_IMEI", DbType="NVarChar(255)")]
		public string C_IMEI
		{
			get
			{
				return this._C_IMEI;
			}
			set
			{
				if ((this._C_IMEI != value))
				{
					this.OnC_IMEIChanging(value);
					this.SendPropertyChanging();
					this._C_IMEI = value;
					this.SendPropertyChanged("C_IMEI");
					this.OnC_IMEIChanged();
				}
			}
		}
		
		[Column(Name="c_ESN", Storage="_C_ESN", DbType="NVarChar(255)")]
		public string C_ESN
		{
			get
			{
				return this._C_ESN;
			}
			set
			{
				if ((this._C_ESN != value))
				{
					this.OnC_ESNChanging(value);
					this.SendPropertyChanging();
					this._C_ESN = value;
					this.SendPropertyChanged("C_ESN");
					this.OnC_ESNChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_GSMCreate")]
	public partial class T_svc_GSMCreate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_operation;
		
		private string _C_username;
		
		private string _C_password_;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C__Accountid;
		
		private System.Nullable<System.DateTime> _C_accountstartdate;
		
		private int _C_AccountStatus;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ApplyAccountTemplate;
		
		private string _C_transactioncookie;
		
		private string _C_folder;
		
		private string _C_pricelist;
		
		private string _C_currency;
		
		private int _C_Language;
		
		private int _C_timezoneID;
		
		private string _C_IMSI;
		
		private string _C_MSISDN;
		
		private string _C_MIN;
		
		private string _C_MDN;
		
		private System.Nullable<int> _C_CellIdentity;
		
		private System.Nullable<int> _C_HomeBID;
		
		private string _C_HomeLocationDesc;
		
		private string _C_IMEI;
		
		private string _C_ESN;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_password_Changing(string value);
    partial void OnC_password_Changed();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_accountstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstartdateChanged();
    partial void OnC_AccountStatusChanging(int value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ApplyAccountTemplateChanging(string value);
    partial void OnC_ApplyAccountTemplateChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(string value);
    partial void OnC_currencyChanged();
    partial void OnC_LanguageChanging(int value);
    partial void OnC_LanguageChanged();
    partial void OnC_timezoneIDChanging(int value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_IMSIChanging(string value);
    partial void OnC_IMSIChanged();
    partial void OnC_MSISDNChanging(string value);
    partial void OnC_MSISDNChanged();
    partial void OnC_MINChanging(string value);
    partial void OnC_MINChanged();
    partial void OnC_MDNChanging(string value);
    partial void OnC_MDNChanged();
    partial void OnC_CellIdentityChanging(System.Nullable<int> value);
    partial void OnC_CellIdentityChanged();
    partial void OnC_HomeBIDChanging(System.Nullable<int> value);
    partial void OnC_HomeBIDChanged();
    partial void OnC_HomeLocationDescChanging(string value);
    partial void OnC_HomeLocationDescChanged();
    partial void OnC_IMEIChanging(string value);
    partial void OnC_IMEIChanged();
    partial void OnC_ESNChanging(string value);
    partial void OnC_ESNChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_GSMCreate()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_password_", Storage="_C_password_", DbType="NVarChar(510) NOT NULL", CanBeNull=false)]
		public string C_password_
		{
			get
			{
				return this._C_password_;
			}
			set
			{
				if ((this._C_password_ != value))
				{
					this.OnC_password_Changing(value);
					this.SendPropertyChanging();
					this._C_password_ = value;
					this.SendPropertyChanged("C_password_");
					this.OnC_password_Changed();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_accountstartdate", Storage="_C_accountstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstartdate
		{
			get
			{
				return this._C_accountstartdate;
			}
			set
			{
				if ((this._C_accountstartdate != value))
				{
					this.OnC_accountstartdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstartdate = value;
					this.SendPropertyChanged("C_accountstartdate");
					this.OnC_accountstartdateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int NOT NULL")]
		public int C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyAccountTemplate", Storage="_C_ApplyAccountTemplate", DbType="Char(1)")]
		public string C_ApplyAccountTemplate
		{
			get
			{
				return this._C_ApplyAccountTemplate;
			}
			set
			{
				if ((this._C_ApplyAccountTemplate != value))
				{
					this.OnC_ApplyAccountTemplateChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyAccountTemplate = value;
					this.SendPropertyChanged("C_ApplyAccountTemplate");
					this.OnC_ApplyAccountTemplateChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="NVarChar(255)")]
		public string C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int NOT NULL")]
		public int C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int NOT NULL")]
		public int C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_IMSI", Storage="_C_IMSI", DbType="NVarChar(255)")]
		public string C_IMSI
		{
			get
			{
				return this._C_IMSI;
			}
			set
			{
				if ((this._C_IMSI != value))
				{
					this.OnC_IMSIChanging(value);
					this.SendPropertyChanging();
					this._C_IMSI = value;
					this.SendPropertyChanged("C_IMSI");
					this.OnC_IMSIChanged();
				}
			}
		}
		
		[Column(Name="c_MSISDN", Storage="_C_MSISDN", DbType="NVarChar(255)")]
		public string C_MSISDN
		{
			get
			{
				return this._C_MSISDN;
			}
			set
			{
				if ((this._C_MSISDN != value))
				{
					this.OnC_MSISDNChanging(value);
					this.SendPropertyChanging();
					this._C_MSISDN = value;
					this.SendPropertyChanged("C_MSISDN");
					this.OnC_MSISDNChanged();
				}
			}
		}
		
		[Column(Name="c_MIN", Storage="_C_MIN", DbType="NVarChar(255)")]
		public string C_MIN
		{
			get
			{
				return this._C_MIN;
			}
			set
			{
				if ((this._C_MIN != value))
				{
					this.OnC_MINChanging(value);
					this.SendPropertyChanging();
					this._C_MIN = value;
					this.SendPropertyChanged("C_MIN");
					this.OnC_MINChanged();
				}
			}
		}
		
		[Column(Name="c_MDN", Storage="_C_MDN", DbType="NVarChar(255)")]
		public string C_MDN
		{
			get
			{
				return this._C_MDN;
			}
			set
			{
				if ((this._C_MDN != value))
				{
					this.OnC_MDNChanging(value);
					this.SendPropertyChanging();
					this._C_MDN = value;
					this.SendPropertyChanged("C_MDN");
					this.OnC_MDNChanged();
				}
			}
		}
		
		[Column(Name="c_CellIdentity", Storage="_C_CellIdentity", DbType="Int")]
		public System.Nullable<int> C_CellIdentity
		{
			get
			{
				return this._C_CellIdentity;
			}
			set
			{
				if ((this._C_CellIdentity != value))
				{
					this.OnC_CellIdentityChanging(value);
					this.SendPropertyChanging();
					this._C_CellIdentity = value;
					this.SendPropertyChanged("C_CellIdentity");
					this.OnC_CellIdentityChanged();
				}
			}
		}
		
		[Column(Name="c_HomeBID", Storage="_C_HomeBID", DbType="Int")]
		public System.Nullable<int> C_HomeBID
		{
			get
			{
				return this._C_HomeBID;
			}
			set
			{
				if ((this._C_HomeBID != value))
				{
					this.OnC_HomeBIDChanging(value);
					this.SendPropertyChanging();
					this._C_HomeBID = value;
					this.SendPropertyChanged("C_HomeBID");
					this.OnC_HomeBIDChanged();
				}
			}
		}
		
		[Column(Name="c_HomeLocationDesc", Storage="_C_HomeLocationDesc", DbType="NVarChar(255)")]
		public string C_HomeLocationDesc
		{
			get
			{
				return this._C_HomeLocationDesc;
			}
			set
			{
				if ((this._C_HomeLocationDesc != value))
				{
					this.OnC_HomeLocationDescChanging(value);
					this.SendPropertyChanging();
					this._C_HomeLocationDesc = value;
					this.SendPropertyChanged("C_HomeLocationDesc");
					this.OnC_HomeLocationDescChanged();
				}
			}
		}
		
		[Column(Name="c_IMEI", Storage="_C_IMEI", DbType="NVarChar(255)")]
		public string C_IMEI
		{
			get
			{
				return this._C_IMEI;
			}
			set
			{
				if ((this._C_IMEI != value))
				{
					this.OnC_IMEIChanging(value);
					this.SendPropertyChanging();
					this._C_IMEI = value;
					this.SendPropertyChanged("C_IMEI");
					this.OnC_IMEIChanged();
				}
			}
		}
		
		[Column(Name="c_ESN", Storage="_C_ESN", DbType="NVarChar(255)")]
		public string C_ESN
		{
			get
			{
				return this._C_ESN;
			}
			set
			{
				if ((this._C_ESN != value))
				{
					this.OnC_ESNChanging(value);
					this.SendPropertyChanging();
					this._C_ESN = value;
					this.SendPropertyChanged("C_ESN");
					this.OnC_ESNChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_GSMCreateAndConnect")]
	public partial class T_svc_GSMCreateAndConnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_operation;
		
		private string _C_username;
		
		private string _C_password_;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C__Accountid;
		
		private System.Nullable<System.DateTime> _C_accountstartdate;
		
		private int _C_AccountStatus;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ApplyAccountTemplate;
		
		private string _C_transactioncookie;
		
		private string _C_ancestorAccount;
		
		private string _C_ancestorAccountNS;
		
		private System.Nullable<int> _C_ancestorAccountID;
		
		private System.Nullable<System.DateTime> _C_hierarchy_startdate;
		
		private string _C_folder;
		
		private string _C_pricelist;
		
		private string _C_currency;
		
		private int _C_Language;
		
		private int _C_timezoneID;
		
		private string _C_IMSI;
		
		private string _C_MSISDN;
		
		private string _C_MIN;
		
		private string _C_MDN;
		
		private System.Nullable<int> _C_CellIdentity;
		
		private System.Nullable<int> _C_HomeBID;
		
		private string _C_HomeLocationDesc;
		
		private string _C_IMEI;
		
		private string _C_ESN;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_password_Changing(string value);
    partial void OnC_password_Changed();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_accountstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstartdateChanged();
    partial void OnC_AccountStatusChanging(int value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ApplyAccountTemplateChanging(string value);
    partial void OnC_ApplyAccountTemplateChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_ancestorAccountChanging(string value);
    partial void OnC_ancestorAccountChanged();
    partial void OnC_ancestorAccountNSChanging(string value);
    partial void OnC_ancestorAccountNSChanged();
    partial void OnC_ancestorAccountIDChanging(System.Nullable<int> value);
    partial void OnC_ancestorAccountIDChanged();
    partial void OnC_hierarchy_startdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_hierarchy_startdateChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(string value);
    partial void OnC_currencyChanged();
    partial void OnC_LanguageChanging(int value);
    partial void OnC_LanguageChanged();
    partial void OnC_timezoneIDChanging(int value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_IMSIChanging(string value);
    partial void OnC_IMSIChanged();
    partial void OnC_MSISDNChanging(string value);
    partial void OnC_MSISDNChanged();
    partial void OnC_MINChanging(string value);
    partial void OnC_MINChanged();
    partial void OnC_MDNChanging(string value);
    partial void OnC_MDNChanged();
    partial void OnC_CellIdentityChanging(System.Nullable<int> value);
    partial void OnC_CellIdentityChanged();
    partial void OnC_HomeBIDChanging(System.Nullable<int> value);
    partial void OnC_HomeBIDChanged();
    partial void OnC_HomeLocationDescChanging(string value);
    partial void OnC_HomeLocationDescChanged();
    partial void OnC_IMEIChanging(string value);
    partial void OnC_IMEIChanged();
    partial void OnC_ESNChanging(string value);
    partial void OnC_ESNChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_GSMCreateAndConnect()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_password_", Storage="_C_password_", DbType="NVarChar(510) NOT NULL", CanBeNull=false)]
		public string C_password_
		{
			get
			{
				return this._C_password_;
			}
			set
			{
				if ((this._C_password_ != value))
				{
					this.OnC_password_Changing(value);
					this.SendPropertyChanging();
					this._C_password_ = value;
					this.SendPropertyChanged("C_password_");
					this.OnC_password_Changed();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_accountstartdate", Storage="_C_accountstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstartdate
		{
			get
			{
				return this._C_accountstartdate;
			}
			set
			{
				if ((this._C_accountstartdate != value))
				{
					this.OnC_accountstartdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstartdate = value;
					this.SendPropertyChanged("C_accountstartdate");
					this.OnC_accountstartdateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int NOT NULL")]
		public int C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyAccountTemplate", Storage="_C_ApplyAccountTemplate", DbType="Char(1)")]
		public string C_ApplyAccountTemplate
		{
			get
			{
				return this._C_ApplyAccountTemplate;
			}
			set
			{
				if ((this._C_ApplyAccountTemplate != value))
				{
					this.OnC_ApplyAccountTemplateChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyAccountTemplate = value;
					this.SendPropertyChanged("C_ApplyAccountTemplate");
					this.OnC_ApplyAccountTemplateChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccount", Storage="_C_ancestorAccount", DbType="NVarChar(255)")]
		public string C_ancestorAccount
		{
			get
			{
				return this._C_ancestorAccount;
			}
			set
			{
				if ((this._C_ancestorAccount != value))
				{
					this.OnC_ancestorAccountChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccount = value;
					this.SendPropertyChanged("C_ancestorAccount");
					this.OnC_ancestorAccountChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountNS", Storage="_C_ancestorAccountNS", DbType="NVarChar(255)")]
		public string C_ancestorAccountNS
		{
			get
			{
				return this._C_ancestorAccountNS;
			}
			set
			{
				if ((this._C_ancestorAccountNS != value))
				{
					this.OnC_ancestorAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountNS = value;
					this.SendPropertyChanged("C_ancestorAccountNS");
					this.OnC_ancestorAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountID", Storage="_C_ancestorAccountID", DbType="Int")]
		public System.Nullable<int> C_ancestorAccountID
		{
			get
			{
				return this._C_ancestorAccountID;
			}
			set
			{
				if ((this._C_ancestorAccountID != value))
				{
					this.OnC_ancestorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountID = value;
					this.SendPropertyChanged("C_ancestorAccountID");
					this.OnC_ancestorAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_startdate", Storage="_C_hierarchy_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_hierarchy_startdate
		{
			get
			{
				return this._C_hierarchy_startdate;
			}
			set
			{
				if ((this._C_hierarchy_startdate != value))
				{
					this.OnC_hierarchy_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_startdate = value;
					this.SendPropertyChanged("C_hierarchy_startdate");
					this.OnC_hierarchy_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="NVarChar(255)")]
		public string C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int NOT NULL")]
		public int C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int NOT NULL")]
		public int C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_IMSI", Storage="_C_IMSI", DbType="NVarChar(255)")]
		public string C_IMSI
		{
			get
			{
				return this._C_IMSI;
			}
			set
			{
				if ((this._C_IMSI != value))
				{
					this.OnC_IMSIChanging(value);
					this.SendPropertyChanging();
					this._C_IMSI = value;
					this.SendPropertyChanged("C_IMSI");
					this.OnC_IMSIChanged();
				}
			}
		}
		
		[Column(Name="c_MSISDN", Storage="_C_MSISDN", DbType="NVarChar(255)")]
		public string C_MSISDN
		{
			get
			{
				return this._C_MSISDN;
			}
			set
			{
				if ((this._C_MSISDN != value))
				{
					this.OnC_MSISDNChanging(value);
					this.SendPropertyChanging();
					this._C_MSISDN = value;
					this.SendPropertyChanged("C_MSISDN");
					this.OnC_MSISDNChanged();
				}
			}
		}
		
		[Column(Name="c_MIN", Storage="_C_MIN", DbType="NVarChar(255)")]
		public string C_MIN
		{
			get
			{
				return this._C_MIN;
			}
			set
			{
				if ((this._C_MIN != value))
				{
					this.OnC_MINChanging(value);
					this.SendPropertyChanging();
					this._C_MIN = value;
					this.SendPropertyChanged("C_MIN");
					this.OnC_MINChanged();
				}
			}
		}
		
		[Column(Name="c_MDN", Storage="_C_MDN", DbType="NVarChar(255)")]
		public string C_MDN
		{
			get
			{
				return this._C_MDN;
			}
			set
			{
				if ((this._C_MDN != value))
				{
					this.OnC_MDNChanging(value);
					this.SendPropertyChanging();
					this._C_MDN = value;
					this.SendPropertyChanged("C_MDN");
					this.OnC_MDNChanged();
				}
			}
		}
		
		[Column(Name="c_CellIdentity", Storage="_C_CellIdentity", DbType="Int")]
		public System.Nullable<int> C_CellIdentity
		{
			get
			{
				return this._C_CellIdentity;
			}
			set
			{
				if ((this._C_CellIdentity != value))
				{
					this.OnC_CellIdentityChanging(value);
					this.SendPropertyChanging();
					this._C_CellIdentity = value;
					this.SendPropertyChanged("C_CellIdentity");
					this.OnC_CellIdentityChanged();
				}
			}
		}
		
		[Column(Name="c_HomeBID", Storage="_C_HomeBID", DbType="Int")]
		public System.Nullable<int> C_HomeBID
		{
			get
			{
				return this._C_HomeBID;
			}
			set
			{
				if ((this._C_HomeBID != value))
				{
					this.OnC_HomeBIDChanging(value);
					this.SendPropertyChanging();
					this._C_HomeBID = value;
					this.SendPropertyChanged("C_HomeBID");
					this.OnC_HomeBIDChanged();
				}
			}
		}
		
		[Column(Name="c_HomeLocationDesc", Storage="_C_HomeLocationDesc", DbType="NVarChar(255)")]
		public string C_HomeLocationDesc
		{
			get
			{
				return this._C_HomeLocationDesc;
			}
			set
			{
				if ((this._C_HomeLocationDesc != value))
				{
					this.OnC_HomeLocationDescChanging(value);
					this.SendPropertyChanging();
					this._C_HomeLocationDesc = value;
					this.SendPropertyChanged("C_HomeLocationDesc");
					this.OnC_HomeLocationDescChanged();
				}
			}
		}
		
		[Column(Name="c_IMEI", Storage="_C_IMEI", DbType="NVarChar(255)")]
		public string C_IMEI
		{
			get
			{
				return this._C_IMEI;
			}
			set
			{
				if ((this._C_IMEI != value))
				{
					this.OnC_IMEIChanging(value);
					this.SendPropertyChanging();
					this._C_IMEI = value;
					this.SendPropertyChanged("C_IMEI");
					this.OnC_IMEIChanged();
				}
			}
		}
		
		[Column(Name="c_ESN", Storage="_C_ESN", DbType="NVarChar(255)")]
		public string C_ESN
		{
			get
			{
				return this._C_ESN;
			}
			set
			{
				if ((this._C_ESN != value))
				{
					this.OnC_ESNChanging(value);
					this.SendPropertyChanging();
					this._C_ESN = value;
					this.SendPropertyChanged("C_ESN");
					this.OnC_ESNChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_GSMDisconnect")]
	public partial class T_svc_GSMDisconnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_operation;
		
		private string _C_username;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C__Accountid;
		
		private System.DateTime _C_disconnect_time;
		
		private string _C_transactioncookie;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_disconnect_timeChanging(System.DateTime value);
    partial void OnC_disconnect_timeChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_GSMDisconnect()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255)")]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255)")]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_disconnect_time", Storage="_C_disconnect_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_disconnect_time
		{
			get
			{
				return this._C_disconnect_time;
			}
			set
			{
				if ((this._C_disconnect_time != value))
				{
					this.OnC_disconnect_timeChanging(value);
					this.SendPropertyChanging();
					this._C_disconnect_time = value;
					this.SendPropertyChanged("C_disconnect_time");
					this.OnC_disconnect_timeChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_GSMUpdate")]
	public partial class T_svc_GSMUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_operation;
		
		private string _C_username;
		
		private string _C_password_;
		
		private string _C_name_space;
		
		private System.Nullable<int> _C__Accountid;
		
		private System.Nullable<System.DateTime> _C_accountstartdate;
		
		private System.Nullable<System.DateTime> _C_accountenddate;
		
		private System.Nullable<int> _C_AccountStatus;
		
		private string _C_folder;
		
		private string _C_pricelist;
		
		private string _C_currency;
		
		private System.Nullable<int> _C_Language;
		
		private System.Nullable<int> _C_timezoneID;
		
		private string _C_transactioncookie;
		
		private string _C_IMSI;
		
		private string _C_MSISDN;
		
		private string _C_MIN;
		
		private string _C_MDN;
		
		private System.Nullable<int> _C_CellIdentity;
		
		private System.Nullable<int> _C_HomeBID;
		
		private string _C_HomeLocationDesc;
		
		private string _C_IMEI;
		
		private string _C_ESN;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_operationChanging(int value);
    partial void OnC_operationChanged();
    partial void OnC_usernameChanging(string value);
    partial void OnC_usernameChanged();
    partial void OnC_password_Changing(string value);
    partial void OnC_password_Changed();
    partial void OnC_name_spaceChanging(string value);
    partial void OnC_name_spaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_accountstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstartdateChanged();
    partial void OnC_accountenddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountenddateChanged();
    partial void OnC_AccountStatusChanging(System.Nullable<int> value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(string value);
    partial void OnC_currencyChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_timezoneIDChanging(System.Nullable<int> value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_IMSIChanging(string value);
    partial void OnC_IMSIChanged();
    partial void OnC_MSISDNChanging(string value);
    partial void OnC_MSISDNChanged();
    partial void OnC_MINChanging(string value);
    partial void OnC_MINChanged();
    partial void OnC_MDNChanging(string value);
    partial void OnC_MDNChanged();
    partial void OnC_CellIdentityChanging(System.Nullable<int> value);
    partial void OnC_CellIdentityChanged();
    partial void OnC_HomeBIDChanging(System.Nullable<int> value);
    partial void OnC_HomeBIDChanged();
    partial void OnC_HomeLocationDescChanging(string value);
    partial void OnC_HomeLocationDescChanged();
    partial void OnC_IMEIChanging(string value);
    partial void OnC_IMEIChanged();
    partial void OnC_ESNChanging(string value);
    partial void OnC_ESNChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_GSMUpdate()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_operation", Storage="_C_operation", DbType="Int NOT NULL")]
		public int C_operation
		{
			get
			{
				return this._C_operation;
			}
			set
			{
				if ((this._C_operation != value))
				{
					this.OnC_operationChanging(value);
					this.SendPropertyChanging();
					this._C_operation = value;
					this.SendPropertyChanged("C_operation");
					this.OnC_operationChanged();
				}
			}
		}
		
		[Column(Name="c_username", Storage="_C_username", DbType="NVarChar(255)")]
		public string C_username
		{
			get
			{
				return this._C_username;
			}
			set
			{
				if ((this._C_username != value))
				{
					this.OnC_usernameChanging(value);
					this.SendPropertyChanging();
					this._C_username = value;
					this.SendPropertyChanged("C_username");
					this.OnC_usernameChanged();
				}
			}
		}
		
		[Column(Name="c_password_", Storage="_C_password_", DbType="NVarChar(510)")]
		public string C_password_
		{
			get
			{
				return this._C_password_;
			}
			set
			{
				if ((this._C_password_ != value))
				{
					this.OnC_password_Changing(value);
					this.SendPropertyChanging();
					this._C_password_ = value;
					this.SendPropertyChanged("C_password_");
					this.OnC_password_Changed();
				}
			}
		}
		
		[Column(Name="c_name_space", Storage="_C_name_space", DbType="NVarChar(255)")]
		public string C_name_space
		{
			get
			{
				return this._C_name_space;
			}
			set
			{
				if ((this._C_name_space != value))
				{
					this.OnC_name_spaceChanging(value);
					this.SendPropertyChanging();
					this._C_name_space = value;
					this.SendPropertyChanged("C_name_space");
					this.OnC_name_spaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_accountstartdate", Storage="_C_accountstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstartdate
		{
			get
			{
				return this._C_accountstartdate;
			}
			set
			{
				if ((this._C_accountstartdate != value))
				{
					this.OnC_accountstartdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstartdate = value;
					this.SendPropertyChanged("C_accountstartdate");
					this.OnC_accountstartdateChanged();
				}
			}
		}
		
		[Column(Name="c_accountenddate", Storage="_C_accountenddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountenddate
		{
			get
			{
				return this._C_accountenddate;
			}
			set
			{
				if ((this._C_accountenddate != value))
				{
					this.OnC_accountenddateChanging(value);
					this.SendPropertyChanging();
					this._C_accountenddate = value;
					this.SendPropertyChanged("C_accountenddate");
					this.OnC_accountenddateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int")]
		public System.Nullable<int> C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="NVarChar(255)")]
		public string C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int")]
		public System.Nullable<int> C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_IMSI", Storage="_C_IMSI", DbType="NVarChar(255)")]
		public string C_IMSI
		{
			get
			{
				return this._C_IMSI;
			}
			set
			{
				if ((this._C_IMSI != value))
				{
					this.OnC_IMSIChanging(value);
					this.SendPropertyChanging();
					this._C_IMSI = value;
					this.SendPropertyChanged("C_IMSI");
					this.OnC_IMSIChanged();
				}
			}
		}
		
		[Column(Name="c_MSISDN", Storage="_C_MSISDN", DbType="NVarChar(255)")]
		public string C_MSISDN
		{
			get
			{
				return this._C_MSISDN;
			}
			set
			{
				if ((this._C_MSISDN != value))
				{
					this.OnC_MSISDNChanging(value);
					this.SendPropertyChanging();
					this._C_MSISDN = value;
					this.SendPropertyChanged("C_MSISDN");
					this.OnC_MSISDNChanged();
				}
			}
		}
		
		[Column(Name="c_MIN", Storage="_C_MIN", DbType="NVarChar(255)")]
		public string C_MIN
		{
			get
			{
				return this._C_MIN;
			}
			set
			{
				if ((this._C_MIN != value))
				{
					this.OnC_MINChanging(value);
					this.SendPropertyChanging();
					this._C_MIN = value;
					this.SendPropertyChanged("C_MIN");
					this.OnC_MINChanged();
				}
			}
		}
		
		[Column(Name="c_MDN", Storage="_C_MDN", DbType="NVarChar(255)")]
		public string C_MDN
		{
			get
			{
				return this._C_MDN;
			}
			set
			{
				if ((this._C_MDN != value))
				{
					this.OnC_MDNChanging(value);
					this.SendPropertyChanging();
					this._C_MDN = value;
					this.SendPropertyChanged("C_MDN");
					this.OnC_MDNChanged();
				}
			}
		}
		
		[Column(Name="c_CellIdentity", Storage="_C_CellIdentity", DbType="Int")]
		public System.Nullable<int> C_CellIdentity
		{
			get
			{
				return this._C_CellIdentity;
			}
			set
			{
				if ((this._C_CellIdentity != value))
				{
					this.OnC_CellIdentityChanging(value);
					this.SendPropertyChanging();
					this._C_CellIdentity = value;
					this.SendPropertyChanged("C_CellIdentity");
					this.OnC_CellIdentityChanged();
				}
			}
		}
		
		[Column(Name="c_HomeBID", Storage="_C_HomeBID", DbType="Int")]
		public System.Nullable<int> C_HomeBID
		{
			get
			{
				return this._C_HomeBID;
			}
			set
			{
				if ((this._C_HomeBID != value))
				{
					this.OnC_HomeBIDChanging(value);
					this.SendPropertyChanging();
					this._C_HomeBID = value;
					this.SendPropertyChanged("C_HomeBID");
					this.OnC_HomeBIDChanged();
				}
			}
		}
		
		[Column(Name="c_HomeLocationDesc", Storage="_C_HomeLocationDesc", DbType="NVarChar(255)")]
		public string C_HomeLocationDesc
		{
			get
			{
				return this._C_HomeLocationDesc;
			}
			set
			{
				if ((this._C_HomeLocationDesc != value))
				{
					this.OnC_HomeLocationDescChanging(value);
					this.SendPropertyChanging();
					this._C_HomeLocationDesc = value;
					this.SendPropertyChanged("C_HomeLocationDesc");
					this.OnC_HomeLocationDescChanged();
				}
			}
		}
		
		[Column(Name="c_IMEI", Storage="_C_IMEI", DbType="NVarChar(255)")]
		public string C_IMEI
		{
			get
			{
				return this._C_IMEI;
			}
			set
			{
				if ((this._C_IMEI != value))
				{
					this.OnC_IMEIChanging(value);
					this.SendPropertyChanging();
					this._C_IMEI = value;
					this.SendPropertyChanged("C_IMEI");
					this.OnC_IMEIChanged();
				}
			}
		}
		
		[Column(Name="c_ESN", Storage="_C_ESN", DbType="NVarChar(255)")]
		public string C_ESN
		{
			get
			{
				return this._C_ESN;
			}
			set
			{
				if ((this._C_ESN != value))
				{
					this.OnC_ESNChanging(value);
					this.SendPropertyChanging();
					this._C_ESN = value;
					this.SendPropertyChanged("C_ESN");
					this.OnC_ESNChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_Login")]
	public partial class T_svc_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_UserName;
		
		private string _C_Password_;
		
		private string _C_Namespace;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_UserNameChanging(string value);
    partial void OnC_UserNameChanged();
    partial void OnC_Password_Changing(string value);
    partial void OnC_Password_Changed();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_Login()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_UserName", Storage="_C_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_UserName
		{
			get
			{
				return this._C_UserName;
			}
			set
			{
				if ((this._C_UserName != value))
				{
					this.OnC_UserNameChanging(value);
					this.SendPropertyChanging();
					this._C_UserName = value;
					this.SendPropertyChanged("C_UserName");
					this.OnC_UserNameChanged();
				}
			}
		}
		
		[Column(Name="c_Password_", Storage="_C_Password_", DbType="NVarChar(510) NOT NULL", CanBeNull=false)]
		public string C_Password_
		{
			get
			{
				return this._C_Password_;
			}
			set
			{
				if ((this._C_Password_ != value))
				{
					this.OnC_Password_Changing(value);
					this.SendPropertyChanging();
					this._C_Password_ = value;
					this.SendPropertyChanged("C_Password_");
					this.OnC_Password_Changed();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_MetraTax")]
	public partial class T_svc_MetraTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_TransactionTime;
		
		private string _C_AccountId;
		
		private int _C_NumUnits;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_TransactionTimeChanging(System.DateTime value);
    partial void OnC_TransactionTimeChanged();
    partial void OnC_AccountIdChanging(string value);
    partial void OnC_AccountIdChanged();
    partial void OnC_NumUnitsChanging(int value);
    partial void OnC_NumUnitsChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_MetraTax()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_TransactionTime", Storage="_C_TransactionTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_TransactionTime
		{
			get
			{
				return this._C_TransactionTime;
			}
			set
			{
				if ((this._C_TransactionTime != value))
				{
					this.OnC_TransactionTimeChanging(value);
					this.SendPropertyChanging();
					this._C_TransactionTime = value;
					this.SendPropertyChanged("C_TransactionTime");
					this.OnC_TransactionTimeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountId", Storage="_C_AccountId", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountId
		{
			get
			{
				return this._C_AccountId;
			}
			set
			{
				if ((this._C_AccountId != value))
				{
					this.OnC_AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_AccountId = value;
					this.SendPropertyChanged("C_AccountId");
					this.OnC_AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnits", Storage="_C_NumUnits", DbType="Int NOT NULL")]
		public int C_NumUnits
		{
			get
			{
				return this._C_NumUnits;
			}
			set
			{
				if ((this._C_NumUnits != value))
				{
					this.OnC_NumUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnits = value;
					this.SendPropertyChanged("C_NumUnits");
					this.OnC_NumUnitsChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_movietickets")]
	public partial class T_svc_movietickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private decimal _C_ticketspurchased;
		
		private System.DateTime _C_transactiontime;
		
		private string _C_moviename;
		
		private decimal _C_popcorns;
		
		private string _C_payer;
		
		private string _C_transactionID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ticketspurchasedChanging(decimal value);
    partial void OnC_ticketspurchasedChanged();
    partial void OnC_transactiontimeChanging(System.DateTime value);
    partial void OnC_transactiontimeChanged();
    partial void OnC_movienameChanging(string value);
    partial void OnC_movienameChanged();
    partial void OnC_popcornsChanging(decimal value);
    partial void OnC_popcornsChanged();
    partial void OnC_payerChanging(string value);
    partial void OnC_payerChanged();
    partial void OnC_transactionIDChanging(string value);
    partial void OnC_transactionIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_movietickets()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ticketspurchased", Storage="_C_ticketspurchased", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ticketspurchased
		{
			get
			{
				return this._C_ticketspurchased;
			}
			set
			{
				if ((this._C_ticketspurchased != value))
				{
					this.OnC_ticketspurchasedChanging(value);
					this.SendPropertyChanging();
					this._C_ticketspurchased = value;
					this.SendPropertyChanged("C_ticketspurchased");
					this.OnC_ticketspurchasedChanged();
				}
			}
		}
		
		[Column(Name="c_transactiontime", Storage="_C_transactiontime", DbType="DateTime NOT NULL")]
		public System.DateTime C_transactiontime
		{
			get
			{
				return this._C_transactiontime;
			}
			set
			{
				if ((this._C_transactiontime != value))
				{
					this.OnC_transactiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_transactiontime = value;
					this.SendPropertyChanged("C_transactiontime");
					this.OnC_transactiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_moviename", Storage="_C_moviename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_moviename
		{
			get
			{
				return this._C_moviename;
			}
			set
			{
				if ((this._C_moviename != value))
				{
					this.OnC_movienameChanging(value);
					this.SendPropertyChanging();
					this._C_moviename = value;
					this.SendPropertyChanged("C_moviename");
					this.OnC_movienameChanged();
				}
			}
		}
		
		[Column(Name="c_popcorns", Storage="_C_popcorns", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_popcorns
		{
			get
			{
				return this._C_popcorns;
			}
			set
			{
				if ((this._C_popcorns != value))
				{
					this.OnC_popcornsChanging(value);
					this.SendPropertyChanging();
					this._C_popcorns = value;
					this.SendPropertyChanged("C_popcorns");
					this.OnC_popcornsChanged();
				}
			}
		}
		
		[Column(Name="c_payer", Storage="_C_payer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_payer
		{
			get
			{
				return this._C_payer;
			}
			set
			{
				if ((this._C_payer != value))
				{
					this.OnC_payerChanging(value);
					this.SendPropertyChanging();
					this._C_payer = value;
					this.SendPropertyChanged("C_payer");
					this.OnC_payerChanged();
				}
			}
		}
		
		[Column(Name="c_transactionID", Storage="_C_transactionID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_transactionID
		{
			get
			{
				return this._C_transactionID;
			}
			set
			{
				if ((this._C_transactionID != value))
				{
					this.OnC_transactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_transactionID = value;
					this.SendPropertyChanged("C_transactionID");
					this.OnC_transactionIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_movietickets_temp")]
	public partial class T_svc_movietickets_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private decimal _C_ticketspurchased;
		
		private System.DateTime _C_transactiontime;
		
		private string _C_moviename;
		
		private decimal _C_popcorns;
		
		private System.Nullable<decimal> _C_TotalTickets;
		
		private System.Nullable<decimal> _C_TotalPopcorns;
		
		private System.Nullable<int> _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private System.Nullable<int> _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private System.DateTime _C_OriginalSessionTimestamp;
		
		private long _C__FirstPassID;
		
		private string _C_transactionID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ticketspurchasedChanging(decimal value);
    partial void OnC_ticketspurchasedChanged();
    partial void OnC_transactiontimeChanging(System.DateTime value);
    partial void OnC_transactiontimeChanged();
    partial void OnC_movienameChanging(string value);
    partial void OnC_movienameChanged();
    partial void OnC_popcornsChanging(decimal value);
    partial void OnC_popcornsChanged();
    partial void OnC_TotalTicketsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalTicketsChanged();
    partial void OnC_TotalPopcornsChanging(System.Nullable<decimal> value);
    partial void OnC_TotalPopcornsChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_OriginalSessionTimestampChanging(System.DateTime value);
    partial void OnC_OriginalSessionTimestampChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    partial void OnC_transactionIDChanging(string value);
    partial void OnC_transactionIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_movietickets_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ticketspurchased", Storage="_C_ticketspurchased", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_ticketspurchased
		{
			get
			{
				return this._C_ticketspurchased;
			}
			set
			{
				if ((this._C_ticketspurchased != value))
				{
					this.OnC_ticketspurchasedChanging(value);
					this.SendPropertyChanging();
					this._C_ticketspurchased = value;
					this.SendPropertyChanged("C_ticketspurchased");
					this.OnC_ticketspurchasedChanged();
				}
			}
		}
		
		[Column(Name="c_transactiontime", Storage="_C_transactiontime", DbType="DateTime NOT NULL")]
		public System.DateTime C_transactiontime
		{
			get
			{
				return this._C_transactiontime;
			}
			set
			{
				if ((this._C_transactiontime != value))
				{
					this.OnC_transactiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_transactiontime = value;
					this.SendPropertyChanged("C_transactiontime");
					this.OnC_transactiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_moviename", Storage="_C_moviename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_moviename
		{
			get
			{
				return this._C_moviename;
			}
			set
			{
				if ((this._C_moviename != value))
				{
					this.OnC_movienameChanging(value);
					this.SendPropertyChanging();
					this._C_moviename = value;
					this.SendPropertyChanged("C_moviename");
					this.OnC_movienameChanged();
				}
			}
		}
		
		[Column(Name="c_popcorns", Storage="_C_popcorns", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_popcorns
		{
			get
			{
				return this._C_popcorns;
			}
			set
			{
				if ((this._C_popcorns != value))
				{
					this.OnC_popcornsChanging(value);
					this.SendPropertyChanging();
					this._C_popcorns = value;
					this.SendPropertyChanged("C_popcorns");
					this.OnC_popcornsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalTickets", Storage="_C_TotalTickets", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalTickets
		{
			get
			{
				return this._C_TotalTickets;
			}
			set
			{
				if ((this._C_TotalTickets != value))
				{
					this.OnC_TotalTicketsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalTickets = value;
					this.SendPropertyChanged("C_TotalTickets");
					this.OnC_TotalTicketsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalPopcorns", Storage="_C_TotalPopcorns", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_TotalPopcorns
		{
			get
			{
				return this._C_TotalPopcorns;
			}
			set
			{
				if ((this._C_TotalPopcorns != value))
				{
					this.OnC_TotalPopcornsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalPopcorns = value;
					this.SendPropertyChanged("C_TotalPopcorns");
					this.OnC_TotalPopcornsChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_OriginalSessionTimestamp", Storage="_C_OriginalSessionTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_OriginalSessionTimestamp
		{
			get
			{
				return this._C_OriginalSessionTimestamp;
			}
			set
			{
				if ((this._C_OriginalSessionTimestamp != value))
				{
					this.OnC_OriginalSessionTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_OriginalSessionTimestamp = value;
					this.SendPropertyChanged("C_OriginalSessionTimestamp");
					this.OnC_OriginalSessionTimestampChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		[Column(Name="c_transactionID", Storage="_C_transactionID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_transactionID
		{
			get
			{
				return this._C_transactionID;
			}
			set
			{
				if ((this._C_transactionID != value))
				{
					this.OnC_transactionIDChanging(value);
					this.SendPropertyChanging();
					this._C_transactionID = value;
					this.SendPropertyChanged("C_transactionID");
					this.OnC_transactionIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_MultiBucketDiscount")]
	public partial class T_svc_MultiBucketDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C_dummyProperty;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_MultiBucketDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_MultiBucketPricing")]
	public partial class T_svc_MultiBucketPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C_dummyProperty;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_MultiBucketPricing()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_NonRecurringCharge")]
	public partial class T_svc_NonRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_NRCEventType;
		
		private System.DateTime _C_NRCIntervalStart;
		
		private System.DateTime _C_NRCIntervalEnd;
		
		private System.DateTime _C_NRCIntervalSubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_NRCIntervalSubscriptionEnd;
		
		private int _C__AccountID;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private int _C__SubscriptionID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_NRCEventTypeChanging(int value);
    partial void OnC_NRCEventTypeChanged();
    partial void OnC_NRCIntervalStartChanging(System.DateTime value);
    partial void OnC_NRCIntervalStartChanged();
    partial void OnC_NRCIntervalEndChanging(System.DateTime value);
    partial void OnC_NRCIntervalEndChanged();
    partial void OnC_NRCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_NRCIntervalSubscriptionStartChanged();
    partial void OnC_NRCIntervalSubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_NRCIntervalSubscriptionEndChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_NonRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_NRCEventType", Storage="_C_NRCEventType", DbType="Int NOT NULL")]
		public int C_NRCEventType
		{
			get
			{
				return this._C_NRCEventType;
			}
			set
			{
				if ((this._C_NRCEventType != value))
				{
					this.OnC_NRCEventTypeChanging(value);
					this.SendPropertyChanging();
					this._C_NRCEventType = value;
					this.SendPropertyChanged("C_NRCEventType");
					this.OnC_NRCEventTypeChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalStart", Storage="_C_NRCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalStart
		{
			get
			{
				return this._C_NRCIntervalStart;
			}
			set
			{
				if ((this._C_NRCIntervalStart != value))
				{
					this.OnC_NRCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalStart = value;
					this.SendPropertyChanged("C_NRCIntervalStart");
					this.OnC_NRCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalEnd", Storage="_C_NRCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalEnd
		{
			get
			{
				return this._C_NRCIntervalEnd;
			}
			set
			{
				if ((this._C_NRCIntervalEnd != value))
				{
					this.OnC_NRCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalEnd = value;
					this.SendPropertyChanged("C_NRCIntervalEnd");
					this.OnC_NRCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalSubscriptionStart", Storage="_C_NRCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_NRCIntervalSubscriptionStart
		{
			get
			{
				return this._C_NRCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_NRCIntervalSubscriptionStart != value))
				{
					this.OnC_NRCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_NRCIntervalSubscriptionStart");
					this.OnC_NRCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_NRCIntervalSubscriptionEnd", Storage="_C_NRCIntervalSubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_NRCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_NRCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_NRCIntervalSubscriptionEnd != value))
				{
					this.OnC_NRCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_NRCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_NRCIntervalSubscriptionEnd");
					this.OnC_NRCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_NonStandardCharge")]
	public partial class T_svc_NonStandardCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C__AccountId;
		
		private System.Nullable<int> _C_NumUnits;
		
		private decimal _C_Rate;
		
		private int _C_IssuerAccountId;
		
		private string _C_AccountName;
		
		private string _C_AccountNameSpace;
		
		private string _C_GLCode;
		
		private string _C_Description;
		
		private int _C_ReasonCode;
		
		private string _C__Currency;
		
		private System.Nullable<decimal> _C_AdditionalRate;
		
		private System.Nullable<int> _C_AdditionalCode;
		
		private string _C_ResolveWithAccountIDFlag;
		
		private string _C_Status;
		
		private string _C_ExternalChargeId;
		
		private long _C_InternalChargeId;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.DateTime _C_IssueTime;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIdChanging(System.Nullable<int> value);
    partial void OnC__AccountIdChanged();
    partial void OnC_NumUnitsChanging(System.Nullable<int> value);
    partial void OnC_NumUnitsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_IssuerAccountIdChanging(int value);
    partial void OnC_IssuerAccountIdChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_AccountNameSpaceChanging(string value);
    partial void OnC_AccountNameSpaceChanged();
    partial void OnC_GLCodeChanging(string value);
    partial void OnC_GLCodeChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ReasonCodeChanging(int value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC__CurrencyChanging(string value);
    partial void OnC__CurrencyChanged();
    partial void OnC_AdditionalRateChanging(System.Nullable<decimal> value);
    partial void OnC_AdditionalRateChanged();
    partial void OnC_AdditionalCodeChanging(System.Nullable<int> value);
    partial void OnC_AdditionalCodeChanged();
    partial void OnC_ResolveWithAccountIDFlagChanging(string value);
    partial void OnC_ResolveWithAccountIDFlagChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_ExternalChargeIdChanging(string value);
    partial void OnC_ExternalChargeIdChanged();
    partial void OnC_InternalChargeIdChanging(long value);
    partial void OnC_InternalChargeIdChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC_IssueTimeChanging(System.DateTime value);
    partial void OnC_IssueTimeChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_NonStandardCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountId", Storage="_C__AccountId", DbType="Int")]
		public System.Nullable<int> C__AccountId
		{
			get
			{
				return this._C__AccountId;
			}
			set
			{
				if ((this._C__AccountId != value))
				{
					this.OnC__AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C__AccountId = value;
					this.SendPropertyChanged("C__AccountId");
					this.OnC__AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnits", Storage="_C_NumUnits", DbType="Int")]
		public System.Nullable<int> C_NumUnits
		{
			get
			{
				return this._C_NumUnits;
			}
			set
			{
				if ((this._C_NumUnits != value))
				{
					this.OnC_NumUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnits = value;
					this.SendPropertyChanged("C_NumUnits");
					this.OnC_NumUnitsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_IssuerAccountId", Storage="_C_IssuerAccountId", DbType="Int NOT NULL")]
		public int C_IssuerAccountId
		{
			get
			{
				return this._C_IssuerAccountId;
			}
			set
			{
				if ((this._C_IssuerAccountId != value))
				{
					this.OnC_IssuerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_IssuerAccountId = value;
					this.SendPropertyChanged("C_IssuerAccountId");
					this.OnC_IssuerAccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255)")]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_AccountNameSpace", Storage="_C_AccountNameSpace", DbType="NVarChar(255)")]
		public string C_AccountNameSpace
		{
			get
			{
				return this._C_AccountNameSpace;
			}
			set
			{
				if ((this._C_AccountNameSpace != value))
				{
					this.OnC_AccountNameSpaceChanging(value);
					this.SendPropertyChanging();
					this._C_AccountNameSpace = value;
					this.SendPropertyChanged("C_AccountNameSpace");
					this.OnC_AccountNameSpaceChanged();
				}
			}
		}
		
		[Column(Name="c_GLCode", Storage="_C_GLCode", DbType="NVarChar(255)")]
		public string C_GLCode
		{
			get
			{
				return this._C_GLCode;
			}
			set
			{
				if ((this._C_GLCode != value))
				{
					this.OnC_GLCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GLCode = value;
					this.SendPropertyChanged("C_GLCode");
					this.OnC_GLCodeChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int NOT NULL")]
		public int C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c__Currency", Storage="_C__Currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Currency
		{
			get
			{
				return this._C__Currency;
			}
			set
			{
				if ((this._C__Currency != value))
				{
					this.OnC__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C__Currency = value;
					this.SendPropertyChanged("C__Currency");
					this.OnC__CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalRate", Storage="_C_AdditionalRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_AdditionalRate
		{
			get
			{
				return this._C_AdditionalRate;
			}
			set
			{
				if ((this._C_AdditionalRate != value))
				{
					this.OnC_AdditionalRateChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalRate = value;
					this.SendPropertyChanged("C_AdditionalRate");
					this.OnC_AdditionalRateChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalCode", Storage="_C_AdditionalCode", DbType="Int")]
		public System.Nullable<int> C_AdditionalCode
		{
			get
			{
				return this._C_AdditionalCode;
			}
			set
			{
				if ((this._C_AdditionalCode != value))
				{
					this.OnC_AdditionalCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalCode = value;
					this.SendPropertyChanged("C_AdditionalCode");
					this.OnC_AdditionalCodeChanged();
				}
			}
		}
		
		[Column(Name="c_ResolveWithAccountIDFlag", Storage="_C_ResolveWithAccountIDFlag", DbType="Char(1)")]
		public string C_ResolveWithAccountIDFlag
		{
			get
			{
				return this._C_ResolveWithAccountIDFlag;
			}
			set
			{
				if ((this._C_ResolveWithAccountIDFlag != value))
				{
					this.OnC_ResolveWithAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._C_ResolveWithAccountIDFlag = value;
					this.SendPropertyChanged("C_ResolveWithAccountIDFlag");
					this.OnC_ResolveWithAccountIDFlagChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_ExternalChargeId", Storage="_C_ExternalChargeId", DbType="NVarChar(255)")]
		public string C_ExternalChargeId
		{
			get
			{
				return this._C_ExternalChargeId;
			}
			set
			{
				if ((this._C_ExternalChargeId != value))
				{
					this.OnC_ExternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_ExternalChargeId = value;
					this.SendPropertyChanged("C_ExternalChargeId");
					this.OnC_ExternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_InternalChargeId", Storage="_C_InternalChargeId", DbType="BigInt NOT NULL")]
		public long C_InternalChargeId
		{
			get
			{
				return this._C_InternalChargeId;
			}
			set
			{
				if ((this._C_InternalChargeId != value))
				{
					this.OnC_InternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_InternalChargeId = value;
					this.SendPropertyChanged("C_InternalChargeId");
					this.OnC_InternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_IssueTime", Storage="_C_IssueTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_IssueTime
		{
			get
			{
				return this._C_IssueTime;
			}
			set
			{
				if ((this._C_IssueTime != value))
				{
					this.OnC_IssueTimeChanging(value);
					this.SendPropertyChanging();
					this._C_IssueTime = value;
					this.SendPropertyChanged("C_IssueTime");
					this.OnC_IssueTimeChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_NonStandardChargeRequest")]
	public partial class T_svc_NonStandardChargeRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C__AccountId;
		
		private System.Nullable<int> _C_NumUnits;
		
		private decimal _C_Rate;
		
		private int _C_IssuerAccountId;
		
		private string _C_AccountName;
		
		private string _C_AccountNameSpace;
		
		private string _C_GLCode;
		
		private string _C_Description;
		
		private int _C_ReasonCode;
		
		private System.Nullable<int> _C_AdditionalCode;
		
		private string _C__Currency;
		
		private System.Nullable<decimal> _C_AdditionalRate;
		
		private string _C_ResolveWithAccountIDFlag;
		
		private string _C_Status;
		
		private string _C_ExternalChargeId;
		
		private long _C_InternalChargeId;
		
		private System.Nullable<int> _C_GuideIntervalID;
		
		private System.DateTime _C_IssueTime;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIdChanging(System.Nullable<int> value);
    partial void OnC__AccountIdChanged();
    partial void OnC_NumUnitsChanging(System.Nullable<int> value);
    partial void OnC_NumUnitsChanged();
    partial void OnC_RateChanging(decimal value);
    partial void OnC_RateChanged();
    partial void OnC_IssuerAccountIdChanging(int value);
    partial void OnC_IssuerAccountIdChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_AccountNameSpaceChanging(string value);
    partial void OnC_AccountNameSpaceChanged();
    partial void OnC_GLCodeChanging(string value);
    partial void OnC_GLCodeChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_ReasonCodeChanging(int value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_AdditionalCodeChanging(System.Nullable<int> value);
    partial void OnC_AdditionalCodeChanged();
    partial void OnC__CurrencyChanging(string value);
    partial void OnC__CurrencyChanged();
    partial void OnC_AdditionalRateChanging(System.Nullable<decimal> value);
    partial void OnC_AdditionalRateChanged();
    partial void OnC_ResolveWithAccountIDFlagChanging(string value);
    partial void OnC_ResolveWithAccountIDFlagChanged();
    partial void OnC_StatusChanging(string value);
    partial void OnC_StatusChanged();
    partial void OnC_ExternalChargeIdChanging(string value);
    partial void OnC_ExternalChargeIdChanged();
    partial void OnC_InternalChargeIdChanging(long value);
    partial void OnC_InternalChargeIdChanged();
    partial void OnC_GuideIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GuideIntervalIDChanged();
    partial void OnC_IssueTimeChanging(System.DateTime value);
    partial void OnC_IssueTimeChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_NonStandardChargeRequest()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountId", Storage="_C__AccountId", DbType="Int")]
		public System.Nullable<int> C__AccountId
		{
			get
			{
				return this._C__AccountId;
			}
			set
			{
				if ((this._C__AccountId != value))
				{
					this.OnC__AccountIdChanging(value);
					this.SendPropertyChanging();
					this._C__AccountId = value;
					this.SendPropertyChanged("C__AccountId");
					this.OnC__AccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_NumUnits", Storage="_C_NumUnits", DbType="Int")]
		public System.Nullable<int> C_NumUnits
		{
			get
			{
				return this._C_NumUnits;
			}
			set
			{
				if ((this._C_NumUnits != value))
				{
					this.OnC_NumUnitsChanging(value);
					this.SendPropertyChanging();
					this._C_NumUnits = value;
					this.SendPropertyChanged("C_NumUnits");
					this.OnC_NumUnitsChanged();
				}
			}
		}
		
		[Column(Name="c_Rate", Storage="_C_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Rate
		{
			get
			{
				return this._C_Rate;
			}
			set
			{
				if ((this._C_Rate != value))
				{
					this.OnC_RateChanging(value);
					this.SendPropertyChanging();
					this._C_Rate = value;
					this.SendPropertyChanged("C_Rate");
					this.OnC_RateChanged();
				}
			}
		}
		
		[Column(Name="c_IssuerAccountId", Storage="_C_IssuerAccountId", DbType="Int NOT NULL")]
		public int C_IssuerAccountId
		{
			get
			{
				return this._C_IssuerAccountId;
			}
			set
			{
				if ((this._C_IssuerAccountId != value))
				{
					this.OnC_IssuerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._C_IssuerAccountId = value;
					this.SendPropertyChanged("C_IssuerAccountId");
					this.OnC_IssuerAccountIdChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255)")]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_AccountNameSpace", Storage="_C_AccountNameSpace", DbType="NVarChar(255)")]
		public string C_AccountNameSpace
		{
			get
			{
				return this._C_AccountNameSpace;
			}
			set
			{
				if ((this._C_AccountNameSpace != value))
				{
					this.OnC_AccountNameSpaceChanging(value);
					this.SendPropertyChanging();
					this._C_AccountNameSpace = value;
					this.SendPropertyChanged("C_AccountNameSpace");
					this.OnC_AccountNameSpaceChanged();
				}
			}
		}
		
		[Column(Name="c_GLCode", Storage="_C_GLCode", DbType="NVarChar(255)")]
		public string C_GLCode
		{
			get
			{
				return this._C_GLCode;
			}
			set
			{
				if ((this._C_GLCode != value))
				{
					this.OnC_GLCodeChanging(value);
					this.SendPropertyChanging();
					this._C_GLCode = value;
					this.SendPropertyChanged("C_GLCode");
					this.OnC_GLCodeChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int NOT NULL")]
		public int C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalCode", Storage="_C_AdditionalCode", DbType="Int")]
		public System.Nullable<int> C_AdditionalCode
		{
			get
			{
				return this._C_AdditionalCode;
			}
			set
			{
				if ((this._C_AdditionalCode != value))
				{
					this.OnC_AdditionalCodeChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalCode = value;
					this.SendPropertyChanged("C_AdditionalCode");
					this.OnC_AdditionalCodeChanged();
				}
			}
		}
		
		[Column(Name="c__Currency", Storage="_C__Currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C__Currency
		{
			get
			{
				return this._C__Currency;
			}
			set
			{
				if ((this._C__Currency != value))
				{
					this.OnC__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._C__Currency = value;
					this.SendPropertyChanged("C__Currency");
					this.OnC__CurrencyChanged();
				}
			}
		}
		
		[Column(Name="c_AdditionalRate", Storage="_C_AdditionalRate", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_AdditionalRate
		{
			get
			{
				return this._C_AdditionalRate;
			}
			set
			{
				if ((this._C_AdditionalRate != value))
				{
					this.OnC_AdditionalRateChanging(value);
					this.SendPropertyChanging();
					this._C_AdditionalRate = value;
					this.SendPropertyChanged("C_AdditionalRate");
					this.OnC_AdditionalRateChanged();
				}
			}
		}
		
		[Column(Name="c_ResolveWithAccountIDFlag", Storage="_C_ResolveWithAccountIDFlag", DbType="Char(1)")]
		public string C_ResolveWithAccountIDFlag
		{
			get
			{
				return this._C_ResolveWithAccountIDFlag;
			}
			set
			{
				if ((this._C_ResolveWithAccountIDFlag != value))
				{
					this.OnC_ResolveWithAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._C_ResolveWithAccountIDFlag = value;
					this.SendPropertyChanged("C_ResolveWithAccountIDFlag");
					this.OnC_ResolveWithAccountIDFlagChanged();
				}
			}
		}
		
		[Column(Name="c_Status", Storage="_C_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Status
		{
			get
			{
				return this._C_Status;
			}
			set
			{
				if ((this._C_Status != value))
				{
					this.OnC_StatusChanging(value);
					this.SendPropertyChanging();
					this._C_Status = value;
					this.SendPropertyChanged("C_Status");
					this.OnC_StatusChanged();
				}
			}
		}
		
		[Column(Name="c_ExternalChargeId", Storage="_C_ExternalChargeId", DbType="NVarChar(255)")]
		public string C_ExternalChargeId
		{
			get
			{
				return this._C_ExternalChargeId;
			}
			set
			{
				if ((this._C_ExternalChargeId != value))
				{
					this.OnC_ExternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_ExternalChargeId = value;
					this.SendPropertyChanged("C_ExternalChargeId");
					this.OnC_ExternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_InternalChargeId", Storage="_C_InternalChargeId", DbType="BigInt NOT NULL")]
		public long C_InternalChargeId
		{
			get
			{
				return this._C_InternalChargeId;
			}
			set
			{
				if ((this._C_InternalChargeId != value))
				{
					this.OnC_InternalChargeIdChanging(value);
					this.SendPropertyChanging();
					this._C_InternalChargeId = value;
					this.SendPropertyChanged("C_InternalChargeId");
					this.OnC_InternalChargeIdChanged();
				}
			}
		}
		
		[Column(Name="c_GuideIntervalID", Storage="_C_GuideIntervalID", DbType="Int")]
		public System.Nullable<int> C_GuideIntervalID
		{
			get
			{
				return this._C_GuideIntervalID;
			}
			set
			{
				if ((this._C_GuideIntervalID != value))
				{
					this.OnC_GuideIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GuideIntervalID = value;
					this.SendPropertyChanged("C_GuideIntervalID");
					this.OnC_GuideIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c_IssueTime", Storage="_C_IssueTime", DbType="DateTime NOT NULL")]
		public System.DateTime C_IssueTime
		{
			get
			{
				return this._C_IssueTime;
			}
			set
			{
				if ((this._C_IssueTime != value))
				{
					this.OnC_IssueTimeChanging(value);
					this.SendPropertyChanging();
					this._C_IssueTime = value;
					this.SendPropertyChanged("C_IssueTime");
					this.OnC_IssueTimeChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_Payment")]
	public partial class T_svc_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Payer;
		
		private string _C_Namespace;
		
		private System.Nullable<int> _C__AccountID;
		
		private System.Nullable<decimal> _C__Amount;
		
		private string _C_Description;
		
		private System.Nullable<System.DateTime> _C_EventDate;
		
		private string _C_Source;
		
		private System.Nullable<int> _C_ReasonCode;
		
		private int _C_PaymentMethod;
		
		private System.Nullable<int> _C_CCType;
		
		private string _C_CheckOrCardNumber;
		
		private string _C_ReferenceID;
		
		private System.Nullable<int> _C_TargetInterval;
		
		private System.Nullable<System.DateTime> _C_SessionTime;
		
		private string _C_PaymentTxnID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC__AmountChanging(System.Nullable<decimal> value);
    partial void OnC__AmountChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_EventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EventDateChanged();
    partial void OnC_SourceChanging(string value);
    partial void OnC_SourceChanged();
    partial void OnC_ReasonCodeChanging(System.Nullable<int> value);
    partial void OnC_ReasonCodeChanged();
    partial void OnC_PaymentMethodChanging(int value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_CCTypeChanging(System.Nullable<int> value);
    partial void OnC_CCTypeChanged();
    partial void OnC_CheckOrCardNumberChanging(string value);
    partial void OnC_CheckOrCardNumberChanged();
    partial void OnC_ReferenceIDChanging(string value);
    partial void OnC_ReferenceIDChanged();
    partial void OnC_TargetIntervalChanging(System.Nullable<int> value);
    partial void OnC_TargetIntervalChanged();
    partial void OnC_SessionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SessionTimeChanged();
    partial void OnC_PaymentTxnIDChanging(string value);
    partial void OnC_PaymentTxnIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_Payment()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255)")]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255)")]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_EventDate", Storage="_C_EventDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EventDate
		{
			get
			{
				return this._C_EventDate;
			}
			set
			{
				if ((this._C_EventDate != value))
				{
					this.OnC_EventDateChanging(value);
					this.SendPropertyChanging();
					this._C_EventDate = value;
					this.SendPropertyChanged("C_EventDate");
					this.OnC_EventDateChanged();
				}
			}
		}
		
		[Column(Name="c_Source", Storage="_C_Source", DbType="NVarChar(255)")]
		public string C_Source
		{
			get
			{
				return this._C_Source;
			}
			set
			{
				if ((this._C_Source != value))
				{
					this.OnC_SourceChanging(value);
					this.SendPropertyChanging();
					this._C_Source = value;
					this.SendPropertyChanged("C_Source");
					this.OnC_SourceChanged();
				}
			}
		}
		
		[Column(Name="c_ReasonCode", Storage="_C_ReasonCode", DbType="Int")]
		public System.Nullable<int> C_ReasonCode
		{
			get
			{
				return this._C_ReasonCode;
			}
			set
			{
				if ((this._C_ReasonCode != value))
				{
					this.OnC_ReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._C_ReasonCode = value;
					this.SendPropertyChanged("C_ReasonCode");
					this.OnC_ReasonCodeChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int NOT NULL")]
		public int C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_CCType", Storage="_C_CCType", DbType="Int")]
		public System.Nullable<int> C_CCType
		{
			get
			{
				return this._C_CCType;
			}
			set
			{
				if ((this._C_CCType != value))
				{
					this.OnC_CCTypeChanging(value);
					this.SendPropertyChanging();
					this._C_CCType = value;
					this.SendPropertyChanged("C_CCType");
					this.OnC_CCTypeChanged();
				}
			}
		}
		
		[Column(Name="c_CheckOrCardNumber", Storage="_C_CheckOrCardNumber", DbType="NVarChar(255)")]
		public string C_CheckOrCardNumber
		{
			get
			{
				return this._C_CheckOrCardNumber;
			}
			set
			{
				if ((this._C_CheckOrCardNumber != value))
				{
					this.OnC_CheckOrCardNumberChanging(value);
					this.SendPropertyChanging();
					this._C_CheckOrCardNumber = value;
					this.SendPropertyChanged("C_CheckOrCardNumber");
					this.OnC_CheckOrCardNumberChanged();
				}
			}
		}
		
		[Column(Name="c_ReferenceID", Storage="_C_ReferenceID", DbType="NVarChar(255)")]
		public string C_ReferenceID
		{
			get
			{
				return this._C_ReferenceID;
			}
			set
			{
				if ((this._C_ReferenceID != value))
				{
					this.OnC_ReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._C_ReferenceID = value;
					this.SendPropertyChanged("C_ReferenceID");
					this.OnC_ReferenceIDChanged();
				}
			}
		}
		
		[Column(Name="c_TargetInterval", Storage="_C_TargetInterval", DbType="Int")]
		public System.Nullable<int> C_TargetInterval
		{
			get
			{
				return this._C_TargetInterval;
			}
			set
			{
				if ((this._C_TargetInterval != value))
				{
					this.OnC_TargetIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_TargetInterval = value;
					this.SendPropertyChanged("C_TargetInterval");
					this.OnC_TargetIntervalChanged();
				}
			}
		}
		
		[Column(Name="c_SessionTime", Storage="_C_SessionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SessionTime
		{
			get
			{
				return this._C_SessionTime;
			}
			set
			{
				if ((this._C_SessionTime != value))
				{
					this.OnC_SessionTimeChanging(value);
					this.SendPropertyChanging();
					this._C_SessionTime = value;
					this.SendPropertyChanged("C_SessionTime");
					this.OnC_SessionTimeChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentTxnID", Storage="_C_PaymentTxnID", DbType="NVarChar(255)")]
		public string C_PaymentTxnID
		{
			get
			{
				return this._C_PaymentTxnID;
			}
			set
			{
				if ((this._C_PaymentTxnID != value))
				{
					this.OnC_PaymentTxnIDChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentTxnID = value;
					this.SendPropertyChanged("C_PaymentTxnID");
					this.OnC_PaymentTxnIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_PaymentDetails")]
	public partial class T_svc_PaymentDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Payer;
		
		private string _C_Namespace;
		
		private System.Nullable<int> _C__AccountID;
		
		private string _C_InvoiceNum;
		
		private string _C_PONumber;
		
		private System.Nullable<System.DateTime> _C_InvoiceDate;
		
		private System.Nullable<decimal> _C__Amount;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_PayerChanging(string value);
    partial void OnC_PayerChanged();
    partial void OnC_NamespaceChanging(string value);
    partial void OnC_NamespaceChanged();
    partial void OnC__AccountIDChanging(System.Nullable<int> value);
    partial void OnC__AccountIDChanged();
    partial void OnC_InvoiceNumChanging(string value);
    partial void OnC_InvoiceNumChanged();
    partial void OnC_PONumberChanging(string value);
    partial void OnC_PONumberChanged();
    partial void OnC_InvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_InvoiceDateChanged();
    partial void OnC__AmountChanging(System.Nullable<decimal> value);
    partial void OnC__AmountChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_PaymentDetails()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Payer", Storage="_C_Payer", DbType="NVarChar(255)")]
		public string C_Payer
		{
			get
			{
				return this._C_Payer;
			}
			set
			{
				if ((this._C_Payer != value))
				{
					this.OnC_PayerChanging(value);
					this.SendPropertyChanging();
					this._C_Payer = value;
					this.SendPropertyChanged("C_Payer");
					this.OnC_PayerChanged();
				}
			}
		}
		
		[Column(Name="c_Namespace", Storage="_C_Namespace", DbType="NVarChar(255)")]
		public string C_Namespace
		{
			get
			{
				return this._C_Namespace;
			}
			set
			{
				if ((this._C_Namespace != value))
				{
					this.OnC_NamespaceChanging(value);
					this.SendPropertyChanging();
					this._C_Namespace = value;
					this.SendPropertyChanged("C_Namespace");
					this.OnC_NamespaceChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int")]
		public System.Nullable<int> C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceNum", Storage="_C_InvoiceNum", DbType="NVarChar(255)")]
		public string C_InvoiceNum
		{
			get
			{
				return this._C_InvoiceNum;
			}
			set
			{
				if ((this._C_InvoiceNum != value))
				{
					this.OnC_InvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceNum = value;
					this.SendPropertyChanged("C_InvoiceNum");
					this.OnC_InvoiceNumChanged();
				}
			}
		}
		
		[Column(Name="c_PONumber", Storage="_C_PONumber", DbType="NVarChar(255)")]
		public string C_PONumber
		{
			get
			{
				return this._C_PONumber;
			}
			set
			{
				if ((this._C_PONumber != value))
				{
					this.OnC_PONumberChanging(value);
					this.SendPropertyChanging();
					this._C_PONumber = value;
					this.SendPropertyChanged("C_PONumber");
					this.OnC_PONumberChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceDate", Storage="_C_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_InvoiceDate
		{
			get
			{
				return this._C_InvoiceDate;
			}
			set
			{
				if ((this._C_InvoiceDate != value))
				{
					this.OnC_InvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceDate = value;
					this.SendPropertyChanged("C_InvoiceDate");
					this.OnC_InvoiceDateChanged();
				}
			}
		}
		
		[Column(Name="c__Amount", Storage="_C__Amount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C__Amount
		{
			get
			{
				return this._C__Amount;
			}
			set
			{
				if ((this._C__Amount != value))
				{
					this.OnC__AmountChanging(value);
					this.SendPropertyChanging();
					this._C__Amount = value;
					this.SendPropertyChanged("C__Amount");
					this.OnC__AmountChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_PercentDiscount")]
	public partial class T_svc_PercentDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PayingAccount;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalStart;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalEnd;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_Qualifier;
		
		private System.Nullable<decimal> _C_Target;
		
		private System.Nullable<int> _C_GroupDiscountPass;
		
		private System.Nullable<int> _C_GroupSubscriptionID;
		
		private string _C_GroupSubscriptionName;
		
		private System.Nullable<decimal> _C_GroupDiscountAmount;
		
		private System.Nullable<decimal> _C_GroupDiscountPercent;
		
		private System.Nullable<decimal> _C_DistributionCounter;
		
		private System.Nullable<int> _C_GroupDiscountIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(System.Nullable<int> value);
    partial void OnC__PayingAccountChanged();
    partial void OnC_BillingIntervalStartChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_QualifierChanging(System.Nullable<decimal> value);
    partial void OnC_QualifierChanged();
    partial void OnC_TargetChanging(System.Nullable<decimal> value);
    partial void OnC_TargetChanged();
    partial void OnC_GroupDiscountPassChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountPassChanged();
    partial void OnC_GroupSubscriptionIDChanging(System.Nullable<int> value);
    partial void OnC_GroupSubscriptionIDChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    partial void OnC_GroupDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountAmountChanged();
    partial void OnC_GroupDiscountPercentChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountPercentChanged();
    partial void OnC_DistributionCounterChanging(System.Nullable<decimal> value);
    partial void OnC_DistributionCounterChanged();
    partial void OnC_GroupDiscountIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_PercentDiscount()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int")]
		public System.Nullable<int> C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_Qualifier", Storage="_C_Qualifier", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Qualifier
		{
			get
			{
				return this._C_Qualifier;
			}
			set
			{
				if ((this._C_Qualifier != value))
				{
					this.OnC_QualifierChanging(value);
					this.SendPropertyChanging();
					this._C_Qualifier = value;
					this.SendPropertyChanged("C_Qualifier");
					this.OnC_QualifierChanged();
				}
			}
		}
		
		[Column(Name="c_Target", Storage="_C_Target", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Target
		{
			get
			{
				return this._C_Target;
			}
			set
			{
				if ((this._C_Target != value))
				{
					this.OnC_TargetChanging(value);
					this.SendPropertyChanging();
					this._C_Target = value;
					this.SendPropertyChanged("C_Target");
					this.OnC_TargetChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPass", Storage="_C_GroupDiscountPass", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountPass
		{
			get
			{
				return this._C_GroupDiscountPass;
			}
			set
			{
				if ((this._C_GroupDiscountPass != value))
				{
					this.OnC_GroupDiscountPassChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPass = value;
					this.SendPropertyChanged("C_GroupDiscountPass");
					this.OnC_GroupDiscountPassChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionID", Storage="_C_GroupSubscriptionID", DbType="Int")]
		public System.Nullable<int> C_GroupSubscriptionID
		{
			get
			{
				return this._C_GroupSubscriptionID;
			}
			set
			{
				if ((this._C_GroupSubscriptionID != value))
				{
					this.OnC_GroupSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionID = value;
					this.SendPropertyChanged("C_GroupSubscriptionID");
					this.OnC_GroupSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(255)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountAmount", Storage="_C_GroupDiscountAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountAmount
		{
			get
			{
				return this._C_GroupDiscountAmount;
			}
			set
			{
				if ((this._C_GroupDiscountAmount != value))
				{
					this.OnC_GroupDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountAmount = value;
					this.SendPropertyChanged("C_GroupDiscountAmount");
					this.OnC_GroupDiscountAmountChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPercent", Storage="_C_GroupDiscountPercent", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountPercent
		{
			get
			{
				return this._C_GroupDiscountPercent;
			}
			set
			{
				if ((this._C_GroupDiscountPercent != value))
				{
					this.OnC_GroupDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPercent = value;
					this.SendPropertyChanged("C_GroupDiscountPercent");
					this.OnC_GroupDiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_DistributionCounter", Storage="_C_DistributionCounter", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DistributionCounter
		{
			get
			{
				return this._C_DistributionCounter;
			}
			set
			{
				if ((this._C_DistributionCounter != value))
				{
					this.OnC_DistributionCounterChanging(value);
					this.SendPropertyChanging();
					this._C_DistributionCounter = value;
					this.SendPropertyChanged("C_DistributionCounter");
					this.OnC_DistributionCounterChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountIntervalID", Storage="_C_GroupDiscountIntervalID", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountIntervalID
		{
			get
			{
				return this._C_GroupDiscountIntervalID;
			}
			set
			{
				if ((this._C_GroupDiscountIntervalID != value))
				{
					this.OnC_GroupDiscountIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountIntervalID = value;
					this.SendPropertyChanged("C_GroupDiscountIntervalID");
					this.OnC_GroupDiscountIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_PercentDiscount_NoCond")]
	public partial class T_svc_PercentDiscount_NoCond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PayingAccount;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalStart;
		
		private System.Nullable<System.DateTime> _C_BillingIntervalEnd;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.DateTime _C_DiscountIntervalStart;
		
		private System.DateTime _C_DiscountIntervalEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private System.DateTime _C_DiscountIntervalSubStart;
		
		private System.DateTime _C_DiscountIntervalSubEnd;
		
		private System.Nullable<decimal> _C_Target;
		
		private System.Nullable<int> _C_GroupDiscountPass;
		
		private System.Nullable<int> _C_GroupSubscriptionID;
		
		private string _C_GroupSubscriptionName;
		
		private System.Nullable<decimal> _C_GroupDiscountAmount;
		
		private System.Nullable<decimal> _C_GroupDiscountPercent;
		
		private System.Nullable<decimal> _C_DistributionCounter;
		
		private System.Nullable<int> _C_GroupDiscountIntervalID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(System.Nullable<int> value);
    partial void OnC__PayingAccountChanged();
    partial void OnC_BillingIntervalStartChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_DiscountIntervalStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalStartChanged();
    partial void OnC_DiscountIntervalEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_DiscountIntervalSubStartChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubStartChanged();
    partial void OnC_DiscountIntervalSubEndChanging(System.DateTime value);
    partial void OnC_DiscountIntervalSubEndChanged();
    partial void OnC_TargetChanging(System.Nullable<decimal> value);
    partial void OnC_TargetChanged();
    partial void OnC_GroupDiscountPassChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountPassChanged();
    partial void OnC_GroupSubscriptionIDChanging(System.Nullable<int> value);
    partial void OnC_GroupSubscriptionIDChanged();
    partial void OnC_GroupSubscriptionNameChanging(string value);
    partial void OnC_GroupSubscriptionNameChanged();
    partial void OnC_GroupDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountAmountChanged();
    partial void OnC_GroupDiscountPercentChanging(System.Nullable<decimal> value);
    partial void OnC_GroupDiscountPercentChanged();
    partial void OnC_DistributionCounterChanging(System.Nullable<decimal> value);
    partial void OnC_DistributionCounterChanged();
    partial void OnC_GroupDiscountIntervalIDChanging(System.Nullable<int> value);
    partial void OnC_GroupDiscountIntervalIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_PercentDiscount_NoCond()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int")]
		public System.Nullable<int> C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalStart", Storage="_C_DiscountIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalStart
		{
			get
			{
				return this._C_DiscountIntervalStart;
			}
			set
			{
				if ((this._C_DiscountIntervalStart != value))
				{
					this.OnC_DiscountIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalStart = value;
					this.SendPropertyChanged("C_DiscountIntervalStart");
					this.OnC_DiscountIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalEnd", Storage="_C_DiscountIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalEnd
		{
			get
			{
				return this._C_DiscountIntervalEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalEnd != value))
				{
					this.OnC_DiscountIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalEnd");
					this.OnC_DiscountIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubStart", Storage="_C_DiscountIntervalSubStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubStart
		{
			get
			{
				return this._C_DiscountIntervalSubStart;
			}
			set
			{
				if ((this._C_DiscountIntervalSubStart != value))
				{
					this.OnC_DiscountIntervalSubStartChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubStart = value;
					this.SendPropertyChanged("C_DiscountIntervalSubStart");
					this.OnC_DiscountIntervalSubStartChanged();
				}
			}
		}
		
		[Column(Name="c_DiscountIntervalSubEnd", Storage="_C_DiscountIntervalSubEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_DiscountIntervalSubEnd
		{
			get
			{
				return this._C_DiscountIntervalSubEnd;
			}
			set
			{
				if ((this._C_DiscountIntervalSubEnd != value))
				{
					this.OnC_DiscountIntervalSubEndChanging(value);
					this.SendPropertyChanging();
					this._C_DiscountIntervalSubEnd = value;
					this.SendPropertyChanged("C_DiscountIntervalSubEnd");
					this.OnC_DiscountIntervalSubEndChanged();
				}
			}
		}
		
		[Column(Name="c_Target", Storage="_C_Target", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_Target
		{
			get
			{
				return this._C_Target;
			}
			set
			{
				if ((this._C_Target != value))
				{
					this.OnC_TargetChanging(value);
					this.SendPropertyChanging();
					this._C_Target = value;
					this.SendPropertyChanged("C_Target");
					this.OnC_TargetChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPass", Storage="_C_GroupDiscountPass", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountPass
		{
			get
			{
				return this._C_GroupDiscountPass;
			}
			set
			{
				if ((this._C_GroupDiscountPass != value))
				{
					this.OnC_GroupDiscountPassChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPass = value;
					this.SendPropertyChanged("C_GroupDiscountPass");
					this.OnC_GroupDiscountPassChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionID", Storage="_C_GroupSubscriptionID", DbType="Int")]
		public System.Nullable<int> C_GroupSubscriptionID
		{
			get
			{
				return this._C_GroupSubscriptionID;
			}
			set
			{
				if ((this._C_GroupSubscriptionID != value))
				{
					this.OnC_GroupSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionID = value;
					this.SendPropertyChanged("C_GroupSubscriptionID");
					this.OnC_GroupSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c_GroupSubscriptionName", Storage="_C_GroupSubscriptionName", DbType="NVarChar(255)")]
		public string C_GroupSubscriptionName
		{
			get
			{
				return this._C_GroupSubscriptionName;
			}
			set
			{
				if ((this._C_GroupSubscriptionName != value))
				{
					this.OnC_GroupSubscriptionNameChanging(value);
					this.SendPropertyChanging();
					this._C_GroupSubscriptionName = value;
					this.SendPropertyChanged("C_GroupSubscriptionName");
					this.OnC_GroupSubscriptionNameChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountAmount", Storage="_C_GroupDiscountAmount", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountAmount
		{
			get
			{
				return this._C_GroupDiscountAmount;
			}
			set
			{
				if ((this._C_GroupDiscountAmount != value))
				{
					this.OnC_GroupDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountAmount = value;
					this.SendPropertyChanged("C_GroupDiscountAmount");
					this.OnC_GroupDiscountAmountChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountPercent", Storage="_C_GroupDiscountPercent", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_GroupDiscountPercent
		{
			get
			{
				return this._C_GroupDiscountPercent;
			}
			set
			{
				if ((this._C_GroupDiscountPercent != value))
				{
					this.OnC_GroupDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountPercent = value;
					this.SendPropertyChanged("C_GroupDiscountPercent");
					this.OnC_GroupDiscountPercentChanged();
				}
			}
		}
		
		[Column(Name="c_DistributionCounter", Storage="_C_DistributionCounter", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DistributionCounter
		{
			get
			{
				return this._C_DistributionCounter;
			}
			set
			{
				if ((this._C_DistributionCounter != value))
				{
					this.OnC_DistributionCounterChanging(value);
					this.SendPropertyChanging();
					this._C_DistributionCounter = value;
					this.SendPropertyChanged("C_DistributionCounter");
					this.OnC_DistributionCounterChanged();
				}
			}
		}
		
		[Column(Name="c_GroupDiscountIntervalID", Storage="_C_GroupDiscountIntervalID", DbType="Int")]
		public System.Nullable<int> C_GroupDiscountIntervalID
		{
			get
			{
				return this._C_GroupDiscountIntervalID;
			}
			set
			{
				if ((this._C_GroupDiscountIntervalID != value))
				{
					this.OnC_GroupDiscountIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C_GroupDiscountIntervalID = value;
					this.SendPropertyChanged("C_GroupDiscountIntervalID");
					this.OnC_GroupDiscountIntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_SingleBucketPricing")]
	public partial class T_svc_SingleBucketPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.Nullable<int> _C_dummyProperty;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_dummyPropertyChanging(System.Nullable<int> value);
    partial void OnC_dummyPropertyChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_SingleBucketPricing()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_dummyProperty", Storage="_C_dummyProperty", DbType="Int")]
		public System.Nullable<int> C_dummyProperty
		{
			get
			{
				return this._C_dummyProperty;
			}
			set
			{
				if ((this._C_dummyProperty != value))
				{
					this.OnC_dummyPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_dummyProperty = value;
					this.SendPropertyChanged("C_dummyProperty");
					this.OnC_dummyPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_smokeaggrcnt")]
	public partial class T_svc_smokeaggrcnt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_smokeaggrcnt()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_smokeaggrcnt_temp")]
	public partial class T_svc_smokeaggrcnt_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private decimal _C_TotalAmount;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private long _C__FirstPassID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_smokeaggrcnt_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_smokeaggrdec")]
	public partial class T_svc_smokeaggrdec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_smokeaggrdec()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_smokeaggrdec_temp")]
	public partial class T_svc_smokeaggrdec_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private System.DateTime _C_EventTimestamp;
		
		private string _C_AccountName;
		
		private string _C_Description;
		
		private decimal _C_TotalAmount;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private long _C__FirstPassID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_EventTimestampChanging(System.DateTime value);
    partial void OnC_EventTimestampChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TotalAmountChanging(decimal value);
    partial void OnC_TotalAmountChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_smokeaggrdec_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_EventTimestamp", Storage="_C_EventTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_EventTimestamp
		{
			get
			{
				return this._C_EventTimestamp;
			}
			set
			{
				if ((this._C_EventTimestamp != value))
				{
					this.OnC_EventTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_EventTimestamp = value;
					this.SendPropertyChanged("C_EventTimestamp");
					this.OnC_EventTimestampChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_TotalAmount", Storage="_C_TotalAmount", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalAmount
		{
			get
			{
				return this._C_TotalAmount;
			}
			set
			{
				if ((this._C_TotalAmount != value))
				{
					this.OnC_TotalAmountChanging(value);
					this.SendPropertyChanging();
					this._C_TotalAmount = value;
					this.SendPropertyChanged("C_TotalAmount");
					this.OnC_TotalAmountChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_SMSService")]
	public partial class T_svc_SMSService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_accountname;
		
		private string _C_message;
		
		private string _C_description;
		
		private string _C_MobileNumber;
		
		private int _C_SMStype;
		
		private string _C_IPAddress;
		
		private string _C_SMSId;
		
		private string _C_TestSubscriptionEntity;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_messageChanging(string value);
    partial void OnC_messageChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_MobileNumberChanging(string value);
    partial void OnC_MobileNumberChanged();
    partial void OnC_SMStypeChanging(int value);
    partial void OnC_SMStypeChanged();
    partial void OnC_IPAddressChanging(string value);
    partial void OnC_IPAddressChanged();
    partial void OnC_SMSIdChanging(string value);
    partial void OnC_SMSIdChanged();
    partial void OnC_TestSubscriptionEntityChanging(string value);
    partial void OnC_TestSubscriptionEntityChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_SMSService()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_message", Storage="_C_message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_message
		{
			get
			{
				return this._C_message;
			}
			set
			{
				if ((this._C_message != value))
				{
					this.OnC_messageChanging(value);
					this.SendPropertyChanging();
					this._C_message = value;
					this.SendPropertyChanged("C_message");
					this.OnC_messageChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255)")]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_MobileNumber", Storage="_C_MobileNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_MobileNumber
		{
			get
			{
				return this._C_MobileNumber;
			}
			set
			{
				if ((this._C_MobileNumber != value))
				{
					this.OnC_MobileNumberChanging(value);
					this.SendPropertyChanging();
					this._C_MobileNumber = value;
					this.SendPropertyChanged("C_MobileNumber");
					this.OnC_MobileNumberChanged();
				}
			}
		}
		
		[Column(Name="c_SMStype", Storage="_C_SMStype", DbType="Int NOT NULL")]
		public int C_SMStype
		{
			get
			{
				return this._C_SMStype;
			}
			set
			{
				if ((this._C_SMStype != value))
				{
					this.OnC_SMStypeChanging(value);
					this.SendPropertyChanging();
					this._C_SMStype = value;
					this.SendPropertyChanged("C_SMStype");
					this.OnC_SMStypeChanged();
				}
			}
		}
		
		[Column(Name="c_IPAddress", Storage="_C_IPAddress", DbType="NVarChar(255)")]
		public string C_IPAddress
		{
			get
			{
				return this._C_IPAddress;
			}
			set
			{
				if ((this._C_IPAddress != value))
				{
					this.OnC_IPAddressChanging(value);
					this.SendPropertyChanging();
					this._C_IPAddress = value;
					this.SendPropertyChanged("C_IPAddress");
					this.OnC_IPAddressChanged();
				}
			}
		}
		
		[Column(Name="c_SMSId", Storage="_C_SMSId", DbType="NVarChar(255)")]
		public string C_SMSId
		{
			get
			{
				return this._C_SMSId;
			}
			set
			{
				if ((this._C_SMSId != value))
				{
					this.OnC_SMSIdChanging(value);
					this.SendPropertyChanging();
					this._C_SMSId = value;
					this.SendPropertyChanged("C_SMSId");
					this.OnC_SMSIdChanged();
				}
			}
		}
		
		[Column(Name="c_TestSubscriptionEntity", Storage="_C_TestSubscriptionEntity", DbType="NVarChar(255)")]
		public string C_TestSubscriptionEntity
		{
			get
			{
				return this._C_TestSubscriptionEntity;
			}
			set
			{
				if ((this._C_TestSubscriptionEntity != value))
				{
					this.OnC_TestSubscriptionEntityChanging(value);
					this.SendPropertyChanging();
					this._C_TestSubscriptionEntity = value;
					this.SendPropertyChanged("C_TestSubscriptionEntity");
					this.OnC_TestSubscriptionEntityChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songdownloads")]
	public partial class T_svc_songdownloads : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_starttime;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_starttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_starttimeChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songdownloads()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_starttime", Storage="_C_starttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_starttime
		{
			get
			{
				return this._C_starttime;
			}
			set
			{
				if ((this._C_starttime != value))
				{
					this.OnC_starttimeChanging(value);
					this.SendPropertyChanging();
					this._C_starttime = value;
					this.SendPropertyChanged("C_starttime");
					this.OnC_starttimeChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songdownloads_temp")]
	public partial class T_svc_songdownloads_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_starttime;
		
		private decimal _C_TotalSongs;
		
		private decimal _C_TotalBytes;
		
		private System.DateTime _C_OriginalSessionTimestamp;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private long _C__FirstPassID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_starttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_starttimeChanged();
    partial void OnC_TotalSongsChanging(decimal value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_TotalBytesChanging(decimal value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_OriginalSessionTimestampChanging(System.DateTime value);
    partial void OnC_OriginalSessionTimestampChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songdownloads_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_starttime", Storage="_C_starttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_starttime
		{
			get
			{
				return this._C_starttime;
			}
			set
			{
				if ((this._C_starttime != value))
				{
					this.OnC_starttimeChanging(value);
					this.SendPropertyChanging();
					this._C_starttime = value;
					this.SendPropertyChanged("C_starttime");
					this.OnC_starttimeChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_OriginalSessionTimestamp", Storage="_C_OriginalSessionTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_OriginalSessionTimestamp
		{
			get
			{
				return this._C_OriginalSessionTimestamp;
			}
			set
			{
				if ((this._C_OriginalSessionTimestamp != value))
				{
					this.OnC_OriginalSessionTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_OriginalSessionTimestamp = value;
					this.SendPropertyChanged("C_OriginalSessionTimestamp");
					this.OnC_OriginalSessionTimestampChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songsession")]
	public partial class T_svc_songsession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_Duration;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_DurationChanging(decimal value);
    partial void OnC_DurationChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songsession()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songsession_temp")]
	public partial class T_svc_songsession_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_Duration;
		
		private string _C_accountname;
		
		private System.Nullable<System.DateTime> _C_StartTime;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private System.DateTime _C_OriginalSessionTimestamp;
		
		private long _C__FirstPassID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_DurationChanging(decimal value);
    partial void OnC_DurationChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_StartTimeChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_OriginalSessionTimestampChanging(System.DateTime value);
    partial void OnC_OriginalSessionTimestampChanged();
    partial void OnC__FirstPassIDChanging(long value);
    partial void OnC__FirstPassIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songsession_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Duration", Storage="_C_Duration", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Duration
		{
			get
			{
				return this._C_Duration;
			}
			set
			{
				if ((this._C_Duration != value))
				{
					this.OnC_DurationChanging(value);
					this.SendPropertyChanging();
					this._C_Duration = value;
					this.SendPropertyChanged("C_Duration");
					this.OnC_DurationChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_StartTime", Storage="_C_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_StartTime
		{
			get
			{
				return this._C_StartTime;
			}
			set
			{
				if ((this._C_StartTime != value))
				{
					this.OnC_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._C_StartTime = value;
					this.SendPropertyChanged("C_StartTime");
					this.OnC_StartTimeChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_OriginalSessionTimestamp", Storage="_C_OriginalSessionTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_OriginalSessionTimestamp
		{
			get
			{
				return this._C_OriginalSessionTimestamp;
			}
			set
			{
				if ((this._C_OriginalSessionTimestamp != value))
				{
					this.OnC_OriginalSessionTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_OriginalSessionTimestamp = value;
					this.SendPropertyChanged("C_OriginalSessionTimestamp");
					this.OnC_OriginalSessionTimestampChanged();
				}
			}
		}
		
		[Column(Name="c__FirstPassID", Storage="_C__FirstPassID", DbType="BigInt NOT NULL")]
		public long C__FirstPassID
		{
			get
			{
				return this._C__FirstPassID;
			}
			set
			{
				if ((this._C__FirstPassID != value))
				{
					this.OnC__FirstPassIDChanging(value);
					this.SendPropertyChanging();
					this._C__FirstPassID = value;
					this.SendPropertyChanged("C__FirstPassID");
					this.OnC__FirstPassIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songsessionchild")]
	public partial class T_svc_songsessionchild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songsessionchild()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_songsessionchild_temp")]
	public partial class T_svc_songsessionchild_temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private decimal _C_songs;
		
		private decimal _C_mp3bytes;
		
		private decimal _C_wavbytes;
		
		private string _C_accountname;
		
		private decimal _C_TotalSongs;
		
		private decimal _C_TotalBytes;
		
		private System.DateTime _C_OriginalSessionTimestamp;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private System.Nullable<int> _C__ProductOfferingID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_songsChanging(decimal value);
    partial void OnC_songsChanged();
    partial void OnC_mp3bytesChanging(decimal value);
    partial void OnC_mp3bytesChanged();
    partial void OnC_wavbytesChanging(decimal value);
    partial void OnC_wavbytesChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_TotalSongsChanging(decimal value);
    partial void OnC_TotalSongsChanged();
    partial void OnC_TotalBytesChanging(decimal value);
    partial void OnC_TotalBytesChanged();
    partial void OnC_OriginalSessionTimestampChanging(System.DateTime value);
    partial void OnC_OriginalSessionTimestampChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PriceableItemInstanceIDChanging(System.Nullable<int> value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(System.Nullable<int> value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_songsessionchild_temp()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_songs", Storage="_C_songs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_songs
		{
			get
			{
				return this._C_songs;
			}
			set
			{
				if ((this._C_songs != value))
				{
					this.OnC_songsChanging(value);
					this.SendPropertyChanging();
					this._C_songs = value;
					this.SendPropertyChanged("C_songs");
					this.OnC_songsChanged();
				}
			}
		}
		
		[Column(Name="c_mp3bytes", Storage="_C_mp3bytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_mp3bytes
		{
			get
			{
				return this._C_mp3bytes;
			}
			set
			{
				if ((this._C_mp3bytes != value))
				{
					this.OnC_mp3bytesChanging(value);
					this.SendPropertyChanging();
					this._C_mp3bytes = value;
					this.SendPropertyChanged("C_mp3bytes");
					this.OnC_mp3bytesChanged();
				}
			}
		}
		
		[Column(Name="c_wavbytes", Storage="_C_wavbytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_wavbytes
		{
			get
			{
				return this._C_wavbytes;
			}
			set
			{
				if ((this._C_wavbytes != value))
				{
					this.OnC_wavbytesChanging(value);
					this.SendPropertyChanging();
					this._C_wavbytes = value;
					this.SendPropertyChanged("C_wavbytes");
					this.OnC_wavbytesChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_TotalSongs", Storage="_C_TotalSongs", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalSongs
		{
			get
			{
				return this._C_TotalSongs;
			}
			set
			{
				if ((this._C_TotalSongs != value))
				{
					this.OnC_TotalSongsChanging(value);
					this.SendPropertyChanging();
					this._C_TotalSongs = value;
					this.SendPropertyChanged("C_TotalSongs");
					this.OnC_TotalSongsChanged();
				}
			}
		}
		
		[Column(Name="c_TotalBytes", Storage="_C_TotalBytes", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_TotalBytes
		{
			get
			{
				return this._C_TotalBytes;
			}
			set
			{
				if ((this._C_TotalBytes != value))
				{
					this.OnC_TotalBytesChanging(value);
					this.SendPropertyChanging();
					this._C_TotalBytes = value;
					this.SendPropertyChanged("C_TotalBytes");
					this.OnC_TotalBytesChanged();
				}
			}
		}
		
		[Column(Name="c_OriginalSessionTimestamp", Storage="_C_OriginalSessionTimestamp", DbType="DateTime NOT NULL")]
		public System.DateTime C_OriginalSessionTimestamp
		{
			get
			{
				return this._C_OriginalSessionTimestamp;
			}
			set
			{
				if ((this._C_OriginalSessionTimestamp != value))
				{
					this.OnC_OriginalSessionTimestampChanging(value);
					this.SendPropertyChanging();
					this._C_OriginalSessionTimestamp = value;
					this.SendPropertyChanged("C_OriginalSessionTimestamp");
					this.OnC_OriginalSessionTimestampChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int")]
		public System.Nullable<int> C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int")]
		public System.Nullable<int> C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_stocks")]
	public partial class T_svc_stocks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_symbol;
		
		private int _C_quantity;
		
		private System.DateTime _C_ordertime;
		
		private System.Nullable<System.DateTime> _C_executiontime;
		
		private string _C_tx_batchid;
		
		private System.Nullable<decimal> _C_price;
		
		private string _C_transactionid;
		
		private string _C_broker;
		
		private string _C_accountname;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_symbolChanging(string value);
    partial void OnC_symbolChanged();
    partial void OnC_quantityChanging(int value);
    partial void OnC_quantityChanged();
    partial void OnC_ordertimeChanging(System.DateTime value);
    partial void OnC_ordertimeChanged();
    partial void OnC_executiontimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_executiontimeChanged();
    partial void OnC_tx_batchidChanging(string value);
    partial void OnC_tx_batchidChanged();
    partial void OnC_priceChanging(System.Nullable<decimal> value);
    partial void OnC_priceChanged();
    partial void OnC_transactionidChanging(string value);
    partial void OnC_transactionidChanged();
    partial void OnC_brokerChanging(string value);
    partial void OnC_brokerChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_stocks()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_symbol", Storage="_C_symbol", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_symbol
		{
			get
			{
				return this._C_symbol;
			}
			set
			{
				if ((this._C_symbol != value))
				{
					this.OnC_symbolChanging(value);
					this.SendPropertyChanging();
					this._C_symbol = value;
					this.SendPropertyChanged("C_symbol");
					this.OnC_symbolChanged();
				}
			}
		}
		
		[Column(Name="c_quantity", Storage="_C_quantity", DbType="Int NOT NULL")]
		public int C_quantity
		{
			get
			{
				return this._C_quantity;
			}
			set
			{
				if ((this._C_quantity != value))
				{
					this.OnC_quantityChanging(value);
					this.SendPropertyChanging();
					this._C_quantity = value;
					this.SendPropertyChanged("C_quantity");
					this.OnC_quantityChanged();
				}
			}
		}
		
		[Column(Name="c_ordertime", Storage="_C_ordertime", DbType="DateTime NOT NULL")]
		public System.DateTime C_ordertime
		{
			get
			{
				return this._C_ordertime;
			}
			set
			{
				if ((this._C_ordertime != value))
				{
					this.OnC_ordertimeChanging(value);
					this.SendPropertyChanging();
					this._C_ordertime = value;
					this.SendPropertyChanged("C_ordertime");
					this.OnC_ordertimeChanged();
				}
			}
		}
		
		[Column(Name="c_executiontime", Storage="_C_executiontime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_executiontime
		{
			get
			{
				return this._C_executiontime;
			}
			set
			{
				if ((this._C_executiontime != value))
				{
					this.OnC_executiontimeChanging(value);
					this.SendPropertyChanging();
					this._C_executiontime = value;
					this.SendPropertyChanged("C_executiontime");
					this.OnC_executiontimeChanged();
				}
			}
		}
		
		[Column(Name="c_tx_batchid", Storage="_C_tx_batchid", DbType="NVarChar(255)")]
		public string C_tx_batchid
		{
			get
			{
				return this._C_tx_batchid;
			}
			set
			{
				if ((this._C_tx_batchid != value))
				{
					this.OnC_tx_batchidChanging(value);
					this.SendPropertyChanging();
					this._C_tx_batchid = value;
					this.SendPropertyChanged("C_tx_batchid");
					this.OnC_tx_batchidChanged();
				}
			}
		}
		
		[Column(Name="c_price", Storage="_C_price", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_price
		{
			get
			{
				return this._C_price;
			}
			set
			{
				if ((this._C_price != value))
				{
					this.OnC_priceChanging(value);
					this.SendPropertyChanging();
					this._C_price = value;
					this.SendPropertyChanged("C_price");
					this.OnC_priceChanged();
				}
			}
		}
		
		[Column(Name="c_transactionid", Storage="_C_transactionid", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_transactionid
		{
			get
			{
				return this._C_transactionid;
			}
			set
			{
				if ((this._C_transactionid != value))
				{
					this.OnC_transactionidChanging(value);
					this.SendPropertyChanging();
					this._C_transactionid = value;
					this.SendPropertyChanged("C_transactionid");
					this.OnC_transactionidChanged();
				}
			}
		}
		
		[Column(Name="c_broker", Storage="_C_broker", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_broker
		{
			get
			{
				return this._C_broker;
			}
			set
			{
				if ((this._C_broker != value))
				{
					this.OnC_brokerChanging(value);
					this.SendPropertyChanging();
					this._C_broker = value;
					this.SendPropertyChanged("C_broker");
					this.OnC_brokerChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_SystemAccountCreation")]
	public partial class T_svc_SystemAccountCreation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private int _C_ActionType;
		
		private string _C_AccountType;
		
		private int _C_Operation;
		
		private string _C_UserName;
		
		private string _C_Password_;
		
		private string _C_Name_Space;
		
		private System.Nullable<int> _C__Accountid;
		
		private System.Nullable<System.DateTime> _C_accountstartdate;
		
		private System.Nullable<System.DateTime> _C_accountenddate;
		
		private System.Nullable<int> _C_AccountStatus;
		
		private string _C_ApplyDefaultSecurityPolicy;
		
		private string _C_ApplyAccountTemplate;
		
		private string _C_TruncateOldSubscriptions;
		
		private string _C_transactioncookie;
		
		private string _C_ancestorAccount;
		
		private string _C_ancestorAccountNS;
		
		private System.Nullable<int> _C_ancestorAccountID;
		
		private System.Nullable<System.DateTime> _C_hierarchy_startdate;
		
		private System.Nullable<System.DateTime> _C_hierarchy_enddate;
		
		private string _C_billable;
		
		private string _C_folder;
		
		private string _C_pricelist;
		
		private string _C_currency;
		
		private System.Nullable<int> _C_Language;
		
		private string _C_taxexempt;
		
		private string _C_TaxExemptID;
		
		private System.Nullable<int> _C_timezoneID;
		
		private System.Nullable<decimal> _C_timezoneoffset;
		
		private System.Nullable<int> _C_PaymentMethod;
		
		private System.Nullable<int> _C_StatusReason;
		
		private string _C_StatusReasonOther;
		
		private System.Nullable<int> _C_SecurityQuestion;
		
		private string _C_SecurityAnswer;
		
		private System.Nullable<int> _C_InvoiceMethod;
		
		private System.Nullable<int> _C_UsageCycleType;
		
		private System.Nullable<int> _C_DayOfMonth;
		
		private System.Nullable<int> _C_DayOfWeek;
		
		private System.Nullable<int> _C_FirstDayOfMonth;
		
		private System.Nullable<int> _C_SecondDayOfMonth;
		
		private System.Nullable<int> _C_StartMonth;
		
		private System.Nullable<int> _C_StartDay;
		
		private System.Nullable<int> _C_StartYear;
		
		private System.Nullable<int> _C_ContactType;
		
		private string _C_FirstName;
		
		private string _C_MiddleInitial;
		
		private string _C_LastName;
		
		private string _C_Company;
		
		private string _C_FacsimileTelephoneNumber;
		
		private string _C_email;
		
		private string _C_phonenumber;
		
		private string _C_address1;
		
		private string _C_address2;
		
		private string _C_address3;
		
		private string _C_city;
		
		private string _C_state;
		
		private string _C_zip;
		
		private System.Nullable<int> _C_country;
		
		private int _C_LoginApplication;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_ActionTypeChanging(int value);
    partial void OnC_ActionTypeChanged();
    partial void OnC_AccountTypeChanging(string value);
    partial void OnC_AccountTypeChanged();
    partial void OnC_OperationChanging(int value);
    partial void OnC_OperationChanged();
    partial void OnC_UserNameChanging(string value);
    partial void OnC_UserNameChanged();
    partial void OnC_Password_Changing(string value);
    partial void OnC_Password_Changed();
    partial void OnC_Name_SpaceChanging(string value);
    partial void OnC_Name_SpaceChanged();
    partial void OnC__AccountidChanging(System.Nullable<int> value);
    partial void OnC__AccountidChanged();
    partial void OnC_accountstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountstartdateChanged();
    partial void OnC_accountenddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_accountenddateChanged();
    partial void OnC_AccountStatusChanging(System.Nullable<int> value);
    partial void OnC_AccountStatusChanged();
    partial void OnC_ApplyDefaultSecurityPolicyChanging(string value);
    partial void OnC_ApplyDefaultSecurityPolicyChanged();
    partial void OnC_ApplyAccountTemplateChanging(string value);
    partial void OnC_ApplyAccountTemplateChanged();
    partial void OnC_TruncateOldSubscriptionsChanging(string value);
    partial void OnC_TruncateOldSubscriptionsChanged();
    partial void OnC_transactioncookieChanging(string value);
    partial void OnC_transactioncookieChanged();
    partial void OnC_ancestorAccountChanging(string value);
    partial void OnC_ancestorAccountChanged();
    partial void OnC_ancestorAccountNSChanging(string value);
    partial void OnC_ancestorAccountNSChanged();
    partial void OnC_ancestorAccountIDChanging(System.Nullable<int> value);
    partial void OnC_ancestorAccountIDChanged();
    partial void OnC_hierarchy_startdateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_hierarchy_startdateChanged();
    partial void OnC_hierarchy_enddateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_hierarchy_enddateChanged();
    partial void OnC_billableChanging(string value);
    partial void OnC_billableChanged();
    partial void OnC_folderChanging(string value);
    partial void OnC_folderChanged();
    partial void OnC_pricelistChanging(string value);
    partial void OnC_pricelistChanged();
    partial void OnC_currencyChanging(string value);
    partial void OnC_currencyChanged();
    partial void OnC_LanguageChanging(System.Nullable<int> value);
    partial void OnC_LanguageChanged();
    partial void OnC_taxexemptChanging(string value);
    partial void OnC_taxexemptChanged();
    partial void OnC_TaxExemptIDChanging(string value);
    partial void OnC_TaxExemptIDChanged();
    partial void OnC_timezoneIDChanging(System.Nullable<int> value);
    partial void OnC_timezoneIDChanged();
    partial void OnC_timezoneoffsetChanging(System.Nullable<decimal> value);
    partial void OnC_timezoneoffsetChanged();
    partial void OnC_PaymentMethodChanging(System.Nullable<int> value);
    partial void OnC_PaymentMethodChanged();
    partial void OnC_StatusReasonChanging(System.Nullable<int> value);
    partial void OnC_StatusReasonChanged();
    partial void OnC_StatusReasonOtherChanging(string value);
    partial void OnC_StatusReasonOtherChanged();
    partial void OnC_SecurityQuestionChanging(System.Nullable<int> value);
    partial void OnC_SecurityQuestionChanged();
    partial void OnC_SecurityAnswerChanging(string value);
    partial void OnC_SecurityAnswerChanged();
    partial void OnC_InvoiceMethodChanging(System.Nullable<int> value);
    partial void OnC_InvoiceMethodChanged();
    partial void OnC_UsageCycleTypeChanging(System.Nullable<int> value);
    partial void OnC_UsageCycleTypeChanged();
    partial void OnC_DayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_DayOfMonthChanged();
    partial void OnC_DayOfWeekChanging(System.Nullable<int> value);
    partial void OnC_DayOfWeekChanged();
    partial void OnC_FirstDayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_FirstDayOfMonthChanged();
    partial void OnC_SecondDayOfMonthChanging(System.Nullable<int> value);
    partial void OnC_SecondDayOfMonthChanged();
    partial void OnC_StartMonthChanging(System.Nullable<int> value);
    partial void OnC_StartMonthChanged();
    partial void OnC_StartDayChanging(System.Nullable<int> value);
    partial void OnC_StartDayChanged();
    partial void OnC_StartYearChanging(System.Nullable<int> value);
    partial void OnC_StartYearChanged();
    partial void OnC_ContactTypeChanging(System.Nullable<int> value);
    partial void OnC_ContactTypeChanged();
    partial void OnC_FirstNameChanging(string value);
    partial void OnC_FirstNameChanged();
    partial void OnC_MiddleInitialChanging(string value);
    partial void OnC_MiddleInitialChanged();
    partial void OnC_LastNameChanging(string value);
    partial void OnC_LastNameChanged();
    partial void OnC_CompanyChanging(string value);
    partial void OnC_CompanyChanged();
    partial void OnC_FacsimileTelephoneNumberChanging(string value);
    partial void OnC_FacsimileTelephoneNumberChanged();
    partial void OnC_emailChanging(string value);
    partial void OnC_emailChanged();
    partial void OnC_phonenumberChanging(string value);
    partial void OnC_phonenumberChanged();
    partial void OnC_address1Changing(string value);
    partial void OnC_address1Changed();
    partial void OnC_address2Changing(string value);
    partial void OnC_address2Changed();
    partial void OnC_address3Changing(string value);
    partial void OnC_address3Changed();
    partial void OnC_cityChanging(string value);
    partial void OnC_cityChanged();
    partial void OnC_stateChanging(string value);
    partial void OnC_stateChanged();
    partial void OnC_zipChanging(string value);
    partial void OnC_zipChanged();
    partial void OnC_countryChanging(System.Nullable<int> value);
    partial void OnC_countryChanged();
    partial void OnC_LoginApplicationChanging(int value);
    partial void OnC_LoginApplicationChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_SystemAccountCreation()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_ActionType", Storage="_C_ActionType", DbType="Int NOT NULL")]
		public int C_ActionType
		{
			get
			{
				return this._C_ActionType;
			}
			set
			{
				if ((this._C_ActionType != value))
				{
					this.OnC_ActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ActionType = value;
					this.SendPropertyChanged("C_ActionType");
					this.OnC_ActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_AccountType", Storage="_C_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountType
		{
			get
			{
				return this._C_AccountType;
			}
			set
			{
				if ((this._C_AccountType != value))
				{
					this.OnC_AccountTypeChanging(value);
					this.SendPropertyChanging();
					this._C_AccountType = value;
					this.SendPropertyChanged("C_AccountType");
					this.OnC_AccountTypeChanged();
				}
			}
		}
		
		[Column(Name="c_Operation", Storage="_C_Operation", DbType="Int NOT NULL")]
		public int C_Operation
		{
			get
			{
				return this._C_Operation;
			}
			set
			{
				if ((this._C_Operation != value))
				{
					this.OnC_OperationChanging(value);
					this.SendPropertyChanging();
					this._C_Operation = value;
					this.SendPropertyChanged("C_Operation");
					this.OnC_OperationChanged();
				}
			}
		}
		
		[Column(Name="c_UserName", Storage="_C_UserName", DbType="NVarChar(255)")]
		public string C_UserName
		{
			get
			{
				return this._C_UserName;
			}
			set
			{
				if ((this._C_UserName != value))
				{
					this.OnC_UserNameChanging(value);
					this.SendPropertyChanging();
					this._C_UserName = value;
					this.SendPropertyChanged("C_UserName");
					this.OnC_UserNameChanged();
				}
			}
		}
		
		[Column(Name="c_Password_", Storage="_C_Password_", DbType="NVarChar(510)")]
		public string C_Password_
		{
			get
			{
				return this._C_Password_;
			}
			set
			{
				if ((this._C_Password_ != value))
				{
					this.OnC_Password_Changing(value);
					this.SendPropertyChanging();
					this._C_Password_ = value;
					this.SendPropertyChanged("C_Password_");
					this.OnC_Password_Changed();
				}
			}
		}
		
		[Column(Name="c_Name_Space", Storage="_C_Name_Space", DbType="NVarChar(255)")]
		public string C_Name_Space
		{
			get
			{
				return this._C_Name_Space;
			}
			set
			{
				if ((this._C_Name_Space != value))
				{
					this.OnC_Name_SpaceChanging(value);
					this.SendPropertyChanging();
					this._C_Name_Space = value;
					this.SendPropertyChanged("C_Name_Space");
					this.OnC_Name_SpaceChanged();
				}
			}
		}
		
		[Column(Name="c__Accountid", Storage="_C__Accountid", DbType="Int")]
		public System.Nullable<int> C__Accountid
		{
			get
			{
				return this._C__Accountid;
			}
			set
			{
				if ((this._C__Accountid != value))
				{
					this.OnC__AccountidChanging(value);
					this.SendPropertyChanging();
					this._C__Accountid = value;
					this.SendPropertyChanged("C__Accountid");
					this.OnC__AccountidChanged();
				}
			}
		}
		
		[Column(Name="c_accountstartdate", Storage="_C_accountstartdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountstartdate
		{
			get
			{
				return this._C_accountstartdate;
			}
			set
			{
				if ((this._C_accountstartdate != value))
				{
					this.OnC_accountstartdateChanging(value);
					this.SendPropertyChanging();
					this._C_accountstartdate = value;
					this.SendPropertyChanged("C_accountstartdate");
					this.OnC_accountstartdateChanged();
				}
			}
		}
		
		[Column(Name="c_accountenddate", Storage="_C_accountenddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_accountenddate
		{
			get
			{
				return this._C_accountenddate;
			}
			set
			{
				if ((this._C_accountenddate != value))
				{
					this.OnC_accountenddateChanging(value);
					this.SendPropertyChanging();
					this._C_accountenddate = value;
					this.SendPropertyChanged("C_accountenddate");
					this.OnC_accountenddateChanged();
				}
			}
		}
		
		[Column(Name="c_AccountStatus", Storage="_C_AccountStatus", DbType="Int")]
		public System.Nullable<int> C_AccountStatus
		{
			get
			{
				return this._C_AccountStatus;
			}
			set
			{
				if ((this._C_AccountStatus != value))
				{
					this.OnC_AccountStatusChanging(value);
					this.SendPropertyChanging();
					this._C_AccountStatus = value;
					this.SendPropertyChanged("C_AccountStatus");
					this.OnC_AccountStatusChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyDefaultSecurityPolicy", Storage="_C_ApplyDefaultSecurityPolicy", DbType="Char(1)")]
		public string C_ApplyDefaultSecurityPolicy
		{
			get
			{
				return this._C_ApplyDefaultSecurityPolicy;
			}
			set
			{
				if ((this._C_ApplyDefaultSecurityPolicy != value))
				{
					this.OnC_ApplyDefaultSecurityPolicyChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyDefaultSecurityPolicy = value;
					this.SendPropertyChanged("C_ApplyDefaultSecurityPolicy");
					this.OnC_ApplyDefaultSecurityPolicyChanged();
				}
			}
		}
		
		[Column(Name="c_ApplyAccountTemplate", Storage="_C_ApplyAccountTemplate", DbType="Char(1)")]
		public string C_ApplyAccountTemplate
		{
			get
			{
				return this._C_ApplyAccountTemplate;
			}
			set
			{
				if ((this._C_ApplyAccountTemplate != value))
				{
					this.OnC_ApplyAccountTemplateChanging(value);
					this.SendPropertyChanging();
					this._C_ApplyAccountTemplate = value;
					this.SendPropertyChanged("C_ApplyAccountTemplate");
					this.OnC_ApplyAccountTemplateChanged();
				}
			}
		}
		
		[Column(Name="c_TruncateOldSubscriptions", Storage="_C_TruncateOldSubscriptions", DbType="Char(1)")]
		public string C_TruncateOldSubscriptions
		{
			get
			{
				return this._C_TruncateOldSubscriptions;
			}
			set
			{
				if ((this._C_TruncateOldSubscriptions != value))
				{
					this.OnC_TruncateOldSubscriptionsChanging(value);
					this.SendPropertyChanging();
					this._C_TruncateOldSubscriptions = value;
					this.SendPropertyChanged("C_TruncateOldSubscriptions");
					this.OnC_TruncateOldSubscriptionsChanged();
				}
			}
		}
		
		[Column(Name="c_transactioncookie", Storage="_C_transactioncookie", DbType="NVarChar(255)")]
		public string C_transactioncookie
		{
			get
			{
				return this._C_transactioncookie;
			}
			set
			{
				if ((this._C_transactioncookie != value))
				{
					this.OnC_transactioncookieChanging(value);
					this.SendPropertyChanging();
					this._C_transactioncookie = value;
					this.SendPropertyChanged("C_transactioncookie");
					this.OnC_transactioncookieChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccount", Storage="_C_ancestorAccount", DbType="NVarChar(255)")]
		public string C_ancestorAccount
		{
			get
			{
				return this._C_ancestorAccount;
			}
			set
			{
				if ((this._C_ancestorAccount != value))
				{
					this.OnC_ancestorAccountChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccount = value;
					this.SendPropertyChanged("C_ancestorAccount");
					this.OnC_ancestorAccountChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountNS", Storage="_C_ancestorAccountNS", DbType="NVarChar(255)")]
		public string C_ancestorAccountNS
		{
			get
			{
				return this._C_ancestorAccountNS;
			}
			set
			{
				if ((this._C_ancestorAccountNS != value))
				{
					this.OnC_ancestorAccountNSChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountNS = value;
					this.SendPropertyChanged("C_ancestorAccountNS");
					this.OnC_ancestorAccountNSChanged();
				}
			}
		}
		
		[Column(Name="c_ancestorAccountID", Storage="_C_ancestorAccountID", DbType="Int")]
		public System.Nullable<int> C_ancestorAccountID
		{
			get
			{
				return this._C_ancestorAccountID;
			}
			set
			{
				if ((this._C_ancestorAccountID != value))
				{
					this.OnC_ancestorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._C_ancestorAccountID = value;
					this.SendPropertyChanged("C_ancestorAccountID");
					this.OnC_ancestorAccountIDChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_startdate", Storage="_C_hierarchy_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_hierarchy_startdate
		{
			get
			{
				return this._C_hierarchy_startdate;
			}
			set
			{
				if ((this._C_hierarchy_startdate != value))
				{
					this.OnC_hierarchy_startdateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_startdate = value;
					this.SendPropertyChanged("C_hierarchy_startdate");
					this.OnC_hierarchy_startdateChanged();
				}
			}
		}
		
		[Column(Name="c_hierarchy_enddate", Storage="_C_hierarchy_enddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_hierarchy_enddate
		{
			get
			{
				return this._C_hierarchy_enddate;
			}
			set
			{
				if ((this._C_hierarchy_enddate != value))
				{
					this.OnC_hierarchy_enddateChanging(value);
					this.SendPropertyChanging();
					this._C_hierarchy_enddate = value;
					this.SendPropertyChanged("C_hierarchy_enddate");
					this.OnC_hierarchy_enddateChanged();
				}
			}
		}
		
		[Column(Name="c_billable", Storage="_C_billable", DbType="Char(1)")]
		public string C_billable
		{
			get
			{
				return this._C_billable;
			}
			set
			{
				if ((this._C_billable != value))
				{
					this.OnC_billableChanging(value);
					this.SendPropertyChanging();
					this._C_billable = value;
					this.SendPropertyChanged("C_billable");
					this.OnC_billableChanged();
				}
			}
		}
		
		[Column(Name="c_folder", Storage="_C_folder", DbType="Char(1)")]
		public string C_folder
		{
			get
			{
				return this._C_folder;
			}
			set
			{
				if ((this._C_folder != value))
				{
					this.OnC_folderChanging(value);
					this.SendPropertyChanging();
					this._C_folder = value;
					this.SendPropertyChanged("C_folder");
					this.OnC_folderChanged();
				}
			}
		}
		
		[Column(Name="c_pricelist", Storage="_C_pricelist", DbType="NVarChar(255)")]
		public string C_pricelist
		{
			get
			{
				return this._C_pricelist;
			}
			set
			{
				if ((this._C_pricelist != value))
				{
					this.OnC_pricelistChanging(value);
					this.SendPropertyChanging();
					this._C_pricelist = value;
					this.SendPropertyChanged("C_pricelist");
					this.OnC_pricelistChanged();
				}
			}
		}
		
		[Column(Name="c_currency", Storage="_C_currency", DbType="NVarChar(255)")]
		public string C_currency
		{
			get
			{
				return this._C_currency;
			}
			set
			{
				if ((this._C_currency != value))
				{
					this.OnC_currencyChanging(value);
					this.SendPropertyChanging();
					this._C_currency = value;
					this.SendPropertyChanged("C_currency");
					this.OnC_currencyChanged();
				}
			}
		}
		
		[Column(Name="c_Language", Storage="_C_Language", DbType="Int")]
		public System.Nullable<int> C_Language
		{
			get
			{
				return this._C_Language;
			}
			set
			{
				if ((this._C_Language != value))
				{
					this.OnC_LanguageChanging(value);
					this.SendPropertyChanging();
					this._C_Language = value;
					this.SendPropertyChanged("C_Language");
					this.OnC_LanguageChanged();
				}
			}
		}
		
		[Column(Name="c_taxexempt", Storage="_C_taxexempt", DbType="Char(1)")]
		public string C_taxexempt
		{
			get
			{
				return this._C_taxexempt;
			}
			set
			{
				if ((this._C_taxexempt != value))
				{
					this.OnC_taxexemptChanging(value);
					this.SendPropertyChanging();
					this._C_taxexempt = value;
					this.SendPropertyChanged("C_taxexempt");
					this.OnC_taxexemptChanged();
				}
			}
		}
		
		[Column(Name="c_TaxExemptID", Storage="_C_TaxExemptID", DbType="NVarChar(255)")]
		public string C_TaxExemptID
		{
			get
			{
				return this._C_TaxExemptID;
			}
			set
			{
				if ((this._C_TaxExemptID != value))
				{
					this.OnC_TaxExemptIDChanging(value);
					this.SendPropertyChanging();
					this._C_TaxExemptID = value;
					this.SendPropertyChanged("C_TaxExemptID");
					this.OnC_TaxExemptIDChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneID", Storage="_C_timezoneID", DbType="Int")]
		public System.Nullable<int> C_timezoneID
		{
			get
			{
				return this._C_timezoneID;
			}
			set
			{
				if ((this._C_timezoneID != value))
				{
					this.OnC_timezoneIDChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneID = value;
					this.SendPropertyChanged("C_timezoneID");
					this.OnC_timezoneIDChanged();
				}
			}
		}
		
		[Column(Name="c_timezoneoffset", Storage="_C_timezoneoffset", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_timezoneoffset
		{
			get
			{
				return this._C_timezoneoffset;
			}
			set
			{
				if ((this._C_timezoneoffset != value))
				{
					this.OnC_timezoneoffsetChanging(value);
					this.SendPropertyChanging();
					this._C_timezoneoffset = value;
					this.SendPropertyChanged("C_timezoneoffset");
					this.OnC_timezoneoffsetChanged();
				}
			}
		}
		
		[Column(Name="c_PaymentMethod", Storage="_C_PaymentMethod", DbType="Int")]
		public System.Nullable<int> C_PaymentMethod
		{
			get
			{
				return this._C_PaymentMethod;
			}
			set
			{
				if ((this._C_PaymentMethod != value))
				{
					this.OnC_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._C_PaymentMethod = value;
					this.SendPropertyChanged("C_PaymentMethod");
					this.OnC_PaymentMethodChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReason", Storage="_C_StatusReason", DbType="Int")]
		public System.Nullable<int> C_StatusReason
		{
			get
			{
				return this._C_StatusReason;
			}
			set
			{
				if ((this._C_StatusReason != value))
				{
					this.OnC_StatusReasonChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReason = value;
					this.SendPropertyChanged("C_StatusReason");
					this.OnC_StatusReasonChanged();
				}
			}
		}
		
		[Column(Name="c_StatusReasonOther", Storage="_C_StatusReasonOther", DbType="NVarChar(255)")]
		public string C_StatusReasonOther
		{
			get
			{
				return this._C_StatusReasonOther;
			}
			set
			{
				if ((this._C_StatusReasonOther != value))
				{
					this.OnC_StatusReasonOtherChanging(value);
					this.SendPropertyChanging();
					this._C_StatusReasonOther = value;
					this.SendPropertyChanged("C_StatusReasonOther");
					this.OnC_StatusReasonOtherChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityQuestion", Storage="_C_SecurityQuestion", DbType="Int")]
		public System.Nullable<int> C_SecurityQuestion
		{
			get
			{
				return this._C_SecurityQuestion;
			}
			set
			{
				if ((this._C_SecurityQuestion != value))
				{
					this.OnC_SecurityQuestionChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityQuestion = value;
					this.SendPropertyChanged("C_SecurityQuestion");
					this.OnC_SecurityQuestionChanged();
				}
			}
		}
		
		[Column(Name="c_SecurityAnswer", Storage="_C_SecurityAnswer", DbType="NVarChar(255)")]
		public string C_SecurityAnswer
		{
			get
			{
				return this._C_SecurityAnswer;
			}
			set
			{
				if ((this._C_SecurityAnswer != value))
				{
					this.OnC_SecurityAnswerChanging(value);
					this.SendPropertyChanging();
					this._C_SecurityAnswer = value;
					this.SendPropertyChanged("C_SecurityAnswer");
					this.OnC_SecurityAnswerChanged();
				}
			}
		}
		
		[Column(Name="c_InvoiceMethod", Storage="_C_InvoiceMethod", DbType="Int")]
		public System.Nullable<int> C_InvoiceMethod
		{
			get
			{
				return this._C_InvoiceMethod;
			}
			set
			{
				if ((this._C_InvoiceMethod != value))
				{
					this.OnC_InvoiceMethodChanging(value);
					this.SendPropertyChanging();
					this._C_InvoiceMethod = value;
					this.SendPropertyChanged("C_InvoiceMethod");
					this.OnC_InvoiceMethodChanged();
				}
			}
		}
		
		[Column(Name="c_UsageCycleType", Storage="_C_UsageCycleType", DbType="Int")]
		public System.Nullable<int> C_UsageCycleType
		{
			get
			{
				return this._C_UsageCycleType;
			}
			set
			{
				if ((this._C_UsageCycleType != value))
				{
					this.OnC_UsageCycleTypeChanging(value);
					this.SendPropertyChanging();
					this._C_UsageCycleType = value;
					this.SendPropertyChanged("C_UsageCycleType");
					this.OnC_UsageCycleTypeChanged();
				}
			}
		}
		
		[Column(Name="c_DayOfMonth", Storage="_C_DayOfMonth", DbType="Int")]
		public System.Nullable<int> C_DayOfMonth
		{
			get
			{
				return this._C_DayOfMonth;
			}
			set
			{
				if ((this._C_DayOfMonth != value))
				{
					this.OnC_DayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_DayOfMonth = value;
					this.SendPropertyChanged("C_DayOfMonth");
					this.OnC_DayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_DayOfWeek", Storage="_C_DayOfWeek", DbType="Int")]
		public System.Nullable<int> C_DayOfWeek
		{
			get
			{
				return this._C_DayOfWeek;
			}
			set
			{
				if ((this._C_DayOfWeek != value))
				{
					this.OnC_DayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._C_DayOfWeek = value;
					this.SendPropertyChanged("C_DayOfWeek");
					this.OnC_DayOfWeekChanged();
				}
			}
		}
		
		[Column(Name="c_FirstDayOfMonth", Storage="_C_FirstDayOfMonth", DbType="Int")]
		public System.Nullable<int> C_FirstDayOfMonth
		{
			get
			{
				return this._C_FirstDayOfMonth;
			}
			set
			{
				if ((this._C_FirstDayOfMonth != value))
				{
					this.OnC_FirstDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_FirstDayOfMonth = value;
					this.SendPropertyChanged("C_FirstDayOfMonth");
					this.OnC_FirstDayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_SecondDayOfMonth", Storage="_C_SecondDayOfMonth", DbType="Int")]
		public System.Nullable<int> C_SecondDayOfMonth
		{
			get
			{
				return this._C_SecondDayOfMonth;
			}
			set
			{
				if ((this._C_SecondDayOfMonth != value))
				{
					this.OnC_SecondDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._C_SecondDayOfMonth = value;
					this.SendPropertyChanged("C_SecondDayOfMonth");
					this.OnC_SecondDayOfMonthChanged();
				}
			}
		}
		
		[Column(Name="c_StartMonth", Storage="_C_StartMonth", DbType="Int")]
		public System.Nullable<int> C_StartMonth
		{
			get
			{
				return this._C_StartMonth;
			}
			set
			{
				if ((this._C_StartMonth != value))
				{
					this.OnC_StartMonthChanging(value);
					this.SendPropertyChanging();
					this._C_StartMonth = value;
					this.SendPropertyChanged("C_StartMonth");
					this.OnC_StartMonthChanged();
				}
			}
		}
		
		[Column(Name="c_StartDay", Storage="_C_StartDay", DbType="Int")]
		public System.Nullable<int> C_StartDay
		{
			get
			{
				return this._C_StartDay;
			}
			set
			{
				if ((this._C_StartDay != value))
				{
					this.OnC_StartDayChanging(value);
					this.SendPropertyChanging();
					this._C_StartDay = value;
					this.SendPropertyChanged("C_StartDay");
					this.OnC_StartDayChanged();
				}
			}
		}
		
		[Column(Name="c_StartYear", Storage="_C_StartYear", DbType="Int")]
		public System.Nullable<int> C_StartYear
		{
			get
			{
				return this._C_StartYear;
			}
			set
			{
				if ((this._C_StartYear != value))
				{
					this.OnC_StartYearChanging(value);
					this.SendPropertyChanging();
					this._C_StartYear = value;
					this.SendPropertyChanged("C_StartYear");
					this.OnC_StartYearChanged();
				}
			}
		}
		
		[Column(Name="c_ContactType", Storage="_C_ContactType", DbType="Int")]
		public System.Nullable<int> C_ContactType
		{
			get
			{
				return this._C_ContactType;
			}
			set
			{
				if ((this._C_ContactType != value))
				{
					this.OnC_ContactTypeChanging(value);
					this.SendPropertyChanging();
					this._C_ContactType = value;
					this.SendPropertyChanged("C_ContactType");
					this.OnC_ContactTypeChanged();
				}
			}
		}
		
		[Column(Name="c_FirstName", Storage="_C_FirstName", DbType="NVarChar(255)")]
		public string C_FirstName
		{
			get
			{
				return this._C_FirstName;
			}
			set
			{
				if ((this._C_FirstName != value))
				{
					this.OnC_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._C_FirstName = value;
					this.SendPropertyChanged("C_FirstName");
					this.OnC_FirstNameChanged();
				}
			}
		}
		
		[Column(Name="c_MiddleInitial", Storage="_C_MiddleInitial", DbType="NVarChar(255)")]
		public string C_MiddleInitial
		{
			get
			{
				return this._C_MiddleInitial;
			}
			set
			{
				if ((this._C_MiddleInitial != value))
				{
					this.OnC_MiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._C_MiddleInitial = value;
					this.SendPropertyChanged("C_MiddleInitial");
					this.OnC_MiddleInitialChanged();
				}
			}
		}
		
		[Column(Name="c_LastName", Storage="_C_LastName", DbType="NVarChar(255)")]
		public string C_LastName
		{
			get
			{
				return this._C_LastName;
			}
			set
			{
				if ((this._C_LastName != value))
				{
					this.OnC_LastNameChanging(value);
					this.SendPropertyChanging();
					this._C_LastName = value;
					this.SendPropertyChanged("C_LastName");
					this.OnC_LastNameChanged();
				}
			}
		}
		
		[Column(Name="c_Company", Storage="_C_Company", DbType="NVarChar(255)")]
		public string C_Company
		{
			get
			{
				return this._C_Company;
			}
			set
			{
				if ((this._C_Company != value))
				{
					this.OnC_CompanyChanging(value);
					this.SendPropertyChanging();
					this._C_Company = value;
					this.SendPropertyChanged("C_Company");
					this.OnC_CompanyChanged();
				}
			}
		}
		
		[Column(Name="c_FacsimileTelephoneNumber", Storage="_C_FacsimileTelephoneNumber", DbType="NVarChar(255)")]
		public string C_FacsimileTelephoneNumber
		{
			get
			{
				return this._C_FacsimileTelephoneNumber;
			}
			set
			{
				if ((this._C_FacsimileTelephoneNumber != value))
				{
					this.OnC_FacsimileTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._C_FacsimileTelephoneNumber = value;
					this.SendPropertyChanged("C_FacsimileTelephoneNumber");
					this.OnC_FacsimileTelephoneNumberChanged();
				}
			}
		}
		
		[Column(Name="c_email", Storage="_C_email", DbType="NVarChar(255)")]
		public string C_email
		{
			get
			{
				return this._C_email;
			}
			set
			{
				if ((this._C_email != value))
				{
					this.OnC_emailChanging(value);
					this.SendPropertyChanging();
					this._C_email = value;
					this.SendPropertyChanged("C_email");
					this.OnC_emailChanged();
				}
			}
		}
		
		[Column(Name="c_phonenumber", Storage="_C_phonenumber", DbType="NVarChar(255)")]
		public string C_phonenumber
		{
			get
			{
				return this._C_phonenumber;
			}
			set
			{
				if ((this._C_phonenumber != value))
				{
					this.OnC_phonenumberChanging(value);
					this.SendPropertyChanging();
					this._C_phonenumber = value;
					this.SendPropertyChanged("C_phonenumber");
					this.OnC_phonenumberChanged();
				}
			}
		}
		
		[Column(Name="c_address1", Storage="_C_address1", DbType="NVarChar(255)")]
		public string C_address1
		{
			get
			{
				return this._C_address1;
			}
			set
			{
				if ((this._C_address1 != value))
				{
					this.OnC_address1Changing(value);
					this.SendPropertyChanging();
					this._C_address1 = value;
					this.SendPropertyChanged("C_address1");
					this.OnC_address1Changed();
				}
			}
		}
		
		[Column(Name="c_address2", Storage="_C_address2", DbType="NVarChar(255)")]
		public string C_address2
		{
			get
			{
				return this._C_address2;
			}
			set
			{
				if ((this._C_address2 != value))
				{
					this.OnC_address2Changing(value);
					this.SendPropertyChanging();
					this._C_address2 = value;
					this.SendPropertyChanged("C_address2");
					this.OnC_address2Changed();
				}
			}
		}
		
		[Column(Name="c_address3", Storage="_C_address3", DbType="NVarChar(255)")]
		public string C_address3
		{
			get
			{
				return this._C_address3;
			}
			set
			{
				if ((this._C_address3 != value))
				{
					this.OnC_address3Changing(value);
					this.SendPropertyChanging();
					this._C_address3 = value;
					this.SendPropertyChanged("C_address3");
					this.OnC_address3Changed();
				}
			}
		}
		
		[Column(Name="c_city", Storage="_C_city", DbType="NVarChar(255)")]
		public string C_city
		{
			get
			{
				return this._C_city;
			}
			set
			{
				if ((this._C_city != value))
				{
					this.OnC_cityChanging(value);
					this.SendPropertyChanging();
					this._C_city = value;
					this.SendPropertyChanged("C_city");
					this.OnC_cityChanged();
				}
			}
		}
		
		[Column(Name="c_state", Storage="_C_state", DbType="NVarChar(255)")]
		public string C_state
		{
			get
			{
				return this._C_state;
			}
			set
			{
				if ((this._C_state != value))
				{
					this.OnC_stateChanging(value);
					this.SendPropertyChanging();
					this._C_state = value;
					this.SendPropertyChanged("C_state");
					this.OnC_stateChanged();
				}
			}
		}
		
		[Column(Name="c_zip", Storage="_C_zip", DbType="NVarChar(255)")]
		public string C_zip
		{
			get
			{
				return this._C_zip;
			}
			set
			{
				if ((this._C_zip != value))
				{
					this.OnC_zipChanging(value);
					this.SendPropertyChanging();
					this._C_zip = value;
					this.SendPropertyChanged("C_zip");
					this.OnC_zipChanged();
				}
			}
		}
		
		[Column(Name="c_country", Storage="_C_country", DbType="Int")]
		public System.Nullable<int> C_country
		{
			get
			{
				return this._C_country;
			}
			set
			{
				if ((this._C_country != value))
				{
					this.OnC_countryChanging(value);
					this.SendPropertyChanging();
					this._C_country = value;
					this.SendPropertyChanged("C_country");
					this.OnC_countryChanged();
				}
			}
		}
		
		[Column(Name="c_LoginApplication", Storage="_C_LoginApplication", DbType="Int NOT NULL")]
		public int C_LoginApplication
		{
			get
			{
				return this._C_LoginApplication;
			}
			set
			{
				if ((this._C_LoginApplication != value))
				{
					this.OnC_LoginApplicationChanging(value);
					this.SendPropertyChanging();
					this._C_LoginApplication = value;
					this.SendPropertyChanged("C_LoginApplication");
					this.OnC_LoginApplicationChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_TestParent")]
	public partial class T_svc_TestParent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Description;
		
		private System.DateTime _C_Time;
		
		private string _C_Accountname;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TimeChanging(System.DateTime value);
    partial void OnC_TimeChanged();
    partial void OnC_AccountnameChanging(string value);
    partial void OnC_AccountnameChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_TestParent()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Time", Storage="_C_Time", DbType="DateTime NOT NULL")]
		public System.DateTime C_Time
		{
			get
			{
				return this._C_Time;
			}
			set
			{
				if ((this._C_Time != value))
				{
					this.OnC_TimeChanging(value);
					this.SendPropertyChanging();
					this._C_Time = value;
					this.SendPropertyChanged("C_Time");
					this.OnC_TimeChanged();
				}
			}
		}
		
		[Column(Name="c_Accountname", Storage="_C_Accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Accountname
		{
			get
			{
				return this._C_Accountname;
			}
			set
			{
				if ((this._C_Accountname != value))
				{
					this.OnC_AccountnameChanging(value);
					this.SendPropertyChanging();
					this._C_Accountname = value;
					this.SendPropertyChanged("C_Accountname");
					this.OnC_AccountnameChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_testpi")]
	public partial class T_svc_testpi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private System.DateTime _C_time;
		
		private int _C_duration;
		
		private decimal _C_units;
		
		private string _C_accountname;
		
		private System.Nullable<decimal> _C_DecProp1;
		
		private System.Nullable<decimal> _C_DecProp2;
		
		private System.Nullable<decimal> _C_DecProp3;
		
		private System.Nullable<int> _C_internalmtaccountid;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_timeChanging(System.DateTime value);
    partial void OnC_timeChanged();
    partial void OnC_durationChanging(int value);
    partial void OnC_durationChanged();
    partial void OnC_unitsChanging(decimal value);
    partial void OnC_unitsChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_DecProp1Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    partial void OnC_internalmtaccountidChanging(System.Nullable<int> value);
    partial void OnC_internalmtaccountidChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_testpi()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_time", Storage="_C_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_time
		{
			get
			{
				return this._C_time;
			}
			set
			{
				if ((this._C_time != value))
				{
					this.OnC_timeChanging(value);
					this.SendPropertyChanging();
					this._C_time = value;
					this.SendPropertyChanged("C_time");
					this.OnC_timeChanged();
				}
			}
		}
		
		[Column(Name="c_duration", Storage="_C_duration", DbType="Int NOT NULL")]
		public int C_duration
		{
			get
			{
				return this._C_duration;
			}
			set
			{
				if ((this._C_duration != value))
				{
					this.OnC_durationChanging(value);
					this.SendPropertyChanging();
					this._C_duration = value;
					this.SendPropertyChanged("C_duration");
					this.OnC_durationChanged();
				}
			}
		}
		
		[Column(Name="c_units", Storage="_C_units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_units
		{
			get
			{
				return this._C_units;
			}
			set
			{
				if ((this._C_units != value))
				{
					this.OnC_unitsChanging(value);
					this.SendPropertyChanging();
					this._C_units = value;
					this.SendPropertyChanged("C_units");
					this.OnC_unitsChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255)")]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_internalmtaccountid", Storage="_C_internalmtaccountid", DbType="Int")]
		public System.Nullable<int> C_internalmtaccountid
		{
			get
			{
				return this._C_internalmtaccountid;
			}
			set
			{
				if ((this._C_internalmtaccountid != value))
				{
					this.OnC_internalmtaccountidChanging(value);
					this.SendPropertyChanging();
					this._C_internalmtaccountid = value;
					this.SendPropertyChanged("C_internalmtaccountid");
					this.OnC_internalmtaccountidChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_testpi2")]
	public partial class T_svc_testpi2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private System.DateTime _C_time;
		
		private decimal _C_units;
		
		private int _C_duration;
		
		private decimal _C_DecProp1;
		
		private decimal _C_DecProp2;
		
		private decimal _C_DecProp3;
		
		private decimal _C_DecProp4;
		
		private decimal _C_Counter2;
		
		private decimal _C_Counter1;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__AccountID;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_timeChanging(System.DateTime value);
    partial void OnC_timeChanged();
    partial void OnC_unitsChanging(decimal value);
    partial void OnC_unitsChanged();
    partial void OnC_durationChanging(int value);
    partial void OnC_durationChanged();
    partial void OnC_DecProp1Changing(decimal value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(decimal value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(decimal value);
    partial void OnC_DecProp3Changed();
    partial void OnC_DecProp4Changing(decimal value);
    partial void OnC_DecProp4Changed();
    partial void OnC_Counter2Changing(decimal value);
    partial void OnC_Counter2Changed();
    partial void OnC_Counter1Changing(decimal value);
    partial void OnC_Counter1Changed();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_testpi2()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_time", Storage="_C_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_time
		{
			get
			{
				return this._C_time;
			}
			set
			{
				if ((this._C_time != value))
				{
					this.OnC_timeChanging(value);
					this.SendPropertyChanging();
					this._C_time = value;
					this.SendPropertyChanged("C_time");
					this.OnC_timeChanged();
				}
			}
		}
		
		[Column(Name="c_units", Storage="_C_units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_units
		{
			get
			{
				return this._C_units;
			}
			set
			{
				if ((this._C_units != value))
				{
					this.OnC_unitsChanging(value);
					this.SendPropertyChanging();
					this._C_units = value;
					this.SendPropertyChanged("C_units");
					this.OnC_unitsChanged();
				}
			}
		}
		
		[Column(Name="c_duration", Storage="_C_duration", DbType="Int NOT NULL")]
		public int C_duration
		{
			get
			{
				return this._C_duration;
			}
			set
			{
				if ((this._C_duration != value))
				{
					this.OnC_durationChanging(value);
					this.SendPropertyChanging();
					this._C_duration = value;
					this.SendPropertyChanged("C_duration");
					this.OnC_durationChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp4", Storage="_C_DecProp4", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_DecProp4
		{
			get
			{
				return this._C_DecProp4;
			}
			set
			{
				if ((this._C_DecProp4 != value))
				{
					this.OnC_DecProp4Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp4 = value;
					this.SendPropertyChanged("C_DecProp4");
					this.OnC_DecProp4Changed();
				}
			}
		}
		
		[Column(Name="c_Counter2", Storage="_C_Counter2", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter2
		{
			get
			{
				return this._C_Counter2;
			}
			set
			{
				if ((this._C_Counter2 != value))
				{
					this.OnC_Counter2Changing(value);
					this.SendPropertyChanging();
					this._C_Counter2 = value;
					this.SendPropertyChanged("C_Counter2");
					this.OnC_Counter2Changed();
				}
			}
		}
		
		[Column(Name="c_Counter1", Storage="_C_Counter1", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Counter1
		{
			get
			{
				return this._C_Counter1;
			}
			set
			{
				if ((this._C_Counter1 != value))
				{
					this.OnC_Counter1Changing(value);
					this.SendPropertyChanging();
					this._C_Counter1 = value;
					this.SendPropertyChanged("C_Counter1");
					this.OnC_Counter1Changed();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_TestService")]
	public partial class T_svc_TestService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_Description;
		
		private System.DateTime _C_Time;
		
		private System.Nullable<System.DateTime> _C_PipelineTime;
		
		private decimal _C_Units;
		
		private string _C_AccountName;
		
		private System.Nullable<decimal> _C_DecProp1;
		
		private System.Nullable<decimal> _C_DecProp2;
		
		private System.Nullable<decimal> _C_DecProp3;
		
		private System.Nullable<int> _C_IntegerProperty;
		
		private System.Nullable<long> _C_Integer64Property;
		
		private string _C_StringProperty;
		
		private string _C_EncryptedStringProperty_;
		
		private System.Nullable<decimal> _C_DecimalProperty;
		
		private System.Nullable<decimal> _C_DoubleProperty;
		
		private string _C_BooleanProperty;
		
		private System.Nullable<int> _C_EnumProperty;
		
		private System.Nullable<System.DateTime> _C_TimestampProperty;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_DescriptionChanging(string value);
    partial void OnC_DescriptionChanged();
    partial void OnC_TimeChanging(System.DateTime value);
    partial void OnC_TimeChanged();
    partial void OnC_PipelineTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnC_PipelineTimeChanged();
    partial void OnC_UnitsChanging(decimal value);
    partial void OnC_UnitsChanged();
    partial void OnC_AccountNameChanging(string value);
    partial void OnC_AccountNameChanged();
    partial void OnC_DecProp1Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    partial void OnC_IntegerPropertyChanging(System.Nullable<int> value);
    partial void OnC_IntegerPropertyChanged();
    partial void OnC_Integer64PropertyChanging(System.Nullable<long> value);
    partial void OnC_Integer64PropertyChanged();
    partial void OnC_StringPropertyChanging(string value);
    partial void OnC_StringPropertyChanged();
    partial void OnC_EncryptedStringProperty_Changing(string value);
    partial void OnC_EncryptedStringProperty_Changed();
    partial void OnC_DecimalPropertyChanging(System.Nullable<decimal> value);
    partial void OnC_DecimalPropertyChanged();
    partial void OnC_DoublePropertyChanging(System.Nullable<decimal> value);
    partial void OnC_DoublePropertyChanged();
    partial void OnC_BooleanPropertyChanging(string value);
    partial void OnC_BooleanPropertyChanged();
    partial void OnC_EnumPropertyChanging(System.Nullable<int> value);
    partial void OnC_EnumPropertyChanged();
    partial void OnC_TimestampPropertyChanging(System.Nullable<System.DateTime> value);
    partial void OnC_TimestampPropertyChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_TestService()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_Description", Storage="_C_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_Description
		{
			get
			{
				return this._C_Description;
			}
			set
			{
				if ((this._C_Description != value))
				{
					this.OnC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._C_Description = value;
					this.SendPropertyChanged("C_Description");
					this.OnC_DescriptionChanged();
				}
			}
		}
		
		[Column(Name="c_Time", Storage="_C_Time", DbType="DateTime NOT NULL")]
		public System.DateTime C_Time
		{
			get
			{
				return this._C_Time;
			}
			set
			{
				if ((this._C_Time != value))
				{
					this.OnC_TimeChanging(value);
					this.SendPropertyChanging();
					this._C_Time = value;
					this.SendPropertyChanged("C_Time");
					this.OnC_TimeChanged();
				}
			}
		}
		
		[Column(Name="c_PipelineTime", Storage="_C_PipelineTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_PipelineTime
		{
			get
			{
				return this._C_PipelineTime;
			}
			set
			{
				if ((this._C_PipelineTime != value))
				{
					this.OnC_PipelineTimeChanging(value);
					this.SendPropertyChanging();
					this._C_PipelineTime = value;
					this.SendPropertyChanged("C_PipelineTime");
					this.OnC_PipelineTimeChanged();
				}
			}
		}
		
		[Column(Name="c_Units", Storage="_C_Units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_Units
		{
			get
			{
				return this._C_Units;
			}
			set
			{
				if ((this._C_Units != value))
				{
					this.OnC_UnitsChanging(value);
					this.SendPropertyChanging();
					this._C_Units = value;
					this.SendPropertyChanged("C_Units");
					this.OnC_UnitsChanged();
				}
			}
		}
		
		[Column(Name="c_AccountName", Storage="_C_AccountName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_AccountName
		{
			get
			{
				return this._C_AccountName;
			}
			set
			{
				if ((this._C_AccountName != value))
				{
					this.OnC_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._C_AccountName = value;
					this.SendPropertyChanged("C_AccountName");
					this.OnC_AccountNameChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c_IntegerProperty", Storage="_C_IntegerProperty", DbType="Int")]
		public System.Nullable<int> C_IntegerProperty
		{
			get
			{
				return this._C_IntegerProperty;
			}
			set
			{
				if ((this._C_IntegerProperty != value))
				{
					this.OnC_IntegerPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_IntegerProperty = value;
					this.SendPropertyChanged("C_IntegerProperty");
					this.OnC_IntegerPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_Integer64Property", Storage="_C_Integer64Property", DbType="BigInt")]
		public System.Nullable<long> C_Integer64Property
		{
			get
			{
				return this._C_Integer64Property;
			}
			set
			{
				if ((this._C_Integer64Property != value))
				{
					this.OnC_Integer64PropertyChanging(value);
					this.SendPropertyChanging();
					this._C_Integer64Property = value;
					this.SendPropertyChanged("C_Integer64Property");
					this.OnC_Integer64PropertyChanged();
				}
			}
		}
		
		[Column(Name="c_StringProperty", Storage="_C_StringProperty", DbType="NVarChar(255)")]
		public string C_StringProperty
		{
			get
			{
				return this._C_StringProperty;
			}
			set
			{
				if ((this._C_StringProperty != value))
				{
					this.OnC_StringPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_StringProperty = value;
					this.SendPropertyChanged("C_StringProperty");
					this.OnC_StringPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_EncryptedStringProperty_", Storage="_C_EncryptedStringProperty_", DbType="NVarChar(510)")]
		public string C_EncryptedStringProperty_
		{
			get
			{
				return this._C_EncryptedStringProperty_;
			}
			set
			{
				if ((this._C_EncryptedStringProperty_ != value))
				{
					this.OnC_EncryptedStringProperty_Changing(value);
					this.SendPropertyChanging();
					this._C_EncryptedStringProperty_ = value;
					this.SendPropertyChanged("C_EncryptedStringProperty_");
					this.OnC_EncryptedStringProperty_Changed();
				}
			}
		}
		
		[Column(Name="c_DecimalProperty", Storage="_C_DecimalProperty", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecimalProperty
		{
			get
			{
				return this._C_DecimalProperty;
			}
			set
			{
				if ((this._C_DecimalProperty != value))
				{
					this.OnC_DecimalPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DecimalProperty = value;
					this.SendPropertyChanged("C_DecimalProperty");
					this.OnC_DecimalPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_DoubleProperty", Storage="_C_DoubleProperty", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DoubleProperty
		{
			get
			{
				return this._C_DoubleProperty;
			}
			set
			{
				if ((this._C_DoubleProperty != value))
				{
					this.OnC_DoublePropertyChanging(value);
					this.SendPropertyChanging();
					this._C_DoubleProperty = value;
					this.SendPropertyChanged("C_DoubleProperty");
					this.OnC_DoublePropertyChanged();
				}
			}
		}
		
		[Column(Name="c_BooleanProperty", Storage="_C_BooleanProperty", DbType="Char(1)")]
		public string C_BooleanProperty
		{
			get
			{
				return this._C_BooleanProperty;
			}
			set
			{
				if ((this._C_BooleanProperty != value))
				{
					this.OnC_BooleanPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_BooleanProperty = value;
					this.SendPropertyChanged("C_BooleanProperty");
					this.OnC_BooleanPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_EnumProperty", Storage="_C_EnumProperty", DbType="Int")]
		public System.Nullable<int> C_EnumProperty
		{
			get
			{
				return this._C_EnumProperty;
			}
			set
			{
				if ((this._C_EnumProperty != value))
				{
					this.OnC_EnumPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_EnumProperty = value;
					this.SendPropertyChanged("C_EnumProperty");
					this.OnC_EnumPropertyChanged();
				}
			}
		}
		
		[Column(Name="c_TimestampProperty", Storage="_C_TimestampProperty", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_TimestampProperty
		{
			get
			{
				return this._C_TimestampProperty;
			}
			set
			{
				if ((this._C_TimestampProperty != value))
				{
					this.OnC_TimestampPropertyChanging(value);
					this.SendPropertyChanging();
					this._C_TimestampProperty = value;
					this.SendPropertyChanged("C_TimestampProperty");
					this.OnC_TimestampPropertyChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_testservice2")]
	public partial class T_svc_testservice2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_description;
		
		private System.DateTime _C_time;
		
		private decimal _C_units;
		
		private string _C_accountname;
		
		private System.Nullable<decimal> _C_DecProp1;
		
		private System.Nullable<decimal> _C_DecProp2;
		
		private System.Nullable<decimal> _C_DecProp3;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_descriptionChanging(string value);
    partial void OnC_descriptionChanged();
    partial void OnC_timeChanging(System.DateTime value);
    partial void OnC_timeChanged();
    partial void OnC_unitsChanging(decimal value);
    partial void OnC_unitsChanged();
    partial void OnC_accountnameChanging(string value);
    partial void OnC_accountnameChanged();
    partial void OnC_DecProp1Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp1Changed();
    partial void OnC_DecProp2Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp2Changed();
    partial void OnC_DecProp3Changing(System.Nullable<decimal> value);
    partial void OnC_DecProp3Changed();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_testservice2()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_description", Storage="_C_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_description
		{
			get
			{
				return this._C_description;
			}
			set
			{
				if ((this._C_description != value))
				{
					this.OnC_descriptionChanging(value);
					this.SendPropertyChanging();
					this._C_description = value;
					this.SendPropertyChanged("C_description");
					this.OnC_descriptionChanged();
				}
			}
		}
		
		[Column(Name="c_time", Storage="_C_time", DbType="DateTime NOT NULL")]
		public System.DateTime C_time
		{
			get
			{
				return this._C_time;
			}
			set
			{
				if ((this._C_time != value))
				{
					this.OnC_timeChanging(value);
					this.SendPropertyChanging();
					this._C_time = value;
					this.SendPropertyChanged("C_time");
					this.OnC_timeChanged();
				}
			}
		}
		
		[Column(Name="c_units", Storage="_C_units", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_units
		{
			get
			{
				return this._C_units;
			}
			set
			{
				if ((this._C_units != value))
				{
					this.OnC_unitsChanging(value);
					this.SendPropertyChanging();
					this._C_units = value;
					this.SendPropertyChanged("C_units");
					this.OnC_unitsChanged();
				}
			}
		}
		
		[Column(Name="c_accountname", Storage="_C_accountname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_accountname
		{
			get
			{
				return this._C_accountname;
			}
			set
			{
				if ((this._C_accountname != value))
				{
					this.OnC_accountnameChanging(value);
					this.SendPropertyChanging();
					this._C_accountname = value;
					this.SendPropertyChanged("C_accountname");
					this.OnC_accountnameChanged();
				}
			}
		}
		
		[Column(Name="c_DecProp1", Storage="_C_DecProp1", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp1
		{
			get
			{
				return this._C_DecProp1;
			}
			set
			{
				if ((this._C_DecProp1 != value))
				{
					this.OnC_DecProp1Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp1 = value;
					this.SendPropertyChanged("C_DecProp1");
					this.OnC_DecProp1Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp2", Storage="_C_DecProp2", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp2
		{
			get
			{
				return this._C_DecProp2;
			}
			set
			{
				if ((this._C_DecProp2 != value))
				{
					this.OnC_DecProp2Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp2 = value;
					this.SendPropertyChanged("C_DecProp2");
					this.OnC_DecProp2Changed();
				}
			}
		}
		
		[Column(Name="c_DecProp3", Storage="_C_DecProp3", DbType="Decimal(22,10)")]
		public System.Nullable<decimal> C_DecProp3
		{
			get
			{
				return this._C_DecProp3;
			}
			set
			{
				if ((this._C_DecProp3 != value))
				{
					this.OnC_DecProp3Changing(value);
					this.SendPropertyChanging();
					this._C_DecProp3 = value;
					this.SendPropertyChanged("C_DecProp3");
					this.OnC_DecProp3Changed();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_svc_UDRecurringCharge")]
	public partial class T_svc_UDRecurringCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Id_source_sess;
		
		private System.Data.Linq.Binary _Id_parent_source_sess;
		
		private System.Data.Linq.Binary _Id_external;
		
		private int _Id_partition;
		
		private string _C_RCActionType;
		
		private System.DateTime _C_RCIntervalStart;
		
		private System.DateTime _C_RCIntervalEnd;
		
		private System.DateTime _C_BillingIntervalStart;
		
		private System.DateTime _C_BillingIntervalEnd;
		
		private System.DateTime _C_RCIntervalSubscriptionStart;
		
		private System.DateTime _C_RCIntervalSubscriptionEnd;
		
		private System.DateTime _C_SubscriptionStart;
		
		private System.Nullable<System.DateTime> _C_SubscriptionEnd;
		
		private string _C_Advance;
		
		private string _C_ProrateOnSubscription;
		
		private System.DateTime _C_UnitValueStart;
		
		private System.DateTime _C_UnitValueEnd;
		
		private decimal _C_UnitValue;
		
		private int _C_RatingType;
		
		private string _C_ProrateOnUnsubscription;
		
		private int _C_ProrationCycleLength;
		
		private System.Nullable<System.DateTime> _C_BilledRateDate;
		
		private int _C__SubscriptionID;
		
		private int _C__AccountID;
		
		private int _C__PayingAccount;
		
		private int _C__PriceableItemInstanceID;
		
		private int _C__PriceableItemTemplateID;
		
		private int _C__ProductOfferingID;
		
		private System.Nullable<System.DateTime> _C_FinalizeDate;
		
		private System.Nullable<int> _C__IntervalID;
		
		private string _C__Resubmit;
		
		private string _C__TransactionCookie;
		
		private System.Data.Linq.Binary _C__CollectionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_source_sessChanged();
    partial void OnId_parent_source_sessChanging(System.Data.Linq.Binary value);
    partial void OnId_parent_source_sessChanged();
    partial void OnId_externalChanging(System.Data.Linq.Binary value);
    partial void OnId_externalChanged();
    partial void OnId_partitionChanging(int value);
    partial void OnId_partitionChanged();
    partial void OnC_RCActionTypeChanging(string value);
    partial void OnC_RCActionTypeChanged();
    partial void OnC_RCIntervalStartChanging(System.DateTime value);
    partial void OnC_RCIntervalStartChanged();
    partial void OnC_RCIntervalEndChanging(System.DateTime value);
    partial void OnC_RCIntervalEndChanged();
    partial void OnC_BillingIntervalStartChanging(System.DateTime value);
    partial void OnC_BillingIntervalStartChanged();
    partial void OnC_BillingIntervalEndChanging(System.DateTime value);
    partial void OnC_BillingIntervalEndChanged();
    partial void OnC_RCIntervalSubscriptionStartChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionStartChanged();
    partial void OnC_RCIntervalSubscriptionEndChanging(System.DateTime value);
    partial void OnC_RCIntervalSubscriptionEndChanged();
    partial void OnC_SubscriptionStartChanging(System.DateTime value);
    partial void OnC_SubscriptionStartChanged();
    partial void OnC_SubscriptionEndChanging(System.Nullable<System.DateTime> value);
    partial void OnC_SubscriptionEndChanged();
    partial void OnC_AdvanceChanging(string value);
    partial void OnC_AdvanceChanged();
    partial void OnC_ProrateOnSubscriptionChanging(string value);
    partial void OnC_ProrateOnSubscriptionChanged();
    partial void OnC_UnitValueStartChanging(System.DateTime value);
    partial void OnC_UnitValueStartChanged();
    partial void OnC_UnitValueEndChanging(System.DateTime value);
    partial void OnC_UnitValueEndChanged();
    partial void OnC_UnitValueChanging(decimal value);
    partial void OnC_UnitValueChanged();
    partial void OnC_RatingTypeChanging(int value);
    partial void OnC_RatingTypeChanged();
    partial void OnC_ProrateOnUnsubscriptionChanging(string value);
    partial void OnC_ProrateOnUnsubscriptionChanged();
    partial void OnC_ProrationCycleLengthChanging(int value);
    partial void OnC_ProrationCycleLengthChanged();
    partial void OnC_BilledRateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_BilledRateDateChanged();
    partial void OnC__SubscriptionIDChanging(int value);
    partial void OnC__SubscriptionIDChanged();
    partial void OnC__AccountIDChanging(int value);
    partial void OnC__AccountIDChanged();
    partial void OnC__PayingAccountChanging(int value);
    partial void OnC__PayingAccountChanged();
    partial void OnC__PriceableItemInstanceIDChanging(int value);
    partial void OnC__PriceableItemInstanceIDChanged();
    partial void OnC__PriceableItemTemplateIDChanging(int value);
    partial void OnC__PriceableItemTemplateIDChanged();
    partial void OnC__ProductOfferingIDChanging(int value);
    partial void OnC__ProductOfferingIDChanged();
    partial void OnC_FinalizeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_FinalizeDateChanged();
    partial void OnC__IntervalIDChanging(System.Nullable<int> value);
    partial void OnC__IntervalIDChanged();
    partial void OnC__ResubmitChanging(string value);
    partial void OnC__ResubmitChanged();
    partial void OnC__TransactionCookieChanging(string value);
    partial void OnC__TransactionCookieChanged();
    partial void OnC__CollectionIDChanging(System.Data.Linq.Binary value);
    partial void OnC__CollectionIDChanged();
    #endregion
		
		public T_svc_UDRecurringCharge()
		{
			OnCreated();
		}
		
		[Column(Name="id_source_sess", Storage="_Id_source_sess", DbType="Binary(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public System.Data.Linq.Binary Id_source_sess
		{
			get
			{
				return this._Id_source_sess;
			}
			set
			{
				if ((this._Id_source_sess != value))
				{
					this.OnId_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_source_sess = value;
					this.SendPropertyChanged("Id_source_sess");
					this.OnId_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_parent_source_sess", Storage="_Id_parent_source_sess", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_parent_source_sess
		{
			get
			{
				return this._Id_parent_source_sess;
			}
			set
			{
				if ((this._Id_parent_source_sess != value))
				{
					this.OnId_parent_source_sessChanging(value);
					this.SendPropertyChanging();
					this._Id_parent_source_sess = value;
					this.SendPropertyChanged("Id_parent_source_sess");
					this.OnId_parent_source_sessChanged();
				}
			}
		}
		
		[Column(Name="id_external", Storage="_Id_external", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary Id_external
		{
			get
			{
				return this._Id_external;
			}
			set
			{
				if ((this._Id_external != value))
				{
					this.OnId_externalChanging(value);
					this.SendPropertyChanging();
					this._Id_external = value;
					this.SendPropertyChanged("Id_external");
					this.OnId_externalChanged();
				}
			}
		}
		
		[Column(Name="id_partition", Storage="_Id_partition", DbType="Int NOT NULL")]
		public int Id_partition
		{
			get
			{
				return this._Id_partition;
			}
			set
			{
				if ((this._Id_partition != value))
				{
					this.OnId_partitionChanging(value);
					this.SendPropertyChanging();
					this._Id_partition = value;
					this.SendPropertyChanged("Id_partition");
					this.OnId_partitionChanged();
				}
			}
		}
		
		[Column(Name="c_RCActionType", Storage="_C_RCActionType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_RCActionType
		{
			get
			{
				return this._C_RCActionType;
			}
			set
			{
				if ((this._C_RCActionType != value))
				{
					this.OnC_RCActionTypeChanging(value);
					this.SendPropertyChanging();
					this._C_RCActionType = value;
					this.SendPropertyChanged("C_RCActionType");
					this.OnC_RCActionTypeChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalStart", Storage="_C_RCIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalStart
		{
			get
			{
				return this._C_RCIntervalStart;
			}
			set
			{
				if ((this._C_RCIntervalStart != value))
				{
					this.OnC_RCIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalStart = value;
					this.SendPropertyChanged("C_RCIntervalStart");
					this.OnC_RCIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalEnd", Storage="_C_RCIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalEnd
		{
			get
			{
				return this._C_RCIntervalEnd;
			}
			set
			{
				if ((this._C_RCIntervalEnd != value))
				{
					this.OnC_RCIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalEnd = value;
					this.SendPropertyChanged("C_RCIntervalEnd");
					this.OnC_RCIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalStart", Storage="_C_BillingIntervalStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalStart
		{
			get
			{
				return this._C_BillingIntervalStart;
			}
			set
			{
				if ((this._C_BillingIntervalStart != value))
				{
					this.OnC_BillingIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalStart = value;
					this.SendPropertyChanged("C_BillingIntervalStart");
					this.OnC_BillingIntervalStartChanged();
				}
			}
		}
		
		[Column(Name="c_BillingIntervalEnd", Storage="_C_BillingIntervalEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_BillingIntervalEnd
		{
			get
			{
				return this._C_BillingIntervalEnd;
			}
			set
			{
				if ((this._C_BillingIntervalEnd != value))
				{
					this.OnC_BillingIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._C_BillingIntervalEnd = value;
					this.SendPropertyChanged("C_BillingIntervalEnd");
					this.OnC_BillingIntervalEndChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionStart", Storage="_C_RCIntervalSubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionStart
		{
			get
			{
				return this._C_RCIntervalSubscriptionStart;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionStart != value))
				{
					this.OnC_RCIntervalSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionStart = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionStart");
					this.OnC_RCIntervalSubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_RCIntervalSubscriptionEnd", Storage="_C_RCIntervalSubscriptionEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_RCIntervalSubscriptionEnd
		{
			get
			{
				return this._C_RCIntervalSubscriptionEnd;
			}
			set
			{
				if ((this._C_RCIntervalSubscriptionEnd != value))
				{
					this.OnC_RCIntervalSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_RCIntervalSubscriptionEnd = value;
					this.SendPropertyChanged("C_RCIntervalSubscriptionEnd");
					this.OnC_RCIntervalSubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionStart", Storage="_C_SubscriptionStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_SubscriptionStart
		{
			get
			{
				return this._C_SubscriptionStart;
			}
			set
			{
				if ((this._C_SubscriptionStart != value))
				{
					this.OnC_SubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionStart = value;
					this.SendPropertyChanged("C_SubscriptionStart");
					this.OnC_SubscriptionStartChanged();
				}
			}
		}
		
		[Column(Name="c_SubscriptionEnd", Storage="_C_SubscriptionEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_SubscriptionEnd
		{
			get
			{
				return this._C_SubscriptionEnd;
			}
			set
			{
				if ((this._C_SubscriptionEnd != value))
				{
					this.OnC_SubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._C_SubscriptionEnd = value;
					this.SendPropertyChanged("C_SubscriptionEnd");
					this.OnC_SubscriptionEndChanged();
				}
			}
		}
		
		[Column(Name="c_Advance", Storage="_C_Advance", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_Advance
		{
			get
			{
				return this._C_Advance;
			}
			set
			{
				if ((this._C_Advance != value))
				{
					this.OnC_AdvanceChanging(value);
					this.SendPropertyChanging();
					this._C_Advance = value;
					this.SendPropertyChanged("C_Advance");
					this.OnC_AdvanceChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnSubscription", Storage="_C_ProrateOnSubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnSubscription
		{
			get
			{
				return this._C_ProrateOnSubscription;
			}
			set
			{
				if ((this._C_ProrateOnSubscription != value))
				{
					this.OnC_ProrateOnSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnSubscription = value;
					this.SendPropertyChanged("C_ProrateOnSubscription");
					this.OnC_ProrateOnSubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValueStart", Storage="_C_UnitValueStart", DbType="DateTime NOT NULL")]
		public System.DateTime C_UnitValueStart
		{
			get
			{
				return this._C_UnitValueStart;
			}
			set
			{
				if ((this._C_UnitValueStart != value))
				{
					this.OnC_UnitValueStartChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValueStart = value;
					this.SendPropertyChanged("C_UnitValueStart");
					this.OnC_UnitValueStartChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValueEnd", Storage="_C_UnitValueEnd", DbType="DateTime NOT NULL")]
		public System.DateTime C_UnitValueEnd
		{
			get
			{
				return this._C_UnitValueEnd;
			}
			set
			{
				if ((this._C_UnitValueEnd != value))
				{
					this.OnC_UnitValueEndChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValueEnd = value;
					this.SendPropertyChanged("C_UnitValueEnd");
					this.OnC_UnitValueEndChanged();
				}
			}
		}
		
		[Column(Name="c_UnitValue", Storage="_C_UnitValue", DbType="Decimal(22,10) NOT NULL")]
		public decimal C_UnitValue
		{
			get
			{
				return this._C_UnitValue;
			}
			set
			{
				if ((this._C_UnitValue != value))
				{
					this.OnC_UnitValueChanging(value);
					this.SendPropertyChanging();
					this._C_UnitValue = value;
					this.SendPropertyChanged("C_UnitValue");
					this.OnC_UnitValueChanged();
				}
			}
		}
		
		[Column(Name="c_RatingType", Storage="_C_RatingType", DbType="Int NOT NULL")]
		public int C_RatingType
		{
			get
			{
				return this._C_RatingType;
			}
			set
			{
				if ((this._C_RatingType != value))
				{
					this.OnC_RatingTypeChanging(value);
					this.SendPropertyChanging();
					this._C_RatingType = value;
					this.SendPropertyChanged("C_RatingType");
					this.OnC_RatingTypeChanged();
				}
			}
		}
		
		[Column(Name="c_ProrateOnUnsubscription", Storage="_C_ProrateOnUnsubscription", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string C_ProrateOnUnsubscription
		{
			get
			{
				return this._C_ProrateOnUnsubscription;
			}
			set
			{
				if ((this._C_ProrateOnUnsubscription != value))
				{
					this.OnC_ProrateOnUnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._C_ProrateOnUnsubscription = value;
					this.SendPropertyChanged("C_ProrateOnUnsubscription");
					this.OnC_ProrateOnUnsubscriptionChanged();
				}
			}
		}
		
		[Column(Name="c_ProrationCycleLength", Storage="_C_ProrationCycleLength", DbType="Int NOT NULL")]
		public int C_ProrationCycleLength
		{
			get
			{
				return this._C_ProrationCycleLength;
			}
			set
			{
				if ((this._C_ProrationCycleLength != value))
				{
					this.OnC_ProrationCycleLengthChanging(value);
					this.SendPropertyChanging();
					this._C_ProrationCycleLength = value;
					this.SendPropertyChanged("C_ProrationCycleLength");
					this.OnC_ProrationCycleLengthChanged();
				}
			}
		}
		
		[Column(Name="c_BilledRateDate", Storage="_C_BilledRateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_BilledRateDate
		{
			get
			{
				return this._C_BilledRateDate;
			}
			set
			{
				if ((this._C_BilledRateDate != value))
				{
					this.OnC_BilledRateDateChanging(value);
					this.SendPropertyChanging();
					this._C_BilledRateDate = value;
					this.SendPropertyChanged("C_BilledRateDate");
					this.OnC_BilledRateDateChanged();
				}
			}
		}
		
		[Column(Name="c__SubscriptionID", Storage="_C__SubscriptionID", DbType="Int NOT NULL")]
		public int C__SubscriptionID
		{
			get
			{
				return this._C__SubscriptionID;
			}
			set
			{
				if ((this._C__SubscriptionID != value))
				{
					this.OnC__SubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._C__SubscriptionID = value;
					this.SendPropertyChanged("C__SubscriptionID");
					this.OnC__SubscriptionIDChanged();
				}
			}
		}
		
		[Column(Name="c__AccountID", Storage="_C__AccountID", DbType="Int NOT NULL")]
		public int C__AccountID
		{
			get
			{
				return this._C__AccountID;
			}
			set
			{
				if ((this._C__AccountID != value))
				{
					this.OnC__AccountIDChanging(value);
					this.SendPropertyChanging();
					this._C__AccountID = value;
					this.SendPropertyChanged("C__AccountID");
					this.OnC__AccountIDChanged();
				}
			}
		}
		
		[Column(Name="c__PayingAccount", Storage="_C__PayingAccount", DbType="Int NOT NULL")]
		public int C__PayingAccount
		{
			get
			{
				return this._C__PayingAccount;
			}
			set
			{
				if ((this._C__PayingAccount != value))
				{
					this.OnC__PayingAccountChanging(value);
					this.SendPropertyChanging();
					this._C__PayingAccount = value;
					this.SendPropertyChanged("C__PayingAccount");
					this.OnC__PayingAccountChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemInstanceID", Storage="_C__PriceableItemInstanceID", DbType="Int NOT NULL")]
		public int C__PriceableItemInstanceID
		{
			get
			{
				return this._C__PriceableItemInstanceID;
			}
			set
			{
				if ((this._C__PriceableItemInstanceID != value))
				{
					this.OnC__PriceableItemInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemInstanceID = value;
					this.SendPropertyChanged("C__PriceableItemInstanceID");
					this.OnC__PriceableItemInstanceIDChanged();
				}
			}
		}
		
		[Column(Name="c__PriceableItemTemplateID", Storage="_C__PriceableItemTemplateID", DbType="Int NOT NULL")]
		public int C__PriceableItemTemplateID
		{
			get
			{
				return this._C__PriceableItemTemplateID;
			}
			set
			{
				if ((this._C__PriceableItemTemplateID != value))
				{
					this.OnC__PriceableItemTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._C__PriceableItemTemplateID = value;
					this.SendPropertyChanged("C__PriceableItemTemplateID");
					this.OnC__PriceableItemTemplateIDChanged();
				}
			}
		}
		
		[Column(Name="c__ProductOfferingID", Storage="_C__ProductOfferingID", DbType="Int NOT NULL")]
		public int C__ProductOfferingID
		{
			get
			{
				return this._C__ProductOfferingID;
			}
			set
			{
				if ((this._C__ProductOfferingID != value))
				{
					this.OnC__ProductOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._C__ProductOfferingID = value;
					this.SendPropertyChanged("C__ProductOfferingID");
					this.OnC__ProductOfferingIDChanged();
				}
			}
		}
		
		[Column(Name="c_FinalizeDate", Storage="_C_FinalizeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_FinalizeDate
		{
			get
			{
				return this._C_FinalizeDate;
			}
			set
			{
				if ((this._C_FinalizeDate != value))
				{
					this.OnC_FinalizeDateChanging(value);
					this.SendPropertyChanging();
					this._C_FinalizeDate = value;
					this.SendPropertyChanged("C_FinalizeDate");
					this.OnC_FinalizeDateChanged();
				}
			}
		}
		
		[Column(Name="c__IntervalID", Storage="_C__IntervalID", DbType="Int")]
		public System.Nullable<int> C__IntervalID
		{
			get
			{
				return this._C__IntervalID;
			}
			set
			{
				if ((this._C__IntervalID != value))
				{
					this.OnC__IntervalIDChanging(value);
					this.SendPropertyChanging();
					this._C__IntervalID = value;
					this.SendPropertyChanged("C__IntervalID");
					this.OnC__IntervalIDChanged();
				}
			}
		}
		
		[Column(Name="c__Resubmit", Storage="_C__Resubmit", DbType="Char(1)")]
		public string C__Resubmit
		{
			get
			{
				return this._C__Resubmit;
			}
			set
			{
				if ((this._C__Resubmit != value))
				{
					this.OnC__ResubmitChanging(value);
					this.SendPropertyChanging();
					this._C__Resubmit = value;
					this.SendPropertyChanged("C__Resubmit");
					this.OnC__ResubmitChanged();
				}
			}
		}
		
		[Column(Name="c__TransactionCookie", Storage="_C__TransactionCookie", DbType="NVarChar(256)")]
		public string C__TransactionCookie
		{
			get
			{
				return this._C__TransactionCookie;
			}
			set
			{
				if ((this._C__TransactionCookie != value))
				{
					this.OnC__TransactionCookieChanging(value);
					this.SendPropertyChanging();
					this._C__TransactionCookie = value;
					this.SendPropertyChanged("C__TransactionCookie");
					this.OnC__TransactionCookieChanged();
				}
			}
		}
		
		[Column(Name="c__CollectionID", Storage="_C__CollectionID", DbType="Binary(16)", CanBeNull=true)]
		public System.Data.Linq.Binary C__CollectionID
		{
			get
			{
				return this._C__CollectionID;
			}
			set
			{
				if ((this._C__CollectionID != value))
				{
					this.OnC__CollectionIDChanging(value);
					this.SendPropertyChanging();
					this._C__CollectionID = value;
					this.SendPropertyChanged("C__CollectionID");
					this.OnC__CollectionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_sys_track_adapter_run")]
	public partial class T_sys_track_adapter_run
	{
		
		private string _Adapter_type;
		
		private System.Nullable<System.DateTime> _Action_datetime;
		
		private string _Action_desc;
		
		public T_sys_track_adapter_run()
		{
		}
		
		[Column(Name="adapter_type", Storage="_Adapter_type", DbType="VarChar(50)")]
		public string Adapter_type
		{
			get
			{
				return this._Adapter_type;
			}
			set
			{
				if ((this._Adapter_type != value))
				{
					this._Adapter_type = value;
				}
			}
		}
		
		[Column(Name="action_datetime", Storage="_Action_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_datetime
		{
			get
			{
				return this._Action_datetime;
			}
			set
			{
				if ((this._Action_datetime != value))
				{
					this._Action_datetime = value;
				}
			}
		}
		
		[Column(Name="action_desc", Storage="_Action_desc", DbType="NVarChar(200)")]
		public string Action_desc
		{
			get
			{
				return this._Action_desc;
			}
			set
			{
				if ((this._Action_desc != value))
				{
					this._Action_desc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_sys_upgrade")]
	public partial class T_sys_upgrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Upgrade_id;
		
		private string _Target_db_version;
		
		private string _Core_db_schema_version;
		
		private string _Customization_version;
		
		private System.Nullable<System.DateTime> _Dt_start_db_upgrade;
		
		private System.Nullable<System.DateTime> _Dt_end_db_upgrade;
		
		private string _Db_upgrade_status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpgrade_idChanging(int value);
    partial void OnUpgrade_idChanged();
    partial void OnTarget_db_versionChanging(string value);
    partial void OnTarget_db_versionChanged();
    partial void OnCore_db_schema_versionChanging(string value);
    partial void OnCore_db_schema_versionChanged();
    partial void OnCustomization_versionChanging(string value);
    partial void OnCustomization_versionChanged();
    partial void OnDt_start_db_upgradeChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_start_db_upgradeChanged();
    partial void OnDt_end_db_upgradeChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_end_db_upgradeChanged();
    partial void OnDb_upgrade_statusChanging(string value);
    partial void OnDb_upgrade_statusChanged();
    #endregion
		
		public T_sys_upgrade()
		{
			OnCreated();
		}
		
		[Column(Name="upgrade_id", Storage="_Upgrade_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Upgrade_id
		{
			get
			{
				return this._Upgrade_id;
			}
			set
			{
				if ((this._Upgrade_id != value))
				{
					this.OnUpgrade_idChanging(value);
					this.SendPropertyChanging();
					this._Upgrade_id = value;
					this.SendPropertyChanged("Upgrade_id");
					this.OnUpgrade_idChanged();
				}
			}
		}
		
		[Column(Name="target_db_version", Storage="_Target_db_version", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Target_db_version
		{
			get
			{
				return this._Target_db_version;
			}
			set
			{
				if ((this._Target_db_version != value))
				{
					this.OnTarget_db_versionChanging(value);
					this.SendPropertyChanging();
					this._Target_db_version = value;
					this.SendPropertyChanged("Target_db_version");
					this.OnTarget_db_versionChanged();
				}
			}
		}
		
		[Column(Name="core_db_schema_version", Storage="_Core_db_schema_version", DbType="VarChar(50)")]
		public string Core_db_schema_version
		{
			get
			{
				return this._Core_db_schema_version;
			}
			set
			{
				if ((this._Core_db_schema_version != value))
				{
					this.OnCore_db_schema_versionChanging(value);
					this.SendPropertyChanging();
					this._Core_db_schema_version = value;
					this.SendPropertyChanged("Core_db_schema_version");
					this.OnCore_db_schema_versionChanged();
				}
			}
		}
		
		[Column(Name="customization_version", Storage="_Customization_version", DbType="VarChar(50)")]
		public string Customization_version
		{
			get
			{
				return this._Customization_version;
			}
			set
			{
				if ((this._Customization_version != value))
				{
					this.OnCustomization_versionChanging(value);
					this.SendPropertyChanging();
					this._Customization_version = value;
					this.SendPropertyChanged("Customization_version");
					this.OnCustomization_versionChanged();
				}
			}
		}
		
		[Column(Name="dt_start_db_upgrade", Storage="_Dt_start_db_upgrade", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_start_db_upgrade
		{
			get
			{
				return this._Dt_start_db_upgrade;
			}
			set
			{
				if ((this._Dt_start_db_upgrade != value))
				{
					this.OnDt_start_db_upgradeChanging(value);
					this.SendPropertyChanging();
					this._Dt_start_db_upgrade = value;
					this.SendPropertyChanged("Dt_start_db_upgrade");
					this.OnDt_start_db_upgradeChanged();
				}
			}
		}
		
		[Column(Name="dt_end_db_upgrade", Storage="_Dt_end_db_upgrade", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end_db_upgrade
		{
			get
			{
				return this._Dt_end_db_upgrade;
			}
			set
			{
				if ((this._Dt_end_db_upgrade != value))
				{
					this.OnDt_end_db_upgradeChanging(value);
					this.SendPropertyChanging();
					this._Dt_end_db_upgrade = value;
					this.SendPropertyChanged("Dt_end_db_upgrade");
					this.OnDt_end_db_upgradeChanged();
				}
			}
		}
		
		[Column(Name="db_upgrade_status", Storage="_Db_upgrade_status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Db_upgrade_status
		{
			get
			{
				return this._Db_upgrade_status;
			}
			set
			{
				if ((this._Db_upgrade_status != value))
				{
					this.OnDb_upgrade_statusChanging(value);
					this.SendPropertyChanging();
					this._Db_upgrade_status = value;
					this.SendPropertyChanged("Db_upgrade_status");
					this.OnDb_upgrade_statusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tariff")]
	public partial class T_tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_tariff;
		
		private int _Id_enum_tariff;
		
		private string _Tx_currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_tariffChanging(int value);
    partial void OnId_tariffChanged();
    partial void OnId_enum_tariffChanging(int value);
    partial void OnId_enum_tariffChanged();
    partial void OnTx_currencyChanging(string value);
    partial void OnTx_currencyChanged();
    #endregion
		
		public T_tariff()
		{
			OnCreated();
		}
		
		[Column(Name="id_tariff", Storage="_Id_tariff", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_tariff
		{
			get
			{
				return this._Id_tariff;
			}
			set
			{
				if ((this._Id_tariff != value))
				{
					this.OnId_tariffChanging(value);
					this.SendPropertyChanging();
					this._Id_tariff = value;
					this.SendPropertyChanged("Id_tariff");
					this.OnId_tariffChanged();
				}
			}
		}
		
		[Column(Name="id_enum_tariff", Storage="_Id_enum_tariff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_enum_tariff
		{
			get
			{
				return this._Id_enum_tariff;
			}
			set
			{
				if ((this._Id_enum_tariff != value))
				{
					this.OnId_enum_tariffChanging(value);
					this.SendPropertyChanging();
					this._Id_enum_tariff = value;
					this.SendPropertyChanged("Id_enum_tariff");
					this.OnId_enum_tariffChanged();
				}
			}
		}
		
		[Column(Name="tx_currency", Storage="_Tx_currency", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_currency
		{
			get
			{
				return this._Tx_currency;
			}
			set
			{
				if ((this._Tx_currency != value))
				{
					this.OnTx_currencyChanging(value);
					this.SendPropertyChanging();
					this._Tx_currency = value;
					this.SendPropertyChanged("Tx_currency");
					this.OnTx_currencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tax_billsoft_exemptions")]
	public partial class T_tax_billsoft_exemptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_tax_exemption;
		
		private int _Id_ancestor;
		
		private int _Id_acc;
		
		private string _Certificate_id;
		
		private int _Pcode;
		
		private int _Tax_type;
		
		private int _Jur_level;
		
		private System.DateTime _Start_date;
		
		private System.DateTime _End_date;
		
		private System.DateTime _Create_date;
		
		private System.Nullable<System.DateTime> _Update_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_tax_exemptionChanging(int value);
    partial void OnId_tax_exemptionChanged();
    partial void OnId_ancestorChanging(int value);
    partial void OnId_ancestorChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnCertificate_idChanging(string value);
    partial void OnCertificate_idChanged();
    partial void OnPcodeChanging(int value);
    partial void OnPcodeChanged();
    partial void OnTax_typeChanging(int value);
    partial void OnTax_typeChanged();
    partial void OnJur_levelChanging(int value);
    partial void OnJur_levelChanged();
    partial void OnStart_dateChanging(System.DateTime value);
    partial void OnStart_dateChanged();
    partial void OnEnd_dateChanging(System.DateTime value);
    partial void OnEnd_dateChanged();
    partial void OnCreate_dateChanging(System.DateTime value);
    partial void OnCreate_dateChanged();
    partial void OnUpdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdate_dateChanged();
    #endregion
		
		public T_tax_billsoft_exemptions()
		{
			OnCreated();
		}
		
		[Column(Name="id_tax_exemption", Storage="_Id_tax_exemption", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_tax_exemption
		{
			get
			{
				return this._Id_tax_exemption;
			}
			set
			{
				if ((this._Id_tax_exemption != value))
				{
					this.OnId_tax_exemptionChanging(value);
					this.SendPropertyChanging();
					this._Id_tax_exemption = value;
					this.SendPropertyChanged("Id_tax_exemption");
					this.OnId_tax_exemptionChanged();
				}
			}
		}
		
		[Column(Name="id_ancestor", Storage="_Id_ancestor", DbType="Int NOT NULL")]
		public int Id_ancestor
		{
			get
			{
				return this._Id_ancestor;
			}
			set
			{
				if ((this._Id_ancestor != value))
				{
					this.OnId_ancestorChanging(value);
					this.SendPropertyChanging();
					this._Id_ancestor = value;
					this.SendPropertyChanged("Id_ancestor");
					this.OnId_ancestorChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="certificate_id", Storage="_Certificate_id", DbType="NVarChar(255)")]
		public string Certificate_id
		{
			get
			{
				return this._Certificate_id;
			}
			set
			{
				if ((this._Certificate_id != value))
				{
					this.OnCertificate_idChanging(value);
					this.SendPropertyChanging();
					this._Certificate_id = value;
					this.SendPropertyChanged("Certificate_id");
					this.OnCertificate_idChanged();
				}
			}
		}
		
		[Column(Name="pcode", Storage="_Pcode", DbType="Int NOT NULL")]
		public int Pcode
		{
			get
			{
				return this._Pcode;
			}
			set
			{
				if ((this._Pcode != value))
				{
					this.OnPcodeChanging(value);
					this.SendPropertyChanging();
					this._Pcode = value;
					this.SendPropertyChanged("Pcode");
					this.OnPcodeChanged();
				}
			}
		}
		
		[Column(Name="tax_type", Storage="_Tax_type", DbType="Int NOT NULL")]
		public int Tax_type
		{
			get
			{
				return this._Tax_type;
			}
			set
			{
				if ((this._Tax_type != value))
				{
					this.OnTax_typeChanging(value);
					this.SendPropertyChanging();
					this._Tax_type = value;
					this.SendPropertyChanged("Tax_type");
					this.OnTax_typeChanged();
				}
			}
		}
		
		[Column(Name="jur_level", Storage="_Jur_level", DbType="Int NOT NULL")]
		public int Jur_level
		{
			get
			{
				return this._Jur_level;
			}
			set
			{
				if ((this._Jur_level != value))
				{
					this.OnJur_levelChanging(value);
					this.SendPropertyChanging();
					this._Jur_level = value;
					this.SendPropertyChanged("Jur_level");
					this.OnJur_levelChanged();
				}
			}
		}
		
		[Column(Name="start_date", Storage="_Start_date", DbType="DateTime NOT NULL")]
		public System.DateTime Start_date
		{
			get
			{
				return this._Start_date;
			}
			set
			{
				if ((this._Start_date != value))
				{
					this.OnStart_dateChanging(value);
					this.SendPropertyChanging();
					this._Start_date = value;
					this.SendPropertyChanged("Start_date");
					this.OnStart_dateChanged();
				}
			}
		}
		
		[Column(Name="end_date", Storage="_End_date", DbType="DateTime NOT NULL")]
		public System.DateTime End_date
		{
			get
			{
				return this._End_date;
			}
			set
			{
				if ((this._End_date != value))
				{
					this.OnEnd_dateChanging(value);
					this.SendPropertyChanging();
					this._End_date = value;
					this.SendPropertyChanged("End_date");
					this.OnEnd_dateChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_Update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Update_date
		{
			get
			{
				return this._Update_date;
			}
			set
			{
				if ((this._Update_date != value))
				{
					this.OnUpdate_dateChanging(value);
					this.SendPropertyChanging();
					this._Update_date = value;
					this.SendPropertyChanged("Update_date");
					this.OnUpdate_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tax_billsoft_override")]
	public partial class T_tax_billsoft_override : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_tax_override;
		
		private int _Id_ancestor;
		
		private int _Id_acc;
		
		private int _Pcode;
		
		private int _Scope;
		
		private int _Tax_type;
		
		private int _Jur_level;
		
		private System.DateTime _EffectiveDate;
		
		private string _LevelExempt;
		
		private decimal _Tax_rate;
		
		private decimal _Maximum;
		
		private string _Replace_jur;
		
		private decimal _Excess;
		
		private System.DateTime _Create_date;
		
		private System.Nullable<System.DateTime> _Update_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_tax_overrideChanging(int value);
    partial void OnId_tax_overrideChanged();
    partial void OnId_ancestorChanging(int value);
    partial void OnId_ancestorChanged();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnPcodeChanging(int value);
    partial void OnPcodeChanged();
    partial void OnScopeChanging(int value);
    partial void OnScopeChanged();
    partial void OnTax_typeChanging(int value);
    partial void OnTax_typeChanged();
    partial void OnJur_levelChanging(int value);
    partial void OnJur_levelChanged();
    partial void OnEffectiveDateChanging(System.DateTime value);
    partial void OnEffectiveDateChanged();
    partial void OnLevelExemptChanging(string value);
    partial void OnLevelExemptChanged();
    partial void OnTax_rateChanging(decimal value);
    partial void OnTax_rateChanged();
    partial void OnMaximumChanging(decimal value);
    partial void OnMaximumChanged();
    partial void OnReplace_jurChanging(string value);
    partial void OnReplace_jurChanged();
    partial void OnExcessChanging(decimal value);
    partial void OnExcessChanged();
    partial void OnCreate_dateChanging(System.DateTime value);
    partial void OnCreate_dateChanged();
    partial void OnUpdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdate_dateChanged();
    #endregion
		
		public T_tax_billsoft_override()
		{
			OnCreated();
		}
		
		[Column(Name="id_tax_override", Storage="_Id_tax_override", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_tax_override
		{
			get
			{
				return this._Id_tax_override;
			}
			set
			{
				if ((this._Id_tax_override != value))
				{
					this.OnId_tax_overrideChanging(value);
					this.SendPropertyChanging();
					this._Id_tax_override = value;
					this.SendPropertyChanged("Id_tax_override");
					this.OnId_tax_overrideChanged();
				}
			}
		}
		
		[Column(Name="id_ancestor", Storage="_Id_ancestor", DbType="Int NOT NULL")]
		public int Id_ancestor
		{
			get
			{
				return this._Id_ancestor;
			}
			set
			{
				if ((this._Id_ancestor != value))
				{
					this.OnId_ancestorChanging(value);
					this.SendPropertyChanging();
					this._Id_ancestor = value;
					this.SendPropertyChanged("Id_ancestor");
					this.OnId_ancestorChanged();
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="pcode", Storage="_Pcode", DbType="Int NOT NULL")]
		public int Pcode
		{
			get
			{
				return this._Pcode;
			}
			set
			{
				if ((this._Pcode != value))
				{
					this.OnPcodeChanging(value);
					this.SendPropertyChanging();
					this._Pcode = value;
					this.SendPropertyChanged("Pcode");
					this.OnPcodeChanged();
				}
			}
		}
		
		[Column(Name="scope", Storage="_Scope", DbType="Int NOT NULL")]
		public int Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[Column(Name="tax_type", Storage="_Tax_type", DbType="Int NOT NULL")]
		public int Tax_type
		{
			get
			{
				return this._Tax_type;
			}
			set
			{
				if ((this._Tax_type != value))
				{
					this.OnTax_typeChanging(value);
					this.SendPropertyChanging();
					this._Tax_type = value;
					this.SendPropertyChanged("Tax_type");
					this.OnTax_typeChanged();
				}
			}
		}
		
		[Column(Name="jur_level", Storage="_Jur_level", DbType="Int NOT NULL")]
		public int Jur_level
		{
			get
			{
				return this._Jur_level;
			}
			set
			{
				if ((this._Jur_level != value))
				{
					this.OnJur_levelChanging(value);
					this.SendPropertyChanging();
					this._Jur_level = value;
					this.SendPropertyChanged("Jur_level");
					this.OnJur_levelChanged();
				}
			}
		}
		
		[Column(Name="effectiveDate", Storage="_EffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[Column(Name="levelExempt", Storage="_LevelExempt", DbType="NVarChar(10)")]
		public string LevelExempt
		{
			get
			{
				return this._LevelExempt;
			}
			set
			{
				if ((this._LevelExempt != value))
				{
					this.OnLevelExemptChanging(value);
					this.SendPropertyChanging();
					this._LevelExempt = value;
					this.SendPropertyChanged("LevelExempt");
					this.OnLevelExemptChanged();
				}
			}
		}
		
		[Column(Name="tax_rate", Storage="_Tax_rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal Tax_rate
		{
			get
			{
				return this._Tax_rate;
			}
			set
			{
				if ((this._Tax_rate != value))
				{
					this.OnTax_rateChanging(value);
					this.SendPropertyChanging();
					this._Tax_rate = value;
					this.SendPropertyChanged("Tax_rate");
					this.OnTax_rateChanged();
				}
			}
		}
		
		[Column(Name="maximum", Storage="_Maximum", DbType="Decimal(22,10) NOT NULL")]
		public decimal Maximum
		{
			get
			{
				return this._Maximum;
			}
			set
			{
				if ((this._Maximum != value))
				{
					this.OnMaximumChanging(value);
					this.SendPropertyChanging();
					this._Maximum = value;
					this.SendPropertyChanged("Maximum");
					this.OnMaximumChanged();
				}
			}
		}
		
		[Column(Name="replace_jur", Storage="_Replace_jur", DbType="NVarChar(10)")]
		public string Replace_jur
		{
			get
			{
				return this._Replace_jur;
			}
			set
			{
				if ((this._Replace_jur != value))
				{
					this.OnReplace_jurChanging(value);
					this.SendPropertyChanging();
					this._Replace_jur = value;
					this.SendPropertyChanged("Replace_jur");
					this.OnReplace_jurChanged();
				}
			}
		}
		
		[Column(Name="excess", Storage="_Excess", DbType="Decimal(22,10) NOT NULL")]
		public decimal Excess
		{
			get
			{
				return this._Excess;
			}
			set
			{
				if ((this._Excess != value))
				{
					this.OnExcessChanging(value);
					this.SendPropertyChanging();
					this._Excess = value;
					this.SendPropertyChanged("Excess");
					this.OnExcessChanged();
				}
			}
		}
		
		[Column(Name="create_date", Storage="_Create_date", DbType="DateTime NOT NULL")]
		public System.DateTime Create_date
		{
			get
			{
				return this._Create_date;
			}
			set
			{
				if ((this._Create_date != value))
				{
					this.OnCreate_dateChanging(value);
					this.SendPropertyChanging();
					this._Create_date = value;
					this.SendPropertyChanged("Create_date");
					this.OnCreate_dateChanged();
				}
			}
		}
		
		[Column(Name="update_date", Storage="_Update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Update_date
		{
			get
			{
				return this._Update_date;
			}
			set
			{
				if ((this._Update_date != value))
				{
					this.OnUpdate_dateChanging(value);
					this.SendPropertyChanging();
					this._Update_date = value;
					this.SendPropertyChanged("Update_date");
					this.OnUpdate_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tax_billsoft_pc_map")]
	public partial class T_tax_billsoft_pc_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_code;
		
		private int _Transaction_type;
		
		private int _Service_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_codeChanging(string value);
    partial void OnProduct_codeChanged();
    partial void OnTransaction_typeChanging(int value);
    partial void OnTransaction_typeChanged();
    partial void OnService_typeChanging(int value);
    partial void OnService_typeChanged();
    #endregion
		
		public T_tax_billsoft_pc_map()
		{
			OnCreated();
		}
		
		[Column(Name="product_code", Storage="_Product_code", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_code
		{
			get
			{
				return this._Product_code;
			}
			set
			{
				if ((this._Product_code != value))
				{
					this.OnProduct_codeChanging(value);
					this.SendPropertyChanging();
					this._Product_code = value;
					this.SendPropertyChanged("Product_code");
					this.OnProduct_codeChanged();
				}
			}
		}
		
		[Column(Name="transaction_type", Storage="_Transaction_type", DbType="Int NOT NULL")]
		public int Transaction_type
		{
			get
			{
				return this._Transaction_type;
			}
			set
			{
				if ((this._Transaction_type != value))
				{
					this.OnTransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._Transaction_type = value;
					this.SendPropertyChanged("Transaction_type");
					this.OnTransaction_typeChanged();
				}
			}
		}
		
		[Column(Name="service_type", Storage="_Service_type", DbType="Int NOT NULL")]
		public int Service_type
		{
			get
			{
				return this._Service_type;
			}
			set
			{
				if ((this._Service_type != value))
				{
					this.OnService_typeChanging(value);
					this.SendPropertyChanging();
					this._Service_type = value;
					this.SendPropertyChanged("Service_type");
					this.OnService_typeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tax_details")]
	public partial class T_tax_details
	{
		
		private int _Id_tax_detail;
		
		private long _Id_tax_charge;
		
		private int _Id_acc;
		
		private int _Id_usage_interval;
		
		private int _Id_tax_run;
		
		private System.DateTime _Dt_calc;
		
		private decimal _Tax_amount;
		
		private decimal _Rate;
		
		private int _Tax_jur_level;
		
		private string _Tax_jur_name;
		
		private int _Tax_type;
		
		private string _Tax_type_name;
		
		private string _Is_implied;
		
		private string _Notes;
		
		public T_tax_details()
		{
		}
		
		[Column(Name="id_tax_detail", Storage="_Id_tax_detail", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id_tax_detail
		{
			get
			{
				return this._Id_tax_detail;
			}
			set
			{
				if ((this._Id_tax_detail != value))
				{
					this._Id_tax_detail = value;
				}
			}
		}
		
		[Column(Name="id_tax_charge", Storage="_Id_tax_charge", DbType="BigInt NOT NULL")]
		public long Id_tax_charge
		{
			get
			{
				return this._Id_tax_charge;
			}
			set
			{
				if ((this._Id_tax_charge != value))
				{
					this._Id_tax_charge = value;
				}
			}
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL")]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this._Id_acc = value;
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int NOT NULL")]
		public int Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this._Id_usage_interval = value;
				}
			}
		}
		
		[Column(Name="id_tax_run", Storage="_Id_tax_run", DbType="Int NOT NULL")]
		public int Id_tax_run
		{
			get
			{
				return this._Id_tax_run;
			}
			set
			{
				if ((this._Id_tax_run != value))
				{
					this._Id_tax_run = value;
				}
			}
		}
		
		[Column(Name="dt_calc", Storage="_Dt_calc", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_calc
		{
			get
			{
				return this._Dt_calc;
			}
			set
			{
				if ((this._Dt_calc != value))
				{
					this._Dt_calc = value;
				}
			}
		}
		
		[Column(Name="tax_amount", Storage="_Tax_amount", DbType="Decimal(22,10) NOT NULL")]
		public decimal Tax_amount
		{
			get
			{
				return this._Tax_amount;
			}
			set
			{
				if ((this._Tax_amount != value))
				{
					this._Tax_amount = value;
				}
			}
		}
		
		[Column(Name="rate", Storage="_Rate", DbType="Decimal(22,10) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[Column(Name="tax_jur_level", Storage="_Tax_jur_level", DbType="Int NOT NULL")]
		public int Tax_jur_level
		{
			get
			{
				return this._Tax_jur_level;
			}
			set
			{
				if ((this._Tax_jur_level != value))
				{
					this._Tax_jur_level = value;
				}
			}
		}
		
		[Column(Name="tax_jur_name", Storage="_Tax_jur_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tax_jur_name
		{
			get
			{
				return this._Tax_jur_name;
			}
			set
			{
				if ((this._Tax_jur_name != value))
				{
					this._Tax_jur_name = value;
				}
			}
		}
		
		[Column(Name="tax_type", Storage="_Tax_type", DbType="Int NOT NULL")]
		public int Tax_type
		{
			get
			{
				return this._Tax_type;
			}
			set
			{
				if ((this._Tax_type != value))
				{
					this._Tax_type = value;
				}
			}
		}
		
		[Column(Name="tax_type_name", Storage="_Tax_type_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tax_type_name
		{
			get
			{
				return this._Tax_type_name;
			}
			set
			{
				if ((this._Tax_type_name != value))
				{
					this._Tax_type_name = value;
				}
			}
		}
		
		[Column(Name="is_implied", Storage="_Is_implied", DbType="NVarChar(10)")]
		public string Is_implied
		{
			get
			{
				return this._Is_implied;
			}
			set
			{
				if ((this._Is_implied != value))
				{
					this._Is_implied = value;
				}
			}
		}
		
		[Column(Name="notes", Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_tax_run")]
	public partial class T_tax_run : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_tax_run;
		
		private int _Id_vendor;
		
		private System.Nullable<int> _Id_usage_interval;
		
		private System.Nullable<int> _Id_billgroup;
		
		private System.Nullable<System.DateTime> _Dt_start;
		
		private System.Nullable<System.DateTime> _Dt_end;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_tax_runChanging(int value);
    partial void OnId_tax_runChanged();
    partial void OnId_vendorChanging(int value);
    partial void OnId_vendorChanged();
    partial void OnId_usage_intervalChanging(System.Nullable<int> value);
    partial void OnId_usage_intervalChanged();
    partial void OnId_billgroupChanging(System.Nullable<int> value);
    partial void OnId_billgroupChanged();
    partial void OnDt_startChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_endChanged();
    #endregion
		
		public T_tax_run()
		{
			OnCreated();
		}
		
		[Column(Name="id_tax_run", Storage="_Id_tax_run", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_tax_run
		{
			get
			{
				return this._Id_tax_run;
			}
			set
			{
				if ((this._Id_tax_run != value))
				{
					this.OnId_tax_runChanging(value);
					this.SendPropertyChanging();
					this._Id_tax_run = value;
					this.SendPropertyChanged("Id_tax_run");
					this.OnId_tax_runChanged();
				}
			}
		}
		
		[Column(Name="id_vendor", Storage="_Id_vendor", DbType="Int NOT NULL")]
		public int Id_vendor
		{
			get
			{
				return this._Id_vendor;
			}
			set
			{
				if ((this._Id_vendor != value))
				{
					this.OnId_vendorChanging(value);
					this.SendPropertyChanging();
					this._Id_vendor = value;
					this.SendPropertyChanged("Id_vendor");
					this.OnId_vendorChanged();
				}
			}
		}
		
		[Column(Name="id_usage_interval", Storage="_Id_usage_interval", DbType="Int")]
		public System.Nullable<int> Id_usage_interval
		{
			get
			{
				return this._Id_usage_interval;
			}
			set
			{
				if ((this._Id_usage_interval != value))
				{
					this.OnId_usage_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_interval = value;
					this.SendPropertyChanged("Id_usage_interval");
					this.OnId_usage_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_billgroup", Storage="_Id_billgroup", DbType="Int")]
		public System.Nullable<int> Id_billgroup
		{
			get
			{
				return this._Id_billgroup;
			}
			set
			{
				if ((this._Id_billgroup != value))
				{
					this.OnId_billgroupChanging(value);
					this.SendPropertyChanging();
					this._Id_billgroup = value;
					this.SendPropertyChanged("Id_billgroup");
					this.OnId_billgroupChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_tax_vendor_params")]
	public partial class T_tax_vendor_params : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_vendor;
		
		private string _Tx_canonical_name;
		
		private string _Tx_type;
		
		private string _Tx_default;
		
		private string _Tx_description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_vendorChanging(int value);
    partial void OnId_vendorChanged();
    partial void OnTx_canonical_nameChanging(string value);
    partial void OnTx_canonical_nameChanged();
    partial void OnTx_typeChanging(string value);
    partial void OnTx_typeChanged();
    partial void OnTx_defaultChanging(string value);
    partial void OnTx_defaultChanged();
    partial void OnTx_descriptionChanging(string value);
    partial void OnTx_descriptionChanged();
    #endregion
		
		public T_tax_vendor_params()
		{
			OnCreated();
		}
		
		[Column(Name="id_vendor", Storage="_Id_vendor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_vendor
		{
			get
			{
				return this._Id_vendor;
			}
			set
			{
				if ((this._Id_vendor != value))
				{
					this.OnId_vendorChanging(value);
					this.SendPropertyChanging();
					this._Id_vendor = value;
					this.SendPropertyChanged("Id_vendor");
					this.OnId_vendorChanged();
				}
			}
		}
		
		[Column(Name="tx_canonical_name", Storage="_Tx_canonical_name", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tx_canonical_name
		{
			get
			{
				return this._Tx_canonical_name;
			}
			set
			{
				if ((this._Tx_canonical_name != value))
				{
					this.OnTx_canonical_nameChanging(value);
					this.SendPropertyChanging();
					this._Tx_canonical_name = value;
					this.SendPropertyChanged("Tx_canonical_name");
					this.OnTx_canonical_nameChanged();
				}
			}
		}
		
		[Column(Name="tx_type", Storage="_Tx_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_type
		{
			get
			{
				return this._Tx_type;
			}
			set
			{
				if ((this._Tx_type != value))
				{
					this.OnTx_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_type = value;
					this.SendPropertyChanged("Tx_type");
					this.OnTx_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_default", Storage="_Tx_default", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_default
		{
			get
			{
				return this._Tx_default;
			}
			set
			{
				if ((this._Tx_default != value))
				{
					this.OnTx_defaultChanging(value);
					this.SendPropertyChanging();
					this._Tx_default = value;
					this.SendPropertyChanged("Tx_default");
					this.OnTx_defaultChanged();
				}
			}
		}
		
		[Column(Name="tx_description", Storage="_Tx_description", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Tx_description
		{
			get
			{
				return this._Tx_description;
			}
			set
			{
				if ((this._Tx_description != value))
				{
					this.OnTx_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Tx_description = value;
					this.SendPropertyChanged("Tx_description");
					this.OnTx_descriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_unique_cons")]
	public partial class T_unique_cons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_unique_cons;
		
		private int _Id_prod_view;
		
		private string _Constraint_name;
		
		private string _Nm_table_name;
		
		private EntityRef<T_prod_view> _T_prod_view;
		
		private EntitySet<T_unique_cons_columns> _T_unique_cons_columns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_unique_consChanging(int value);
    partial void OnId_unique_consChanged();
    partial void OnId_prod_viewChanging(int value);
    partial void OnId_prod_viewChanged();
    partial void OnConstraint_nameChanging(string value);
    partial void OnConstraint_nameChanged();
    partial void OnNm_table_nameChanging(string value);
    partial void OnNm_table_nameChanged();
    #endregion
		
		public T_unique_cons()
		{
			this._T_prod_view = default(EntityRef<T_prod_view>);
			this._T_unique_cons_columns = new EntitySet<T_unique_cons_columns>(new Action<T_unique_cons_columns>(this.attach_T_unique_cons_columns), new Action<T_unique_cons_columns>(this.detach_T_unique_cons_columns));
			OnCreated();
		}
		
		[Column(Name="id_unique_cons", Storage="_Id_unique_cons", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_unique_cons
		{
			get
			{
				return this._Id_unique_cons;
			}
			set
			{
				if ((this._Id_unique_cons != value))
				{
					this.OnId_unique_consChanging(value);
					this.SendPropertyChanging();
					this._Id_unique_cons = value;
					this.SendPropertyChanged("Id_unique_cons");
					this.OnId_unique_consChanged();
				}
			}
		}
		
		[Column(Name="id_prod_view", Storage="_Id_prod_view", DbType="Int NOT NULL")]
		public int Id_prod_view
		{
			get
			{
				return this._Id_prod_view;
			}
			set
			{
				if ((this._Id_prod_view != value))
				{
					this.OnId_prod_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view = value;
					this.SendPropertyChanged("Id_prod_view");
					this.OnId_prod_viewChanged();
				}
			}
		}
		
		[Column(Name="constraint_name", Storage="_Constraint_name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Constraint_name
		{
			get
			{
				return this._Constraint_name;
			}
			set
			{
				if ((this._Constraint_name != value))
				{
					this.OnConstraint_nameChanging(value);
					this.SendPropertyChanging();
					this._Constraint_name = value;
					this.SendPropertyChanged("Constraint_name");
					this.OnConstraint_nameChanged();
				}
			}
		}
		
		[Column(Name="nm_table_name", Storage="_Nm_table_name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Nm_table_name
		{
			get
			{
				return this._Nm_table_name;
			}
			set
			{
				if ((this._Nm_table_name != value))
				{
					this.OnNm_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Nm_table_name = value;
					this.SendPropertyChanged("Nm_table_name");
					this.OnNm_table_nameChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_unique_cons", Storage="_T_prod_view", ThisKey="Id_prod_view", OtherKey="Id_prod_view", IsForeignKey=true)]
		public T_prod_view T_prod_view
		{
			get
			{
				return this._T_prod_view.Entity;
			}
			set
			{
				T_prod_view previousValue = this._T_prod_view.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view.Entity = null;
						previousValue.T_unique_cons.Remove(this);
					}
					this._T_prod_view.Entity = value;
					if ((value != null))
					{
						value.T_unique_cons.Add(this);
						this._Id_prod_view = value.Id_prod_view;
					}
					else
					{
						this._Id_prod_view = default(int);
					}
					this.SendPropertyChanged("T_prod_view");
				}
			}
		}
		
		[Association(Name="fk1_t_unique_cons_col", Storage="_T_unique_cons_columns", ThisKey="Id_unique_cons", OtherKey="Id_unique_cons", DeleteRule="NO ACTION")]
		public EntitySet<T_unique_cons_columns> T_unique_cons_columns
		{
			get
			{
				return this._T_unique_cons_columns;
			}
			set
			{
				this._T_unique_cons_columns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_unique_cons_columns(T_unique_cons_columns entity)
		{
			this.SendPropertyChanging();
			entity.T_unique_cons = this;
		}
		
		private void detach_T_unique_cons_columns(T_unique_cons_columns entity)
		{
			this.SendPropertyChanging();
			entity.T_unique_cons = null;
		}
	}
	
	[Table(Name="dbo.t_unique_cons_columns")]
	public partial class T_unique_cons_columns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_unique_cons;
		
		private int _Id_prod_view_prop;
		
		private int _Position;
		
		private EntityRef<T_unique_cons> _T_unique_cons;
		
		private EntityRef<T_prod_view_prop> _T_prod_view_prop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_unique_consChanging(int value);
    partial void OnId_unique_consChanged();
    partial void OnId_prod_view_propChanging(int value);
    partial void OnId_prod_view_propChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public T_unique_cons_columns()
		{
			this._T_unique_cons = default(EntityRef<T_unique_cons>);
			this._T_prod_view_prop = default(EntityRef<T_prod_view_prop>);
			OnCreated();
		}
		
		[Column(Name="id_unique_cons", Storage="_Id_unique_cons", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_unique_cons
		{
			get
			{
				return this._Id_unique_cons;
			}
			set
			{
				if ((this._Id_unique_cons != value))
				{
					this.OnId_unique_consChanging(value);
					this.SendPropertyChanging();
					this._Id_unique_cons = value;
					this.SendPropertyChanged("Id_unique_cons");
					this.OnId_unique_consChanged();
				}
			}
		}
		
		[Column(Name="id_prod_view_prop", Storage="_Id_prod_view_prop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_prod_view_prop
		{
			get
			{
				return this._Id_prod_view_prop;
			}
			set
			{
				if ((this._Id_prod_view_prop != value))
				{
					this.OnId_prod_view_propChanging(value);
					this.SendPropertyChanging();
					this._Id_prod_view_prop = value;
					this.SendPropertyChanged("Id_prod_view_prop");
					this.OnId_prod_view_propChanged();
				}
			}
		}
		
		[Column(Name="position", Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_unique_cons_col", Storage="_T_unique_cons", ThisKey="Id_unique_cons", OtherKey="Id_unique_cons", IsForeignKey=true)]
		public T_unique_cons T_unique_cons
		{
			get
			{
				return this._T_unique_cons.Entity;
			}
			set
			{
				T_unique_cons previousValue = this._T_unique_cons.Entity;
				if (((previousValue != value) 
							|| (this._T_unique_cons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_unique_cons.Entity = null;
						previousValue.T_unique_cons_columns.Remove(this);
					}
					this._T_unique_cons.Entity = value;
					if ((value != null))
					{
						value.T_unique_cons_columns.Add(this);
						this._Id_unique_cons = value.Id_unique_cons;
					}
					else
					{
						this._Id_unique_cons = default(int);
					}
					this.SendPropertyChanged("T_unique_cons");
				}
			}
		}
		
		[Association(Name="fk2_t_unique_cons_col", Storage="_T_prod_view_prop", ThisKey="Id_prod_view_prop", OtherKey="Id_prod_view_prop", IsForeignKey=true)]
		public T_prod_view_prop T_prod_view_prop
		{
			get
			{
				return this._T_prod_view_prop.Entity;
			}
			set
			{
				T_prod_view_prop previousValue = this._T_prod_view_prop.Entity;
				if (((previousValue != value) 
							|| (this._T_prod_view_prop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_prod_view_prop.Entity = null;
						previousValue.T_unique_cons_columns.Remove(this);
					}
					this._T_prod_view_prop.Entity = value;
					if ((value != null))
					{
						value.T_unique_cons_columns.Add(this);
						this._Id_prod_view_prop = value.Id_prod_view_prop;
					}
					else
					{
						this._Id_prod_view_prop = default(int);
					}
					this.SendPropertyChanged("T_prod_view_prop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_updatestatsinfo")]
	public partial class T_updatestatsinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tab_type;
		
		private string _Tab_name;
		
		private System.Nullable<long> _Total_rows;
		
		private System.Nullable<long> _Default_sampled_rows;
		
		private System.Nullable<long> _Sampled_rows;
		
		private System.Nullable<int> _Num_of_stats;
		
		private System.Nullable<int> _Execution_time_sec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTab_typeChanging(string value);
    partial void OnTab_typeChanged();
    partial void OnTab_nameChanging(string value);
    partial void OnTab_nameChanged();
    partial void OnTotal_rowsChanging(System.Nullable<long> value);
    partial void OnTotal_rowsChanged();
    partial void OnDefault_sampled_rowsChanging(System.Nullable<long> value);
    partial void OnDefault_sampled_rowsChanged();
    partial void OnSampled_rowsChanging(System.Nullable<long> value);
    partial void OnSampled_rowsChanged();
    partial void OnNum_of_statsChanging(System.Nullable<int> value);
    partial void OnNum_of_statsChanged();
    partial void OnExecution_time_secChanging(System.Nullable<int> value);
    partial void OnExecution_time_secChanged();
    #endregion
		
		public T_updatestatsinfo()
		{
			OnCreated();
		}
		
		[Column(Name="tab_type", Storage="_Tab_type", DbType="NVarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tab_type
		{
			get
			{
				return this._Tab_type;
			}
			set
			{
				if ((this._Tab_type != value))
				{
					this.OnTab_typeChanging(value);
					this.SendPropertyChanging();
					this._Tab_type = value;
					this.SendPropertyChanged("Tab_type");
					this.OnTab_typeChanged();
				}
			}
		}
		
		[Column(Name="tab_name", Storage="_Tab_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tab_name
		{
			get
			{
				return this._Tab_name;
			}
			set
			{
				if ((this._Tab_name != value))
				{
					this.OnTab_nameChanging(value);
					this.SendPropertyChanging();
					this._Tab_name = value;
					this.SendPropertyChanged("Tab_name");
					this.OnTab_nameChanged();
				}
			}
		}
		
		[Column(Name="total_rows", Storage="_Total_rows", DbType="BigInt")]
		public System.Nullable<long> Total_rows
		{
			get
			{
				return this._Total_rows;
			}
			set
			{
				if ((this._Total_rows != value))
				{
					this.OnTotal_rowsChanging(value);
					this.SendPropertyChanging();
					this._Total_rows = value;
					this.SendPropertyChanged("Total_rows");
					this.OnTotal_rowsChanged();
				}
			}
		}
		
		[Column(Name="default_sampled_rows", Storage="_Default_sampled_rows", DbType="BigInt")]
		public System.Nullable<long> Default_sampled_rows
		{
			get
			{
				return this._Default_sampled_rows;
			}
			set
			{
				if ((this._Default_sampled_rows != value))
				{
					this.OnDefault_sampled_rowsChanging(value);
					this.SendPropertyChanging();
					this._Default_sampled_rows = value;
					this.SendPropertyChanged("Default_sampled_rows");
					this.OnDefault_sampled_rowsChanged();
				}
			}
		}
		
		[Column(Name="sampled_rows", Storage="_Sampled_rows", DbType="BigInt")]
		public System.Nullable<long> Sampled_rows
		{
			get
			{
				return this._Sampled_rows;
			}
			set
			{
				if ((this._Sampled_rows != value))
				{
					this.OnSampled_rowsChanging(value);
					this.SendPropertyChanging();
					this._Sampled_rows = value;
					this.SendPropertyChanged("Sampled_rows");
					this.OnSampled_rowsChanged();
				}
			}
		}
		
		[Column(Name="num_of_stats", Storage="_Num_of_stats", DbType="Int")]
		public System.Nullable<int> Num_of_stats
		{
			get
			{
				return this._Num_of_stats;
			}
			set
			{
				if ((this._Num_of_stats != value))
				{
					this.OnNum_of_statsChanging(value);
					this.SendPropertyChanging();
					this._Num_of_stats = value;
					this.SendPropertyChanged("Num_of_stats");
					this.OnNum_of_statsChanged();
				}
			}
		}
		
		[Column(Name="execution_time_sec", Storage="_Execution_time_sec", DbType="Int")]
		public System.Nullable<int> Execution_time_sec
		{
			get
			{
				return this._Execution_time_sec;
			}
			set
			{
				if ((this._Execution_time_sec != value))
				{
					this.OnExecution_time_secChanging(value);
					this.SendPropertyChanging();
					this._Execution_time_sec = value;
					this.SendPropertyChanged("Execution_time_sec");
					this.OnExecution_time_secChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_usage_cycle")]
	public partial class T_usage_cycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_usage_cycle;
		
		private int _Id_cycle_type;
		
		private System.Nullable<int> _Day_of_month;
		
		private string _Tx_period_type;
		
		private System.Nullable<int> _Day_of_week;
		
		private System.Nullable<int> _First_day_of_month;
		
		private System.Nullable<int> _Second_day_of_month;
		
		private System.Nullable<int> _Start_day;
		
		private System.Nullable<int> _Start_month;
		
		private System.Nullable<int> _Start_year;
		
		private EntitySet<T_pc_interval> _T_pc_interval;
		
		private EntitySet<T_aggregate> _T_aggregate;
		
		private EntitySet<T_group_sub> _T_group_sub;
		
		private EntityRef<T_usage_cycle_type> _T_usage_cycle_type;
		
		private EntitySet<T_usage_interval> _T_usage_interval;
		
		private EntitySet<T_acc_usage_cycle> _T_acc_usage_cycle;
		
		private EntitySet<T_discount> _T_discount;
		
		private EntitySet<T_recur> _T_recur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_usage_cycleChanging(int value);
    partial void OnId_usage_cycleChanged();
    partial void OnId_cycle_typeChanging(int value);
    partial void OnId_cycle_typeChanged();
    partial void OnDay_of_monthChanging(System.Nullable<int> value);
    partial void OnDay_of_monthChanged();
    partial void OnTx_period_typeChanging(string value);
    partial void OnTx_period_typeChanged();
    partial void OnDay_of_weekChanging(System.Nullable<int> value);
    partial void OnDay_of_weekChanged();
    partial void OnFirst_day_of_monthChanging(System.Nullable<int> value);
    partial void OnFirst_day_of_monthChanged();
    partial void OnSecond_day_of_monthChanging(System.Nullable<int> value);
    partial void OnSecond_day_of_monthChanged();
    partial void OnStart_dayChanging(System.Nullable<int> value);
    partial void OnStart_dayChanged();
    partial void OnStart_monthChanging(System.Nullable<int> value);
    partial void OnStart_monthChanged();
    partial void OnStart_yearChanging(System.Nullable<int> value);
    partial void OnStart_yearChanged();
    #endregion
		
		public T_usage_cycle()
		{
			this._T_pc_interval = new EntitySet<T_pc_interval>(new Action<T_pc_interval>(this.attach_T_pc_interval), new Action<T_pc_interval>(this.detach_T_pc_interval));
			this._T_aggregate = new EntitySet<T_aggregate>(new Action<T_aggregate>(this.attach_T_aggregate), new Action<T_aggregate>(this.detach_T_aggregate));
			this._T_group_sub = new EntitySet<T_group_sub>(new Action<T_group_sub>(this.attach_T_group_sub), new Action<T_group_sub>(this.detach_T_group_sub));
			this._T_usage_cycle_type = default(EntityRef<T_usage_cycle_type>);
			this._T_usage_interval = new EntitySet<T_usage_interval>(new Action<T_usage_interval>(this.attach_T_usage_interval), new Action<T_usage_interval>(this.detach_T_usage_interval));
			this._T_acc_usage_cycle = new EntitySet<T_acc_usage_cycle>(new Action<T_acc_usage_cycle>(this.attach_T_acc_usage_cycle), new Action<T_acc_usage_cycle>(this.detach_T_acc_usage_cycle));
			this._T_discount = new EntitySet<T_discount>(new Action<T_discount>(this.attach_T_discount), new Action<T_discount>(this.detach_T_discount));
			this._T_recur = new EntitySet<T_recur>(new Action<T_recur>(this.attach_T_recur), new Action<T_recur>(this.detach_T_recur));
			OnCreated();
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int NOT NULL")]
		public int Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Column(Name="day_of_month", Storage="_Day_of_month", DbType="Int")]
		public System.Nullable<int> Day_of_month
		{
			get
			{
				return this._Day_of_month;
			}
			set
			{
				if ((this._Day_of_month != value))
				{
					this.OnDay_of_monthChanging(value);
					this.SendPropertyChanging();
					this._Day_of_month = value;
					this.SendPropertyChanged("Day_of_month");
					this.OnDay_of_monthChanged();
				}
			}
		}
		
		[Column(Name="tx_period_type", Storage="_Tx_period_type", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Tx_period_type
		{
			get
			{
				return this._Tx_period_type;
			}
			set
			{
				if ((this._Tx_period_type != value))
				{
					this.OnTx_period_typeChanging(value);
					this.SendPropertyChanging();
					this._Tx_period_type = value;
					this.SendPropertyChanged("Tx_period_type");
					this.OnTx_period_typeChanged();
				}
			}
		}
		
		[Column(Name="day_of_week", Storage="_Day_of_week", DbType="Int")]
		public System.Nullable<int> Day_of_week
		{
			get
			{
				return this._Day_of_week;
			}
			set
			{
				if ((this._Day_of_week != value))
				{
					this.OnDay_of_weekChanging(value);
					this.SendPropertyChanging();
					this._Day_of_week = value;
					this.SendPropertyChanged("Day_of_week");
					this.OnDay_of_weekChanged();
				}
			}
		}
		
		[Column(Name="first_day_of_month", Storage="_First_day_of_month", DbType="Int")]
		public System.Nullable<int> First_day_of_month
		{
			get
			{
				return this._First_day_of_month;
			}
			set
			{
				if ((this._First_day_of_month != value))
				{
					this.OnFirst_day_of_monthChanging(value);
					this.SendPropertyChanging();
					this._First_day_of_month = value;
					this.SendPropertyChanged("First_day_of_month");
					this.OnFirst_day_of_monthChanged();
				}
			}
		}
		
		[Column(Name="second_day_of_month", Storage="_Second_day_of_month", DbType="Int")]
		public System.Nullable<int> Second_day_of_month
		{
			get
			{
				return this._Second_day_of_month;
			}
			set
			{
				if ((this._Second_day_of_month != value))
				{
					this.OnSecond_day_of_monthChanging(value);
					this.SendPropertyChanging();
					this._Second_day_of_month = value;
					this.SendPropertyChanged("Second_day_of_month");
					this.OnSecond_day_of_monthChanged();
				}
			}
		}
		
		[Column(Name="start_day", Storage="_Start_day", DbType="Int")]
		public System.Nullable<int> Start_day
		{
			get
			{
				return this._Start_day;
			}
			set
			{
				if ((this._Start_day != value))
				{
					this.OnStart_dayChanging(value);
					this.SendPropertyChanging();
					this._Start_day = value;
					this.SendPropertyChanged("Start_day");
					this.OnStart_dayChanged();
				}
			}
		}
		
		[Column(Name="start_month", Storage="_Start_month", DbType="Int")]
		public System.Nullable<int> Start_month
		{
			get
			{
				return this._Start_month;
			}
			set
			{
				if ((this._Start_month != value))
				{
					this.OnStart_monthChanging(value);
					this.SendPropertyChanging();
					this._Start_month = value;
					this.SendPropertyChanged("Start_month");
					this.OnStart_monthChanged();
				}
			}
		}
		
		[Column(Name="start_year", Storage="_Start_year", DbType="Int")]
		public System.Nullable<int> Start_year
		{
			get
			{
				return this._Start_year;
			}
			set
			{
				if ((this._Start_year != value))
				{
					this.OnStart_yearChanging(value);
					this.SendPropertyChanging();
					this._Start_year = value;
					this.SendPropertyChanged("Start_year");
					this.OnStart_yearChanged();
				}
			}
		}
		
		[Association(Name="FK_T_PC_INTERVAL", Storage="_T_pc_interval", ThisKey="Id_usage_cycle", OtherKey="Id_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_pc_interval> T_pc_interval
		{
			get
			{
				return this._T_pc_interval;
			}
			set
			{
				this._T_pc_interval.Assign(value);
			}
		}
		
		[Association(Name="fk1_t_aggregate", Storage="_T_aggregate", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_aggregate> T_aggregate
		{
			get
			{
				return this._T_aggregate;
			}
			set
			{
				this._T_aggregate.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_GROUP_SUB", Storage="_T_group_sub", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_group_sub> T_group_sub
		{
			get
			{
				return this._T_group_sub;
			}
			set
			{
				this._T_group_sub.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_USAGE_CYCLE", Storage="_T_usage_cycle_type", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", IsForeignKey=true)]
		public T_usage_cycle_type T_usage_cycle_type
		{
			get
			{
				return this._T_usage_cycle_type.Entity;
			}
			set
			{
				T_usage_cycle_type previousValue = this._T_usage_cycle_type.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle_type.Entity = null;
						previousValue.T_usage_cycle.Remove(this);
					}
					this._T_usage_cycle_type.Entity = value;
					if ((value != null))
					{
						value.T_usage_cycle.Add(this);
						this._Id_cycle_type = value.Id_cycle_type;
					}
					else
					{
						this._Id_cycle_type = default(int);
					}
					this.SendPropertyChanged("T_usage_cycle_type");
				}
			}
		}
		
		[Association(Name="FK1_T_USAGE_INTERVAL", Storage="_T_usage_interval", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_usage_interval> T_usage_interval
		{
			get
			{
				return this._T_usage_interval;
			}
			set
			{
				this._T_usage_interval.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_ACC_USAGE_CYCLE", Storage="_T_acc_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_usage_cycle> T_acc_usage_cycle
		{
			get
			{
				return this._T_acc_usage_cycle;
			}
			set
			{
				this._T_acc_usage_cycle.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_discount", Storage="_T_discount", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_discount> T_discount
		{
			get
			{
				return this._T_discount;
			}
			set
			{
				this._T_discount.Assign(value);
			}
		}
		
		[Association(Name="FK2_T_RECUR", Storage="_T_recur", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", DeleteRule="NO ACTION")]
		public EntitySet<T_recur> T_recur
		{
			get
			{
				return this._T_recur;
			}
			set
			{
				this._T_recur.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_pc_interval(T_pc_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_pc_interval(T_pc_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_aggregate(T_aggregate entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_aggregate(T_aggregate entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_group_sub(T_group_sub entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_usage_interval(T_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_usage_interval(T_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_acc_usage_cycle(T_acc_usage_cycle entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_acc_usage_cycle(T_acc_usage_cycle entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_discount(T_discount entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_discount(T_discount entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
		
		private void attach_T_recur(T_recur entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = this;
		}
		
		private void detach_T_recur(T_recur entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle = null;
		}
	}
	
	[Table(Name="dbo.t_usage_cycle_type")]
	public partial class T_usage_cycle_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_cycle_type;
		
		private string _Tx_desc;
		
		private string _Tx_cycle_type_method;
		
		private int _N_proration_length;
		
		private System.Nullable<int> _N_grace_period;
		
		private EntitySet<T_usage_cycle> _T_usage_cycle;
		
		private EntitySet<T_aggregate> _T_aggregate;
		
		private EntitySet<T_discount> _T_discount;
		
		private EntitySet<T_recur> _T_recur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_cycle_typeChanging(int value);
    partial void OnId_cycle_typeChanged();
    partial void OnTx_descChanging(string value);
    partial void OnTx_descChanged();
    partial void OnTx_cycle_type_methodChanging(string value);
    partial void OnTx_cycle_type_methodChanged();
    partial void OnN_proration_lengthChanging(int value);
    partial void OnN_proration_lengthChanged();
    partial void OnN_grace_periodChanging(System.Nullable<int> value);
    partial void OnN_grace_periodChanged();
    #endregion
		
		public T_usage_cycle_type()
		{
			this._T_usage_cycle = new EntitySet<T_usage_cycle>(new Action<T_usage_cycle>(this.attach_T_usage_cycle), new Action<T_usage_cycle>(this.detach_T_usage_cycle));
			this._T_aggregate = new EntitySet<T_aggregate>(new Action<T_aggregate>(this.attach_T_aggregate), new Action<T_aggregate>(this.detach_T_aggregate));
			this._T_discount = new EntitySet<T_discount>(new Action<T_discount>(this.attach_T_discount), new Action<T_discount>(this.detach_T_discount));
			this._T_recur = new EntitySet<T_recur>(new Action<T_recur>(this.attach_T_recur), new Action<T_recur>(this.detach_T_recur));
			OnCreated();
		}
		
		[Column(Name="id_cycle_type", Storage="_Id_cycle_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_cycle_type
		{
			get
			{
				return this._Id_cycle_type;
			}
			set
			{
				if ((this._Id_cycle_type != value))
				{
					this.OnId_cycle_typeChanging(value);
					this.SendPropertyChanging();
					this._Id_cycle_type = value;
					this.SendPropertyChanged("Id_cycle_type");
					this.OnId_cycle_typeChanged();
				}
			}
		}
		
		[Column(Name="tx_desc", Storage="_Tx_desc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_desc
		{
			get
			{
				return this._Tx_desc;
			}
			set
			{
				if ((this._Tx_desc != value))
				{
					this.OnTx_descChanging(value);
					this.SendPropertyChanging();
					this._Tx_desc = value;
					this.SendPropertyChanged("Tx_desc");
					this.OnTx_descChanged();
				}
			}
		}
		
		[Column(Name="tx_cycle_type_method", Storage="_Tx_cycle_type_method", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tx_cycle_type_method
		{
			get
			{
				return this._Tx_cycle_type_method;
			}
			set
			{
				if ((this._Tx_cycle_type_method != value))
				{
					this.OnTx_cycle_type_methodChanging(value);
					this.SendPropertyChanging();
					this._Tx_cycle_type_method = value;
					this.SendPropertyChanged("Tx_cycle_type_method");
					this.OnTx_cycle_type_methodChanged();
				}
			}
		}
		
		[Column(Name="n_proration_length", Storage="_N_proration_length", DbType="Int NOT NULL")]
		public int N_proration_length
		{
			get
			{
				return this._N_proration_length;
			}
			set
			{
				if ((this._N_proration_length != value))
				{
					this.OnN_proration_lengthChanging(value);
					this.SendPropertyChanging();
					this._N_proration_length = value;
					this.SendPropertyChanged("N_proration_length");
					this.OnN_proration_lengthChanged();
				}
			}
		}
		
		[Column(Name="n_grace_period", Storage="_N_grace_period", DbType="Int")]
		public System.Nullable<int> N_grace_period
		{
			get
			{
				return this._N_grace_period;
			}
			set
			{
				if ((this._N_grace_period != value))
				{
					this.OnN_grace_periodChanging(value);
					this.SendPropertyChanging();
					this._N_grace_period = value;
					this.SendPropertyChanged("N_grace_period");
					this.OnN_grace_periodChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_USAGE_CYCLE", Storage="_T_usage_cycle", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", DeleteRule="NO ACTION")]
		public EntitySet<T_usage_cycle> T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle;
			}
			set
			{
				this._T_usage_cycle.Assign(value);
			}
		}
		
		[Association(Name="fk2_t_aggregate", Storage="_T_aggregate", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", DeleteRule="NO ACTION")]
		public EntitySet<T_aggregate> T_aggregate
		{
			get
			{
				return this._T_aggregate;
			}
			set
			{
				this._T_aggregate.Assign(value);
			}
		}
		
		[Association(Name="fk3_t_discount", Storage="_T_discount", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", DeleteRule="NO ACTION")]
		public EntitySet<T_discount> T_discount
		{
			get
			{
				return this._T_discount;
			}
			set
			{
				this._T_discount.Assign(value);
			}
		}
		
		[Association(Name="fk3_t_recur", Storage="_T_recur", ThisKey="Id_cycle_type", OtherKey="Id_cycle_type", DeleteRule="NO ACTION")]
		public EntitySet<T_recur> T_recur
		{
			get
			{
				return this._T_recur;
			}
			set
			{
				this._T_recur.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_usage_cycle(T_usage_cycle entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = this;
		}
		
		private void detach_T_usage_cycle(T_usage_cycle entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = null;
		}
		
		private void attach_T_aggregate(T_aggregate entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = this;
		}
		
		private void detach_T_aggregate(T_aggregate entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = null;
		}
		
		private void attach_T_discount(T_discount entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = this;
		}
		
		private void detach_T_discount(T_discount entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = null;
		}
		
		private void attach_T_recur(T_recur entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = this;
		}
		
		private void detach_T_recur(T_recur entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_cycle_type = null;
		}
	}
	
	[Table(Name="dbo.t_usage_interval")]
	public partial class T_usage_interval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_interval;
		
		private int _Id_usage_cycle;
		
		private System.DateTime _Dt_start;
		
		private System.DateTime _Dt_end;
		
		private string _Tx_interval_status;
		
		private EntitySet<T_billgroup> _T_billgroup;
		
		private EntityRef<T_usage_cycle> _T_usage_cycle;
		
		private EntitySet<T_acc_usage_interval> _T_acc_usage_interval;
		
		private EntitySet<T_billgroup_materialization> _T_billgroup_materialization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_intervalChanging(int value);
    partial void OnId_intervalChanged();
    partial void OnId_usage_cycleChanging(int value);
    partial void OnId_usage_cycleChanged();
    partial void OnDt_startChanging(System.DateTime value);
    partial void OnDt_startChanged();
    partial void OnDt_endChanging(System.DateTime value);
    partial void OnDt_endChanged();
    partial void OnTx_interval_statusChanging(string value);
    partial void OnTx_interval_statusChanged();
    #endregion
		
		public T_usage_interval()
		{
			this._T_billgroup = new EntitySet<T_billgroup>(new Action<T_billgroup>(this.attach_T_billgroup), new Action<T_billgroup>(this.detach_T_billgroup));
			this._T_usage_cycle = default(EntityRef<T_usage_cycle>);
			this._T_acc_usage_interval = new EntitySet<T_acc_usage_interval>(new Action<T_acc_usage_interval>(this.attach_T_acc_usage_interval), new Action<T_acc_usage_interval>(this.detach_T_acc_usage_interval));
			this._T_billgroup_materialization = new EntitySet<T_billgroup_materialization>(new Action<T_billgroup_materialization>(this.attach_T_billgroup_materialization), new Action<T_billgroup_materialization>(this.detach_T_billgroup_materialization));
			OnCreated();
		}
		
		[Column(Name="id_interval", Storage="_Id_interval", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_interval
		{
			get
			{
				return this._Id_interval;
			}
			set
			{
				if ((this._Id_interval != value))
				{
					this.OnId_intervalChanging(value);
					this.SendPropertyChanging();
					this._Id_interval = value;
					this.SendPropertyChanged("Id_interval");
					this.OnId_intervalChanged();
				}
			}
		}
		
		[Column(Name="id_usage_cycle", Storage="_Id_usage_cycle", DbType="Int NOT NULL")]
		public int Id_usage_cycle
		{
			get
			{
				return this._Id_usage_cycle;
			}
			set
			{
				if ((this._Id_usage_cycle != value))
				{
					this.OnId_usage_cycleChanging(value);
					this.SendPropertyChanging();
					this._Id_usage_cycle = value;
					this.SendPropertyChanged("Id_usage_cycle");
					this.OnId_usage_cycleChanged();
				}
			}
		}
		
		[Column(Name="dt_start", Storage="_Dt_start", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_start
		{
			get
			{
				return this._Dt_start;
			}
			set
			{
				if ((this._Dt_start != value))
				{
					this.OnDt_startChanging(value);
					this.SendPropertyChanging();
					this._Dt_start = value;
					this.SendPropertyChanged("Dt_start");
					this.OnDt_startChanged();
				}
			}
		}
		
		[Column(Name="dt_end", Storage="_Dt_end", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_end
		{
			get
			{
				return this._Dt_end;
			}
			set
			{
				if ((this._Dt_end != value))
				{
					this.OnDt_endChanging(value);
					this.SendPropertyChanging();
					this._Dt_end = value;
					this.SendPropertyChanged("Dt_end");
					this.OnDt_endChanged();
				}
			}
		}
		
		[Column(Name="tx_interval_status", Storage="_Tx_interval_status", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Tx_interval_status
		{
			get
			{
				return this._Tx_interval_status;
			}
			set
			{
				if ((this._Tx_interval_status != value))
				{
					this.OnTx_interval_statusChanging(value);
					this.SendPropertyChanging();
					this._Tx_interval_status = value;
					this.SendPropertyChanged("Tx_interval_status");
					this.OnTx_interval_statusChanged();
				}
			}
		}
		
		[Association(Name="FK1_t_billgroup", Storage="_T_billgroup", ThisKey="Id_interval", OtherKey="Id_usage_interval", DeleteRule="NO ACTION")]
		public EntitySet<T_billgroup> T_billgroup
		{
			get
			{
				return this._T_billgroup;
			}
			set
			{
				this._T_billgroup.Assign(value);
			}
		}
		
		[Association(Name="FK1_T_USAGE_INTERVAL", Storage="_T_usage_cycle", ThisKey="Id_usage_cycle", OtherKey="Id_usage_cycle", IsForeignKey=true)]
		public T_usage_cycle T_usage_cycle
		{
			get
			{
				return this._T_usage_cycle.Entity;
			}
			set
			{
				T_usage_cycle previousValue = this._T_usage_cycle.Entity;
				if (((previousValue != value) 
							|| (this._T_usage_cycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_usage_cycle.Entity = null;
						previousValue.T_usage_interval.Remove(this);
					}
					this._T_usage_cycle.Entity = value;
					if ((value != null))
					{
						value.T_usage_interval.Add(this);
						this._Id_usage_cycle = value.Id_usage_cycle;
					}
					else
					{
						this._Id_usage_cycle = default(int);
					}
					this.SendPropertyChanged("T_usage_cycle");
				}
			}
		}
		
		[Association(Name="fk2_t_acc_usage_interval", Storage="_T_acc_usage_interval", ThisKey="Id_interval", OtherKey="Id_usage_interval", DeleteRule="NO ACTION")]
		public EntitySet<T_acc_usage_interval> T_acc_usage_interval
		{
			get
			{
				return this._T_acc_usage_interval;
			}
			set
			{
				this._T_acc_usage_interval.Assign(value);
			}
		}
		
		[Association(Name="FK3_t_billgroup_materialization", Storage="_T_billgroup_materialization", ThisKey="Id_interval", OtherKey="Id_usage_interval", DeleteRule="NO ACTION")]
		public EntitySet<T_billgroup_materialization> T_billgroup_materialization
		{
			get
			{
				return this._T_billgroup_materialization;
			}
			set
			{
				this._T_billgroup_materialization.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_billgroup(T_billgroup entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = this;
		}
		
		private void detach_T_billgroup(T_billgroup entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = null;
		}
		
		private void attach_T_acc_usage_interval(T_acc_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = this;
		}
		
		private void detach_T_acc_usage_interval(T_acc_usage_interval entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = null;
		}
		
		private void attach_T_billgroup_materialization(T_billgroup_materialization entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = this;
		}
		
		private void detach_T_billgroup_materialization(T_billgroup_materialization entity)
		{
			this.SendPropertyChanging();
			entity.T_usage_interval = null;
		}
	}
	
	[Table(Name="dbo.t_usage_server")]
	public partial class T_usage_server
	{
		
		private int _N_adv_interval_creation;
		
		private System.Nullable<System.DateTime> _Dt_last_interval_creation;
		
		private string _B_partitioning_enabled;
		
		private int _Partition_cycle;
		
		private string _Partition_type;
		
		private int _Partition_data_size;
		
		private int _Partition_log_size;
		
		public T_usage_server()
		{
		}
		
		[Column(Name="n_adv_interval_creation", Storage="_N_adv_interval_creation", DbType="Int NOT NULL")]
		public int N_adv_interval_creation
		{
			get
			{
				return this._N_adv_interval_creation;
			}
			set
			{
				if ((this._N_adv_interval_creation != value))
				{
					this._N_adv_interval_creation = value;
				}
			}
		}
		
		[Column(Name="dt_last_interval_creation", Storage="_Dt_last_interval_creation", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_last_interval_creation
		{
			get
			{
				return this._Dt_last_interval_creation;
			}
			set
			{
				if ((this._Dt_last_interval_creation != value))
				{
					this._Dt_last_interval_creation = value;
				}
			}
		}
		
		[Column(Name="b_partitioning_enabled", Storage="_B_partitioning_enabled", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string B_partitioning_enabled
		{
			get
			{
				return this._B_partitioning_enabled;
			}
			set
			{
				if ((this._B_partitioning_enabled != value))
				{
					this._B_partitioning_enabled = value;
				}
			}
		}
		
		[Column(Name="partition_cycle", Storage="_Partition_cycle", DbType="Int NOT NULL")]
		public int Partition_cycle
		{
			get
			{
				return this._Partition_cycle;
			}
			set
			{
				if ((this._Partition_cycle != value))
				{
					this._Partition_cycle = value;
				}
			}
		}
		
		[Column(Name="partition_type", Storage="_Partition_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Partition_type
		{
			get
			{
				return this._Partition_type;
			}
			set
			{
				if ((this._Partition_type != value))
				{
					this._Partition_type = value;
				}
			}
		}
		
		[Column(Name="partition_data_size", Storage="_Partition_data_size", DbType="Int NOT NULL")]
		public int Partition_data_size
		{
			get
			{
				return this._Partition_data_size;
			}
			set
			{
				if ((this._Partition_data_size != value))
				{
					this._Partition_data_size = value;
				}
			}
		}
		
		[Column(Name="partition_log_size", Storage="_Partition_log_size", DbType="Int NOT NULL")]
		public int Partition_log_size
		{
			get
			{
				return this._Partition_log_size;
			}
			set
			{
				if ((this._Partition_log_size != value))
				{
					this._Partition_log_size = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_user_credentials")]
	public partial class T_user_credentials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_login;
		
		private string _Nm_space;
		
		private string _Tx_password;
		
		private System.Nullable<System.DateTime> _Dt_expire;
		
		private System.Nullable<System.DateTime> _Dt_last_login;
		
		private System.Nullable<System.DateTime> _Dt_last_logout;
		
		private System.Nullable<int> _Num_failures_since_login;
		
		private System.Nullable<System.DateTime> _Dt_auto_reset_failures;
		
		private string _B_enabled;
		
		private EntityRef<T_account_mapper> _T_account_mapper;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnTx_passwordChanging(string value);
    partial void OnTx_passwordChanged();
    partial void OnDt_expireChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_expireChanged();
    partial void OnDt_last_loginChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_last_loginChanged();
    partial void OnDt_last_logoutChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_last_logoutChanged();
    partial void OnNum_failures_since_loginChanging(System.Nullable<int> value);
    partial void OnNum_failures_since_loginChanged();
    partial void OnDt_auto_reset_failuresChanging(System.Nullable<System.DateTime> value);
    partial void OnDt_auto_reset_failuresChanged();
    partial void OnB_enabledChanging(string value);
    partial void OnB_enabledChanged();
    #endregion
		
		public T_user_credentials()
		{
			this._T_account_mapper = default(EntityRef<T_account_mapper>);
			OnCreated();
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="tx_password", Storage="_Tx_password", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Tx_password
		{
			get
			{
				return this._Tx_password;
			}
			set
			{
				if ((this._Tx_password != value))
				{
					this.OnTx_passwordChanging(value);
					this.SendPropertyChanging();
					this._Tx_password = value;
					this.SendPropertyChanged("Tx_password");
					this.OnTx_passwordChanged();
				}
			}
		}
		
		[Column(Name="dt_expire", Storage="_Dt_expire", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_expire
		{
			get
			{
				return this._Dt_expire;
			}
			set
			{
				if ((this._Dt_expire != value))
				{
					this.OnDt_expireChanging(value);
					this.SendPropertyChanging();
					this._Dt_expire = value;
					this.SendPropertyChanged("Dt_expire");
					this.OnDt_expireChanged();
				}
			}
		}
		
		[Column(Name="dt_last_login", Storage="_Dt_last_login", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_last_login
		{
			get
			{
				return this._Dt_last_login;
			}
			set
			{
				if ((this._Dt_last_login != value))
				{
					this.OnDt_last_loginChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_login = value;
					this.SendPropertyChanged("Dt_last_login");
					this.OnDt_last_loginChanged();
				}
			}
		}
		
		[Column(Name="dt_last_logout", Storage="_Dt_last_logout", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_last_logout
		{
			get
			{
				return this._Dt_last_logout;
			}
			set
			{
				if ((this._Dt_last_logout != value))
				{
					this.OnDt_last_logoutChanging(value);
					this.SendPropertyChanging();
					this._Dt_last_logout = value;
					this.SendPropertyChanged("Dt_last_logout");
					this.OnDt_last_logoutChanged();
				}
			}
		}
		
		[Column(Name="num_failures_since_login", Storage="_Num_failures_since_login", DbType="Int")]
		public System.Nullable<int> Num_failures_since_login
		{
			get
			{
				return this._Num_failures_since_login;
			}
			set
			{
				if ((this._Num_failures_since_login != value))
				{
					this.OnNum_failures_since_loginChanging(value);
					this.SendPropertyChanging();
					this._Num_failures_since_login = value;
					this.SendPropertyChanged("Num_failures_since_login");
					this.OnNum_failures_since_loginChanged();
				}
			}
		}
		
		[Column(Name="dt_auto_reset_failures", Storage="_Dt_auto_reset_failures", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_auto_reset_failures
		{
			get
			{
				return this._Dt_auto_reset_failures;
			}
			set
			{
				if ((this._Dt_auto_reset_failures != value))
				{
					this.OnDt_auto_reset_failuresChanging(value);
					this.SendPropertyChanging();
					this._Dt_auto_reset_failures = value;
					this.SendPropertyChanged("Dt_auto_reset_failures");
					this.OnDt_auto_reset_failuresChanged();
				}
			}
		}
		
		[Column(Name="b_enabled", Storage="_B_enabled", DbType="NVarChar(1)")]
		public string B_enabled
		{
			get
			{
				return this._B_enabled;
			}
			set
			{
				if ((this._B_enabled != value))
				{
					this.OnB_enabledChanging(value);
					this.SendPropertyChanging();
					this._B_enabled = value;
					this.SendPropertyChanged("B_enabled");
					this.OnB_enabledChanged();
				}
			}
		}
		
		[Association(Name="fk1_t_user_credentials", Storage="_T_account_mapper", ThisKey="Nm_login,Nm_space", OtherKey="Nm_login,Nm_space", IsForeignKey=true)]
		public T_account_mapper T_account_mapper
		{
			get
			{
				return this._T_account_mapper.Entity;
			}
			set
			{
				T_account_mapper previousValue = this._T_account_mapper.Entity;
				if (((previousValue != value) 
							|| (this._T_account_mapper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_account_mapper.Entity = null;
						previousValue.T_user_credentials = null;
					}
					this._T_account_mapper.Entity = value;
					if ((value != null))
					{
						value.T_user_credentials = this;
						this._Nm_login = value.Nm_login;
						this._Nm_space = value.Nm_space;
					}
					else
					{
						this._Nm_login = default(string);
						this._Nm_space = default(string);
					}
					this.SendPropertyChanged("T_account_mapper");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_user_credentials_history")]
	public partial class T_user_credentials_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nm_login;
		
		private string _Nm_space;
		
		private string _Tx_password;
		
		private System.DateTime _Tt_end;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNm_loginChanging(string value);
    partial void OnNm_loginChanged();
    partial void OnNm_spaceChanging(string value);
    partial void OnNm_spaceChanged();
    partial void OnTx_passwordChanging(string value);
    partial void OnTx_passwordChanged();
    partial void OnTt_endChanging(System.DateTime value);
    partial void OnTt_endChanged();
    #endregion
		
		public T_user_credentials_history()
		{
			OnCreated();
		}
		
		[Column(Name="nm_login", Storage="_Nm_login", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_login
		{
			get
			{
				return this._Nm_login;
			}
			set
			{
				if ((this._Nm_login != value))
				{
					this.OnNm_loginChanging(value);
					this.SendPropertyChanging();
					this._Nm_login = value;
					this.SendPropertyChanged("Nm_login");
					this.OnNm_loginChanged();
				}
			}
		}
		
		[Column(Name="nm_space", Storage="_Nm_space", DbType="NVarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nm_space
		{
			get
			{
				return this._Nm_space;
			}
			set
			{
				if ((this._Nm_space != value))
				{
					this.OnNm_spaceChanging(value);
					this.SendPropertyChanging();
					this._Nm_space = value;
					this.SendPropertyChanged("Nm_space");
					this.OnNm_spaceChanged();
				}
			}
		}
		
		[Column(Name="tx_password", Storage="_Tx_password", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Tx_password
		{
			get
			{
				return this._Tx_password;
			}
			set
			{
				if ((this._Tx_password != value))
				{
					this.OnTx_passwordChanging(value);
					this.SendPropertyChanging();
					this._Tx_password = value;
					this.SendPropertyChanged("Tx_password");
					this.OnTx_passwordChanged();
				}
			}
		}
		
		[Column(Name="tt_end", Storage="_Tt_end", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Tt_end
		{
			get
			{
				return this._Tt_end;
			}
			set
			{
				if ((this._Tt_end != value))
				{
					this.OnTt_endChanging(value);
					this.SendPropertyChanging();
					this._Tt_end = value;
					this.SendPropertyChanged("Tt_end");
					this.OnTt_endChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_view_hierarchy")]
	public partial class T_view_hierarchy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_view;
		
		private int _Id_view_parent;
		
		private EntityRef<T_enum_data> _T_enum_data;
		
		private EntityRef<T_enum_data> _Id_view_parentT_enum_data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_viewChanging(int value);
    partial void OnId_viewChanged();
    partial void OnId_view_parentChanging(int value);
    partial void OnId_view_parentChanged();
    #endregion
		
		public T_view_hierarchy()
		{
			this._T_enum_data = default(EntityRef<T_enum_data>);
			this._Id_view_parentT_enum_data = default(EntityRef<T_enum_data>);
			OnCreated();
		}
		
		[Column(Name="id_view", Storage="_Id_view", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_view
		{
			get
			{
				return this._Id_view;
			}
			set
			{
				if ((this._Id_view != value))
				{
					this.OnId_viewChanging(value);
					this.SendPropertyChanging();
					this._Id_view = value;
					this.SendPropertyChanged("Id_view");
					this.OnId_viewChanged();
				}
			}
		}
		
		[Column(Name="id_view_parent", Storage="_Id_view_parent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_view_parent
		{
			get
			{
				return this._Id_view_parent;
			}
			set
			{
				if ((this._Id_view_parent != value))
				{
					this.OnId_view_parentChanging(value);
					this.SendPropertyChanging();
					this._Id_view_parent = value;
					this.SendPropertyChanged("Id_view_parent");
					this.OnId_view_parentChanged();
				}
			}
		}
		
		[Association(Name="FK1_T_VIEW_HIERARCHY", Storage="_T_enum_data", ThisKey="Id_view", OtherKey="Id_enum_data", IsForeignKey=true)]
		public T_enum_data T_enum_data
		{
			get
			{
				return this._T_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._T_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._T_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_enum_data.Entity = null;
						previousValue.T_view_hierarchy.Remove(this);
					}
					this._T_enum_data.Entity = value;
					if ((value != null))
					{
						value.T_view_hierarchy.Add(this);
						this._Id_view = value.Id_enum_data;
					}
					else
					{
						this._Id_view = default(int);
					}
					this.SendPropertyChanged("T_enum_data");
				}
			}
		}
		
		[Association(Name="FK2_T_VIEW_HIERARCHY", Storage="_Id_view_parentT_enum_data", ThisKey="Id_view_parent", OtherKey="Id_enum_data", IsForeignKey=true)]
		public T_enum_data Id_view_parentT_enum_data
		{
			get
			{
				return this._Id_view_parentT_enum_data.Entity;
			}
			set
			{
				T_enum_data previousValue = this._Id_view_parentT_enum_data.Entity;
				if (((previousValue != value) 
							|| (this._Id_view_parentT_enum_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Id_view_parentT_enum_data.Entity = null;
						previousValue.Id_enum_dataT_view_hierarchy.Remove(this);
					}
					this._Id_view_parentT_enum_data.Entity = value;
					if ((value != null))
					{
						value.Id_enum_dataT_view_hierarchy.Add(this);
						this._Id_view_parent = value.Id_enum_data;
					}
					else
					{
						this._Id_view_parent = default(int);
					}
					this.SendPropertyChanged("Id_view_parentT_enum_data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_wf_acc_inst_map")]
	public partial class T_wf_acc_inst_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
		private string _Workflow_type;
		
		private string _Id_type_instance;
		
		private string _Id_workflow_instance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    partial void OnWorkflow_typeChanging(string value);
    partial void OnWorkflow_typeChanged();
    partial void OnId_type_instanceChanging(string value);
    partial void OnId_type_instanceChanged();
    partial void OnId_workflow_instanceChanging(string value);
    partial void OnId_workflow_instanceChanged();
    #endregion
		
		public T_wf_acc_inst_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		[Column(Name="workflow_type", Storage="_Workflow_type", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Workflow_type
		{
			get
			{
				return this._Workflow_type;
			}
			set
			{
				if ((this._Workflow_type != value))
				{
					this.OnWorkflow_typeChanging(value);
					this.SendPropertyChanging();
					this._Workflow_type = value;
					this.SendPropertyChanged("Workflow_type");
					this.OnWorkflow_typeChanged();
				}
			}
		}
		
		[Column(Name="id_type_instance", Storage="_Id_type_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_type_instance
		{
			get
			{
				return this._Id_type_instance;
			}
			set
			{
				if ((this._Id_type_instance != value))
				{
					this.OnId_type_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_type_instance = value;
					this.SendPropertyChanged("Id_type_instance");
					this.OnId_type_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_workflow_instance", Storage="_Id_workflow_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string Id_workflow_instance
		{
			get
			{
				return this._Id_workflow_instance;
			}
			set
			{
				if ((this._Id_workflow_instance != value))
				{
					this.OnId_workflow_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_workflow_instance = value;
					this.SendPropertyChanged("Id_workflow_instance");
					this.OnId_workflow_instanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_wf_be_inst_map")]
	public partial class T_wf_be_inst_map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_instance;
		
		private string _Workflow_type;
		
		private string _Id_type_instance;
		
		private string _Id_workflow_instance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_instanceChanging(string value);
    partial void OnId_instanceChanged();
    partial void OnWorkflow_typeChanging(string value);
    partial void OnWorkflow_typeChanged();
    partial void OnId_type_instanceChanging(string value);
    partial void OnId_type_instanceChanged();
    partial void OnId_workflow_instanceChanging(string value);
    partial void OnId_workflow_instanceChanged();
    #endregion
		
		public T_wf_be_inst_map()
		{
			OnCreated();
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this.OnId_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_instance = value;
					this.SendPropertyChanged("Id_instance");
					this.OnId_instanceChanged();
				}
			}
		}
		
		[Column(Name="workflow_type", Storage="_Workflow_type", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Workflow_type
		{
			get
			{
				return this._Workflow_type;
			}
			set
			{
				if ((this._Workflow_type != value))
				{
					this.OnWorkflow_typeChanging(value);
					this.SendPropertyChanging();
					this._Workflow_type = value;
					this.SendPropertyChanged("Workflow_type");
					this.OnWorkflow_typeChanged();
				}
			}
		}
		
		[Column(Name="id_type_instance", Storage="_Id_type_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_type_instance
		{
			get
			{
				return this._Id_type_instance;
			}
			set
			{
				if ((this._Id_type_instance != value))
				{
					this.OnId_type_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_type_instance = value;
					this.SendPropertyChanged("Id_type_instance");
					this.OnId_type_instanceChanged();
				}
			}
		}
		
		[Column(Name="id_workflow_instance", Storage="_Id_workflow_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string Id_workflow_instance
		{
			get
			{
				return this._Id_workflow_instance;
			}
			set
			{
				if ((this._Id_workflow_instance != value))
				{
					this.OnId_workflow_instanceChanging(value);
					this.SendPropertyChanging();
					this._Id_workflow_instance = value;
					this.SendPropertyChanged("Id_workflow_instance");
					this.OnId_workflow_instanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.t_wf_completedscope")]
	public partial class T_wf_completedscope
	{
		
		private string _Id_instance;
		
		private string _Id_completedScope;
		
		private System.Data.Linq.Binary _State;
		
		private System.DateTime _Dt_modified;
		
		public T_wf_completedscope()
		{
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this._Id_instance = value;
				}
			}
		}
		
		[Column(Name="id_completedScope", Storage="_Id_completedScope", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string Id_completedScope
		{
			get
			{
				return this._Id_completedScope;
			}
			set
			{
				if ((this._Id_completedScope != value))
				{
					this._Id_completedScope = value;
				}
			}
		}
		
		[Column(Name="state", Storage="_State", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this._Dt_modified = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.t_wf_instancestate")]
	public partial class T_wf_instancestate
	{
		
		private string _Id_instance;
		
		private System.Data.Linq.Binary _State;
		
		private System.Nullable<int> _N_status;
		
		private System.Nullable<int> _N_unlocked;
		
		private System.Nullable<int> _N_blocked;
		
		private string _Tx_info;
		
		private System.DateTime _Dt_modified;
		
		private string _Id_owner;
		
		private System.Nullable<System.DateTime> _Dt_ownedUntil;
		
		private System.Nullable<System.DateTime> _Dt_nextTimer;
		
		public T_wf_instancestate()
		{
		}
		
		[Column(Name="id_instance", Storage="_Id_instance", DbType="NVarChar(36) NOT NULL", CanBeNull=false)]
		public string Id_instance
		{
			get
			{
				return this._Id_instance;
			}
			set
			{
				if ((this._Id_instance != value))
				{
					this._Id_instance = value;
				}
			}
		}
		
		[Column(Name="state", Storage="_State", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[Column(Name="n_status", Storage="_N_status", DbType="Int")]
		public System.Nullable<int> N_status
		{
			get
			{
				return this._N_status;
			}
			set
			{
				if ((this._N_status != value))
				{
					this._N_status = value;
				}
			}
		}
		
		[Column(Name="n_unlocked", Storage="_N_unlocked", DbType="Int")]
		public System.Nullable<int> N_unlocked
		{
			get
			{
				return this._N_unlocked;
			}
			set
			{
				if ((this._N_unlocked != value))
				{
					this._N_unlocked = value;
				}
			}
		}
		
		[Column(Name="n_blocked", Storage="_N_blocked", DbType="Int")]
		public System.Nullable<int> N_blocked
		{
			get
			{
				return this._N_blocked;
			}
			set
			{
				if ((this._N_blocked != value))
				{
					this._N_blocked = value;
				}
			}
		}
		
		[Column(Name="tx_info", Storage="_Tx_info", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Tx_info
		{
			get
			{
				return this._Tx_info;
			}
			set
			{
				if ((this._Tx_info != value))
				{
					this._Tx_info = value;
				}
			}
		}
		
		[Column(Name="dt_modified", Storage="_Dt_modified", DbType="DateTime NOT NULL")]
		public System.DateTime Dt_modified
		{
			get
			{
				return this._Dt_modified;
			}
			set
			{
				if ((this._Dt_modified != value))
				{
					this._Dt_modified = value;
				}
			}
		}
		
		[Column(Name="id_owner", Storage="_Id_owner", DbType="NVarChar(36)")]
		public string Id_owner
		{
			get
			{
				return this._Id_owner;
			}
			set
			{
				if ((this._Id_owner != value))
				{
					this._Id_owner = value;
				}
			}
		}
		
		[Column(Name="dt_ownedUntil", Storage="_Dt_ownedUntil", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_ownedUntil
		{
			get
			{
				return this._Dt_ownedUntil;
			}
			set
			{
				if ((this._Dt_ownedUntil != value))
				{
					this._Dt_ownedUntil = value;
				}
			}
		}
		
		[Column(Name="dt_nextTimer", Storage="_Dt_nextTimer", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dt_nextTimer
		{
			get
			{
				return this._Dt_nextTimer;
			}
			set
			{
				if ((this._Dt_nextTimer != value))
				{
					this._Dt_nextTimer = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tier_domain_mapping")]
	public partial class Tier_domain_mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tier_domain_group;
		
		private string _Tier_domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTier_domain_groupChanging(string value);
    partial void OnTier_domain_groupChanged();
    partial void OnTier_domainChanging(string value);
    partial void OnTier_domainChanged();
    #endregion
		
		public Tier_domain_mapping()
		{
			OnCreated();
		}
		
		[Column(Name="tier_domain_group", Storage="_Tier_domain_group", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tier_domain_group
		{
			get
			{
				return this._Tier_domain_group;
			}
			set
			{
				if ((this._Tier_domain_group != value))
				{
					this.OnTier_domain_groupChanging(value);
					this.SendPropertyChanging();
					this._Tier_domain_group = value;
					this.SendPropertyChanged("Tier_domain_group");
					this.OnTier_domain_groupChanged();
				}
			}
		}
		
		[Column(Name="tier_domain", Storage="_Tier_domain", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tier_domain
		{
			get
			{
				return this._Tier_domain;
			}
			set
			{
				if ((this._Tier_domain != value))
				{
					this.OnTier_domainChanging(value);
					this.SendPropertyChanging();
					this._Tier_domain = value;
					this.SendPropertyChanged("Tier_domain");
					this.OnTier_domainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tmp_billing_rerun_accounts")]
	public partial class Tmp_billing_rerun_accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_acc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_accChanging(int value);
    partial void OnId_accChanged();
    #endregion
		
		public Tmp_billing_rerun_accounts()
		{
			OnCreated();
		}
		
		[Column(Name="id_acc", Storage="_Id_acc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_acc
		{
			get
			{
				return this._Id_acc;
			}
			set
			{
				if ((this._Id_acc != value))
				{
					this.OnId_accChanging(value);
					this.SendPropertyChanging();
					this._Id_acc = value;
					this.SendPropertyChanged("Id_acc");
					this.OnId_accChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
