<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GRID_TITLE" xml:space="preserve">
    <value>Événements d'utilisation</value>
  </data>
  <data name="NO_RECORDS_TEXT" xml:space="preserve">
    <value>Aucun enregistrement trouvé.</value>
  </data>
  <data name="TEXT_ID_SESS" xml:space="preserve">
    <value>ID de la session</value>
  </data>
  <data name="TEXT_ID_ACC" xml:space="preserve">
    <value>Compte</value>
  </data>
  <data name="TEXT_ID_USAGE_INTERVAL" xml:space="preserve">
    <value>Intervalle</value>
  </data>
  <data name="TEXT_DT_SESSION" xml:space="preserve">
    <value>Date chronométrée</value>
  </data>
  <data name="TEXT_DT_CRT" xml:space="preserve">
    <value>Date traitement</value>
  </data>
  <data name="TEXT_AMOUNT" xml:space="preserve">
    <value>Montant</value>
  </data>
  <data name="TEXT_AM_CURRENCY" xml:space="preserve">
    <value>Devise</value>
  </data>
  <data name="TEXT_INDEX" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="TEXT_NM_VIEW" xml:space="preserve">
    <value>Affichage du produit</value>
  </data>
  <data name="TEXT_NM_PO" xml:space="preserve">
    <value>Offre produit</value>
  </data>
  <data name="TEXT_NM_PI_TEMPLATE" xml:space="preserve">
    <value>Modèle d'élément à prix</value>
  </data>
  <data name="TEXT_NM_PI_INSTANCE" xml:space="preserve">
    <value>Exemple d'élément à prix</value>
  </data>
  <data name="TEXT_ID_DECISION" xml:space="preserve">
    <value>ID de décision</value>
  </data>
  <data name="TEXT_AMOUNT_BEFORE" xml:space="preserve">
    <value>Montant avant</value>
  </data>
  <data name="TEXT_AMOUNT_AFTER" xml:space="preserve">
    <value>Montant après</value>
  </data>
  <data name="TEXT_PERCENT_ELIGIBLE" xml:space="preserve">
    <value>% éligible</value>
  </data>
  <data name="TEXT_QUALIFIED_BEFORE" xml:space="preserve">
    <value>Compteur avant</value>
  </data>
  <data name="TEXT_QUALIFIED_AFTER" xml:space="preserve">
    <value>Compteur après</value>
  </data>
  <data name="TEXT_AMOUNT_CHAIN_GROUP" xml:space="preserve">
    <value>Montant chaînes groupées</value>
  </data>
  <data name="TEXT_ACCOUNT_QUALIFICATION_GROUP" xml:space="preserve">
    <value>Comptes concernés</value>
  </data>
  <data name="TEXT_USAGE_QUALIFICATION_GROUP" xml:space="preserve">
    <value>Utilisation concernée</value>
  </data>
  <data name="TEXT_TX_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="TEXT_NM_DECISION" xml:space="preserve">
    <value>Type de décision</value>
  </data>
  <data name="TEXT_GRID_TITLE" xml:space="preserve">
    <value>Audit de décisions</value>
  </data>
  <data name="BEFORE_AFTER_GRID_TITLE" xml:space="preserve">
    <value>Frais d’utilisation</value>
  </data>
  <data name="TEXT_NM_COLUMN" xml:space="preserve">
    <value>Colonne</value>
  </data>
  <data name="TEXT_TX_BEFORE" xml:space="preserve">
    <value>Valeur avant</value>
  </data>
  <data name="TEXT_TX_AFTER" xml:space="preserve">
    <value>Valeur après</value>
  </data>
  <data name="TEXT_B_CHANGED" xml:space="preserve">
    <value>Modifié ?</value>
  </data>
  <data name="TEXT_NM_PV_TABLE" xml:space="preserve">
    <value>Tableau d'affichage produits</value>
  </data>
  <data name="TEXT_TIER_PRIORITY" xml:space="preserve">
    <value>Priorité</value>
  </data>
  <data name="TEXT_TIER_DISCOUNT" xml:space="preserve">
    <value>Remise</value>
  </data>
  <data name="TEXT_TIER_DOMAIN" xml:space="preserve">
    <value>Domaine</value>
  </data>
  <data name="TEXT_TIER_DOMAIN_APPLY" xml:space="preserve">
    <value>Appliquer au domaine</value>
  </data>
  <data name="TEXT_TIER_DOMAIN_IMPACT" xml:space="preserve">
    <value>Domaine impacté</value>
  </data>
  <data name="TEXT_CYCLES" xml:space="preserve">
    <value>Nombre de cycles</value>
  </data>
  <data name="TEXT_CYCLE_UNIT_TYPE" xml:space="preserve">
    <value>Type de cycle</value>
  </data>
  <data name="TEXT_CYCLE_UNITS_PER_TIER" xml:space="preserve">
    <value>Cycles par niveau</value>
  </data>
  <data name="TEXT_TIER_NAME" xml:space="preserve">
    <value>Nom de niveau</value>
  </data>
  <data name="TEXT_TITLE" xml:space="preserve">
    <value>Titre NowCast</value>
  </data>
  <data name="TEXT_SUBTITLE" xml:space="preserve">
    <value>Sous-titre NowCast</value>
  </data>
  <data name="TEXT_CHARGE_TYPE" xml:space="preserve">
    <value>Méthode de frais</value>
  </data>
  <data name="TEXT_CHARGE_TYPE_ID" xml:space="preserve">
    <value>Créer des frais de type</value>
  </data>
  <data name="TEXT_TIER_START" xml:space="preserve">
    <value>Début de niveau</value>
  </data>
  <data name="TEXT_TIER_END" xml:space="preserve">
    <value>Fin de niveau</value>
  </data>
  <data name="TEXT_TIER_METRIC" xml:space="preserve">
    <value>Mesure de niveau</value>
  </data>
  <data name="TEXT_TIER_TYPE" xml:space="preserve">
    <value>Type de niveau</value>
  </data>
  <data name="TEXT_CHARGE_ON_FINAL" xml:space="preserve">
    <value>Créer des frais lors de la finalisation</value>
  </data>
  <data name="TEXT_CHARGE_ON_EVERY" xml:space="preserve">
    <value>Créer des frais chaque fois</value>
  </data>
  <data name="TEXT_CHARGE_ON_INBOUND" xml:space="preserve">
    <value>Créer des frais lors de l'entrée de niveau</value>
  </data>
  <data name="TEXT_CHARGE_ON_OUTBOUND" xml:space="preserve">
    <value>Créer des frais lors de la sortie de niveau</value>
  </data>
  <data name="TEXT_PER_UNIT_RATE" xml:space="preserve">
    <value>Par prix unitaire</value>
  </data>
  <data name="TEXT_PER_EVENT_RATE" xml:space="preserve">
    <value>Par prix d'événement</value>
  </data>
</root>