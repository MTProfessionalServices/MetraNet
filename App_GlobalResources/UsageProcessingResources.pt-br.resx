<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="BEFORE_AFTER_GRID_TITLE" xml:space="preserve">
        <value>Alterações de utilização</value>
    </data>
    <data name="GRID_TITLE" xml:space="preserve">
        <value>Eventos de utilização</value>
    </data>
    <data name="NO_RECORDS_TEXT" xml:space="preserve">
        <value>Nenhum registro encontrado.</value>
    </data>
    <data name="TEXT_ACCOUNT_QUALIFICATION_GROUP" xml:space="preserve">
        <value>Contas contribuintes</value>
    </data>
    <data name="TEXT_AM_CURRENCY" xml:space="preserve">
        <value>Moeda</value>
    </data>
    <data name="TEXT_AMOUNT" xml:space="preserve">
        <value>Valor</value>
    </data>
    <data name="TEXT_AMOUNT_AFTER" xml:space="preserve">
        <value>Valor após</value>
    </data>
    <data name="TEXT_AMOUNT_BEFORE" xml:space="preserve">
        <value>Valor antes</value>
    </data>
    <data name="TEXT_AMOUNT_CHAIN_GROUP" xml:space="preserve">
        <value>Grupo de cadeia de valores</value>
    </data>
    <data name="TEXT_B_CHANGED" xml:space="preserve">
        <value>Alterado?</value>
    </data>
    <data name="TEXT_CHARGE_ON_EVERY" xml:space="preserve">
        <value>Gerar cobrança todas as vezes</value>
    </data>
    <data name="TEXT_CHARGE_ON_FINAL" xml:space="preserve">
        <value>Gerar cobrança mediante finalização</value>
    </data>
    <data name="TEXT_CHARGE_ON_INBOUND" xml:space="preserve">
        <value>Gerar cobrança mediante entrada de camada</value>
    </data>
    <data name="TEXT_CHARGE_ON_OUTBOUND" xml:space="preserve">
        <value>Gerar cobrança mediante saída de camada</value>
    </data>
    <data name="TEXT_CHARGE_TYPE" xml:space="preserve">
        <value>Método de cobrança</value>
    </data>
    <data name="TEXT_CHARGE_TYPE_ID" xml:space="preserve">
        <value>Gerar cobrança de tipo</value>
    </data>
    <data name="TEXT_CYCLE_UNIT_TYPE" xml:space="preserve">
        <value>Tipo de ciclo</value>
    </data>
    <data name="TEXT_CYCLE_UNITS_PER_TIER" xml:space="preserve">
        <value>Ciclos por camada</value>
    </data>
    <data name="TEXT_CYCLES" xml:space="preserve">
        <value>Contagem de ciclos</value>
    </data>
    <data name="TEXT_DT_CRT" xml:space="preserve">
        <value>Data de processamento</value>
    </data>
    <data name="TEXT_DT_SESSION" xml:space="preserve">
        <value>Data medida</value>
    </data>
    <data name="TEXT_GRID_TITLE" xml:space="preserve">
        <value>Auditoria de decisão</value>
    </data>
    <data name="TEXT_ID_ACC" xml:space="preserve">
        <value>Conta</value>
    </data>
    <data name="TEXT_ID_DECISION" xml:space="preserve">
        <value>Id de decisão</value>
    </data>
    <data name="TEXT_ID_SESS" xml:space="preserve">
        <value>ID da sessão</value>
    </data>
    <data name="TEXT_ID_USAGE_INTERVAL" xml:space="preserve">
        <value>Intervalo</value>
    </data>
    <data name="TEXT_INDEX" xml:space="preserve">
        <value>Índice</value>
    </data>
    <data name="TEXT_NM_COLUMN" xml:space="preserve">
        <value>Coluna</value>
    </data>
    <data name="TEXT_NM_DECISION" xml:space="preserve">
        <value>Tipo de decisão</value>
    </data>
    <data name="TEXT_NM_PI_INSTANCE" xml:space="preserve">
        <value>Instância de item cobrável</value>
    </data>
    <data name="TEXT_NM_PI_TEMPLATE" xml:space="preserve">
        <value>Modelo de item cobrável</value>
    </data>
    <data name="TEXT_NM_PO" xml:space="preserve">
        <value>Oferta de produto</value>
    </data>
    <data name="TEXT_NM_PV_TABLE" xml:space="preserve">
        <value>Tabela de exibição de produto</value>
    </data>
    <data name="TEXT_NM_VIEW" xml:space="preserve">
        <value>Exibição do produto</value>
    </data>
    <data name="TEXT_PER_EVENT_RATE" xml:space="preserve">
        <value>Taxa por evento</value>
    </data>
    <data name="TEXT_PER_UNIT_RATE" xml:space="preserve">
        <value>Taxa por unidade</value>
    </data>
    <data name="TEXT_PERCENT_ELIGIBLE" xml:space="preserve">
        <value>% Elegível</value>
    </data>
    <data name="TEXT_QUALIFIED_AFTER" xml:space="preserve">
        <value>Contador após</value>
    </data>
    <data name="TEXT_QUALIFIED_BEFORE" xml:space="preserve">
        <value>Contador antes</value>
    </data>
    <data name="TEXT_SUBTITLE" xml:space="preserve">
        <value>Subtítulo NowCast</value>
    </data>
    <data name="TEXT_TIER_DISCOUNT" xml:space="preserve">
        <value>Desconto</value>
    </data>
    <data name="TEXT_TIER_DOMAIN" xml:space="preserve">
        <value>Domínio</value>
    </data>
    <data name="TEXT_TIER_DOMAIN_APPLY" xml:space="preserve">
        <value>Aplicar ao domínio</value>
    </data>
    <data name="TEXT_TIER_DOMAIN_IMPACT" xml:space="preserve">
        <value>Domínio de impacto</value>
    </data>
    <data name="TEXT_TIER_END" xml:space="preserve">
        <value>Término da camada</value>
    </data>
    <data name="TEXT_TIER_METRIC" xml:space="preserve">
        <value>Métrica da camada</value>
    </data>
    <data name="TEXT_TIER_NAME" xml:space="preserve">
        <value>Nome da camada</value>
    </data>
    <data name="TEXT_TIER_PRIORITY" xml:space="preserve">
        <value>Prioridade</value>
    </data>
    <data name="TEXT_TIER_START" xml:space="preserve">
        <value>Início da camada</value>
    </data>
    <data name="TEXT_TIER_TYPE" xml:space="preserve">
        <value>Tipo de camada</value>
    </data>
    <data name="TEXT_TITLE" xml:space="preserve">
        <value>Título NowCast</value>
    </data>
    <data name="TEXT_TX_AFTER" xml:space="preserve">
        <value>Valor após</value>
    </data>
    <data name="TEXT_TX_BEFORE" xml:space="preserve">
        <value>Valor antes</value>
    </data>
    <data name="TEXT_TX_DESCRIPTION" xml:space="preserve">
        <value>Descrição</value>
    </data>
    <data name="TEXT_USAGE_QUALIFICATION_GROUP" xml:space="preserve">
        <value>Utilização contribuinte</value>
    </data>
</root>