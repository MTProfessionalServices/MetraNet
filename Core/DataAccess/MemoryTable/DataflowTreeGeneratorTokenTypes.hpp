#ifndef INC_DataflowTreeGeneratorTokenTypes_hpp_
#define INC_DataflowTreeGeneratorTokenTypes_hpp_

/* $ANTLR 2.7.6 (2005-12-22): "dataflow_generate.g" -> "DataflowTreeGeneratorTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API DataflowTreeGeneratorTokenTypes {
#endif
	enum {
		EOF_ = 1,
		TK_FALSE = 4,
		TK_TRUE = 5,
		NUM_DECIMAL = 6,
		NUM_FLOAT = 7,
		NUM_BIGINT = 8,
		IS = 9,
		OPERATOR = 10,
		INPUT = 11,
		OUTPUT = 12,
		STRING_DECL = 13,
		INTEGER_DECL = 14,
		BOOLEAN_DECL = 15,
		SUBLIST_DECL = 16,
		INCLUDE_COMPOSITE = 17,
		STEP_DECL = 18,
		IF_BEGIN = 19,
		IF_END = 20,
		ELSE = 21,
		THEN = 22,
		STEPS_BEGIN = 23,
		STEPS_END = 24,
		AMPERSAND = 25,
		ARROW = 26,
		BANG = 27,
		BOM = 28,
		DOLLAR_SIGN = 29,
		EQUALS = 30,
		NOTEQUALS = 31,
		NOTEQUALS2 = 32,
		LTN = 33,
		LTEQ = 34,
		GT = 35,
		GTEQ = 36,
		MODULO = 37,
		SL_COMMENT = 38,
		ML_COMMENT = 39,
		CARET = 40,
		COMMA = 41,
		DOT = 42,
		LBRACKET = 43,
		LCURLY = 44,
		LPAREN = 45,
		RBRACKET = 46,
		RCURLY = 47,
		RPAREN = 48,
		MINUS = 49,
		PIPE = 50,
		PLUS = 51,
		COLON = 52,
		SEMI = 53,
		SLASH = 54,
		STAR = 55,
		STRING_LITERAL = 56,
		TILDE = 57,
		WS = 58,
		ID = 59,
		NUM_INT = 60,
		EXPONENT = 61,
		FLOAT_SUFFIX = 62,
		BIGINT_SUFFIX = 63,
		HEX_DIGIT = 64,
		ACCOUNT_RESOLUTION = 65,
		BROADCAST = 66,
		COLL = 67,
		COMPOSITE = 68,
		COPY = 69,
		DEVNULL = 70,
		EXPORT = 71,
		EXPORT_QUEUE = 72,
		EXPR = 73,
		FILTER = 74,
		GENERATE = 75,
		GROUP_BY = 76,
		HASHPART = 77,
		HASH_RUNNING_TOTAL = 78,
		ID_GENERATOR = 79,
		IMPORT = 80,
		IMPORT_QUEUE = 81,
		INNER_HASH_JOIN = 82,
		INNER_MERGE_JOIN = 83,
		INSERT = 84,
		LOAD_ERROR = 85,
		LOAD_USAGE = 86,
		LONGEST_PREFIX_MATCH = 87,
		MD5 = 88,
		METER = 89,
		MULTI_HASH_JOIN = 90,
		PRINT = 91,
		PROJECTION = 92,
		RANGEPART = 93,
		RATE_CALCULATION = 94,
		RATE_SCHEDULE_RESOLUTION = 95,
		RENAME = 96,
		RIGHT_MERGE_ANTI_SEMI_JOIN = 97,
		RIGHT_MERGE_SEMI_JOIN = 98,
		RIGHT_OUTER_HASH_JOIN = 99,
		RIGHT_OUTER_MERGE_JOIN = 100,
		SELECT = 101,
		SEQUENTIAL_FILE_DELETE = 102,
		SEQUENTIAL_FILE_OUTPUT = 103,
		SEQUENTIAL_FILE_RENAME = 104,
		SEQUENTIAL_FILE_SCAN = 105,
		SESSION_SET_BUILDER = 106,
		SORT = 107,
		SORT_GROUP_BY = 108,
		SORTMERGE = 109,
		SORTMERGECOLL = 110,
		SORT_NEST = 111,
		SORT_ORDER_ASSERT = 112,
		SORT_RUNNING_TOTAL = 113,
		STEP = 114,
		SUBSCRIPTION_RESOLUTION = 115,
		SQL_EXEC_DIRECT = 116,
		SWITCH = 117,
		TAXWARE = 118,
		UNION_ALL = 119,
		UNNEST = 120,
		UNROLL = 121,
		PREDICATE_DOES_FILE_EXIST = 122,
		PREDICATE_IS_FILE_EMPTY = 123,
		WRITE_ERROR = 124,
		WRITE_PRODUCT_VIEW = 125,
		DELAYED_GENERATE = 126,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_DataflowTreeGeneratorTokenTypes_hpp_*/
