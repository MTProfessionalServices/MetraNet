<SCRIPT LANGUAGE="VBScript" RUNAT="Server"> ' This comment fixes the formating issue: <%
Option Explicit

CONST mom_LANGUAGE = "en-us"

Sub Application_OnStart
End Sub

Sub Application_OnEnd
End Sub

Sub Session_OnEnd
  mdm_GarbageCollector
End Sub

Sub Session_OnStart
    InitializeApplication()
    
    'Set the server locale
    dim sLCID
    sLCID = Session("mdm_LOCALIZATION_DICTIONARY").Item("SESSION_LCID")
    if len(rtrim(ltrim(sLCID)))>0 then
      Session.LCID = CLng(sLCID)
    end if
    
End Sub

FUNCTION InitializeApplication() ' As Boolean

    DIM APP_FOLDER, objDictionary, objRCD
    
    Set objRCD                = CreateObject("Metratech.RCD")    
    Session("VIRTUAL_DIR")    = mid(request.ServerVariables("SCRIPT_NAME"), 1, instr(2, request.ServerVariables("SCRIPT_NAME"), "/") - 1)
    Session("EXTENSION_DIR")  = objRCD.ExtensionDir
    Session("INSTALL_DIR")    = objRCD.InstallDir
    
    ' setup application start page
    Application("startPage")                    = Mid(request.ServerVariables("SCRIPT_NAME"), 1, instr(2, request.ServerVariables("SCRIPT_NAME"), "/") - 1)   '"
    Session("LocalizedPath")                    = Application("startPage")  & "/default/localized/en-us/"
    APP_FOLDER                                  = Server.MapPath("/mom")
    Session("mdm_APP_FOLDER")                   = APP_FOLDER ' Store the application folder for the mdm
    Application("APP_HTTP_PATH")                = Mid(request.ServerVariables("SCRIPT_NAME"), 1, instr(2, request.ServerVariables("SCRIPT_NAME"), "/") - 1) ' " 
    Session("VIRTUAL_DIR")                      = Mid(request.ServerVariables("SCRIPT_NAME"), 1, instr(2, request.ServerVariables("SCRIPT_NAME"), "/") - 1) ' "
    Set Session("mdm_LOCALIZATION_DICTIONARY")  = CreateObject("MTMSIX.DICTIONARY")  
    Session("mdm_APP_LANGUAGE")                 = mom_LANGUAGE    
    
    LoadDictionary APP_FOLDER, mom_LANGUAGE, Session("mdm_LOCALIZATION_DICTIONARY")
    
    InitializeApplication = TRUE
END FUNCTION

FUNCTION LoadDictionary(APP_FOLDER,strLanguage,objDictionary) ' As Boolean

    objDictionary.Clear
    
    ' Read the dictionary entries that do not need to be localized
    ' Generally it is the mam application logical physical links
    objDictionary.LoadFolder APP_FOLDER & "\default\LinkLookUp" , TRUE ' MDM V2 Read dictionary sub folder
    
    ' Read the DEFAULT dictionary entries that do need to be localized
    objDictionary.LoadFolder APP_FOLDER & "\Default\Localized\" & strLanguage & "\TextLookUp", TRUE ' MDM V2 Read dictionary sub folder
    
    ' Make sure the dictionary entry for APP_HTTP_PATH agrees with or virtual directory   '"
    objDictionary.Add "APP_HTTP_PATH" , application("APP_HTTP_PATH")
    objDictionary.Add "APP_PATH" , Server.MapPath(application("APP_HTTP_PATH"))
    
    objDictionary.Render    
    
    Session    ("FRAMEWORK_APP_LANGUAGE")   = strLanguage
    Set Session("FRAMEWORK_APP_DICTIONARY") = objDictionary
    
    LoadDictionary = TRUE
END FUNCTION  

' ---------------------------------------------------------------------------------------------------------------------------------------
' FUNCTION 		: mdm_GarbageCollector
' PARAMETERS	:
' DESCRIPTION : Free any session objects taking care to delete circular COM references
' RETURNS		  :
PRIVATE FUNCTION mdm_GarbageCollector() ' As Boolean

    Dim itm         ' As Variant
    Dim subitm

    ' Try to free circular references in objects and sub objects 
    For Each itm in Session.Contents
        
        If(IsObject(Session(itm)))Then
          
          On Error Resume Next
            For Each subitm in Session(itm)
              subitm.Delete
              subitm.Clean  
              subitm.Clear
              Set subitm = Nothing
              subitm = Empty
            Next

            Session(itm).Delete
            Session(itm).Clean  
            Session(itm).Clear
          On Error Goto 0     
        End If
    Next

    ' Take a second pass at freeing circular references in case of dependency in order... 
    ' Next free the objects in session
    For Each itm in Session.Contents
    
        If(IsObject(Session(itm)))Then
          On Error Resume Next
            For Each subitm in Session(itm)
              subitm.Delete
              subitm.Clean  
              subitm.Clear
              Set subitm = Nothing
              subitm = Empty
            Next
          On Error Goto 0
          
          Set Session(itm) = Nothing
        End If

        Session(itm) = Empty
    Next
    
    mdm_GarbageCollector = TRUE
END FUNCTION

</SCRIPT>
