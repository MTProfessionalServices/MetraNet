<%@ Master Language="C#" EnableViewState="true" AutoEventWireup="true" Inherits="MasterPages_MetraNetExt" CodeFile="MetraNetExt.master.cs" %>
<%@ Import Namespace="MetraTech.SecurityFramework" %>
<%@ Import Namespace="MetraTech.UI.Common" %>
<%@ Register Assembly="MetraTech.UI.Controls" Namespace="MetraTech.UI.Controls" TagPrefix="MT" %>
<%@ Register Src="../UserControls/ServerDescription.ascx" TagName="ServerDescription" TagPrefix="uc7" %>
<%@ Register Src="../UserControls/LocalizedIncludes.ascx" TagName="LocalizedIncludes" TagPrefix="uc6" %>
<%@ Register Src="../UserControls/Events.ascx" TagName="Events" TagPrefix="uc3" %>
<%@ Register Src="../UserControls/Error.ascx" TagName="Error" TagPrefix="uc5" %>
<%@ Register Src="~/UserControls/Menus/AccountMenu.ascx" TagName="AccountMenu" TagPrefix="uc4" %>
<%@ Register Src="~/UserControls/Menus/MetraNetMenu.ascx" TagName="MetraNetMenu" TagPrefix="uc10" %>
<%@ Register Src="~/UserControls/Menus/MetraCareMenu.ascx" TagName="MetraCareMenu" TagPrefix="uc1" %>
<%@ Register src="~/UserControls/Menus/MetraControlMenu.ascx" tagname="MetraControlMenu" tagprefix="uc8" %>
<%@ Register src="~/UserControls/Menus/MetraOfferMenu.ascx" tagname="MetraOfferMenu" tagprefix="uc9" %>
<%@ Register src="../UserControls/SessionTimeout.ascx" tagname="SessionTimeout" tagprefix="uc2" %>
<%@ Register src="../UserControls/Hierarchy.ascx" tagname="Hierarchy" tagprefix="uc10" %>

<!DOCTYPE html>
<html>
<head id="Head1" runat="server">
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <title>MetraNet</title>
  
  <link rel="stylesheet" type="text/css" href="/Res/Ext/resources/css/ext-all.css?v=6.5" />
  <link rel="stylesheet" type="text/css" href="<%= GetGlobalResourceObject("Resource", "LocalizedStyleSheet") %>" />


  <link rel="stylesheet" type="text/css" href="/Res/Styles/MiscField.css?v=6.5"/>
  <link rel="stylesheet" type="text/css" href="/Res/Styles/Silk.css?v=6.5" /> 
  <link rel="icon" type="image/ico" href="/MetraNet/favicon.ico"/>
  <link rel="stylesheet" type="text/css" href="/Res/Ext/resources/css/xtheme-metranet.css" />
  <link rel="stylesheet" type="text/css" href="/Res/Styles/menuStyle.css?v=6.5"/>
  

  <script type="text/javascript" src="/Res/Ext/adapter/ext/ext-base.js?v=6.5"></script>
  <script type="text/javascript" src="/Res/Ext/ext-all.js?v=6.5"></script>
  <script type="text/javascript" src="/Res/JavaScript/ExtHacks.js?v=6.5"></script>
  
  <script type="text/javascript" src="/Res/ux/jpath/jpath.js?v=6.5"></script>
  <script type="text/javascript" src="/Res/JavaScript/Common.js?v=6.5"></script>
  <script type="text/javascript" src="/Res/JavaScript/Account.js?v=6.5"></script>
  <script type="text/javascript" src="/Res/ux/form/LargeNumberField.js?v=6.5"></script>

	<uc6:LocalizedIncludes ID="LocalizedIncludes1" runat="server" />
	  
  <script type="text/javascript">
    var HierarhyNodeId;
    var GlobalTree;
    var helpPage = "/MetraNetHelp<%=HelpPage%>";
    var subscriberInfo = "<%=SubscriberInfo%>";
    var userInfo = "<%=UserInfo%>";
    var userId = <%=UserId%>;
    var selectedLanguage = "<%= Session[Constants.SELECTED_LANGUAGE]%>";
     
  </script>
  <%=Constants.CJ_PROTECTION_CODE %>    
  
 
     
</head>

<body>

<form id="form1" runat="server">

<script type="text/javascript">
  var viewport;

  Ext.onReady(function() {
    Ext.get(document.body).mask(TEXT_LOADING);

    // Cleanup styles for viewport, and ASP.NET 
    document.body.style.overflow = "hidden";
    Ext.get("aspnetForm").dom.style.overflow = "auto";

    // Ext localized settings
    Ext.MessageBox.buttonText.yes = TEXT_YES;
    Ext.MessageBox.buttonText.no = TEXT_NO;
    Ext.MessageBox.buttonText.ok = TEXT_OK;
    Ext.MessageBox.buttonText.cancel = TEXT_CANCEL;

    // State provider (cookies)
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

    // Custom viewport to support ASP.NET form       
    Ext.FormViewport = Ext.extend(Ext.Container, {
      initComponent: function() {
        Ext.FormViewport.superclass.initComponent.call(this);
        document.getElementsByTagName('html')[0].className += ' x-FormViewport';
        this.el = Ext.get(document.forms[0]);
        this.el.setHeight = Ext.emptyFn;
        this.el.setWidth = Ext.emptyFn;
        this.el.setSize = Ext.emptyFn;
        this.el.dom.scroll = 'no';
        this.allowDomMove = false;
        this.autoWidth = true;
        this.autoHeight = true;
        Ext.EventManager.onWindowResize(this.fireResize, this);
        this.renderTo = this.el;
      },

      fireResize: function(w, h) {
        this.fireEvent('resize', this, w, h, w, h);
      }
    });

    AcctTabPanel = new Ext.TabPanel({
      id: 'tabAcctInfo',
      border: false,
      activeTab: 0,
      tabPosition: 'bottom',
      listeners: {
        tabchange: function(tp, newTab) {
          if (newTab.getId() == 'TabAcctProp') {
            if (getFrameMetraNet() && getFrameMetraNet().Account) {
              getFrameMetraNet().Account.Refresh();
            }
          }
          else if (newTab.getId() == 'TabAcctPropGrid') {
            getFrameMetraNet().Account.ShowPropertyGrid(accountJSON);
          }
          else if (newTab.getId() == 'TabAcctSelector') {

          }
          else if(GlobalTree && HierarhyNodeId) {
            var node = GlobalTree.getNodeById(HierarhyNodeId);
            node.select();
          }
        }
      },
      items: [
        <%= GetAccountTreeView() %>
      {
        html: '<iframe id="AccountSelector" src="/MetraNet/AccountNavigation.aspx" width="100%" height="100%" frameborder="0" />',
      id: 'TabAcctSelector',
      title: TEXT_ACCOUNT_FINDER,
      autoScroll: false
//    }, {
//      html: '<div id="AccountProps" name="AccountProps" ><p><i>' + TEXT_NO_ACCOUNT_LOADED + '</i></p></div><div id="addressDiv"></div><div id="path1"></div>',
//      id: 'TabAcctProp',
//      title: TEXT_ACCOUNT_PROPERTIES,
//      autoScroll: true
    }, {
      html: '<div id="AccountActivity" name="AccountActivity" class="full"><p><i>' + TEXT_NO_ACCOUNT_LOADED + '</i></p></div>',
      id: 'TabAcctActivity',
      title: 'Account Activity',
      autoScroll: true      
    }, {
      html: '<div id="AccountProps2" name="AccountProps2" class="full"><p><i>' + TEXT_NO_ACCOUNT_LOADED + '</i></p></div>',
      id: 'TabAcctPropGrid',
      title: TEXT_ACCOUNT_DETAILS,
      autoScroll: true
    }        
    ]
  });

    // Inline search code
  var ds = new Ext.data.Store({
    proxy: new Ext.data.HttpProxy({
      url: '/MetraNet/AjaxServices/FindAccountSvc.aspx'
    }),
    reader: new Ext.ux.JPathJsonReader({
        root: 'Items',
        totalProperty: 'TotalRows',
        id: '_AccountID'
      }, [
      { name: 'UserName', mapping: 'UserName' },
      { useJPath: true, name: 'FirstName', mapping: 'LDAP[ContactType == 1]/FirstName' },
      { useJPath: true, name: 'LastName', mapping: 'LDAP[ContactType == 1]/LastName' },
      { name: 'AccountType', mapping: 'AccountType' },
      { name: 'AccountStatus', mapping: 'AccountStatus' },
      { name: 'Folder', mapping: 'Internal.Folder' },
      { name: '_AccountID', mapping: '_AccountID' }
    ])
  });

  ds.on('loadexception',
    function(a, conn, resp) {
      if (resp.status == 200) {
        Ext.UI.SessionTimeout();
      }
      else if (resp.status == 500) {
        Ext.UI.SystemError();
      }
    });



    // Custom rendering Template
  var resultTpl = new Ext.XTemplate(
    '<tpl for="."><div class="search-item">',
    '<h3><img align="middle" src="/ImageHandler/images/Account/{AccountType}/account.gif?State={AccountStatus}&Folder={Folder}">{UserName} ({_AccountID})</h3>',

    '<tpl if="this.isNull(FirstName)==false && this.isNull(LastName)==false">',
    '{FirstName:htmlEncode} {LastName:htmlEncode}',
    '</tpl>',

    '<tpl if="this.isNull(FirstName) || this.isNull(LastName)">',
    '<tpl if="this.isNull(FirstName)">',
    '<tpl if="this.isNull(LastName) == false">',
    '{LastName:htmlEncode}',
    '</tpl>',
    '</tpl>',

    '<tpl if="this.isNull(LastName)">',
    '<tpl if="this.isNull(FirstName)==false">',
    '{FirstName:htmlEncode}',
    '</tpl>',
    '</tpl>',
    '</tpl>',
    '</div></tpl>',
    {
      isNull: function(inputString) {
        if ((inputString == null) || (inputString == '') || (inputString == 'null')) {
          return true;
        }
        return false;
      }
    }
  );

  Ext.reg('FormViewport', Ext.FormViewport);

    // Create the main viewport
    viewport = new Ext.FormViewport({
    renderTo: "aspnetForm",
    layout: 'border',
    items: [
    {
      region: 'north',
      layout: 'fit',
      id: 'north-panel',
      //contentEl: 'north',
      split: false,
      collapsible: false,
      margins: '0 0 0 0',
     

      
      tbar: [
         
         {xtype: 'tbspacer', width: 5},
         
         {
           xtype: 'component',
            autoEl: {
                tag: 'img',
                src: '/Res/Images/login/metranet_Logo_Wht.png',
                width: 200,
                height:30
            }

         },

//        {
//        
//            text: '<img alt="MetraNet" width="150" height="30" src="/Res/Images/Header/MetraNet1Small.png" />'

//           
//        }

//        ,
        {xtype: 'tbspacer', width: '150', height: 40},

         <%= GetTopBar() %>

    
    '->'
    ,
        new Ext.Toolbar.SplitButton({
        text: userInfo,    
         handler: function() {
          Ext.UI.LoadPage('/MetraNet/Welcome.aspx'); ;
        },
        //tooltip: {text:'This is a an example QuickTip for a toolbar item', title:'Tip Title'},
        iconCls: 'blist',
        // Menus can be built/referenced by using nested menu config objects
        menu : {
          items: [{
              text: 'Change Password',
              icon: '/Res/Images/icons/lock_edit.png',
              handler: function() { Ext.UI.LoadPage('/MetraNet/ChangePassword.aspx'); }
            },{
              text: 'My Security Settings',
              icon: '/Res/Images/icons/key_go.png',
              handler: function() { Ext.UI.LoadPage('/MetraNet/TicketToMam.aspx?URL=/MAM/default/dialog/ManageSecurity.asp?MDMReload=True**MODE=CSR_DEFAULT_POLICY'); }
            }]
        }
      }),
       
        "-",
        {
            id: 'btnLogout',
            iconCls: 'logout',
            text: TEXT_LOGOUT,
            handler: function() {
                Ext.UI.Logout();
            }
        }
      ],

      bbar:[
        {
            //text: '<span id="subscriberInfo">Account:</span><span id="subscriberInfo">None Selected</span>',
            handler: function() {
                Account.RefreshWithMenu();
                
            }
        },
	    {
		    iconCls: 'hierarchyFind',
		    id: 'btnFindHierarchy',
		    hideMode: 'visibility',
		    hidden: true,
            handler: function() { Account.LinkAccount(); }
        },               	
        
        
        '->',
        	
//      new Ext.Toolbar.Fill(),
//      {
//        text: userInfo,
//        handler: function() {
//          Ext.UI.LoadPage('/MetraNet/Welcome.aspx'); ;
//        }
//      },
      {
        iconCls: 'help',
        text: TEXT_HELP,
        handler: function() {
                Ext.UI.LoadHelp();
            }
        }
      ]
    },
      
    <%= GetAccountTabs() %>
    {
        region: 'west',
        id: 'west-panel',
        frame:false,
        title: '',
        split: false,
        width: 200,
        minSize: 175,
        maxSize: 400,
        collapsible: true,
        margins: '0 0 0 0',
        layout: 'accordion',
        layoutConfig: {
             animate: true           
         },
         items: [ 
                    <%= GetVerticalMenus() %>
          ]
     },
     {
        region: 'center',
        items: {
             contentEl: 'MainContent',
             layout: 'fit',
             autoScroll: false,
             autoLoad: null
           }
        
       }
    ]
  });

    if ( Ext.getCmp('west-panel').items.items[0])
      Ext.getCmp('west-panel').items.items[0].collapse(true)

    // Now it is time to make the Iframe 100%... yeah, it's a bit gross, 
    // but cleaner than any alternative we could find. 
    Ext.get('MainContent').dom.style.height = "100%";
    Ext.get('MainContent').dom.parentNode.style.height = "100%";
    Ext.get('MainContent').dom.parentNode.parentNode.style.height = "100%";
    Ext.get('MainContent').dom.parentNode.parentNode.parentNode.style.height = "100%";

    // Take care of any browser specific stuff here
    if (Ext.isGecko) {
      Ext.get('MainContent').dom.parentNode.parentNode.parentNode.style.height = "100%";
    }
    else {
      var par = Ext.get('MainContent').dom.parentNode
      while (par && par.style) {
        par.style.display = "block";
        par = par.parentNode;
      }
    }

    // reload account just in case the user hit F5 while they had an account loaded.
    Account.Refresh();

    //  Ext.get("settings").dom.style.display = "block";
    <%= EnableMenuContainers() %>

    Ext.get(document.body).unmask();
  });
</script>
  <div id="hideAllDiv" class="ext-el-mask" style="text-align: center; vertical-align: middle; display: none; z-index:30000;">
    <div class="ext-el-mask-msg"  id="hideAllDivMsg" style="z-index: 31000; position: absolute;">Loading</div>
  </div>

  <!-- Header --> 
  <%--  <div id="north">
    <div>
      <img alt="MetraNet" width="150" height="30" src="/Res/Images/Header/MetraNet1Small.png" />
    </div>
     
  </div>
  
--%>


<!-- Menus -->
  <div id="metranet">
    <uc10:MetraNetMenu ID="MetraNetMenu1" runat="server" />
  </div>

  <div id="metracare">
    <uc1:MetraCareMenu ID="MetraCareMenu1" runat="server" />
  </div>

  <div id="metraoffer">
    <uc9:MetraOfferMenu ID="MetraOfferMenu1" runat="server" />
  </div>

  <div id="metracontrol">
    <uc8:MetraControlMenu ID="MetraControlMenu1" runat="server" />
  </div>

  <!-- SETTINGS
  <div id="settings" style="display:none;">
    <div id="settingsMsg"></div>  
    <div id="settingsForm">
      <br />
      <MT:MTDatePicker AllowBlank="false" Label="App.Time" LabelWidth="60" ID="tbAppTime" runat="server" ControlWidth="80" />
      <br />
      <MT:MTDropDown Label="Language" LabelWidth="60" ID="ddLanguage" runat="server" ControlWidth="80" />   
      <br />
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" id="btnOKSettings" value="OK" />
      <br />
      <hr />      
    </div>
  </div>
 -->
  <!-- MAIN PAGE --> 
  <div id="MainContent" class="x-hide-display">
    <iframe src="<%= (StartingURL ?? string.Empty).EncodeForHtmlAttribute() %>" id="MainContentIframe" name="MainContentIframe" frameborder="0" height="100%" width="100%" style="height:100%;width:100%" scrolling="auto"></iframe>
  </div>  
  <asp:contentplaceholder id="ContentPlaceHolder1" runat="server"></asp:contentplaceholder>
  
  <div id="props-panel" style="width:200px;height:200px;overflow:hidden;border:0"></div>
  
  <!-- This hidden frame is used to load items in the background such as new accounts to manage. -->
  <iframe id="hidden" name="hidden" src="<%= LoadUserAccount %>" width="0px" height="0px" frameborder="0"></iframe>
  
  <!-- For backwards compatability with MAM ticketing -->
  <iframe id="guide" name="hidden" src="blank.htm" width="0px" height="0px" frameborder="0"></iframe>

  <div id="accountTree" style="height:100%;width:100%;border:0px;" class="x-hide-display">
    <uc10:Hierarchy ID="Hierarchy1" StartAccountType="system_mps" runat="server" />
  </div>
<uc2:SessionTimeout ID="SessionTimeout1" runat="server" />
</form>

</body>
</html>
<script type="text/javascript">
  var flagOkLoadStore = "true";
</script>
