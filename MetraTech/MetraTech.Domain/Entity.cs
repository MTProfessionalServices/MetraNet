using System;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using MetraTech.Domain.DataAccess;

namespace MetraTech.Domain
{
  [DataContract(Namespace = "MetraTech.MetraNet")]
  public abstract class Entity
  {
    /// <summary>
    /// This is an identifier generated by MetraNet for any entity. MetraNet provides the ability to reference the entity with this identifier.
    /// </summary>
    [DataMember]
    [Required]
    public Guid EntityId { get; set; }

    ///<summary>
    /// This is an identifier that can be provided by you to refer to a MetraNet entity. It is normally generated by
    /// an application outside MetraNet that owns this entity (like a CRM or Financial application). This identifier has to
    /// be unique for the entity type (e.g. 2 accounts cannot have the same external Id). The ExternalId simplifies integrations by
    /// allowing you to refer to any entities in MetraNet by using identifiers that already exist in your application.
    ///</summary>
    public string ExternalId { get; set; }

    private LocalizationDictionary _name;

    /// <summary>
    /// Name of this entity. This is a collection of key-value pairs where the key indicates the language code,
    /// and the value contains the name in that language. Language codes in Metanga are based on <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tags</a>.
    /// For example: "en-us", "ja-jp". Valid values can be found in Metanga, under Configuration -> Languages To Support (see the Culture Code column).
    /// </summary>
    public LocalizationDictionary Name
    {
      get { return _name ?? (_name = new LocalizationDictionary()); }
    }

    /// <summary>
    /// Persists the Name data as Xml in the database. Should only be used by Entity Framework.
    /// </summary>
    public string NameXml
    {
      get { return _name == null || _name.Count == 0 ? null : _name.Serialize(); }
      set { _name = SerializationHelper.Deserialize<LocalizationDictionary>(value); }
    }

    private LocalizationDictionary _description;

    /// <summary>
    /// Description of this entity. This is a collection of key-value pairs where the key indicates the language code,
    /// and the value contains the name in that language. Language codes in Metanga are based on <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tags</a>.
    /// For example: "en-us", "ja-jp". Valid values can be found in Metanga, under Configuration -> Languages To Support (see the Culture Code column).
    /// </summary>
    public LocalizationDictionary Description
    {
      get { return _description ?? (_description = new LocalizationDictionary()); }
    }

    /// <summary>
    /// Persists the Description data as Xml in the database. Should only be used by Entity Framework.
    /// </summary>
    public string DescriptionXml
    {
      get { return _description == null || _description.Count == 0 ? null : _description.Serialize(); }
      set { _description = SerializationHelper.Deserialize<LocalizationDictionary>(value); }
    }

    /// <summary>
    /// Date on which the entity was originally created
    /// </summary>
    public DateTime CreationDate { get; set; }

    /// <summary>
    /// Date on which the entity was originally created
    /// </summary>
    public DateTime ModifiedDate { get; set; }
  }
}