// Generated from Parsers\ExpressionLanguage.g4 by ANTLR 4.0.1-SNAPSHOT
namespace MetraTech.Domain {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

public partial class ExpressionLanguageLexer : Lexer {
	public const int
		T__2=1, T__1=2, T__0=3, NOT=4, AND=5, OR=6, STRING=7, INTEGER=8, DECIMAL=9, 
		DATETIME=10, BOOLEAN=11, IDENTIFIER=12, SPACE=13;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"')'", "','", "'('", "'NOT'", "'AND'", "'OR'", "STRING", "INTEGER", "DECIMAL", 
		"DATETIME", "BOOLEAN", "IDENTIFIER", "SPACE"
	};
	public static readonly string[] ruleNames = {
		"T__2", "T__1", "T__0", "NOT", "AND", "OR", "STRING", "INTEGER", "DECIMAL", 
		"DATETIME", "BOOLEAN", "IDENTIFIER", "SPACE", "EscapeSequence", "UnicodeEscape", 
		"HexDigit"
	};


	public ExpressionLanguageLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "ExpressionLanguage.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 12 : SPACE_action(_localctx, actionIndex); break;
		}
	}
	private void SPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: Skip();  break;
		}
	}

	public static readonly string _serializedATN =
		"\x5\x4\xF~\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6"+
		"\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE"+
		"\t\xE\x4\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3"+
		"\a\x3\b\x3\b\x3\b\a\b\x38\n\b\f\b\xE\b;\v\b\x3\b\x3\b\x3\t\x6\t@\n\t\r"+
		"\t\xE\t\x41\x3\n\a\n\x45\n\n\f\n\xE\nH\v\n\x3\n\x3\n\x6\nL\n\n\r\n\xE"+
		"\nM\x3\v\x3\v\a\vR\n\v\f\v\xE\vU\v\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x5\f\x62\n\f\x3\r\x3\r\a\r\x66\n\r\f\r\xE\ri\v"+
		"\r\x3\xE\x6\xEl\n\xE\r\xE\xE\xEm\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x5\xFu"+
		"\n\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x2\x2\x2"+
		"\x12\x3\x2\x3\x1\x5\x2\x4\x1\a\x2\x5\x1\t\x2\x6\x1\v\x2\a\x1\r\x2\b\x1"+
		"\xF\x2\t\x1\x11\x2\n\x1\x13\x2\v\x1\x15\x2\f\x1\x17\x2\r\x1\x19\x2\xE"+
		"\x1\x1B\x2\xF\x2\x1D\x2\x2\x1\x1F\x2\x2\x1!\x2\x2\x1\x3\x2\f\x5\x2!$$"+
		"^^\x3\x32;\x3\x32;\x3\x32;\x3%%\x5\x43\\\x61\x61\x63|\x6\x32;\x43\\\x61"+
		"\x61\x63|\x5\v\f\xF\xF\"\"\a$$^^ppttvv\x5\x32;\x43H\x63h\x84\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3"+
		"\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2"+
		"\x2\x1B\x3\x2\x2\x2\x3#\x3\x2\x2\x2\x5%\x3\x2\x2\x2\a\'\x3\x2\x2\x2\t"+
		")\x3\x2\x2\x2\v-\x3\x2\x2\x2\r\x31\x3\x2\x2\x2\xF\x34\x3\x2\x2\x2\x11"+
		"?\x3\x2\x2\x2\x13\x46\x3\x2\x2\x2\x15O\x3\x2\x2\x2\x17\x61\x3\x2\x2\x2"+
		"\x19\x63\x3\x2\x2\x2\x1Bk\x3\x2\x2\x2\x1Dq\x3\x2\x2\x2\x1Fv\x3\x2\x2\x2"+
		"!|\x3\x2\x2\x2#$\a+\x2\x2$\x4\x3\x2\x2\x2%&\a.\x2\x2&\x6\x3\x2\x2\x2\'"+
		"(\a*\x2\x2(\b\x3\x2\x2\x2)*\aP\x2\x2*+\aQ\x2\x2+,\aV\x2\x2,\n\x3\x2\x2"+
		"\x2-.\a\x43\x2\x2./\aP\x2\x2/\x30\a\x46\x2\x2\x30\f\x3\x2\x2\x2\x31\x32"+
		"\aQ\x2\x2\x32\x33\aT\x2\x2\x33\xE\x3\x2\x2\x2\x34\x39\a$\x2\x2\x35\x38"+
		"\x5\x1D\xF\x2\x36\x38\n\x2\x2\x2\x37\x35\x3\x2\x2\x2\x37\x36\x3\x2\x2"+
		"\x2\x38;\x3\x2\x2\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2\x2:<\x3\x2\x2\x2"+
		";\x39\x3\x2\x2\x2<=\a$\x2\x2=\x10\x3\x2\x2\x2>@\t\x3\x2\x2?>\x3\x2\x2"+
		"\x2@\x41\x3\x2\x2\x2\x41?\x3\x2\x2\x2\x41\x42\x3\x2\x2\x2\x42\x12\x3\x2"+
		"\x2\x2\x43\x45\t\x4\x2\x2\x44\x43\x3\x2\x2\x2\x45H\x3\x2\x2\x2\x46\x44"+
		"\x3\x2\x2\x2\x46G\x3\x2\x2\x2GI\x3\x2\x2\x2H\x46\x3\x2\x2\x2IK\a\x30\x2"+
		"\x2JL\t\x5\x2\x2KJ\x3\x2\x2\x2LM\x3\x2\x2\x2MK\x3\x2\x2\x2MN\x3\x2\x2"+
		"\x2N\x14\x3\x2\x2\x2OS\a%\x2\x2PR\n\x6\x2\x2QP\x3\x2\x2\x2RU\x3\x2\x2"+
		"\x2SQ\x3\x2\x2\x2ST\x3\x2\x2\x2TV\x3\x2\x2\x2US\x3\x2\x2\x2VW\a%\x2\x2"+
		"W\x16\x3\x2\x2\x2XY\av\x2\x2YZ\at\x2\x2Z[\aw\x2\x2[\x62\ag\x2\x2\\]\a"+
		"h\x2\x2]^\a\x63\x2\x2^_\an\x2\x2_`\au\x2\x2`\x62\ag\x2\x2\x61X\x3\x2\x2"+
		"\x2\x61\\\x3\x2\x2\x2\x62\x18\x3\x2\x2\x2\x63g\t\a\x2\x2\x64\x66\t\b\x2"+
		"\x2\x65\x64\x3\x2\x2\x2\x66i\x3\x2\x2\x2g\x65\x3\x2\x2\x2gh\x3\x2\x2\x2"+
		"h\x1A\x3\x2\x2\x2ig\x3\x2\x2\x2jl\t\t\x2\x2kj\x3\x2\x2\x2lm\x3\x2\x2\x2"+
		"mk\x3\x2\x2\x2mn\x3\x2\x2\x2no\x3\x2\x2\x2op\b\xE\x2\x2p\x1C\x3\x2\x2"+
		"\x2qt\a^\x2\x2ru\t\n\x2\x2su\x5\x1F\x10\x2tr\x3\x2\x2\x2ts\x3\x2\x2\x2"+
		"u\x1E\x3\x2\x2\x2vw\aw\x2\x2wx\x5!\x11\x2xy\x5!\x11\x2yz\x5!\x11\x2z{"+
		"\x5!\x11\x2{ \x3\x2\x2\x2|}\t\v\x2\x2}\"\x3\x2\x2\x2\r\x2\x37\x39\x41"+
		"\x46MS\x61gmt";
	public static readonly ATN _ATN =
		ATNSimulator.Deserialize(_serializedATN.ToCharArray());
}
} // namespace MetraTech.Domain
