//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace TestClient.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ListenerSoap", Namespace="http://metratech.com/webservices")]
    public class Listener : System.Web.Services.Protocols.SoapHttpClientProtocol 
    {
        
        /// <remarks/>
        public Listener() {
            this.Url = "http://localhost/Batch/Listener.asmx";
        }
        
        // -------------------------------------------------------------------
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/Create", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Create(BatchObject batchobject) {
            object[] results = this.Invoke("Create", new object[] {
                        batchobject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreate(BatchObject batchobject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Create", new object[] {
                        batchobject}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        // -------------------------------------------------------------------
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/LoadByName", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchObject LoadByName(string Name, string Namespace, string SequenceNumber) {
            object[] results = this.Invoke("LoadByName", new object[] {
                        Name,
                        Namespace,
                        SequenceNumber});
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadByName(string Name, string Namespace, string SequenceNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadByName", new object[] {
                        Name,
                        Namespace,
                        SequenceNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public BatchObject EndLoadByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BatchObject)(results[0]));
        }
        
        // -------------------------------------------------------------------
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/LoadByUID", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchObject LoadByUID(string UID) {
            object[] results = this.Invoke("LoadByUID", new object[] {
                        UID});
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadByUID(string UID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadByUID", new object[] {
                        UID}, callback, asyncState);
        }
        
        /// <remarks/>
        public BatchObject EndLoadByUID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BatchObject)(results[0]));
        }
        
        // -------------------------------------------------------------------
				/// <remarks/>
				[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/MarkAsFailed", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
				public void MarkAsFailed(string UID, string Comment) 
				{
				  object[] results = this.Invoke("MarkAsFailed", new object[] {
											UID, Comment});
          return;
				}
	        
				/// <remarks/>
				public System.IAsyncResult BeginMarkAsFailed(string UID, string Comment, System.AsyncCallback callback, object asyncState) 
				{
					return this.BeginInvoke("MarkAsFailed", new object[] {
											UID, Comment}, callback, asyncState);
				}
	        
				/// <remarks/>
				public void EndMarkAsFailed(System.IAsyncResult asyncResult) 
				{
					object[] results = this.EndInvoke(asyncResult);
					return;
				}

        // -------------------------------------------------------------------
				/// <remarks/>
				[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/MarkAsDismissed", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
				public void MarkAsDismissed(string UID, string Comment) 
				{
					object[] results = this.Invoke("MarkAsDismissed", new object[] {
											UID, Comment});
					return;
				}
	        
				/// <remarks/>
				public System.IAsyncResult BeginMarkAsDismissed(string UID, string Comment, System.AsyncCallback callback, object asyncState) 
				{
					return this.BeginInvoke("MarkAsDismissed", new object[] {
											UID, Comment}, callback, asyncState);
				}
	        
				/// <remarks/>
				public void EndMarkAsDismissed(System.IAsyncResult asyncResult) 
				{
					object[] results = this.EndInvoke(asyncResult);
					return;
				}

        // -------------------------------------------------------------------
				/// <remarks/>
				[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/MarkAsCompleted", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
				public void MarkAsCompleted(string UID, string Comment) 
				{
				  object[] results = this.Invoke("MarkAsCompleted", new object[] {
											UID, Comment});
          return;
				}
	        
				/// <remarks/>
				public System.IAsyncResult BeginMarkAsCompleted(string UID, string Comment, System.AsyncCallback callback, object asyncState) 
				{
					return this.BeginInvoke("MarkAsCompleted", new object[] {
											UID, Comment}, callback, asyncState);
				}
	        
				/// <remarks/>
				public void EndMarkAsCompleted(System.IAsyncResult asyncResult) 
				{
					object[] results = this.EndInvoke(asyncResult);
					return;
				}

        // -------------------------------------------------------------------
				/// <remarks/>
				[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/UpdateMeteredCount", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
				public void UpdateMeteredCount(string UID, int MeteredCount)
				{
					object[] results = this.Invoke("UpdateMeteredCount", new object[] {
											UID, MeteredCount});
					return;
				}
	        
				/// <remarks/>
				public System.IAsyncResult BeginUpdateMeteredCount(string UID, int MeteredCount, System.AsyncCallback callback, object asyncState) 
				{
					return this.BeginInvoke("UpdateMeteredCount", new object[] {
											UID, MeteredCount}, callback, asyncState);
				}
	        
				/// <remarks/>
				public void EndUpdateMeteredCount(System.IAsyncResult asyncResult) 
				{
					object[] results = this.EndInvoke(asyncResult);
					return;
				}

        // -------------------------------------------------------------------
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/MarkAsActive", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MarkAsActive(string UID, string Comment) 
				{
				  object[] results = this.Invoke("MarkAsActive", new object[] {
																																			UID, Comment});
          return;
        }
	        
        /// <remarks/>
			  public System.IAsyncResult BeginMarkAsActive(string UID, string Comment, System.AsyncCallback callback, object asyncState) 
			  {
				  return this.BeginInvoke("MarkAsActive", new object[] {
																															 UID, Comment}, callback, asyncState);
			  }
	        
			  /// <remarks/>
			  public void EndMarkAsActive(System.IAsyncResult asyncResult) 
			  {
			  	object[] results = this.EndInvoke(asyncResult);
			  	return;
			  }

        // -------------------------------------------------------------------
			  /// <remarks/>
			  [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/MarkAsBackout", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
			  public void MarkAsBackout(string UID, string Comment) 
			  {
			  	object[] results = this.Invoke("MarkAsBackout", new object[] {
			  																																UID, Comment});
			  	return;
			  }
	          
			  /// <remarks/>
			  public System.IAsyncResult BeginMarkAsBackout(string UID, string Comment, System.AsyncCallback callback, object asyncState) 
			  {
			  	return this.BeginInvoke("MarkAsBackout", new object[] {
			  																												 UID, Comment}, callback, asyncState);
			  }
	          
			  /// <remarks/>
			  public void EndMarkAsBackout(System.IAsyncResult asyncResult) 
			  {
			  	object[] results = this.EndInvoke(asyncResult);
			  	return;
			  }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://metratech.com/webservices")]
    public class BatchObject {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Namespace;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime CreationDate;
        
        /// <remarks/>
        public string Source;
        
        /// <remarks/>
        public int CompletedCount;
        
        /// <remarks/>
        public int ExpectedCount;
        
        /// <remarks/>
        public int FailureCount;
        
        /// <remarks/>
        public string SequenceNumber;
        
        /// <remarks/>
        public string Comment;
        
        /// <remarks/>
        public System.DateTime SourceCreationDate;
        
        /// <remarks/>
        public string UID;
        
        /// <remarks/>
        public int MeteredCount;
    }
}
