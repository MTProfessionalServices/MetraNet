<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GRID_TITLE" xml:space="preserve">
    <value>Gerenciar cobranças extraordinárias</value>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>MetraNet</value>
  </data>
  <data name="TEXT_ADDITIONAL_CODE" xml:space="preserve">
    <value>Código adicional</value>
  </data>
  <data name="TEXT_ADDITIONAL_RATE" xml:space="preserve">
    <value>Taxa adicional</value>
  </data>
  <data name="TEXT_AMOUNT" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="TEXT_APPROVE" xml:space="preserve">
    <value>Aprovar</value>
  </data>
  <data name="TEXT_APPROVE_ALL" xml:space="preserve">
    <value>Aprovar tudo</value>
  </data>
  <data name="TEXT_CHARGE_AMOUNT" xml:space="preserve">
    <value>Valor da cobrança</value>
  </data>
  <data name="TEXT_CHARGE_CURRENCY" xml:space="preserve">
    <value>Moeda da cobrança</value>
  </data>
  <data name="TEXT_CHARGE_ID" xml:space="preserve">
    <value>ID da cobrança</value>
  </data>
  <data name="TEXT_CHARGE_TAX" xml:space="preserve">
    <value>Valor do imposto da cobrança</value>
  </data>
  <data name="TEXT_CONFIRM_CONTINUE" xml:space="preserve">
    <value>Tem certeza que deseja prosseguir?</value>
  </data>
  <data name="TEXT_CURRENCY" xml:space="preserve">
    <value>Moeda</value>
  </data>
  <data name="TEXT_DENY" xml:space="preserve">
    <value>Negar</value>
  </data>
  <data name="TEXT_DENY_ALL" xml:space="preserve">
    <value>Negar tudo</value>
  </data>
  <data name="TEXT_DESCRIPTION" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="TEXT_EXCHANGE_RATE" xml:space="preserve">
    <value>Taxa de câmbio</value>
  </data>
  <data name="TEXT_EXTERNAL_CHARGE_ID" xml:space="preserve">
    <value>ID de cobrança externa</value>
  </data>
  <data name="TEXT_GLCODE" xml:space="preserve">
    <value>Código GL</value>
  </data>
  <data name="TEXT_GUIDE_INTERVAL_ID" xml:space="preserve">
    <value>ID do intervalo do guia</value>
  </data>
  <data name="TEXT_INTERNAL_CHARGE_ID" xml:space="preserve">
    <value>ID da cobrança interna</value>
  </data>
  <data name="TEXT_INTERVAL_ID" xml:space="preserve">
    <value>ID do intervalo</value>
  </data>
  <data name="TEXT_ISSUE_DATE" xml:space="preserve">
    <value>Data de emissão</value>
  </data>
  <data name="TEXT_ISSUE_TIME" xml:space="preserve">
    <value>Hora da emissão</value>
  </data>
  <data name="TEXT_ISSUER_ID" xml:space="preserve">
    <value>ID da emissão</value>
  </data>
  <data name="TEXT_NONSTANDARD_CHARGE_REASON" xml:space="preserve">
    <value>Motivo da cobrança extraordinária</value>
  </data>
  <data name="TEXT_NS_APPROVE" xml:space="preserve">
    <value>Isso aprovará todas as cobranças extraordinárias no sistema.</value>
  </data>
  <data name="TEXT_NS_DENY" xml:space="preserve">
    <value>Isso negará todas as cobranças extraordinárias no sistema.</value>
  </data>
  <data name="TEXT_NUM_UNITS" xml:space="preserve">
    <value>Quantidade</value>
  </data>
  <data name="TEXT_REASON_CODE" xml:space="preserve">
    <value>Código do motivo</value>
  </data>
  <data name="TEXT_REASONCODE_DESCRIPTION" xml:space="preserve">
    <value>Descrição do código do motivo</value>
  </data>
  <data name="TEXT_SELECT_NS_ERROR" xml:space="preserve">
    <value>Nenhuma cobrança extraordinária selecionada para processamento.</value>
  </data>
  <data name="TEXT_SESSION_ID" xml:space="preserve">
    <value>ID da sessão</value>
  </data>
  <data name="TEXT_STATUS" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TEXT_SUBSCRIBER_ACCOUNT_ID" xml:space="preserve">
    <value>ID da conta do assinante</value>
  </data>
  <data name="TEXT_TIMESTAMP" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="TEXT_VIEW_ID" xml:space="preserve">
    <value>Exibir ID</value>
  </data>
</root>