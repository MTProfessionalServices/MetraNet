//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace BaselineGUI.AccountHierarchy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MAMHierarchyWebSvcSoap", Namespace="http://www.metratech.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MAMHierarchyItem[]))]
    public partial class MAMHierarchyWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFieldIDFromAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRootNodeCapacityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNestedNodePageSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHierarchyLevelOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MAMHierarchyWebSvc() {
            this.Url = global::BaselineGUI.Properties.Settings.Default.AppPerfTester_AccHierarchy1_MAMHierarchyWebSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFieldIDFromAccountIDCompletedEventHandler GetFieldIDFromAccountIDCompleted;
        
        /// <remarks/>
        public event GetRootNodeCapacityCompletedEventHandler GetRootNodeCapacityCompleted;
        
        /// <remarks/>
        public event GetNestedNodePageSizeCompletedEventHandler GetNestedNodePageSizeCompleted;
        
        /// <remarks/>
        public event GetHierarchyLevelCompletedEventHandler GetHierarchyLevelCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetFieldIDFromAccountID", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFieldIDFromAccountID(int lAccountID, System.DateTime dRefDate, string serializedContext) {
            object[] results = this.Invoke("GetFieldIDFromAccountID", new object[] {
                        lAccountID,
                        dRefDate,
                        serializedContext});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFieldIDFromAccountIDAsync(int lAccountID, System.DateTime dRefDate, string serializedContext) {
            this.GetFieldIDFromAccountIDAsync(lAccountID, dRefDate, serializedContext, null);
        }
        
        /// <remarks/>
        public void GetFieldIDFromAccountIDAsync(int lAccountID, System.DateTime dRefDate, string serializedContext, object userState) {
            if ((this.GetFieldIDFromAccountIDOperationCompleted == null)) {
                this.GetFieldIDFromAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldIDFromAccountIDOperationCompleted);
            }
            this.InvokeAsync("GetFieldIDFromAccountID", new object[] {
                        lAccountID,
                        dRefDate,
                        serializedContext}, this.GetFieldIDFromAccountIDOperationCompleted, userState);
        }
        
        private void OnGetFieldIDFromAccountIDOperationCompleted(object arg) {
            if ((this.GetFieldIDFromAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFieldIDFromAccountIDCompleted(this, new GetFieldIDFromAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetRootNodeCapacity", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRootNodeCapacity() {
            object[] results = this.Invoke("GetRootNodeCapacity", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRootNodeCapacityAsync() {
            this.GetRootNodeCapacityAsync(null);
        }
        
        /// <remarks/>
        public void GetRootNodeCapacityAsync(object userState) {
            if ((this.GetRootNodeCapacityOperationCompleted == null)) {
                this.GetRootNodeCapacityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRootNodeCapacityOperationCompleted);
            }
            this.InvokeAsync("GetRootNodeCapacity", new object[0], this.GetRootNodeCapacityOperationCompleted, userState);
        }
        
        private void OnGetRootNodeCapacityOperationCompleted(object arg) {
            if ((this.GetRootNodeCapacityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRootNodeCapacityCompleted(this, new GetRootNodeCapacityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetNestedNodePageSize", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNestedNodePageSize() {
            object[] results = this.Invoke("GetNestedNodePageSize", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNestedNodePageSizeAsync() {
            this.GetNestedNodePageSizeAsync(null);
        }
        
        /// <remarks/>
        public void GetNestedNodePageSizeAsync(object userState) {
            if ((this.GetNestedNodePageSizeOperationCompleted == null)) {
                this.GetNestedNodePageSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNestedNodePageSizeOperationCompleted);
            }
            this.InvokeAsync("GetNestedNodePageSize", new object[0], this.GetNestedNodePageSizeOperationCompleted, userState);
        }
        
        private void OnGetNestedNodePageSizeOperationCompleted(object arg) {
            if ((this.GetNestedNodePageSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNestedNodePageSizeCompleted(this, new GetNestedNodePageSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetHierarchyLevel", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetHierarchyLevel(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber) {
            object[] results = this.Invoke("GetHierarchyLevel", new object[] {
                        typeSpace,
                        lAccountID,
                        dRefDate,
                        serializedContext,
                        bShowAllCorporations,
                        visibleAccounts,
                        companyFilter,
                        usernameFilter,
                        pageNumber});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHierarchyLevelAsync(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber) {
            this.GetHierarchyLevelAsync(typeSpace, lAccountID, dRefDate, serializedContext, bShowAllCorporations, visibleAccounts, companyFilter, usernameFilter, pageNumber, null);
        }
        
        /// <remarks/>
        public void GetHierarchyLevelAsync(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber, object userState) {
            if ((this.GetHierarchyLevelOperationCompleted == null)) {
                this.GetHierarchyLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHierarchyLevelOperationCompleted);
            }
            this.InvokeAsync("GetHierarchyLevel", new object[] {
                        typeSpace,
                        lAccountID,
                        dRefDate,
                        serializedContext,
                        bShowAllCorporations,
                        visibleAccounts,
                        companyFilter,
                        usernameFilter,
                        pageNumber}, this.GetHierarchyLevelOperationCompleted, userState);
        }
        
        private void OnGetHierarchyLevelOperationCompleted(object arg) {
            if ((this.GetHierarchyLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHierarchyLevelCompleted(this, new GetHierarchyLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.metratech.com/webservices/")]
    public partial class MAMHierarchyItem {
        
        private string accountTypeField;
        
        private string iconField;
        
        private bool canWriteField;
        
        private bool hasChildrenField;
        
        private string loginNameField;
        
        private string namespaceField;
        
        private string hierarchyNameField;
        
        private string accountStateField;
        
        private long numberOfPayeesField;
        
        private string ownerField;
        
        private string hierarchyPathField;
        
        private long itemIDField;
        
        private long parentItemIDField;
        
        private HierarchyItemType itemTypeField;
        
        private string currencyField;
        
        private int hasLogonCapabilityField;
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public bool CanWrite {
            get {
                return this.canWriteField;
            }
            set {
                this.canWriteField = value;
            }
        }
        
        /// <remarks/>
        public bool HasChildren {
            get {
                return this.hasChildrenField;
            }
            set {
                this.hasChildrenField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        public string HierarchyName {
            get {
                return this.hierarchyNameField;
            }
            set {
                this.hierarchyNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountState {
            get {
                return this.accountStateField;
            }
            set {
                this.accountStateField = value;
            }
        }
        
        /// <remarks/>
        public long NumberOfPayees {
            get {
                return this.numberOfPayeesField;
            }
            set {
                this.numberOfPayeesField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string HierarchyPath {
            get {
                return this.hierarchyPathField;
            }
            set {
                this.hierarchyPathField = value;
            }
        }
        
        /// <remarks/>
        public long ItemID {
            get {
                return this.itemIDField;
            }
            set {
                this.itemIDField = value;
            }
        }
        
        /// <remarks/>
        public long ParentItemID {
            get {
                return this.parentItemIDField;
            }
            set {
                this.parentItemIDField = value;
            }
        }
        
        /// <remarks/>
        public HierarchyItemType ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public int HasLogonCapability {
            get {
                return this.hasLogonCapabilityField;
            }
            set {
                this.hasLogonCapabilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.metratech.com/webservices/")]
    public enum HierarchyItemType {
        
        /// <remarks/>
        Account,
        
        /// <remarks/>
        Folder,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFieldIDFromAccountIDCompletedEventHandler(object sender, GetFieldIDFromAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFieldIDFromAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFieldIDFromAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRootNodeCapacityCompletedEventHandler(object sender, GetRootNodeCapacityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRootNodeCapacityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRootNodeCapacityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNestedNodePageSizeCompletedEventHandler(object sender, GetNestedNodePageSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNestedNodePageSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNestedNodePageSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHierarchyLevelCompletedEventHandler(object sender, GetHierarchyLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHierarchyLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHierarchyLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591