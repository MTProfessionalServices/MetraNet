//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace TestClient.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ListenerSoap", Namespace="http://metratech.com/webservices")]
    public class Listener : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Listener() {
            this.Url = "http://localhost/BatchListener/BatchListener.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/Create", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Create(BatchObject batchobject) {
            object[] results = this.Invoke("Create", new object[] {
                        batchobject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreate(BatchObject batchobject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Create", new object[] {
                        batchobject}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/UpdateByID", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateByID(BatchObject batchobject) {
            object[] results = this.Invoke("UpdateByID", new object[] {
                        batchobject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateByID(BatchObject batchobject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateByID", new object[] {
                        batchobject}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/UpdateByName", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateByName(BatchObject batchobject) {
            object[] results = this.Invoke("UpdateByName", new object[] {
                        batchobject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateByName(BatchObject batchobject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateByName", new object[] {
                        batchobject}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/UpdateByUID", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateByUID(BatchObject batchobject) {
            object[] results = this.Invoke("UpdateByUID", new object[] {
                        batchobject});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateByUID(BatchObject batchobject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateByUID", new object[] {
                        batchobject}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateByUID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/LoadByName", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchObject LoadByName(string nmspace, string name) {
            object[] results = this.Invoke("LoadByName", new object[] {
                        nmspace,
                        name});
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadByName(string nmspace, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadByName", new object[] {
                        nmspace,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public BatchObject EndLoadByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/LoadByID", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchObject LoadByID(int id) {
            object[] results = this.Invoke("LoadByID", new object[] {
                        id});
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadByID(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadByID", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public BatchObject EndLoadByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BatchObject)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/LoadByUID", RequestNamespace="http://metratech.com/webservices", ResponseNamespace="http://metratech.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchObject LoadByUID(string uid) {
            object[] results = this.Invoke("LoadByUID", new object[] {
                        uid});
            return ((BatchObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadByUID(string uid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadByUID", new object[] {
                        uid}, callback, asyncState);
        }
        
        /// <remarks/>
        public BatchObject EndLoadByUID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BatchObject)(results[0]));
        }
        
			public bool MarkAsFailed()
			{
				return true;
			}
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://metratech.com/webservices")]
    public class BatchObject {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Namespace;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public System.DateTime BatchCreationDate;
        
        /// <remarks/>
        public string Source;
        
        /// <remarks/>
        public string FailureReason;
        
        /// <remarks/>
        public int Count;
        
        /// <remarks/>
        public int ExpectedCount;
        
        /// <remarks/>
        public int ErrorCount;
        
        /// <remarks/>
        public string Sequence;
        
        /// <remarks/>
        public string Action;
        
        /// <remarks/>
        public string Operator;
        
        /// <remarks/>
        public string Comment;
        
        /// <remarks/>
        public System.DateTime SourceCreationDate;
        
        /// <remarks/>
        public System.DateTime BatchCloseDate;
        
        /// <remarks/>
        public string BatchUIDEncoded;
        
        /// <remarks/>
        public bool IsClosed;
    }
}
