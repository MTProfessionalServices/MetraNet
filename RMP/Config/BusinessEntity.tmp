<?xml version="1.0" encoding="utf-8" ?>
<!-- This file must be in RMP\config\BusinessEntity -->
<be-config>
  <!-- 
  A Repository contains the data access API's for a given nhibernate data source.
  The 'Standard' repository contains CRUD API's that specify DataObjects as well EntityInstances.
  
	name:
  Indicates the repository name. Must be unique.
  Clients can request a specific repository by name.
  
  interface: 
  The full name of the interface that this repository implements. 
  The interface must inherit from MetraTech.BusinessEntity.Core.Persistence.IRepository.
  
  type: 
  Assembly qualified name of the class that implements the interface specified in the interface attribute. 
  
  configFile: 
  Specifies the NHibernate configuration file for the data source. 
  This file must be in RMP\config\BusinessEntity\ 	          
              
  supportsDynamicTypes: 
  'True' -  indicates that the session factory associated with this data-source
            is loaded in a separate AppDomain so that it can be recreated  at run time to handle new types
  'False' - indicates that this session-factory will not see new types created at run time
  Default is 'true'.
    
  default: 
  True, if this is the default repository. 
  Clients will get this repository when no name is specified.
	There must be one and only one default repository for a data-source.
  
  -->
  <repository name="Standard"
              interface="MetraTech.BusinessEntity.Core.Persistence.IStandardRepository"
	  	        type="MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository, 
		    	          MetraTech.BusinessEntity.DataAccess"
              nhibernate-config-file="NHibernate.NetMeter.Sql.cfg.xml"
              supports-dynamic-types="true"
              default="true"/>
        
  
  <!-- 
  The following lists the metranet entity definitions in the system. 
  Each <metranet-entity> contains the assembly qualified type name for a metranet entity.
  Each type must implement the MetraTech.BusinessEntity.Core.Model.IMetranetEntity interface.
  -->
  <metranet-entity type="MetraTech.BusinessEntity.Core.Model.AccountDef, MetraTech.BusinessEntity.Core"/>
  <metranet-entity type="MetraTech.BusinessEntity.Core.Model.SubscriptionDef, MetraTech.BusinessEntity.Core"/>
   
</be-config>