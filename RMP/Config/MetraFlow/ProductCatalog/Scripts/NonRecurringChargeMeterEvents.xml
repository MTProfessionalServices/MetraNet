<?xml version="1.0" encoding="utf-8"?>
<MetraFlowScript>
    <Name>NonRecurringChargeMeterEvents</Name>
    <Description>Generates recurring charge, credit and correction events.</Description>
    <Parameters>
        <Parameter>
            <Name>TEMP_DIR</Name>
            <SyntaxCheckValue>C:\Temp</SyntaxCheckValue>
            <Description>Directory in which to store sort run files for sort run files.</Description>
        </Parameter>
        <Parameter>
            <Name>ID_BATCH</Name>
            <SyntaxCheckValue>0xffffffffffffffff</SyntaxCheckValue>
            <Description>Batch ID associated with the adapter run.</Description>
        </Parameter>
    </Parameters>
    <Script>
      <![CDATA[
nrcs_to_meter:sequential_file_scan[filename="%%TEMP_DIR%%\nrc_ready_to_rate_%1%.mfd"];

nrcs_rename_for_metering:rename[
from="nrc_n_event_type", to="c_NRCEventType",
from="dt_start", to="c_NRCIntervalStart",
from="dt_end", to="c_NRCIntervalEnd",
from="s_id_acc", to="c__AccountID",
from="s_vt_start", to="c_NRCIntervalSubscriptionStart",
from="s_vt_end", to="c_NRCIntervalSubscriptionEnd",
from="plm_id_pi_instance", to="c__PriceableItemInstanceID", 
from="plm_id_pi_template", to="c__PriceableItemTemplateID",
from="plm_id_po", to="c__ProductOfferingID"];

nrcs_to_meter -> nrcs_rename_for_metering;

-- TODO: Add support for custom PI Types...
nrcs_branch_for_service_definition:switch[program="CREATE FUNCTION f  (@plm_id_pi_type INTEGER) RETURNS INTEGER
AS
RETURN 0"];
nrcs_rename_for_metering -> nrcs_branch_for_service_definition;

meter_nonrecurringcharge:meter[service="metratech.com/nonrecurringcharge", collectionID=%%ID_BATCH%%];

nrcs_branch_for_service_definition(0) -> meter_nonrecurringcharge; 
]]></Script>
</MetraFlowScript>