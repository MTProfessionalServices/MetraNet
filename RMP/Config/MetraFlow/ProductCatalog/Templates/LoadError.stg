group loadError;

loadErrorComposite(operatorName, serviceDefinitionName, serviceDefinitionTable) ::= <<
operator <operatorName> [
in "message" is message_properties(0),
in "session_set" is session_set_properties(0),
in "failed_transaction" is au0(0),
in "service" is c(0)
]
(
message_properties:expr[program="CREATE PROCEDURE p 
@dt_crt DATETIME OUTPUT
@dt_metered DATETIME OUTPUT
@dt_assigned DATETIME OUTPUT
@dt_completed DATETIME OUTPUT
@tx_ip_address VARCHAR OUTPUT
AS
SET @dt_crt = getutcdate()
SET @dt_metered = @dt_crt
SET @dt_assigned = @dt_crt
SET @dt_completed = @dt_crt
SET @tx_ip_address = '127.0.0.1'"];

m0:insert[table="t_message", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit"];
message_properties -> m0;

session_set_properties:expr[program="CREATE PROCEDURE p 
@b_root VARCHAR OUTPUT
@id_svc ENUM OUTPUT
AS
SET @b_root = '1'
SET @id_svc = #<serviceDefinitionName>#"];

set0:insert[table="t_session_set", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit"];
session_set_properties -> set0;

-- This is fed by service definition records
c:copy[];

-- This is fed by failed transaction input
au0:insert[table="t_failed_transaction", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit", sortOrder="id_failed_transaction"];

pv0:insert[table="<serviceDefinitionTable>", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit"];
c(0) -> pv0;

state_info:expr[program="CREATE PROCEDURE p 
@id_source_sess BINARY
@id_sess BINARY OUTPUT
@dt_start DATETIME OUTPUT
@dt_end DATETIME OUTPUT
@tx_state VARCHAR OUTPUT
AS
SET @id_sess = @id_source_sess
SET @dt_start = getutcdate()
SET @dt_end = CAST('2038-01-01' AS DATETIME)
SET @tx_state = 'F'"];
c(1) -> state_info;

ss0:insert[table="t_session_state", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit"];
state_info -> ss0;

s0:insert[table="t_session", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit"];
c(2) -> s0;

sgb0:sort_group_by[key="id_commit_unit",
initialize="
CREATE PROCEDURE i @size_0 INTEGER @size_1 INTEGER @size_2 INTEGER @size_3 INTEGER @size_4 INTEGER @size_5 INTEGER
AS
SET @size_0 = 0
SET @size_1 = 0
SET @size_2 = 0
SET @size_3 = 0
SET @size_4 = 0
SET @size_5 = 0
",
update="
CREATE PROCEDURE u @size_0 INTEGER @size_1 INTEGER @size_2 INTEGER @size_3 INTEGER @size_4 INTEGER @size_5 INTEGER
AS
SET @size_0 = @size_0 + 1
SET @size_1 = @size_1 + 1
SET @size_2 = @size_2 + 1
SET @size_3 = @size_3 + 1
SET @size_4 = @size_4 + 1
SET @size_5 = @size_5 + 1
"];
c(3) -> sgb0;
install0:sql_exec_direct[
statementList=[
	query="INSERT INTO t_failed_transaction SELECT * FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"],
statementList=[
	query="INSERT INTO <serviceDefinitionTable> SELECT * FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"],
statementList=[
	query="INSERT INTO t_session_state(id_sess, dt_start, dt_end, tx_state) SELECT id_sess, dt_start, dt_end, tx_state FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"],
statementList=[
	query="INSERT INTO t_session(id_ss, id_source_sess) SELECT id_ss, id_source_sess FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"],
statementList=[
	query="INSERT INTO t_session_set(id_message, id_ss, id_svc, b_root, session_count) SELECT id_message, id_ss, id_svc, b_root, session_count FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"],
statementList=[
	query="INSERT INTO t_message(id_message, dt_crt, dt_metered, dt_assigned, dt_completed, tx_ip_address) SELECT id_message, dt_crt, dt_metered, dt_assigned, dt_completed, tx_ip_address FROM %%%NETMETERSTAGE_PREFIX%%%%1% option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%"]
];

au0 ->[buffered=false] install0("input(0)");
pv0 ->[buffered=false] install0("input(1)");
ss0 ->[buffered=false] install0("input(2)");
s0 ->[buffered=false] install0("input(3)");
set0 ->[buffered=false] install0("input(4)");
m0 ->[buffered=false] install0("input(5)");
sgb0 ->[buffered=false] install0("control");
)

>>