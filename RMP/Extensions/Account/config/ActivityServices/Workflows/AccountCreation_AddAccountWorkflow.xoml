<ns0:AddAccountWorkflow ARExternalNameSpace="{p1:Null}" x:Name="AddAccountWorkflow" ARExtAccountID="{x:Null}" In_ApplyTemplate="{x:Null}" EffectiveDate="0001-01-01T00:00:00.0000000" AccountTemplateDef="{x:Null}" In_Account="{x:Null}" TemplateOwner="{x:Null}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:ns1="clr-namespace:MetraTech.Core.Activities;Assembly=MetraTech.Core.Activities" xmlns:ns2="clr-namespace:MetraTech.Core.Services.ProxyActivities;Assembly=MetraTech.Core.Services.ProxyActivities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:p1="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MetraTech.Core.Workflows;Assembly=MetraTech.Core.Workflows">
	<TransactionScopeActivity x:Name="transactionScopeActivity2">
		<TransactionScopeActivity.TransactionOptions>
			<WorkflowTransactionOptions TimeoutDuration="00:00:30" IsolationLevel="Serializable" />
		</TransactionScopeActivity.TransactionOptions>
		<IfElseActivity x:Name="ApplyTemplatePropsCondition">
			<IfElseBranchActivity x:Name="IfApplyTemplateProps">
				<IfElseBranchActivity.Condition>
					<RuleConditionReference ConditionName="IfApplyTemplateCondition" />
				</IfElseBranchActivity.Condition>
				<CodeActivity x:Name="InitForGetTemplateDef" ExecuteCode="{ActivityBind AddAccountWorkflow,Path=InitForGetTemplateDef_ExecuteCode}" />
				<ns2:AccountTemplateService_GetTemplateDefForAccountType_ClientActivity Out_template="{ActivityBind AddAccountWorkflow,Path=AccountTemplateDef}" x:Name="LoadAccountTemplateDef" In_templateOwner="{ActivityBind AddAccountWorkflow,Path=TemplateOwner}" In_effectiveDate="{ActivityBind AddAccountWorkflow,Path=EffectiveDate}" In_accountType="{ActivityBind AddAccountWorkflow,Path=In_Account.AccountType}" In_inheritAnscestorProperties="True" />
				<ns1:ApplyAccountTemplatePropsActivity x:Name="ApplyTemplateProps" AccountTemplateDef="{ActivityBind AddAccountWorkflow,Path=AccountTemplateDef}" TargetAccount="{ActivityBind AddAccountWorkflow,Path=In_Account}" />
			</IfElseBranchActivity>
		</IfElseActivity>
		<ns1:CreateAccountActivity x:Name="createAccountActivity1" HierarchyPath="{x:Null}" Currency="{x:Null}" AncestorType="{x:Null}" In_Account="{ActivityBind AddAccountWorkflow,Path=In_Account}" CorporateAccountId="0" AncestorId="0" />
		<ns1:CreateAccountViewActivity In_Account="{ActivityBind AddAccountWorkflow,Path=In_Account}" x:Name="createAccountViewActivity1" />
		<IfElseActivity x:Name="ApplyTemplateSubsCondition">
			<IfElseBranchActivity x:Name="IfApplyTemplateSubs">
				<IfElseBranchActivity.Condition>
					<RuleConditionReference ConditionName="IfApplyTemplateCondition" />
				</IfElseBranchActivity.Condition>
				<ns1:ApplyAccountTemplateSubsActivity x:Name="ApplyTemplateSubs" AccountTemplateDef="{ActivityBind AddAccountWorkflow,Path=AccountTemplateDef}" TargetAccount="{ActivityBind AddAccountWorkflow,Path=In_Account}" />
			</IfElseBranchActivity>
		</IfElseActivity>
	</TransactionScopeActivity>
	<TransactionScopeActivity x:Name="transactionScopeActivity1">
		<TransactionScopeActivity.TransactionOptions>
			<WorkflowTransactionOptions TimeoutDuration="00:00:30" IsolationLevel="Serializable" />
		</TransactionScopeActivity.TransactionOptions>
		<CodeActivity x:Name="codeActivity1" ExecuteCode="{ActivityBind AddAccountWorkflow,Path=codeActivity1_ExecuteCode}" />
		<ns1:ExportToARActivity ARExternalNameSpace="{ActivityBind AddAccountWorkflow,Path=ARExternalNameSpace}" ARExtAccountID="{ActivityBind AddAccountWorkflow,Path=ARExtAccountID}" In_Account="{ActivityBind AddAccountWorkflow,Path=In_Account}" x:Name="exportToARActivity1" />
	</TransactionScopeActivity>
</ns0:AddAccountWorkflow>