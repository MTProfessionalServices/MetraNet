<ns0:UpdateAccountWorkflow AccountTemplateDef="{p1:Null}" x:Name="UpdateAccountWorkflow" LoadedAccount="{x:Null}" LoadTime="{x:Null}" In_ApplyTemplate="{x:Null}" EffectiveDate="0001-01-01T00:00:00.0000000" MergedAccount="{x:Null}" In_Account="{x:Null}" TemplateOwner="{x:Null}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:ns1="clr-namespace:MetraTech.Core.Services.ProxyActivities;Assembly=MetraTech.Core.Services.ProxyActivities, Version=0.0.0.0, Culture=neutral, PublicKeyToken=a0f5c26dbec45a75" xmlns:ns2="clr-namespace:MetraTech.Core.Activities;Assembly=MetraTech.Core.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:p1="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MetraTech.Core.Workflows;Assembly=MetraTech.Core.Workflows">
	<TransactionScopeActivity x:Name="transactionScopeActivity1">
		<TransactionScopeActivity.TransactionOptions>
			<WorkflowTransactionOptions TimeoutDuration="00:00:30" IsolationLevel="ReadCommitted" />
		</TransactionScopeActivity.TransactionOptions>
		<ns1:AccountService_LoadAccountWithViews_ClientActivity In_timeStamp="{ActivityBind UpdateAccountWorkflow,Path=LoadTime}" x:Name="accountService_LoadAccountWithViews_ClientActivity1" Out_account="{ActivityBind UpdateAccountWorkflow,Path=LoadedAccount}" In_acct="{ActivityBind UpdateAccountWorkflow,Path=InAccountID}" />
	</TransactionScopeActivity>
	<TransactionScopeActivity x:Name="transactionScopeActivity2">
		<TransactionScopeActivity.TransactionOptions>
			<WorkflowTransactionOptions TimeoutDuration="00:00:30" IsolationLevel="Serializable" />
		</TransactionScopeActivity.TransactionOptions>
		<ns2:AccountMergeActivity SourceAccount="{ActivityBind UpdateAccountWorkflow,Path=In_Account}" x:Name="accountMergeActivity1" TargetAccount="{ActivityBind UpdateAccountWorkflow,Path=LoadedAccount}" MergedAccount="{ActivityBind UpdateAccountWorkflow,Path=MergedAccount}" />
		<CodeActivity x:Name="CheckPayerProperties" ExecuteCode="{ActivityBind UpdateAccountWorkflow,Path=CheckPayerProperties_ExecuteCode}" />
		<IfElseActivity x:Name="ApplyTemplatePropsCondition">
			<IfElseBranchActivity x:Name="IfApplyTemplateProps">
				<IfElseBranchActivity.Condition>
					<RuleConditionReference ConditionName="IfApplyTemplateCondition" />
				</IfElseBranchActivity.Condition>
				<CodeActivity x:Name="InitForGetTemplateDef" ExecuteCode="{ActivityBind UpdateAccountWorkflow,Path=InitForGetTemplateDef_ExecuteCode}" />
				<ns1:AccountTemplateService_GetTemplateDefForAccountType_ClientActivity Out_template="{ActivityBind UpdateAccountWorkflow,Path=AccountTemplateDef}" x:Name="LoadAccountTemplateDef" In_templateOwner="{ActivityBind UpdateAccountWorkflow,Path=TemplateOwner}" In_effectiveDate="{ActivityBind UpdateAccountWorkflow,Path=EffectiveDate}" In_accountType="{ActivityBind UpdateAccountWorkflow,Path=In_Account.AccountType}" In_inheritAnscestorProperties="True" />
				<ns2:ApplyAccountTemplatePropsActivity x:Name="ApplyTemplateProps" AccountTemplateDef="{ActivityBind UpdateAccountWorkflow,Path=AccountTemplateDef}" TargetAccount="{ActivityBind UpdateAccountWorkflow,Path=MergedAccount}" />
			</IfElseBranchActivity>
		</IfElseActivity>
		<ns2:AccountAuditActivity x:Name="accountAuditActivity1" SourceAccount="{ActivityBind UpdateAccountWorkflow,Path=In_Account}" TargetAccount="{ActivityBind UpdateAccountWorkflow,Path=LoadedAccount}" />
		<ns2:UpdateAccountActivity LoadTime="{ActivityBind UpdateAccountWorkflow,Path=LoadTime}" HasCycleChanged="False" AccountType="{x:Null}" HierarchyPath="{x:Null}" AncestorType="{x:Null}" OldAncestorId="0" x:Name="updateAccountActivity1" NewCycleId="0" In_Account="{ActivityBind UpdateAccountWorkflow,Path=MergedAccount}" CorporateAccountId="0" AncestorId="0" />
		<ns2:UpdateAccountViewActivity In_Account="{ActivityBind UpdateAccountWorkflow,Path=MergedAccount}" x:Name="updateAccountViewActivity1" />
		<ns2:ARUpdateAccountActivity In_Account="{ActivityBind UpdateAccountWorkflow,Path=MergedAccount}" x:Name="arUpdateAccountActivity1" />
	</TransactionScopeActivity>
</ns0:UpdateAccountWorkflow>