<xmlconfig>
  <mtsysconfigdata>
    <effective_date ptype="DATETIME">1998-11-19T00:00:00Z</effective_date>
    <timeout ptype="INTEGER">30</timeout>
    <configfiletype>CONFIG_DATA</configfiletype>
  </mtsysconfigdata>

  <mtconfigdata>

 <version ptype="INTEGER">1</version>
 <!-- First processor configuration -->
 <processor>
  <name>CalcRoundedDuration</name>
  <progid>MetraPipeline.MTSQLInterpreter.1</progid>
  <description>Rounds duration to MTI</description>

	<!--
  <autotest>
    <file>calcduration.xml</file>
  </autotest>
  -->

  
  <!-- Processor specific configuration data -->
  <configdata>
 
  <Program><![CDATA[
		
		CREATE PROCEDURE calcroundedduration 
			 @Duration INTEGER 
	     @DomesticMTI INTEGER 
	     @IntlMTI INTEGER 
	     @BridgeMTI INTEGER
	     @ConnectionMinutes DECIMAL OUTPUT
	     @IntlMinutes DECIMAL OUTPUT
			 @BridgeMinutes DECIMAL OUTPUT
		AS
			-- Calculate the duration rounded by the MTI
			DECLARE @timeMod INTEGER;
			DECLARE @timeDiv INTEGER;
			-- check if MTIIntl > 0 and use it, otherwise use MTI
			IF (@DomesticMTI = 0 OR @IntlMTI = 0 OR @BridgeMTI = 0 )
				-- log error when supported
				RETURN;
			-- One of those two MTIs has to be set, if not handle error
			--repeat for all three durations
			SET @timeMod = @Duration % @DomesticMTI;
			SET @timeDiv = @Duration / @DomesticMTI;
			-- If there are leftover seconds round up to next meter tick interval
			-- If we have no time on the clock, at least bill the minimum MTI
			SET @timeDiv = CASE WHEN @timeMod > 0 OR @timeDiv = 0 THEN @timeDiv + 1 ELSE @timeDiv END;
			SET @ConnectionMinutes = (CAST(@timeDiv AS DECIMAL) * CAST(@DomesticMTI AS DECIMAL))/ 60.0;
			
			SET @timeMod = @Duration % @IntlMTI;
			SET @timeDiv = @Duration / @IntlMTI;
			-- If there are leftover seconds round up to next meter tick interval
			-- If we have no time on the clock, at least bill the minimum MTI
			SET @timeDiv = CASE WHEN @timeMod > 0 OR @timeDiv = 0 THEN @timeDiv + 1 ELSE @timeDiv END;
			SET @IntlMinutes = (CAST(@timeDiv AS DECIMAL) * CAST(@IntlMTI AS DECIMAL))/ 60.0;
			
			SET @timeMod = @Duration % @BridgeMTI;
			SET @timeDiv = @Duration / @BridgeMTI;
			-- If there are leftover seconds round up to next meter tick interval
			-- If we have no time on the clock, at least bill the minimum MTI
			SET @timeDiv = CASE WHEN @timeMod > 0 OR @timeDiv = 0 THEN @timeDiv + 1 ELSE @timeDiv END;
			SET @BridgeMinutes = (CAST(@timeDiv AS DECIMAL) * CAST(@BridgeMTI AS DECIMAL))/ 60.0;
	 
  ]]></Program> 
    
  </configdata>

 </processor>

  </mtconfigdata>

</xmlconfig>

