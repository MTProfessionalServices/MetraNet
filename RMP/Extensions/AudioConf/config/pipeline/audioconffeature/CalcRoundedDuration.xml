<xmlconfig>
  <mtsysconfigdata>
    <effective_date ptype="DATETIME">1998-11-19T00:00:00Z</effective_date>
    <timeout ptype="INTEGER">30</timeout>
    <configfiletype>CONFIG_DATA</configfiletype>
  </mtsysconfigdata>

  <mtconfigdata>

 <version ptype="INTEGER">1</version>
 <!-- First processor configuration -->
 <processor>
  <name>CalcRoundedDuration</name>
  <progid>MetraPipeline.MTSQLInterpreter.1</progid>
  <description>Rounds the time either up or down</description>

	<!--
  <autotest>
    <file>calcduration.xml</file>
  </autotest>
  -->

  <inputs>
    
  </inputs>

  <outputs>
    
  </outputs>
  
  <!-- Processor specific configuration data -->
  <configdata>
 
  <Program><![CDATA[
		
	CREATE PROCEDURE calcroundedduration 
     @Duration INTEGER 
     @MTIInSeconds INTEGER 
     @Round ENUM -- $ICE:('metratech.com/audioconfcommon','RoundMethod')$ 
		 @RoundedDuration INTEGER OUTPUT
	AS
			DECLARE @timeMod INTEGER;
			DECLARE @timeDiv INTEGER;
			DECLARE @strRound VARCHAR;
			IF (@MTIInSeconds = 0)
				-- log error when supported
				RETURN;
			SET @strRound = CAST (@Round AS VARCHAR)
			SET @timeMod = @Duration % @MTIInSeconds;
			SET @timeDiv = @Duration / @MTIInSeconds;
			-- Only if 'Ceiling' round method is chosen
			-- If there are leftover seconds round up to next meter tick interval
			-- If we have no time on the clock, at least bill the minimum MTI
			SET @timeDiv = CASE WHEN (@strRound = 'CEILING' AND ( @timeMod > 0 OR @timeDiv = 0)) THEN @timeDiv + 1 ELSE @timeDiv END;
			SET @RoundedDuration = @timeDiv * @MTIInSeconds;
	 
  ]]></Program> 
    
  </configdata>

 </processor>

  </mtconfigdata>

</xmlconfig>

