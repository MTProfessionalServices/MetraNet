//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Core
{
  using System;
  using System.Collections.Generic;
  using System.Collections.ObjectModel;
  using System.Runtime.Serialization;
  using System.Linq;
  using MetraTech.Basic;
  using MetraTech.BusinessEntity.Core;
  using MetraTech.BusinessEntity.Core.Model;
  using MetraTech.BusinessEntity.DataAccess.Metadata;
  using MetraTech.BusinessEntity.DataAccess.Persistence;
  
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  [System.Runtime.Serialization.KnownTypeAttribute("GetKnownTypes")]
  [MetraTech.BusinessEntity.Core.Model.ConfigDrivenAttribute()]
  public partial class Dispute : MetraTech.BusinessEntity.DataAccess.Metadata.DataObject, global::Core.Core.Interface.IDispute, MetraTech.BusinessEntity.DataAccess.Persistence.IRecordHistory
  {
    
    public const string FullName = "Core.Core.Dispute";
    
    private int @__Version;
    
    public const string Property__Version = "_Version";
    
    private System.Nullable<System.DateTime> _creationDate;
    
    public const string Property_CreationDate = "CreationDate";
    
    private System.Nullable<System.DateTime> _updateDate;
    
    public const string Property_UpdateDate = "UpdateDate";
    
    private System.Nullable<System.Int32> _uID;
    
    public const string Property_UID = "UID";
    
    public const string Property_Id = "Id";
    
    private global::Core.Core.DisputeBusinessKey _disputeBusinessKey = new DisputeBusinessKey();
    
    private System.Nullable<System.Int32> _invoiceId;
    
    public const string Property_invoiceId = "invoiceId";
    
    private string _invoiceNum;
    
    public const string Property_invoiceNum = "invoiceNum";
    
    private MetraTech.DomainModel.Enums.Core.Metratech_com_Dispute.DisputeStatus _status = MetraTech.DomainModel.Enums.Core.Metratech_com_Dispute.DisputeStatus.Pending;
    
    public const string Property_status = "status";
    
    private string _title;
    
    public const string Property_title = "title";
    
    private string _description;
    
    public const string Property_description = "description";
    
    private string _newProperty;
    
    public const string Property_NewProperty = "NewProperty";
    
    private IList<global::Core.Core.Interface.IChargeAdjustment> _chargeAdjustments = new List<global::Core.Core.Interface.IChargeAdjustment>();
    
    private global::Core.Core.Interface.IInvoiceAdjustment _invoiceAdjustment;
    
    private global::MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey _invoiceAdjustmentBusinessKey;
    
    private System.Nullable<System.Guid> _invoiceAdjustmentId;
    
    public const string Property_InternalKey = "InternalKey";
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override int _Version
    {
      get
      {
        return this.@__Version;
      }
      set
      {
        this.@__Version = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> CreationDate
    {
      get
      {
        return this._creationDate;
      }
      set
      {
        this._creationDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> UpdateDate
    {
      get
      {
        return this._updateDate;
      }
      set
      {
        this._updateDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Int32> UID
    {
      get
      {
        return this._uID;
      }
      set
      {
        this._uID = value;
      }
    }
    
    [MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKeyAttribute()]
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual global::Core.Core.DisputeBusinessKey DisputeBusinessKey
    {
      get
      {
        return this._disputeBusinessKey;
      }
      set
      {
        this._disputeBusinessKey = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Int32> invoiceId
    {
      get
      {
        return this._invoiceId;
      }
      set
      {
        this._invoiceId = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string invoiceNum
    {
      get
      {
        return this._invoiceNum;
      }
      set
      {
        this._invoiceNum = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual MetraTech.DomainModel.Enums.Core.Metratech_com_Dispute.DisputeStatus status
    {
      get
      {
        return this._status;
      }
      set
      {
        this._status = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string title
    {
      get
      {
        return this._title;
      }
      set
      {
        this._title = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string description
    {
      get
      {
        return this._description;
      }
      set
      {
        this._description = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string NewProperty
    {
      get
      {
        return this._newProperty;
      }
      set
      {
        this._newProperty = value;
      }
    }
    
    public virtual List<global::Core.Core.Interface.IChargeAdjustment> ChargeAdjustments
    {
      get
      {
        return _chargeAdjustments as List<global::Core.Core.Interface.IChargeAdjustment>;
      }
      set
      {
        this._chargeAdjustments = value;
      }
    }
    
    public virtual global::Core.Core.Interface.IInvoiceAdjustment InvoiceAdjustment
    {
      get
      {
        return this._invoiceAdjustment;
      }
      set
      {
        this._invoiceAdjustment = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual global::MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey InvoiceAdjustmentBusinessKey
    {
      get
      {
        return this._invoiceAdjustmentBusinessKey;
      }
      set
      {
        this._invoiceAdjustmentBusinessKey = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Guid> InvoiceAdjustmentId
    {
      get
      {
        return this._invoiceAdjustmentId;
      }
      set
      {
        this._invoiceAdjustmentId = value;
      }
    }
    
    public virtual MetraTech.BusinessEntity.DataAccess.Persistence.BaseHistory GetHistoryObject()
    {
      var _disputeHistory = new global::Core.Core.DisputeHistory();
      _disputeHistory.Id = Id;
      _disputeHistory._Version = _Version;
      _disputeHistory.DisputeBusinessKey = DisputeBusinessKey;
      _disputeHistory.invoiceId = invoiceId;
      _disputeHistory.invoiceNum = invoiceNum;
      _disputeHistory.status = status;
      _disputeHistory.title = title;
      _disputeHistory.description = description;
      _disputeHistory.NewProperty = NewProperty;
      return _disputeHistory;
    }
    
    public virtual void ClearInvoiceAdjustment()
    {
      _invoiceAdjustment = null;
      _invoiceAdjustmentBusinessKey = null;
      _invoiceAdjustmentId = null;
    }
    
    public virtual global::Core.Core.Interface.IInvoiceAdjustment LoadInvoiceAdjustment()
    {
      object item = global::MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository.Instance.LoadInstanceFor("Core.Core.InvoiceAdjustment", "Core.Core.Dispute", Id, "");
      return item == null ? null : (global::Core.Core.Interface.IInvoiceAdjustment)item;
    }
    
    public override void SetupRelationships()
    {
      if (InvoiceAdjustment != null)
      {
InvoiceAdjustmentBusinessKey = ((global::MetraTech.BusinessEntity.DataAccess.Metadata.DataObject)InvoiceAdjustment).GetBusinessKey();
InvoiceAdjustmentId = InvoiceAdjustment.Id;
_invoiceAdjustment = null;
      }
      ChargeAdjustments = new List<global::Core.Core.Interface.IChargeAdjustment>();
    }
    
    public virtual object Clone()
    {
      var _dispute = new global::Core.Core.Dispute();
      _dispute.DisputeBusinessKey = (global::Core.Core.DisputeBusinessKey)DisputeBusinessKey.Clone();
      _dispute.invoiceId = invoiceId;
      _dispute.invoiceNum = invoiceNum;
      _dispute.status = status;
      _dispute.title = title;
      _dispute.description = description;
      _dispute.NewProperty = NewProperty;
      if (InvoiceAdjustmentBusinessKey != null)
      {
        _dispute.InvoiceAdjustmentBusinessKey = (MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey)InvoiceAdjustmentBusinessKey.Clone();
      }
      _dispute.InvoiceAdjustmentId = InvoiceAdjustmentId;
      return _dispute;
    }
    
    public virtual void Save()
    {
      var item = this;
      global::MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository.Instance.SaveInstance(ref item);
    }
    
    public override void CopyPropertiesFrom(global::MetraTech.BusinessEntity.DataAccess.Metadata.DataObject dataObject)
    {
      var item = dataObject as global::Core.Core.Dispute;
      invoiceId = item.invoiceId;
      invoiceNum = item.invoiceNum;
      status = item.status;
      title = item.title;
      description = item.description;
      NewProperty = item.NewProperty;
      DisputeBusinessKey = item.DisputeBusinessKey;
    }
    
    public static new System.Type[] GetKnownTypes()
    {
      var knownTypes = new List<System.Type>();
      knownTypes.Add(typeof(MetraTech.DomainModel.Enums.Core.Metratech_com_Dispute.DisputeStatus));
      knownTypes.Add(typeof(global::Core.Core.DisputeBusinessKey));
      return knownTypes.ToArray();
    }
  }
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  public partial class DisputeBusinessKey : MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey, global::Core.Core.Interface.IDisputeBusinessKey
  {
    
    private string _entityFullName = "Core.Core.Dispute";
    
    private System.Guid _internalKey;
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override string EntityFullName
    {
      get
      {
        return this._entityFullName;
      }
      set
      {
        this._entityFullName = "Core.Core.Dispute";
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Guid InternalKey
    {
      get
      {
        return this._internalKey;
      }
      set
      {
        this._internalKey = value;
      }
    }
    
    public override object Clone()
    {
      var _businessKey = new DisputeBusinessKey();
      _businessKey.InternalKey = InternalKey;
      return _businessKey;
    }
  }
}
