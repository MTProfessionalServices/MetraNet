//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetraTech.Core.CreditNotes
{
  using System;
  using System.Collections.Generic;
  using System.Collections.ObjectModel;
  using System.Runtime.Serialization;
  using System.Linq;
  using MetraTech.Basic;
  using MetraTech.BusinessEntity.Core;
  using MetraTech.BusinessEntity.Core.Model;
  using MetraTech.BusinessEntity.DataAccess.Metadata;
  using MetraTech.BusinessEntity.DataAccess.Persistence;
  
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  [System.Runtime.Serialization.KnownTypeAttribute("GetKnownTypes")]
  [MetraTech.BusinessEntity.Core.Model.ConfigDrivenAttribute()]
  public partial class CreditNotePDF : MetraTech.BusinessEntity.DataAccess.Metadata.DataObject, global::MetraTech.Core.CreditNotes.Interface.ICreditNotePDF
  {
    
    public const string FullName = "MetraTech.Core.CreditNotes.CreditNotePDF";
    
    private int @__Version;
    
    public const string Property__Version = "_Version";
    
    private System.Nullable<System.DateTime> _creationDate;
    
    public const string Property_CreationDate = "CreationDate";
    
    private System.Nullable<System.DateTime> _updateDate;
    
    public const string Property_UpdateDate = "UpdateDate";
    
    private System.Nullable<System.Int32> _uID;
    
    public const string Property_UID = "UID";
    
    public const string Property_Id = "Id";
    
    private global::MetraTech.Core.CreditNotes.CreditNotePDFBusinessKey _creditNotePDFBusinessKey = new CreditNotePDFBusinessKey();
    
    private System.DateTime _dateEnqueued;
    
    public const string Property_DateEnqueued = "DateEnqueued";
    
    private int _creditNotePDFID = 0;
    
    public const string Property_CreditNotePDFID = "CreditNotePDFID";
    
    private string _status;
    
    public const string Property_Status = "Status";
    
    private string _statusInformation;
    
    public const string Property_StatusInformation = "StatusInformation";
    
    private System.Nullable<System.Int32> _retryCounter = 0;
    
    public const string Property_RetryCounter = "RetryCounter";
    
    private global::MetraTech.Core.CreditNotes.Interface.ICreditNote _creditNote;
    
    private global::MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey _creditNoteBusinessKey;
    
    private System.Nullable<System.Guid> _creditNoteId;
    
    public const string Relationship_CreditNote_CreditNotePDF = "CreditNote_CreditNotePDF";
    
    public const string Property_InternalKey = "InternalKey";
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override int _Version
    {
      get
      {
        return this.@__Version;
      }
      set
      {
        this.@__Version = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> CreationDate
    {
      get
      {
        return this._creationDate;
      }
      set
      {
        this._creationDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> UpdateDate
    {
      get
      {
        return this._updateDate;
      }
      set
      {
        this._updateDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Int32> UID
    {
      get
      {
        return this._uID;
      }
      set
      {
        this._uID = value;
      }
    }
    
    [MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKeyAttribute()]
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual global::MetraTech.Core.CreditNotes.CreditNotePDFBusinessKey CreditNotePDFBusinessKey
    {
      get
      {
        return this._creditNotePDFBusinessKey;
      }
      set
      {
        this._creditNotePDFBusinessKey = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.DateTime DateEnqueued
    {
      get
      {
        return this._dateEnqueued;
      }
      set
      {
        this._dateEnqueued = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual int CreditNotePDFID
    {
      get
      {
        return this._creditNotePDFID;
      }
      set
      {
        this._creditNotePDFID = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string Status
    {
      get
      {
        return this._status;
      }
      set
      {
        this._status = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string StatusInformation
    {
      get
      {
        return this._statusInformation;
      }
      set
      {
        this._statusInformation = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Int32> RetryCounter
    {
      get
      {
        return this._retryCounter;
      }
      set
      {
        this._retryCounter = value;
      }
    }
    
    public virtual global::MetraTech.Core.CreditNotes.Interface.ICreditNote CreditNote
    {
      get
      {
        return this._creditNote;
      }
      set
      {
        this._creditNote = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual global::MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey CreditNoteBusinessKey
    {
      get
      {
        return this._creditNoteBusinessKey;
      }
      set
      {
        this._creditNoteBusinessKey = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Guid> CreditNoteId
    {
      get
      {
        return this._creditNoteId;
      }
      set
      {
        this._creditNoteId = value;
      }
    }
    
    public virtual void ClearCreditNote()
    {
      _creditNote = null;
      _creditNoteBusinessKey = null;
      _creditNoteId = null;
    }
    
    public virtual global::MetraTech.Core.CreditNotes.Interface.ICreditNote LoadCreditNote()
    {
      object item = global::MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository.Instance.LoadInstanceFor("MetraTech.Core.CreditNotes.CreditNote", "MetraTech.Core.CreditNotes.CreditNotePDF", Id, "CreditNote_CreditNotePDF");
      return item == null ? null : (global::MetraTech.Core.CreditNotes.Interface.ICreditNote)item;
    }
    
    public override void SetupRelationships()
    {
      if (CreditNote != null)
      {
CreditNoteBusinessKey = ((global::MetraTech.BusinessEntity.DataAccess.Metadata.DataObject)CreditNote).GetBusinessKey();
CreditNoteId = CreditNote.Id;
_creditNote = null;
      }
    }
    
    public virtual object Clone()
    {
      var _creditNotePDF = new global::MetraTech.Core.CreditNotes.CreditNotePDF();
      _creditNotePDF.CreditNotePDFBusinessKey = (global::MetraTech.Core.CreditNotes.CreditNotePDFBusinessKey)CreditNotePDFBusinessKey.Clone();
      _creditNotePDF.DateEnqueued = DateEnqueued;
      _creditNotePDF.CreditNotePDFID = CreditNotePDFID;
      _creditNotePDF.Status = Status;
      _creditNotePDF.StatusInformation = StatusInformation;
      _creditNotePDF.RetryCounter = RetryCounter;
      if (CreditNoteBusinessKey != null)
      {
        _creditNotePDF.CreditNoteBusinessKey = (MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey)CreditNoteBusinessKey.Clone();
      }
      _creditNotePDF.CreditNoteId = CreditNoteId;
      return _creditNotePDF;
    }
    
    public virtual void Save()
    {
      var item = this;
      global::MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository.Instance.SaveInstance(ref item);
    }
    
    public override void CopyPropertiesFrom(global::MetraTech.BusinessEntity.DataAccess.Metadata.DataObject dataObject)
    {
      var item = dataObject as global::MetraTech.Core.CreditNotes.CreditNotePDF;
      if (item.CreditNote != null)
      {
        CreditNote = item.CreditNote;
      }
      else
      {
        if (item.CreditNote == null && item.CreditNoteId == null)
        {
          CreditNote = null;
        }
      }
      DateEnqueued = item.DateEnqueued;
      CreditNotePDFID = item.CreditNotePDFID;
      Status = item.Status;
      StatusInformation = item.StatusInformation;
      RetryCounter = item.RetryCounter;
      CreditNotePDFBusinessKey = item.CreditNotePDFBusinessKey;
    }
    
    public static new System.Type[] GetKnownTypes()
    {
      var knownTypes = new List<System.Type>();
      knownTypes.Add(typeof(global::MetraTech.Core.CreditNotes.CreditNotePDFBusinessKey));
      return knownTypes.ToArray();
    }
  }
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  public partial class CreditNotePDFBusinessKey : MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey, global::MetraTech.Core.CreditNotes.Interface.ICreditNotePDFBusinessKey
  {
    
    private string _entityFullName = "MetraTech.Core.CreditNotes.CreditNotePDF";
    
    private System.Guid _internalKey;
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override string EntityFullName
    {
      get
      {
        return this._entityFullName;
      }
      set
      {
        this._entityFullName = "MetraTech.Core.CreditNotes.CreditNotePDF";
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Guid InternalKey
    {
      get
      {
        return this._internalKey;
      }
      set
      {
        this._internalKey = value;
      }
    }
    
    public override object Clone()
    {
      var _businessKey = new CreditNotePDFBusinessKey();
      _businessKey.InternalKey = InternalKey;
      return _businessKey;
    }
  }
}
