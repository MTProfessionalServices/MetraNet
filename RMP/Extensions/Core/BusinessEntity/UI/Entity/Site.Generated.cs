//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.UI
{
  using System;
  using System.Collections.Generic;
  using System.Collections.ObjectModel;
  using System.Runtime.Serialization;
  using System.Linq;
  using MetraTech.Basic;
  using MetraTech.BusinessEntity.Core;
  using MetraTech.BusinessEntity.Core.Model;
  using MetraTech.BusinessEntity.DataAccess.Metadata;
  using MetraTech.BusinessEntity.DataAccess.Persistence;
  
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  [System.Runtime.Serialization.KnownTypeAttribute("GetKnownTypes")]
  [MetraTech.BusinessEntity.Core.Model.ConfigDrivenAttribute()]
  public partial class Site : MetraTech.BusinessEntity.DataAccess.Metadata.DataObject, global::Core.UI.Interface.ISite
  {
    
    public const string FullName = "Core.UI.Site";
    
    private int @__Version;
    
    public const string Property__Version = "_Version";
    
    private System.Nullable<System.DateTime> _creationDate;
    
    public const string Property_CreationDate = "CreationDate";
    
    private System.Nullable<System.DateTime> _updateDate;
    
    public const string Property_UpdateDate = "UpdateDate";
    
    private System.Nullable<System.Int32> _uID;
    
    public const string Property_UID = "UID";
    
    public const string Property_Id = "Id";
    
    private global::Core.UI.SiteBusinessKey _siteBusinessKey = new SiteBusinessKey();
    
    private string _description;
    
    public const string Property_Description = "Description";
    
    private string _rootUrl;
    
    public const string Property_RootUrl = "RootUrl";
    
    private System.Nullable<System.Boolean> _isSiteDownForMaintenance = false;
    
    public const string Property_IsSiteDownForMaintenance = "IsSiteDownForMaintenance";
    
    private System.Nullable<MetraTech.DomainModel.Enums.Core.Global.TimeZoneID> _timezone;
    
    public const string Property_Timezone = "Timezone";
    
    private string _logoImage;
    
    public const string Property_LogoImage = "LogoImage";
    
    private string _theme;
    
    public const string Property_Theme = "Theme";
    
    private string _culture;
    
    public const string Property_Culture = "Culture";
    
    private global::Core.UI.Interface.IBillSetting _billSetting;
    
    private IList<global::Core.UI.Interface.ISite_BillSetting> _site_BillSettingList = new List<global::Core.UI.Interface.ISite_BillSetting>();
    
    private IList<global::Core.UI.Interface.IDashboard> _dashboards = new List<global::Core.UI.Interface.IDashboard>();
    
    private IList<global::Core.UI.Interface.ISite_Dashboard> _site_DashboardList = new List<global::Core.UI.Interface.ISite_Dashboard>();
    
    private IList<global::Core.UI.Interface.IEntryPoint> _entryPoints = new List<global::Core.UI.Interface.IEntryPoint>();
    
    private IList<global::Core.UI.Interface.ISite_EntryPoint> _site_EntryPointList = new List<global::Core.UI.Interface.ISite_EntryPoint>();
    
    private IList<global::Core.UI.Interface.IProductViewMapping> _productViewMappings = new List<global::Core.UI.Interface.IProductViewMapping>();
    
    private IList<global::Core.UI.Interface.ISite_ProductViewMapping> _site_ProductViewMappingList = new List<global::Core.UI.Interface.ISite_ProductViewMapping>();
    
    private IList<global::Core.UI.Interface.IReportInventory> _reportInventories = new List<global::Core.UI.Interface.IReportInventory>();
    
    private IList<global::Core.UI.Interface.ISite_ReportInventory> _site_ReportInventoryList = new List<global::Core.UI.Interface.ISite_ReportInventory>();
    
    public const string Relationship_Site_BillSetting = "Site_BillSetting";
    
    public const string Relationship_Site_Dashboard = "Site_Dashboard";
    
    public const string Relationship_Site_EntryPoint = "Site_EntryPoint";
    
    public const string Relationship_Site_ProductViewMapping = "Site_ProductViewMapping";
    
    public const string Relationship_Site_ReportInventory = "Site_ReportInventory";
    
    public const string Property_SiteName = "SiteName";
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override int _Version
    {
      get
      {
        return this.@__Version;
      }
      set
      {
        this.@__Version = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> CreationDate
    {
      get
      {
        return this._creationDate;
      }
      set
      {
        this._creationDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override System.Nullable<System.DateTime> UpdateDate
    {
      get
      {
        return this._updateDate;
      }
      set
      {
        this._updateDate = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Int32> UID
    {
      get
      {
        return this._uID;
      }
      set
      {
        this._uID = value;
      }
    }
    
    [MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKeyAttribute()]
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual global::Core.UI.SiteBusinessKey SiteBusinessKey
    {
      get
      {
        return this._siteBusinessKey;
      }
      set
      {
        this._siteBusinessKey = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string Description
    {
      get
      {
        return this._description;
      }
      set
      {
        this._description = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string RootUrl
    {
      get
      {
        return this._rootUrl;
      }
      set
      {
        this._rootUrl = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<System.Boolean> IsSiteDownForMaintenance
    {
      get
      {
        return this._isSiteDownForMaintenance;
      }
      set
      {
        this._isSiteDownForMaintenance = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual System.Nullable<MetraTech.DomainModel.Enums.Core.Global.TimeZoneID> Timezone
    {
      get
      {
        return this._timezone;
      }
      set
      {
        this._timezone = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string LogoImage
    {
      get
      {
        return this._logoImage;
      }
      set
      {
        this._logoImage = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string Theme
    {
      get
      {
        return this._theme;
      }
      set
      {
        this._theme = value;
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string Culture
    {
      get
      {
        return this._culture;
      }
      set
      {
        this._culture = value;
      }
    }
    
    public virtual global::Core.UI.Interface.IBillSetting BillSetting
    {
      get
      {
        return this._billSetting;
      }
      set
      {
        this._billSetting = value;
      }
    }
    
    public virtual IList<global::Core.UI.Interface.ISite_BillSetting> Site_BillSettingList
    {
      get
      {
        return this._site_BillSettingList;
      }
      set
      {
        this._site_BillSettingList = value;
      }
    }
    
    public virtual List<global::Core.UI.Interface.IDashboard> Dashboards
    {
      get
      {
        return _dashboards as List<global::Core.UI.Interface.IDashboard>;
      }
      set
      {
        this._dashboards = value;
      }
    }
    
    public virtual IList<global::Core.UI.Interface.ISite_Dashboard> Site_DashboardList
    {
      get
      {
        return this._site_DashboardList;
      }
      set
      {
        this._site_DashboardList = value;
      }
    }
    
    public virtual List<global::Core.UI.Interface.IEntryPoint> EntryPoints
    {
      get
      {
        return _entryPoints as List<global::Core.UI.Interface.IEntryPoint>;
      }
      set
      {
        this._entryPoints = value;
      }
    }
    
    public virtual IList<global::Core.UI.Interface.ISite_EntryPoint> Site_EntryPointList
    {
      get
      {
        return this._site_EntryPointList;
      }
      set
      {
        this._site_EntryPointList = value;
      }
    }
    
    public virtual List<global::Core.UI.Interface.IProductViewMapping> ProductViewMappings
    {
      get
      {
        return _productViewMappings as List<global::Core.UI.Interface.IProductViewMapping>;
      }
      set
      {
        this._productViewMappings = value;
      }
    }
    
    public virtual IList<global::Core.UI.Interface.ISite_ProductViewMapping> Site_ProductViewMappingList
    {
      get
      {
        return this._site_ProductViewMappingList;
      }
      set
      {
        this._site_ProductViewMappingList = value;
      }
    }
    
    public virtual List<global::Core.UI.Interface.IReportInventory> ReportInventories
    {
      get
      {
        return _reportInventories as List<global::Core.UI.Interface.IReportInventory>;
      }
      set
      {
        this._reportInventories = value;
      }
    }
    
    public virtual IList<global::Core.UI.Interface.ISite_ReportInventory> Site_ReportInventoryList
    {
      get
      {
        return this._site_ReportInventoryList;
      }
      set
      {
        this._site_ReportInventoryList = value;
      }
    }
    
    public override void SetupRelationships()
    {
    }
    
    public virtual object Clone()
    {
      var _site = new global::Core.UI.Site();
      _site.SiteBusinessKey = (global::Core.UI.SiteBusinessKey)SiteBusinessKey.Clone();
      _site.Description = Description;
      _site.RootUrl = RootUrl;
      _site.IsSiteDownForMaintenance = IsSiteDownForMaintenance;
      _site.Timezone = Timezone;
      _site.LogoImage = LogoImage;
      _site.Theme = Theme;
      _site.Culture = Culture;
      return _site;
    }
    
    public virtual void Save()
    {
      var item = this;
      global::MetraTech.BusinessEntity.DataAccess.Persistence.StandardRepository.Instance.SaveInstance(ref item);
    }
    
    public override void CopyPropertiesFrom(global::MetraTech.BusinessEntity.DataAccess.Metadata.DataObject dataObject)
    {
      var item = dataObject as global::Core.UI.Site;
      Description = item.Description;
      RootUrl = item.RootUrl;
      IsSiteDownForMaintenance = item.IsSiteDownForMaintenance;
      Timezone = item.Timezone;
      LogoImage = item.LogoImage;
      Theme = item.Theme;
      Culture = item.Culture;
      SiteBusinessKey = item.SiteBusinessKey;
    }
    
    public static new System.Type[] GetKnownTypes()
    {
      var knownTypes = new List<System.Type>();
      knownTypes.Add(typeof(MetraTech.DomainModel.Enums.Core.Global.TimeZoneID));
      knownTypes.Add(typeof(global::Core.UI.SiteBusinessKey));
      return knownTypes.ToArray();
    }
  }
  
  [System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
  [System.SerializableAttribute()]
  public partial class SiteBusinessKey : MetraTech.BusinessEntity.DataAccess.Metadata.BusinessKey, global::Core.UI.Interface.ISiteBusinessKey
  {
    
    private string _entityFullName = "Core.UI.Site";
    
    private string _siteName;
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public override string EntityFullName
    {
      get
      {
        return this._entityFullName;
      }
      set
      {
        this._entityFullName = "Core.UI.Site";
      }
    }
    
    [System.Runtime.Serialization.DataMemberAttribute()]
    public virtual string SiteName
    {
      get
      {
        return this._siteName;
      }
      set
      {
        this._siteName = value;
      }
    }
    
    public override object Clone()
    {
      var _businessKey = new SiteBusinessKey();
      _businessKey.SiteName = SiteName;
      return _businessKey;
    }
  }
}
