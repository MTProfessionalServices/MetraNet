<?xml version="1.0" encoding="UTF-8"?>

<priceable_item>
  <name>Test Usage Charge</name>
  <description>Simple usage charge for testing using testpi service</description>
  <item_type>usage</item_type>
  <relationships>
    <parent></parent>
  </relationships>
  <parameter_table>metratech.com/rateconn</parameter_table>
  <parameter_table>metratech.com/test</parameter_table>
  <parameter_table>metratech.com/calendar</parameter_table>
  <parameter_table>metratech.com/decimalcalc</parameter_table>
  <counters></counters>
  <charges>
	<charge>
	<name>SetupCharge</name>
	<display_name>Setup Charge</display_name>
	</charge>
  </charges>
  <pipeline>
    <service_definition>metratech.com/testpi</service_definition>
    <product_view>metratech.com/testpi</product_view>
  </pipeline>
  <adjustment_type>
	<name>TestPIFlatAdjustment</name>
	<description>TestPI Flat Adjustment</description>
	<displayname>TestPI Flat Adjustment</displayname>
	<CalculationEngine>1</CalculationEngine>
	<supportsBulk>N</supportsBulk>
	<formula>
		<![CDATA[
			Create Procedure CalculateTestPIAdjustment
			-- required inputs
			@SetupChargeAdjustmentAmount DECIMAL
			-- non required inputs
			@SetupCharge DECIMAL,
			@tax_federal DECIMAL,
	    @tax_state DECIMAL,
	    @tax_county DECIMAL,
	    @tax_local DECIMAL,
	    @tax_other DECIMAL,
			-- outputs
			@AJ_SetupCharge DECIMAL OUTPUT,
			@aj_tax_federal DECIMAL OUTPUT,
	    @aj_tax_state DECIMAL OUTPUT,
	    @aj_tax_county DECIMAL OUTPUT,
	    @aj_tax_local DECIMAL OUTPUT,
	    @aj_tax_other DECIMAL OUTPUT,
			@TotalAdjustmentAmount DECIMAL OUTPUT
			as
			declare @taxratio DECIMAL
      declare @totalcharge DECIMAL
      DECLARE @fuzz DECIMAL
      set @fuzz = 0.0001
      if @SetupCharge > 0.0
				Set @AJ_SetupCharge = @SetupChargeAdjustmentAmount
			Set @TotalAdjustmentAmount = round(@AJ_SetupCharge, 2)
			set @totalcharge = @SetupCharge
			set @taxratio = @TotalAdjustmentAmount/(@totalcharge + @fuzz)
          
			set @aj_tax_federal = round(@tax_federal * @taxratio, 2)
			set @aj_tax_state = round(@tax_state * @taxratio, 2)
			set @aj_tax_county = round(@tax_county * @taxratio, 2)
			set @aj_tax_local = round(@tax_local * @taxratio, 2)
			set @aj_tax_other = round(@tax_other * @taxratio, 2)
		]]>
	</formula>
	<applicabilityrules></applicabilityrules>
	<reasoncodes>
      <reasoncode>Bankruptcy</reasoncode>
      <reasoncode>RateCorrection</reasoncode>
    </reasoncodes>
	<Kind>1</Kind>
	<required_inputs>
		<input_val name="SetupChargeAdjustmentAmount"
				   type="DECIMAL"
				   displayname="Adjustment Amount for Setup Charge"
		/>		   
	</required_inputs>
	<outputs>
		<output_val name="AJ_SetupCharge"
					type="DECIMAL"
					displayname="Adjustment for Setup Charge"
		/>
		<output_val
        name="TotalAdjustmentAmount"
        type="DECIMAL"
        displayname="Test PI Total Adjustment Amount"
     />	
     <output_val
        name="aj_tax_federal"
        type="DECIMAL"
        displayname="Adjustment to Federal Tax"
     />
     <output_val
       name="aj_tax_state"
       type="DECIMAL"
       displayname="Adjustment to State Tax"
     />
     <output_val
       name="aj_tax_county"
       type="DECIMAL"
       displayname="Adjustment to County Tax"
     />
     <output_val
       name="aj_tax_local"
       type="DECIMAL"
       displayname="Adjustment to Local Tax"
     />
     <output_val
       name="aj_tax_other"
       type="DECIMAL"
       displayname="Adjustment to Other Tax"
     />
	</outputs>
  </adjustment_type>
  
  <adjustment_type>
	<name>TestPIFlatDebitAdjustment</name>
	<description>TestPI Flat Debit Adjustment</description>
	<displayname>TestPI Flat Debit Adjustment</displayname>
	<CalculationEngine>1</CalculationEngine>
	<supportsBulk>N</supportsBulk>
	<formula>
		<![CDATA[
			Create Procedure CalculateTestPIAdjustment
			-- required inputs
			@SetupChargeDebitAdjustmentAmount DECIMAL
			-- non required inputs
			@SetupCharge DECIMAL,
			@tax_federal DECIMAL,
	    @tax_state DECIMAL,
	    @tax_county DECIMAL,
	    @tax_local DECIMAL,
	    @tax_other DECIMAL,
			-- outputs
			@AJ_SetupCharge DECIMAL OUTPUT,
			@aj_tax_federal DECIMAL OUTPUT,
	    @aj_tax_state DECIMAL OUTPUT,
	    @aj_tax_county DECIMAL OUTPUT,
	    @aj_tax_local DECIMAL OUTPUT,
	    @aj_tax_other DECIMAL OUTPUT,
			@TotalAdjustmentAmount DECIMAL OUTPUT
			as
			declare @taxratio DECIMAL
      declare @totalcharge DECIMAL
      DECLARE @fuzz DECIMAL
      set @fuzz = 0.0001
	    Set @AJ_SetupCharge = -@SetupChargeDebitAdjustmentAmount
			Set @TotalAdjustmentAmount = round(@AJ_SetupCharge, 2)
			set @aj_tax_federal = round(@tax_federal * @taxratio, 2)
			set @aj_tax_state = round(@tax_state * @taxratio, 2)
			set @aj_tax_county = round(@tax_county * @taxratio, 2)
			set @aj_tax_local = round(@tax_local * @taxratio, 2)
			set @aj_tax_other = round(@tax_other * @taxratio, 2)
		]]>
	</formula>
	<applicabilityrules></applicabilityrules>
	<reasoncodes>
      <reasoncode>Bankruptcy</reasoncode>
      <reasoncode>RateCorrection</reasoncode>
    </reasoncodes>
	<Kind>1</Kind>
	<required_inputs>
		<input_val name="SetupChargeDebitAdjustmentAmount"
				   type="DECIMAL"
				   displayname="Debit Adjustment Amount for Setup Charge"
		/>		   
	</required_inputs>
	<outputs>
		<output_val name="AJ_SetupCharge"
					type="DECIMAL"
					displayname="Debit Adjustment for Setup Charge"
		/>
		<output_val
        name="TotalAdjustmentAmount"
        type="DECIMAL"
        displayname="Test PI Total Debit Adjustment Amount"
    />	
      <output_val
        name="aj_tax_federal"
        type="DECIMAL"
        displayname="Adjustment to Federal Tax"
      />
      <output_val
        name="aj_tax_state"
        type="DECIMAL"
        displayname="Adjustment to State Tax"
      />
      <output_val
        name="aj_tax_county"
        type="DECIMAL"
        displayname="Adjustment to County Tax"
      />
      <output_val
        name="aj_tax_local"
        type="DECIMAL"
        displayname="Adjustment to Local Tax"
      />
      <output_val
        name="aj_tax_other"
        type="DECIMAL"
        displayname="Adjustment to Other Tax"
      />
	</outputs>
  </adjustment_type>
  
  <adjustment_type>
    <name>TestPIRebillAdjustment</name>
    <description>Test PI 100 percent adjustment. Individual Charges are not Adjusted</description>
    <displayname>Test PI 100 percent adjustment. Individual Charges are not Adjusted</displayname>
    <CalculationEngine>1</CalculationEngine>
    <supportsBulk>N</supportsBulk>
    <formula>
	    <![CDATA[
       Create Procedure Do100PercentCompensation
	        -- non required inputs 
	        @SetupCharge DECIMAL,
     			@tax_federal DECIMAL,
			    @tax_state DECIMAL,
				  @tax_county DECIMAL,
					@tax_local DECIMAL,
					@tax_other DECIMAL,
	        @CompoundPrebillAdjedAmt DECIMAL,
	        -- outputs
	        @AJ_SetupCharge DECIMAL OUTPUT,
	        @aj_tax_federal DECIMAL OUTPUT,
					@aj_tax_state DECIMAL OUTPUT,
					@aj_tax_county DECIMAL OUTPUT,	
					@aj_tax_local DECIMAL OUTPUT,
					@aj_tax_other DECIMAL OUTPUT,
			    @TotalAdjustmentAmount DECIMAL OUTPUT
	        as
	        set @AJ_SetupCharge = 0.0
          set @TotalAdjustmentAmount = @CompoundPrebillAdjedAmt
          set @aj_tax_federal = @tax_federal
          set @aj_tax_state = @tax_state
          set @aj_tax_county =@tax_county
          set @aj_tax_local = @tax_local
          set @aj_tax_other = @tax_other
	    ]]>
    </formula>
    <applicabilityrules>
    </applicabilityrules>
    <reasoncodes>
      <reasoncode>Rebill</reasoncode>
    </reasoncodes>
    <Kind>4</Kind>
    
    <required_inputs>
    </required_inputs>
   
     <outputs>
      <output_val
        name="AJ_SetupCharge"
        type="DECIMAL"
        displayname="Adjustment For Unused Port Charge"
      />
      <output_val
        name="TotalAdjustmentAmount"
        type="DECIMAL"
        displayname="Total Adjustment Amount"
      />
        <output_val
        name="aj_tax_federal"
        type="DECIMAL"
        displayname="Adjustment to Federal Tax"
      />
      <output_val
        name="aj_tax_state"
        type="DECIMAL"
        displayname="Adjustment to State Tax"
      />
      <output_val
        name="aj_tax_county"
        type="DECIMAL"
        displayname="Adjustment to County Tax"
      />
      <output_val
        name="aj_tax_local"
        type="DECIMAL"
        displayname="Adjustment to Local Tax"
      />
      <output_val
        name="aj_tax_other"
        type="DECIMAL"
        displayname="Adjustment to Other Tax"
      />
    </outputs>
   </adjustment_type>
</priceable_item>