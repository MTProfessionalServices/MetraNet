<#@ template language="C#" hostspecific="True" debug="True"#>
<#@ import namespace="MetraTech.BusinessEntity.DataAccess.Metadata" #>
<#@ import namespace="System.Diagnostics" #>

<# Init(); #>
// Generated on <#= DateTime.Now.ToString() #> from entityClass.tt

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using MetraTech.Basic;
using MetraTech.BusinessEntity.Core.Model;
using MetraTech.BusinessEntity.Core;

namespace <#=Name.GetInterfaceNamespace(entity.FullName)#>
{
  public interface <#=Name.GetInterfaceName(entity.FullName)#>
  {
    #region System Properties
<#
foreach (Property property in entity.PreDefinedProperties)
{
#>
    <#=property.TypeName#> <#=property.Name#> {get; set;}
<#
}
#>
    #endregion
    
    #region Basic Properties
<#
foreach (Property property in entity.Properties)
{
  if (!property.IsRequired && property.IsValueType)
  {
#>
    System.Nullable<<#=property.TypeName#>> <#=property.Name#> {get; set;}
<#
  }
  else
  {
#>
    <#=property.TypeName#> <#=property.Name#> {get; set;}
<#
  }
#>
<#
}
#>
    #endregion 
	
    #region Navigation Properties

    IList<<#=((RelationshipEntity)entity).GetSourceEntityInterfaceName()#>> <#=((RelationshipEntity)entity).GetSourceEntityClassName()#> {get; set;}

    IList<<#=((RelationshipEntity)entity).GetTargetEntityInterfaceName()#>> <#=((RelationshipEntity)entity).GetTargetEntityClassName()#> {get; set;}

    #endregion
  }
}

<#+

    private Entity entity;
    
    private void Init()
    {
		TemplateHost templateHost = (TemplateHost)Host;
		entity = templateHost.Entity;
    }
#>