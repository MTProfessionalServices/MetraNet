<?xml version="1.0" encoding="utf-8"?>
<MetraFlowScript>
    <Name>InvoiceAccountUsageInterval</Name>
    <Description>Generate usage summaries, adjustment summaries and balance forward amounts for invoice calculation.</Description>
    <Parameters>
        <Parameter>
            <Name>TEMP_DIR</Name>
            <SyntaxCheckValue>C:\Temp</SyntaxCheckValue>
            <Description>Directory in which to store temporary files.</Description>
        </Parameter>
        <Parameter>
            <Name>ID_BILLGROUP</Name>
            <SyntaxCheckValue>1000</SyntaxCheckValue>
            <Description>Billing group for which invoices are being processed.</Description>
        </Parameter>
    </Parameters>
    <Script>
      <![CDATA[
aui:select[baseQuery="SELECT 
aui.id_acc as aui_id_acc, 
aui.id_usage_interval as aui_id_usage_interval, 
ui.dt_start as ui_dt_start, 
ui.dt_end as ui_dt_end
FROM
t_billgroup_member bgm
INNER LOOP JOIN t_acc_usage_interval aui on bgm.id_acc=aui.id_acc
INNER LOOP JOIN t_usage_interval ui ON aui.id_usage_interval=ui.id_interval
WHERE
bgm.id_billgroup=%%ID_BILLGROUP%%
AND
aui.id_usage_interval=%%ID_INTERVAL%%
AND
ui.id_interval=%%ID_INTERVAL%%
AND
{fn mod(bgm.id_acc, %%NUMPARTITIONS%%)} = %%PARTITION%%",
partitionConstraint="Database"];

aui_part:hashpart[key="aui_id_acc",
partitionConstraint="Database"];

aui_coll:coll[];

aui_write:sequential_file_write[filename="%%TEMP_DIR%%\invoice_t_acc_usage_interval_%1%.mfd"];

aui -> aui_part -> aui_coll -> aui_write;
]]></Script>
</MetraFlowScript>