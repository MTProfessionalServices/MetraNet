<?xml version="1.0" encoding="utf-8"?>
<MetraFlowScript>
    <Name>InvoiceExtractAccUsage</Name>
    <Description>Generate usage summaries, adjustment summaries and balance forward amounts for invoice calculation.</Description>
    <Parameters>
        <Parameter>
            <Name>TEMP_DIR</Name>
            <SyntaxCheckValue>C:\Temp</SyntaxCheckValue>
            <Description>Directory in which to store temporary files.</Description>
        </Parameter>
        <Parameter>
            <Name>SORT_DIR</Name>
            <SyntaxCheckValue>C:\Temp</SyntaxCheckValue>
            <Description>Directory in which to store temporary files.</Description>
        </Parameter>
        <Parameter>
            <Name>ID_INTERVAL</Name>
            <SyntaxCheckValue>1000</SyntaxCheckValue>
            <Description>Usage intervals for which invoices are being processed.</Description>
        </Parameter>
        <Parameter>
            <Name>PARTITION_PREFIX</Name>
            <SyntaxCheckValue></SyntaxCheckValue>
            <Description>Optional explicit table partition specification</Description>
        </Parameter>
        <Parameter>
            <Name>USAGE_TABLE_HINT</Name>
            <SyntaxCheckValue></SyntaxCheckValue>
            <Description>A table hint for the usage selection operator</Description>
        </Parameter>
    </Parameters>
    <Script>
      <![CDATA[
-- If an account has either a previous balance, an adjustment in the interval being processed 
-- or usage in the interval being processed, it needs an invoice record.

au:select[baseQuery="SELECT id_sess, id_acc, id_payee, id_view, id_usage_interval, id_prod, amount, tax_federal, tax_state, tax_county, tax_local, tax_other, id_pi_instance, id_pi_template
FROM
%%PARTITION_PREFIX%%t_acc_usage %%USAGE_TABLE_HINT%%
WHERE 
id_parent_sess IS NULL 
AND
id_usage_interval in (%%ID_INTERVAL%%)
AND
{fn mod(id_sess, %%NUMPARTITIONS%%)} = %%PARTITION%%
ORDER BY id_sess asc",
partitionConstraint="Database"];

au_part:hashpart[key="id_sess",
partitionConstraint="Database"];

au -> au_part;

au_coll:coll[];

au_part -> au_coll;

au_sort:sort[key="id_sess", temp_dir="%%SORT_DIR%%", allowedMemory=300000000];

au_coll -> au_sort;

au_write:sequential_file_write[filename="%%TEMP_DIR%%\t_acc_usage_%1%.mfd"];

au_sort -> au_write;

]]></Script>
</MetraFlowScript>