<?xml version="1.0" encoding="utf-8"?>
<MetraFlowScript>
    <Name>LoadUsageIntervals</Name>
    <Description>Create new usage intervals and usage interval mappings.</Description>
    <Parameters>
        <Parameter>
            <Name>TEMP_DIR</Name>
            <SyntaxCheckValue>C:\Temp</SyntaxCheckValue>
            <Description>Current time to use a basis for calculating required usage intervals.</Description>
        </Parameter>
    </Parameters>
    <Script>
      <![CDATA[
new_intervals_read:sequential_file_scan[filename="%%TEMP_DIR%%\new_intervals_%1%.mfd", mode="sequential"];

build_transactions:generate[program="CREATE PROCEDURE p @id_commit_unit INTEGER OUTPUT
AS
SET @id_commit_unit = CAST(@@RECORDCOUNT/50000LL AS INTEGER)",
mode="sequential"];

new_intervals_read -> build_transactions;

c0:copy[mode="sequential"];

build_transactions -> c0;

pv0:insert[table="t_usage_interval", schema="NetMeter", batchSize=50000, transactionKey="id_commit_unit", 
mode="sequential"];

c0(0) -> pv0;

sgb0:sort_group_by[key="id_commit_unit",
initialize="
CREATE PROCEDURE i @size_0 INTEGER
AS
SET @size_0 = 0",
update="
CREATE PROCEDURE u @size_0 INTEGER 
AS
SET @size_0 = @size_0 + 1", 
mode="sequential"];

c0(1) -> sgb0;

install0:sql_exec_direct[
statementList=[
	query="INSERT INTO t_usage_interval (id_interval, id_usage_cycle, dt_start, dt_end, tx_interval_status)
SELECT id_interval, id_usage_cycle, dt_start, dt_end, tx_interval_status FROM %%%NETMETERSTAGE_PREFIX%%%%1% 
option(maxdop 1)",
        postprocess="DROP TABLE %%%NETMETERSTAGE_PREFIX%%%%1%", mode="sequential"]
];
pv0 ->[buffered=false] install0("input(0)");
sgb0 ->[buffered=false] install0("control");
]]></Script>
</MetraFlowScript>