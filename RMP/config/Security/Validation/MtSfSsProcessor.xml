<SubsystemProperties Signature="" IsRuntimeApiEnabled="true" IsRuntimeApiPublic="true" IsControlApiEnabled="true" IsControlApiPublic="true">
  <Engines>
    <Engine Id="Processor.Default" MaxExecution="10" Category="General" IsDefault="true" IdFirstRule="Validator.BasicString.Default.Sequence.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Decoder.Url.Default.Rule" MaxExecution="30" Subsystem="Decoder"
              IdEngine="Url.V1" IdNextRule="Detector.Xss.Default.Rule" IdExceptionRule="Detector.Xss.Default.Rule"/>

        <Rule Id="Detector.Sql.Default.Rule" MaxExecution="1" Subsystem="Detector"
              IdEngine="Sql.Default" IdNextRule="Processor.Default.Stop.Rule" IdExceptionRule="Processor.Default.Stop.Rule"/>

        <Rule Id="Detector.Xss.Default.Rule" MaxExecution="1" Subsystem="Detector"
              IdEngine="Xss.Default" IdNextRule="Detector.Sql.Default.Rule" IdExceptionRule="Detector.Sql.Default.Rule"/>

        <Rule Id="Validator.BasicString.Default.Sequence.Rule" MaxExecution="1" Subsystem="Validator"
              IdEngine="BasicString.V1" IdNextRule="Validator.BasicString.Default.Rule" IdExceptionRule="Validator.BasicString.Default.Rule"/>

        <Rule Id="Validator.BasicString.Default.Rule" MaxExecution="1" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework"
              IdExceptionRule="Detector.Xss.Default.Rule">
          <Cases>
            <Case CompareValue="%" IdNextRule="Decoder.Url.Default.Rule" OperationType="Contain"/>
            <Default value="Detector.Xss.Default.Rule"/>
          </Cases>
        </Rule>

        <Rule Id="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework" />
      </Rules>
    </Engine>


    <Engine Id="Processor.BV" MaxExecution="100" Category="General" IsDefault="false" IdFirstRule="Decoder.Url.Default.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Decoder.Url.Default.Rule" Subsystem="Decoder" IdEngine="Url.Default" IdNextRule="Detector.Xss.Default.Rule" IdExceptionRule="Detector.Xss.Default.Rule"/>
        <Rule Id="Detector.Sql.Default.Rule" Subsystem="Detector" IdEngine="Sql.Default" IdNextRule="Processor.Default.Stop.Rule" IdExceptionRule="Processor.Default.Stop.Rule"/>
        <Rule Id="Detector.Xss.Default.Rule" Subsystem="Detector" IdEngine="Xss.Default" IdNextRule="Detector.Sql.Default.Rule" IdExceptionRule="Detector.Sql.Default.Rule"/>
        <Rule Id="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework" />
      </Rules>
    </Engine>

    <Engine Id="Processor.Validator" MaxExecution="100" Category="General" IsDefault="false" IdFirstRule="Validator.BasicString.Default.Sequence.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Validator.BasicString.Default.Sequence.Rule" Subsystem="Validator" IdEngine="BasicString.V1" IdNextRule="Validator.BasicString.Default.Rule"
              IdExceptionRule="Validator.BasicString.Default.Rule" />
        <Rule Id="Validator.BasicString.Default.Rule" IdExceptionRule="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="%" IdNextRule="Processor.Default.Stop.Rule" OperationType="Contain" />
            <Default value="Processor.Default.Stop.Rule"/>
          </Cases>
        </Rule>
        <Rule Id="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework" />
      </Rules>
    </Engine>

    <!-- BEGIN: Rules for XSS detector-->
    <Engine Id="Processor.XssDetector" MaxExecution="100" Category="Xss" IsDefault="true" IdFirstRule="IsAllSimbolsUnicodeEncoding" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>

        <!-- BEGIN (step 2): Are all symbols encoded? (Unicode, Base64 …) – check input string. If all characters are encoded, it is believed that the XSS attack was.  -->
        <Rule Id="IsAllSimbolsUnicodeEncoding" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="(?i:^(?:&amp;#0*[0-9ABCDEF]{2,5};?|&amp;#x0*[0-9ABCDEF]{2,5};?|%[0-9ABCDEF]{2}|\\x[0-9ABCDEF]{2}|\\u[0-9ABCDEF]{4}|%u[0-9ABCDEF]{4}){10,}$)" OperationType="RegexIsMatch" IdNextRule="ThrowExceptionFoundUnicodRule" />
            <Default value="TryToFindBase64Rule"/>
          </Cases>
        </Rule>
        <!-- throw exception -  Unicode encoding was found -->
        <Rule Id="ThrowExceptionFoundUnicodRule" Subsystem="Detector" IdEngine="Xss.DetectUnicodeThrowException" IdNextRule="StopRule" IdExceptionRule="StopRule"/>

        <!-- try to find Base64 encoding -->
        <Rule Id="TryToFindBase64Rule" Subsystem="Detector" IdEngine="Xss.DetectBase64"  IdNextRule="XssDetectorRule" IdExceptionRule="StopRule"/>
        <!-- END : Are all symbols encoded? (Unicode, Base64 …) – check input string. If all characters are encoded, it is believed that the XSS attack was.  -->

        <!-- (step 3): Detect XSS injections engine -->
        <Rule Id="XssDetectorRule" MaxExecution="21" Subsystem="Detector" IdEngine="Xss.V2" IdNextRule="TryNormalization.Html" IdExceptionRule="StopRule"/>

        <!-- BEGIN (step 4 and 5): 
              1) Normalization – unescape or encoding input string. Unescape sequence: HTML, JavaScript, URL 
              2) Compare nput and output sequences -->
        <!-- HTML escaping sequence-->
        <Rule Id="TryNormalization.Html" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="(?i:(?:&amp;[A-Za-z]+?;?)|(?:(?:&amp;#x?)0*?(?:\d|[ABCDEF]){1,5};?))" OperationType="RegexIsMatch" IdNextRule="HtmlUnescape" />
            <Default value="TryNormalization.Base64"/>
          </Cases>
        </Rule>

        <Rule Id="HtmlUnescape" Subsystem="Decoder" IdEngine="Html.V1" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="TryNormalization.Base64"/>
            <Default value="XssDetectorRule"/>
          </Cases>
        </Rule>

        <!-- Base64 Sanitizer -->
        <Rule Id="TryNormalization.Base64" Subsystem="Sanitizer" IdEngine="Base64Sanitizer.V1" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx, MetraTech.SecurityFramework">
          <Cases>
            <!-- Are input and output value equal then go to STOP-->
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="TryNormalization.Url"/>
            <Default value="XssDetectorRule"/>
          </Cases>
        </Rule>

        <!-- URL escaping sequence-->
        <Rule Id="TryNormalization.Url" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="(?i:(?:(?:%|%u|\\x)(?:2B|\d|[ABCDEF]){2,}))" OperationType="RegexIsMatch" IdNextRule="UrlUnescape" />
            <Default value="TryNormalization.JavaScript"/>
          </Cases>
        </Rule>
        <Rule Id="UrlUnescape" Subsystem="Decoder" IdEngine="Url.V1" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="TryNormalization.JavaScript"/>
            <Default value="XssDetectorRule"/>
          </Cases>
        </Rule>

        <!-- JavaScrip escaping sequence-->
        <Rule Id="TryNormalization.JavaScript" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="(?i:(?:\\[0-7]{1,3})|(?:(?:%|\\x|%u)(?:20|\d|[ABCDEF]){2,4}))" OperationType="RegexIsMatch" IdNextRule="JavaScriptlUnescape" />
            <Default value="TryNormalization.VbScript"/>
          </Cases>
        </Rule>
        <Rule Id="JavaScriptlUnescape" Subsystem="Decoder" IdEngine="JavaScript.V1" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx, MetraTech.SecurityFramework">
          <Cases>
            <!-- Are input and output value equal then go to STOP-->
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="TryNormalization.VbScript"/>
            <Default value="XssDetectorRule"/>
          </Cases>
        </Rule>

        <!-- VBScript escaping sequence-->
        <Rule Id="TryNormalization.VbScript" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule, MetraTech.SecurityFramework">
          <Cases>
            <Case CompareValue="(?i:(?:chrw?\(\s*(?:&amp;h(?:[0-9ABCDEF]){1,4}|\d{1,5})\s*\)))" OperationType="RegexIsMatch" IdNextRule="VbUnescape" />
            <Default value="StopRule"/>
          </Cases>
        </Rule>
        <Rule Id="VbUnescape" Subsystem="Decoder" IdEngine="VbScript.V1" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx, MetraTech.SecurityFramework">
          <Cases>
            <!-- Are input and output value equal then go to STOP-->
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="StopRule"/>
            <Default value="XssDetectorRule"/>
          </Cases>
        </Rule>

        <!-- LDAP or CSS escaping sequence-->
        <!--
        <Rule Id="TryNormalization.LdapOrCss" DefaultIdRule="StopRule" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRule">
          <Cases>
            -->
        <!--<item CompareValue="(?i:(?:\\(?:\d|[ABCDEF]){2}){2,})" OperationType="RegexIsMatch" IdNextRule="LdapUnescape" />-->
        <!--
            <Case CompareValue="(?i:(\\(?:(?:\d|[ABCDEF]){6}|(?:\d|[ABCDEF]){1,5}[^0-9ABCDEF])))" OperationType="RegexIsMatch" IdNextRule="CssUnescape" />
          </Cases>
        </Rule>
        -->
        <!--<item Id="LdapUnescape" Subsystem="Decoder" IdEngine="Ldap.V1" DefaultIdRule="XssDetectorRule" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx">
          <Cases>
             -->
        <!--Are input and output value equal then go to STOP-->
        <!--
            <item CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="CssUnescape"/>
          </Cases>
        </item>-->
        <!--
        <Rule Id="CssUnescape" Subsystem="Decoder" IdEngine="Css.V1" DefaultIdRule="XssDetectorRule" IdExceptionRule="StopRule" RealType="MetraTech.SecurityFramework.SwitchRuleEx">
          <Cases>
             -->
        <!--Are input and output value equal then go to STOP-->
        <!--
            <Case CompareValue="" OperationType="IsInputOutputEqual" IdNextRule="StopRule"/>
          </Cases>
        </Rule>-->
        <!-- END (step 4 and 5): Normalization – unescape or encoding input string. Unescape sequence: HTML, JavaScript, URL-->

        <!-- (step 6): STOP algorithm-->
        <Rule Id="StopRule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework"/>
      </Rules>
    </Engine>
    <!-- END: Rules for XSS detector-->

    <Engine Id="Processor.Detector.Sql" MaxExecution="100" Category="General" IsDefault="false" IdFirstRule="Detector.Sql.Default.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Detector.Sql.Default.Rule" Subsystem="Detector" IdEngine="Sql.Default" IdNextRule="Processor.Default.Stop.Rule" IdExceptionRule="Processor.Default.Stop.Rule"/>
        <Rule Id="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework" />
      </Rules>
    </Engine>

    <!--BEGIN: Rules for testing cycle processed input data-->
    <Engine Id="Processor.Cycle.Test" MaxExecution="10" Category="General" IsDefault="false" IdFirstRule="Detector.Sql.Default.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Detector.Sql.Default.Rule" MaxExecution="5" Subsystem="Detector" IdEngine="Sql.Default" IdNextRule="Detector.Xss.Default.Rule" IdExceptionRule="Detector.Xss.Default.Rule"/>
        <Rule Id="Detector.Xss.Default.Rule" MaxExecution="5" Subsystem="Detector" IdEngine="Xss.V2" IdNextRule="Decoder.Html.Default.Rule" IdExceptionRule="Decoder.Html.Default.Rule"/>
        <Rule Id="Decoder.Html.Default.Rule" MaxExecution="5" Subsystem="Decoder" IdEngine="Html.V1" IdNextRule="Detector.Sql.Default.Rule" IdExceptionRule="Detector.Sql.Default.Rule"/>

        <Rule Id="Processor.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework"/>
      </Rules>
    </Engine>

    <!--Creating new processor engine-->
    <Engine Id="Processor.CompositeRule.Test" MaxExecution="5" Category="General" IsDefault="false" IdFirstRule="Decoder.Url.Test.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Decoder.Url.Test.Rule" MaxExecution="5" Subsystem="Decoder" IdEngine="Url.V1" IdNextRule="Detector.Xss.Test.Rule" IdExceptionRule="Detector.Xss.Test.Rule"/>
        <Rule Id="Detector.Xss.Test.Rule" MaxExecution="2" Subsystem="Processor" IdEngine="Processor.Default" IdNextRule="Decoder.Stop.Rule" IdExceptionRule="Decoder.Stop.Rule"/>

        <Rule Id="Decoder.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework"/>
      </Rules>
    </Engine>

    <Engine Id="Processor.OneStopRule.Test" MaxExecution="5" Category="General" IsDefault="false" IdFirstRule="Detector.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.ProcessorEngine, MetraTech.SecurityFramework">
      <Rules>
        <Rule Id="Detector.Default.Stop.Rule" RealType="MetraTech.SecurityFramework.StopRule, MetraTech.SecurityFramework"/>

      </Rules>
    </Engine>
    <!--END: Rules for testing cycle processed input data-->

  </Engines>
</SubsystemProperties>