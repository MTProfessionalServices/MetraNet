//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace ReRunClientTest.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://metratech.com/webservices/")]
    public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
            this.Url = "http://localhost/BillingReRun/ReRun.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/IsOperationComplete", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOperationComplete(int rerunID) {
            object[] results = this.Invoke("IsOperationComplete", new object[] {
                        rerunID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsOperationComplete(int rerunID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsOperationComplete", new object[] {
                        rerunID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsOperationComplete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/Setup", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Setup(string transactionID, string comment, string serializedContext) {
            object[] results = this.Invoke("Setup", new object[] {
                        transactionID,
                        comment,
                        serializedContext});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetup(string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Setup", new object[] {
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginIdentify", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginIdentify(int rerunID, string transactionID, string serializedFilter, string comment, string serializedContext) {
            this.Invoke("BeginIdentify", new object[] {
                        rerunID,
                        transactionID,
                        serializedFilter,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginIdentify(int rerunID, string transactionID, string serializedFilter, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginIdentify", new object[] {
                        rerunID,
                        transactionID,
                        serializedFilter,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginIdentify(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginAnalyze", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginAnalyze(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginAnalyze", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginAnalyze(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginAnalyze", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginAnalyze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginIdentifyAndAnalyze", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginIdentifyAndAnalyze(int rerunID, string transactionID, string serializedFilter, string comment, string serializedContext) {
            this.Invoke("BeginIdentifyAndAnalyze", new object[] {
                        rerunID,
                        transactionID,
                        serializedFilter,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginIdentifyAndAnalyze(int rerunID, string transactionID, string serializedFilter, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginIdentifyAndAnalyze", new object[] {
                        rerunID,
                        transactionID,
                        serializedFilter,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginIdentifyAndAnalyze(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginBackout", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginBackout(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginBackout", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginBackout(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginBackout", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginBackout(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginBackoutPrepareExtract", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginBackoutPrepareExtract(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginBackoutPrepareExtract", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginBackoutPrepareExtract(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginBackoutPrepareExtract", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginBackoutPrepareExtract(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginDelete", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginDelete(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginDelete", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginDelete(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginDelete", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginAbandon", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginAbandon(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginAbandon", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginAbandon(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginAbandon", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginAbandon(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginPrepare", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginPrepare(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginPrepare", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginPrepare(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginPrepare", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginPrepare(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginExtract", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginExtract(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginExtract", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginExtract(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginExtract", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginExtract(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://metratech.com/webservices/BeginReRun", RequestNamespace="http://metratech.com/webservices/", ResponseNamespace="http://metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeginReRun(int rerunID, string transactionID, string comment, string serializedContext) {
            this.Invoke("BeginReRun", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginReRun(int rerunID, string transactionID, string comment, string serializedContext, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginReRun", new object[] {
                        rerunID,
                        transactionID,
                        comment,
                        serializedContext}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginReRun(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
}
