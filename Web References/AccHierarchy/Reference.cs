//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="MAMHierarchyWebSvcSoap", Namespace="http://www.metratech.com/webservices/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MAMHierarchyItem[]))]
public partial class MAMHierarchyWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetFieldIDFromAccountIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRootNodeCapacityOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetNestedNodePageSizeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHierarchyLevelOperationCompleted;
    
    /// <remarks/>
    public MAMHierarchyWebSvc() {
        this.Url = "http://localhost/AccountHierarchy/Service.asmx";
    }
    
    /// <remarks/>
    public event GetFieldIDFromAccountIDCompletedEventHandler GetFieldIDFromAccountIDCompleted;
    
    /// <remarks/>
    public event GetRootNodeCapacityCompletedEventHandler GetRootNodeCapacityCompleted;
    
    /// <remarks/>
    public event GetNestedNodePageSizeCompletedEventHandler GetNestedNodePageSizeCompleted;
    
    /// <remarks/>
    public event GetHierarchyLevelCompletedEventHandler GetHierarchyLevelCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetFieldIDFromAccountID", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetFieldIDFromAccountID(int lAccountID, System.DateTime dRefDate, string serializedContext) {
        object[] results = this.Invoke("GetFieldIDFromAccountID", new object[] {
                    lAccountID,
                    dRefDate,
                    serializedContext});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFieldIDFromAccountID(int lAccountID, System.DateTime dRefDate, string serializedContext, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFieldIDFromAccountID", new object[] {
                    lAccountID,
                    dRefDate,
                    serializedContext}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetFieldIDFromAccountID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetFieldIDFromAccountIDAsync(int lAccountID, System.DateTime dRefDate, string serializedContext) {
        this.GetFieldIDFromAccountIDAsync(lAccountID, dRefDate, serializedContext, null);
    }
    
    /// <remarks/>
    public void GetFieldIDFromAccountIDAsync(int lAccountID, System.DateTime dRefDate, string serializedContext, object userState) {
        if ((this.GetFieldIDFromAccountIDOperationCompleted == null)) {
            this.GetFieldIDFromAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldIDFromAccountIDOperationCompleted);
        }
        this.InvokeAsync("GetFieldIDFromAccountID", new object[] {
                    lAccountID,
                    dRefDate,
                    serializedContext}, this.GetFieldIDFromAccountIDOperationCompleted, userState);
    }
    
    private void OnGetFieldIDFromAccountIDOperationCompleted(object arg) {
        if ((this.GetFieldIDFromAccountIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFieldIDFromAccountIDCompleted(this, new GetFieldIDFromAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetRootNodeCapacity", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int GetRootNodeCapacity() {
        object[] results = this.Invoke("GetRootNodeCapacity", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRootNodeCapacity(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRootNodeCapacity", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndGetRootNodeCapacity(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void GetRootNodeCapacityAsync() {
        this.GetRootNodeCapacityAsync(null);
    }
    
    /// <remarks/>
    public void GetRootNodeCapacityAsync(object userState) {
        if ((this.GetRootNodeCapacityOperationCompleted == null)) {
            this.GetRootNodeCapacityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRootNodeCapacityOperationCompleted);
        }
        this.InvokeAsync("GetRootNodeCapacity", new object[0], this.GetRootNodeCapacityOperationCompleted, userState);
    }
    
    private void OnGetRootNodeCapacityOperationCompleted(object arg) {
        if ((this.GetRootNodeCapacityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRootNodeCapacityCompleted(this, new GetRootNodeCapacityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetNestedNodePageSize", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int GetNestedNodePageSize() {
        object[] results = this.Invoke("GetNestedNodePageSize", new object[0]);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetNestedNodePageSize(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetNestedNodePageSize", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public int EndGetNestedNodePageSize(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void GetNestedNodePageSizeAsync() {
        this.GetNestedNodePageSizeAsync(null);
    }
    
    /// <remarks/>
    public void GetNestedNodePageSizeAsync(object userState) {
        if ((this.GetNestedNodePageSizeOperationCompleted == null)) {
            this.GetNestedNodePageSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNestedNodePageSizeOperationCompleted);
        }
        this.InvokeAsync("GetNestedNodePageSize", new object[0], this.GetNestedNodePageSizeOperationCompleted, userState);
    }
    
    private void OnGetNestedNodePageSizeOperationCompleted(object arg) {
        if ((this.GetNestedNodePageSizeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetNestedNodePageSizeCompleted(this, new GetNestedNodePageSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.metratech.com/webservices/GetHierarchyLevel", RequestNamespace="http://www.metratech.com/webservices/", ResponseNamespace="http://www.metratech.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public object[] GetHierarchyLevel(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber) {
        object[] results = this.Invoke("GetHierarchyLevel", new object[] {
                    typeSpace,
                    lAccountID,
                    dRefDate,
                    serializedContext,
                    bShowAllCorporations,
                    visibleAccounts,
                    companyFilter,
                    usernameFilter,
                    pageNumber});
        return ((object[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHierarchyLevel(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHierarchyLevel", new object[] {
                    typeSpace,
                    lAccountID,
                    dRefDate,
                    serializedContext,
                    bShowAllCorporations,
                    visibleAccounts,
                    companyFilter,
                    usernameFilter,
                    pageNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public object[] EndGetHierarchyLevel(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object[])(results[0]));
    }
    
    /// <remarks/>
    public void GetHierarchyLevelAsync(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber) {
        this.GetHierarchyLevelAsync(typeSpace, lAccountID, dRefDate, serializedContext, bShowAllCorporations, visibleAccounts, companyFilter, usernameFilter, pageNumber, null);
    }
    
    /// <remarks/>
    public void GetHierarchyLevelAsync(string typeSpace, long lAccountID, System.DateTime dRefDate, string serializedContext, bool bShowAllCorporations, object[] visibleAccounts, string companyFilter, string usernameFilter, int pageNumber, object userState) {
        if ((this.GetHierarchyLevelOperationCompleted == null)) {
            this.GetHierarchyLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHierarchyLevelOperationCompleted);
        }
        this.InvokeAsync("GetHierarchyLevel", new object[] {
                    typeSpace,
                    lAccountID,
                    dRefDate,
                    serializedContext,
                    bShowAllCorporations,
                    visibleAccounts,
                    companyFilter,
                    usernameFilter,
                    pageNumber}, this.GetHierarchyLevelOperationCompleted, userState);
    }
    
    private void OnGetHierarchyLevelOperationCompleted(object arg) {
        if ((this.GetHierarchyLevelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHierarchyLevelCompleted(this, new GetHierarchyLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.metratech.com/webservices/")]
public partial class MAMHierarchyItem {
    
    private string accountTypeField;
    
    private string iconField;
    
    private bool hasChildrenField;
    
    private string loginNameField;
    
    private string namespaceField;
    
    private string hierarchyNameField;
    
    private string accountStateField;
    
    private long numberOfPayeesField;
    
    private string ownerField;
    
    private string hierarchyPathField;
    
    private long itemIDField;
    
    private long parentItemIDField;
    
    private HierarchyItemType itemTypeField;
    
    private string currencyField;
    
    /// <remarks/>
    public string AccountType {
        get {
            return this.accountTypeField;
        }
        set {
            this.accountTypeField = value;
        }
    }
    
    /// <remarks/>
    public string Icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
    
    /// <remarks/>
    public bool HasChildren {
        get {
            return this.hasChildrenField;
        }
        set {
            this.hasChildrenField = value;
        }
    }
    
    /// <remarks/>
    public string LoginName {
        get {
            return this.loginNameField;
        }
        set {
            this.loginNameField = value;
        }
    }
    
    /// <remarks/>
    public string Namespace {
        get {
            return this.namespaceField;
        }
        set {
            this.namespaceField = value;
        }
    }
    
    /// <remarks/>
    public string HierarchyName {
        get {
            return this.hierarchyNameField;
        }
        set {
            this.hierarchyNameField = value;
        }
    }
    
    /// <remarks/>
    public string AccountState {
        get {
            return this.accountStateField;
        }
        set {
            this.accountStateField = value;
        }
    }
    
    /// <remarks/>
    public long NumberOfPayees {
        get {
            return this.numberOfPayeesField;
        }
        set {
            this.numberOfPayeesField = value;
        }
    }
    
    /// <remarks/>
    public string Owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    public string HierarchyPath {
        get {
            return this.hierarchyPathField;
        }
        set {
            this.hierarchyPathField = value;
        }
    }
    
    /// <remarks/>
    public long ItemID {
        get {
            return this.itemIDField;
        }
        set {
            this.itemIDField = value;
        }
    }
    
    /// <remarks/>
    public long ParentItemID {
        get {
            return this.parentItemIDField;
        }
        set {
            this.parentItemIDField = value;
        }
    }
    
    /// <remarks/>
    public HierarchyItemType ItemType {
        get {
            return this.itemTypeField;
        }
        set {
            this.itemTypeField = value;
        }
    }
    
    /// <remarks/>
    public string Currency {
        get {
            return this.currencyField;
        }
        set {
            this.currencyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.metratech.com/webservices/")]
public enum HierarchyItemType {
    
    /// <remarks/>
    Account,
    
    /// <remarks/>
    Folder,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetFieldIDFromAccountIDCompletedEventHandler(object sender, GetFieldIDFromAccountIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFieldIDFromAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFieldIDFromAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetRootNodeCapacityCompletedEventHandler(object sender, GetRootNodeCapacityCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRootNodeCapacityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRootNodeCapacityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetNestedNodePageSizeCompletedEventHandler(object sender, GetNestedNodePageSizeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetNestedNodePageSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetNestedNodePageSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetHierarchyLevelCompletedEventHandler(object sender, GetHierarchyLevelCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHierarchyLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHierarchyLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object[])(this.results[0]));
        }
    }
}
