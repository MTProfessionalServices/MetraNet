<xmlconfig>
  <mtsysconfigdata>
    <effective_date ptype="DATETIME">1998-11-19T00:00:00Z</effective_date>
    <timeout ptype="INTEGER">30</timeout>
    <configfiletype>CONFIG_DATA</configfiletype>
  </mtsysconfigdata>

  <mtconfigdata>

 <version ptype="INTEGER">1</version>
 <!-- First processor configuration -->
 <processor>
  <name>notice</name>
  <progid>MetraPipeline.MTSQLInterpreter.1</progid>
  <description>Calculates the amount of notice (in hours) given before a conference was cancelled.</description>

  <autotest>
    <file>noticetest.xml</file>
  </autotest>

  <inputs>
    <input type="DATETIME" internal_name="ScheduledStartTime">ScheduledStartTime</input>
    <input type="DATETIME" internal_name="CancellationTime">CancellationTime</input>
  </inputs>

  <outputs>
    <output type="LONG" internal_name="Notice">Notice</output>
  </outputs>

  <!-- Processor specific configuration data -->
  <configdata>
  
  <Program><![CDATA[
		
			CREATE PROCEDURE notice 
        @ScheduledStartTime DATETIME
        @CancellationTime DATETIME
        @Notice INTEGER OUTPUT
			AS
				DECLARE @NoticeTimeConversion INTEGER;
				DECLARE @timeScheduledStartTime TIME;
				DECLARE @timeCancellationTime TIME;
				DECLARE @nScheduledStartTime INTEGER;
				DECLARE @nCancellationTime INTEGER;
				DECLARE @TimeDiff INTEGER;
				SET @Notice = 0;
				SET @NoticeTimeConversion = 3600;
				SET @timeScheduledStartTime = CAST (@ScheduledStartTime AS TIME);
				SET @timeCancellationTime = CAST (@CancellationTime AS TIME);
				SET @nScheduledStartTime = CAST(@timeScheduledStartTime AS INTEGER);
				SET @nCancellationTime = CAST(@timeCancellationTime AS INTEGER);
				SET @TimeDiff = CASE WHEN (@nCancellationTime > @nScheduledStartTime) THEN 0 ELSE (@nScheduledStartTime - @nCancellationTime) END;
				IF @TimeDiff = 0
					RETURN;
	  		SET @Notice = CAST ( (@TimeDiff / @NoticeTimeConversion) AS INTEGER);
   
  ]]></Program> 
    
  </configdata>

 </processor>

  </mtconfigdata>

</xmlconfig>
