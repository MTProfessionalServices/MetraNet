/**************************************************************************
 * @doc MTLOG
 *
 * Copyright 1998 by MetraTech Corporation
 * All rights reserved.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS", AND MetraTech Corporation MAKES
 * NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. By way of
 * example, but not limitation, MetraTech Corporation MAKES NO
 * REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY
 * PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR
 * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS,
 * COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
 *
 * Title to copyright in this software and any associated
 * documentation shall at all times remain with MetraTech Corporation,
 * and USER agrees to preserve the same.
 *
 * Created by: Derek Young
 * $Header$
 ***************************************************************************/

import "oaidl.idl";
import "ocidl.idl";

import "PlugInLogLevel.idl";


// ----------------------------------------------------------------
// Object: MTLog
// Prog ID: MetraPipeline.MTLog.1
// Description: This interface allows plug-ins a facility to write to the
//              system log.
// ----------------------------------------------------------------

[
  object,
  uuid(2be32000-3eaf-11d2-a1c5-006008c0e24a),
  dual,
  helpstring("IMTLog Interface"),
  pointer_default(unique)
  ]
interface IMTLog : IDispatch
{
  // log a string to a system defined log, using the given log level
  [id(1), helpstring("Log a string")]
  HRESULT LogString([in] PlugInLogLevel level, [in] BSTR string);

  // return true if a message logged at the given level would
  // be entered into the log.
  [id(2), helpstring("Ask if a message would be logged at this level")]
  HRESULT OKToLog([in] PlugInLogLevel level, [out,retval] VARIANT_BOOL * wouldLog);

  // Initialize the logging object.
  [id(3), helpstring("Initialize the logging object")]
  HRESULT Init([in] BSTR configPath, [in] BSTR appTag);

  [propget, id(4), helpstring("property ApplicationTag")] HRESULT ApplicationTag([out, retval] BSTR *pVal);
  [propput, id(4), helpstring("property ApplicationTag")] HRESULT ApplicationTag([in] BSTR newVal);

};

