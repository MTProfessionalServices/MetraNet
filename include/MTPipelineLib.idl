/**************************************************************************
 * @doc MTPIPELINELIB
 *
 * Copyright 1998 by MetraTech Corporation
 * All rights reserved.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS", AND MetraTech Corporation MAKES
 * NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. By way of
 * example, but not limitation, MetraTech Corporation MAKES NO
 * REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY
 * PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR
 * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS,
 * COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
 *
 * Title to copyright in this software and any associated
 * documentation shall at all times remain with MetraTech Corporation,
 * and USER agrees to preserve the same.
 *
 * Created by: Derek Young
 * $Header$
 ***************************************************************************/

import "MTSessionServer.idl";
import "MTSession.idl";
import "MTSessionProp.idl";
import "MTSessionSet.idl";
import "MTObjectOwner.idl";

import "MTNameID.idl";
import "MTLog.idl";
import "MTSystemContext.idl";
import "MTPipelinePlugIn.idl";
import "MTPipelinePlugIn2.idl";
import "MTPipelineExecutant.idl";
import "MTTransaction.idl";
import "MTWhereaboutsManager.idl";
import "MTRuleSetEvaluator.idl";

import "MTConfigFileList.idl";
import "MTConfigFile.idl";
import "IMTConfigLoader.idl";

//import "MTEnumType.idl";

import "MTExecutionInfo.idl";

//import "HookHandler.idl";
import "MTHook.idl";

[
	object,
	uuid(FAAA69A0-AA57-11D2-A1D5-006008C0E24A),
	dual,
	helpstring("IMTDummy Interface"),
	pointer_default(unique)
]
interface Dummy : IDispatch
{
};



[
	uuid(DFB1E900-AA52-11D2-A1D5-006008C0E24A),
	version(1.0),
	helpstring("MetraTech Pipeline 1.0 Type Library")
]
library MTPipelineLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	interface IMTConfig;
	interface IMTLog;
	interface IMTNameID;
	interface IMTPipelinePlugIn;
	interface IMTPipelinePlugIn2;
	interface IMTTransaction;
	interface IMTWhereaboutsManager;
	interface IMTSession;
	interface IMTSessionProp;
	interface IMTSessionSet;
	interface IMTObjectOwner;
	interface IMTSessionServer;
	interface IMTSystemContext;
	interface IMTConfigFileList;
	interface IMTConfigFile;
	interface IMTConfigLoader;
	//interface IMTEnumType;
	interface IMTExecutionInfo;
	//interface IMTHookHandler;
	interface IMTHook;
	interface IMTSQLRowset;
	interface IMTRuleSetEvaluator;
	//interface IMTSessionContext;
	//interface IMTLoginContext;
	//interface IMTCompositeCapability;
	interface IMTAllCapability;
	interface IMTManageGlobalAuthCapability;
	interface IMTApplicationLogOnCapability;
	interface IMTIssueCreditCapability;
	interface IMTManageAHCapability;
	interface IMTSecurity;
	interface IMTPipelineExecutant;
};

