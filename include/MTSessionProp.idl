/**************************************************************************
 * @doc MTSESSIONPROP
 *
 * Copyright 1998 by MetraTech Corporation
 * All rights reserved.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS", AND MetraTech Corporation MAKES
 * NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. By way of
 * example, but not limitation, MetraTech Corporation MAKES NO
 * REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY
 * PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR
 * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS,
 * COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
 *
 * Title to copyright in this software and any associated
 * documentation shall at all times remain with MetraTech Corporation,
 * and USER agrees to preserve the same.
 *
 * Created by: Derek Young
 * $Header$
 *
 * interface definition for sessions and sets
 ***************************************************************************/

// MTSessionProp.idl : IDL source for MTSession.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (MTSession.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

import "MTSessionPropType.idl";

// ----------------------------------------------------------------
// Object: MTSessionProp
// Prog ID: MetraPipeline.MTSessionProp.1
// Description: Interface that describes a session property
// ----------------------------------------------------------------
[
	object,
	uuid(295FD850-F5AD-11D2-A1E3-006008C0E24A),
	dual,
	helpstring("IMTSessionProp Interface"),
	pointer_default(unique)
]
interface IMTSessionProp : IDispatch
{
  // Name of property
  [propget, helpstring("property Name")]
    HRESULT Name([out, retval] BSTR *pVal);

  // Name ID of property.  This is exactly as if GetNameID was called
  // on the name property.
  [propget, helpstring("property NameID")]
    HRESULT NameID([out, retval] long *pVal);

  // The type of the property.
  [propget, helpstring("property Type")]
    HRESULT Type([out, retval] MTSessionPropType *pVal);
};

