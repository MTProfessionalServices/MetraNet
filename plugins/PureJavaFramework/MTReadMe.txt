/***************************************************************
Pure Java plugin support in MT pipeline; Boris Partensky; 8/01/2000
/***************************************************************

These packages contain pure Java plugin support using Linar JIntegra COM2JAVA bidirectional bridge.

com.metratech.pipeline package contains wrappers and proxies generated by JIntegra's com2java.exe tool from MTPipelineLib.tlb lib.
They are used to call back into COM objects passed to plugins (SysContext aggregate, MTSession).
It also contains a dummy Main class, which gets executed when JVM starts. The only thing it does is it starts a Main thread and goes to sleep.
JIntegra runtime (jintegra.jar) takes it from there.

com.metratech.plugin package contains a sample plugin which implements IMTPipelinePlugin2 interface.

Before running Jva plugins, a JVM has to be registered by using regjvm (or regjvmcmd) tools, provided by Linar.
Below is a sample command to start a JVM:

c:\jdk1.1.8\bin\java -DJINTEGRA_DCOM_PORT=1111 -DJINTEGRA_LOG_FILE=c:\jint.log -DJINTEGRA_LOG_LEVEL=3
 -classpath c:\jdk1.1.8\lib\classes.zip;d:\development\pipeline\JavaPlugin\com2java;
 d:\apps\jintegra\lib\jintegra.jar com.metratech.pipeline.Main
 
 -DJINTEGRA_LOG_LEVEL=3  - 3 for verbose
 
 Full path to jintegra.jar (JIntegra RT) as well is the path to directory which contains com\metratech\... 
  has to be included in a CLASSPATH env variable
  
  Runtime is checked in under ThirdParty directory
  
  Changes to generator.cpp necessary to create Java objects are not checked in yet.
