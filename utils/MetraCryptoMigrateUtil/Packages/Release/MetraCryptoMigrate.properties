logging.loggers.app.name = MetraCryptoMigrate

logging.formatters.f1.class = PatternFormatter
logging.formatters.f1.pattern = %s: [%p] %t

logging.channels.file1.class = FileChannel
logging.channels.file1.path = ${application.dir}MetraCryptoMigrate.log
logging.channels.file1.formatter = f1
logging.channels.console1.class = ConsoleChannel
logging.channels.console1.formatter = f1
logging.channels.splitter1.class = SplitterChannel
logging.channels.splitter1.channels = file1, console1

logging.loggers.root.channel = splitter1
logging.loggers.root.level = trace
logging.loggers.app.channel = splitter1
logging.loggers.app.level = trace

# Export protected data from the source environment
# without saving the exported data back into the source database
# The exported data will be saved into a data mirror store

actions.1.name = ExportData
actions.1.active = true
actions.1.params.tid = 1
actions.1.params.dttPassPhrase = <TODO: Enter your DTT passhprase here. Passphrase that needs to be at least 12 characters>
actions.1.params.serverLocation = <TODO: Enter your server location value here> 
actions.1.params.dbName = <TODO: Enter your source database name here. Netmeter or NetmeterPay>
actions.1.params.uid = <TODO: Enter your SQL database account ID here>
actions.1.params.password = <TODO: Enter your SQL database account password here>
actions.1.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.1.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.1.params.rsaPiNumberKeyClass = CreditCardNumber
actions.1.params.rsaPiHashKeyClass = PaymentInstHash
actions.1.params.rsaPassKeyClass = PasswordHash
actions.1.params.mirror = true
actions.1.params.updateSource = false

# Import protected data from the data mirror
# without saving the imported data back into the target database
# The imported data will be saved into a data mirror store

actions.2.name = ImportData
actions.2.active = true
actions.2.params.tid = 1
actions.2.params.dttPassPhrase = <TODO: Enter your DTT passhprase here. Passphrase that needs to be at least 12 characters>
actions.2.params.Netmeter.serverLocation = <TODO: Enter your server location value here> 
actions.2.params.Netmeter.dbName = Netmeter
actions.2.params.Netmeter.uid = <TODO: Enter your SQL database account ID here>
actions.2.params.Netmeter.password = <TODO: Enter your SQL database account password here>
actions.2.params.NetmeterPay.serverLocation = <TODO: Enter your server location value here>
actions.2.params.NetmeterPay.dbName = <TODO: Enter your source database name here. Netmeter or NetmeterPay>
actions.2.params.NetmeterPay.uid = <TODO: Enter your SQL database account ID here>
actions.2.params.NetmeterPay.password = <TODO: Enter your SQL database account password here>
actions.2.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.2.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.2.params.rsaPiNumberKeyClass = CreditCardNumber
actions.2.params.rsaPiHashKeyClass = PaymentInstHash
actions.2.params.rsaPassKeyClass = PasswordHash
actions.2.params.mirror = true
actions.2.params.updateSource = false
actions.2.params.fromMirror = true

# Generate a data signature from the source environment
# where the data is protected with RSA KMS

actions.3.name = GenerateDataSig
actions.3.active = true
actions.3.params.tid = 1
actions.3.params.dataSource = server
actions.3.params.exportedData = false
actions.3.params.serverLocation = <TODO: Enter your server location value here> 
actions.3.params.dbName = <TODO: Enter your source database name here. Netmeter or NetmeterPay>
actions.3.params.uid = <TODO: Enter your SQL database account ID here>
actions.3.params.password = <TODO: Enter your SQL database account password here>
actions.3.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.3.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.3.params.rsaPiNumberKeyClass = CreditCardNumber
actions.3.params.rsaPiHashKeyClass = PaymentInstHash
actions.3.params.rsaPassKeyClass = PasswordHash

# Generate a data signature from the export data mirror store

actions.4.name = GenerateDataSig
actions.4.active = true
actions.4.params.tid = 2
actions.4.params.dataSource = exportDataMirror
actions.4.params.exportDataTid = 1
actions.4.params.dttPassPhrase = <TODO: Enter your DTT passhprase here. Passphrase that needs to be at least 12 characters>

# Verify the data signature for the target environment 
# against the data signature generated in the data signature transaction 1

actions.5.name = VerifyDataSig
actions.5.active = true
actions.5.params.tid = 1
actions.5.params.dataSource = server
actions.5.params.serverLocation = <TODO: Enter your server location value here> 
actions.5.params.dbName = <TODO: Enter your source database name here. Netmeter or NetmeterPay>
actions.5.params.uid = <TODO: Enter your SQL database account ID here>
actions.5.params.password = <TODO: Enter your SQL database account password here>
actions.5.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.5.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.5.params.rsaPiNumberKeyClass = CreditCardNumber
actions.5.params.rsaPiHashKeyClass = PaymentInstHash
actions.5.params.rsaPassKeyClass = PasswordHash

# Verify the data signature for the import data mirror store
# against the data signature generated in the data signature transaction 2

actions.6.name = VerifyDataSig
actions.6.active = true
actions.6.params.tid = 2
actions.6.params.dataSource = importDataMirror
actions.6.params.exportDataTid = 1
actions.6.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.6.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.6.params.rsaPiNumberKeyClass = CreditCardNumber
actions.6.params.rsaPiHashKeyClass = PaymentInstHash
actions.6.params.rsaPassKeyClass = PasswordHash

# Export encrypted passwords from the source environment

actions.7.name = ExportPasswords
actions.7.active = true
actions.7.params.tid = 1
actions.7.params.dttPassPhrase = <TODO: Enter your DTT passhprase here. Passphrase that needs to be at least 12 characters>
actions.7.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.7.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.7.params.configDir = RMP\\Config
actions.7.params.extensionDir = RMP\\Extensions
actions.7.params.updateSource = false
actions.7.params.mirror = true

# Import encrypted passwords into the target environment

actions.8.name = ImportPasswords
actions.8.active = true
actions.8.params.tid = 1
actions.8.params.dttPassPhrase = <TODO: Enter your DTT passhprase here. Passphrase that needs to be at least 12 characters>
actions.8.params.rsaKmcConfigFileName = <TODO: Enter the location of the RSA KMS key.cfg file. Use double backslashes in paths>
actions.8.params.rsaKmcCertPass = <TODO: Enter the KMS client certification password here>
actions.8.params.configDir = RMP\\Config
actions.8.params.extensionDir = RMP\\Extensions
actions.8.params.serversFiles = true
actions.8.params.protectedpropertylistFile = true
actions.8.params.signiologinFile = true 
actions.8.params.mirror = true
actions.8.params.updateTarget = false
actions.8.params.fromMirror = true






